/**
 * Extracts the CLI version from a given version string.
 *
 * Behavior:
 * - Remove leading 'v'
 * - Take only the first three numeric parts (major.minor.patch)
 * - Ignore any additional parts, suffixes, or snapshot indicators
 *
 * The reason we do this is because we cannot guarantee 1:1 correspondence for each
 * type of server release with DataHub CLI release. The only implicit guarantee we have
 * is that there will be a CLI release for each major server release that is compatible with it.
 *
 * Examples:
 *
 *  Input version          | Resulting cliVersion
 *  -----------------------|--------------------
 *  "v1.2.0"               | "1.2.0"
 *  "v0.8.45.1"            | "0.8.45"
 *  "v0.8.45rc1"           | "0.8.45"
 *  "v01.2.1rc0"           | "01.2.1"
 *  "0.9.2-SNAPSHOT"       | "0.9.2"
 *
 * @param version The base version string (may start with "v" or contain extra parts)
 * @return The canonical 3-part CLI version
 */
ext.extractDefaultCliVersion = { String version ->
    // Remove leading 'v' if present
    version = version.startsWith("v") ? version.substring(1) : version

    // Split by dot, take only the first three numeric parts
    def versionParts = version.tokenize(".")
    def numericParts = []

    for (part in versionParts) {
        // Extract leading numeric component, ignore rc/beta/suffix
        def matcher = (part =~ /^(\d+)/)
        if (matcher) {
            numericParts << matcher[0][1]
        }
        if (numericParts.size() == 3) break
    }

    // Pad with zeros if fewer than 3 parts
    while (numericParts.size() < 3) {
        numericParts << "0"
    }

    return numericParts.join('.')
}