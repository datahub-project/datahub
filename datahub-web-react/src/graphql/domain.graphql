query getDomain($urn: String!) {
    domain(urn: $urn) {
        urn
        id
        type
        properties {
            name
            description
        }
        parentDomains {
            ...parentDomainsFields
        }
        ownership {
            ...ownershipFields
        }
        privileges {
            ...entityPrivileges
        }
        institutionalMemory {
            elements {
                url
                actor {
                    ...resolvedActorFields
                }
                description
                created {
                    actor
                    time
                }
            }
        }
        autoRenderAspects: aspects(input: { autoRenderOnly: true }) {
            ...autoRenderAspectFields
        }
        structuredProperties {
            properties {
                ...structuredPropertiesFields
            }
        }
        forms {
            ...formsFields
        }
        displayProperties {
            ...displayPropertiesFields
        }
        ...domainEntitiesFields
        ...notes
    }
}

query listDomains($input: ListDomainsInput!) {
    listDomains(input: $input) {
        start
        count
        total
        domains {
            urn
            id
            type
            properties {
                name
                description
            }
            parentDomains {
                ...parentDomainsFields
            }
            ownership {
                ...ownershipFields
            }
            displayProperties {
                ...displayPropertiesFields
            }
            ...domainEntitiesFields
        }
    }
}

query getDomainChildrenCount($urn: String!) {
    domain(urn: $urn) {
        urn
        type
        children: relationships(input: { types: ["IsPartOf"], direction: INCOMING, start: 0, count: 0 }) {
            total
        }
    }
}

mutation createDomain($input: CreateDomainInput!) {
    createDomain(input: $input)
}

mutation moveDomain($input: MoveDomainInput!) {
    moveDomain(input: $input)
}

mutation deleteDomain($urn: String!) {
    deleteDomain(urn: $urn)
}

# We should replace this with a cached summary object on the domain
query getDomainEntitySummary($urn: String!) {
    aggregateAcrossEntities(
        input: {
            types: []
            query: "*"
            facets: ["_entityType‚êûtypeNames", "_entityType"]
            orFilters: [
                {
                    and: [
                        { field: "_entityType", values: ["DATA_PRODUCT"], value: "DATA_PRODUCT", negated: true }
                        { field: "domains", values: [$urn], value: $urn }
                    ]
                }
            ]
            searchFlags: { skipCache: true }
        }
    ) {
        facets {
            ...facetFields
        }
    }
}
