# Adapted from https://github.com/big-data-europe/docker-hive.

services:
  testtrino:
    image: trinodb/trino:369
    container_name: "testtrino"
    ports:
      - 5300:8080
    volumes:
      - ./setup/etc:/etc/trino
    depends_on:
      - "trinodb_postgres"
      - "hive-metastore"

  trinodb_postgres:
    image: postgres:alpine
    container_name: "trinodb_postgres"
    environment:
      POSTGRES_PASSWORD: datahub
    volumes:
      - ./setup/setup.sql:/docker-entrypoint-initdb.d/postgres_setup.sql
    ports:
      - "5432:5432"
  namenode:
    platform: linux/amd64
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./setup/hadoop-hive.env
    ports:
      - "50070"
  datanode:
    platform: linux/amd64
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./setup/hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "50075"
  hive-server:
    platform: linux/amd64
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: "testhiveserver2"
    env_file:
      - ./setup/hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    volumes:
      - ./setup/hive_setup.sql:/hive_setup.sql
  hive-metastore:
    platform: linux/amd64
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./setup/hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
  hive-metastore-postgresql:
    platform: linux/amd64
    image: bde2020/hive-metastore-postgresql:2.3.0
#  presto-coordinator:
#    image: shawnzhu/prestodb:0.181
#    ports:
#      - "8080:8080"

volumes:
  namenode:
  datanode:
