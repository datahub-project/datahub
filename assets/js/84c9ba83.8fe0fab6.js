"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[79383],{84886:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>m,metadata:()=>g,toc:()=>y});t(96540);var n=t(15680),l=t(53720),r=t(5400);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){return a=null!=a?a:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):function(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})),e}function s(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}const m={sidebar_position:45,title:"Data Platform",slug:"/generated/metamodel/entities/dataplatform",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataPlatform.md"},p="Data Platform",g={unversionedId:"docs/generated/metamodel/entities/dataPlatform",id:"docs/generated/metamodel/entities/dataPlatform",title:"Data Platform",description:"A Data Platform is a metadata entity that represents a source system, technology, or tool that contains and manages data assets. Data Platforms are the foundational building blocks in DataHub's metadata model, serving as the namespace and classification system for all datasets, dashboards, charts, jobs, and other data assets.",source:"@site/genDocs/docs/generated/metamodel/entities/dataPlatform.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/dataplatform",permalink:"/docs/generated/metamodel/entities/dataplatform",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataPlatform.md",tags:[],version:"current",sidebarPosition:45,frontMatter:{sidebar_position:45,title:"Data Platform",slug:"/generated/metamodel/entities/dataplatform",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataPlatform.md"},sidebar:"overviewSidebar",previous:{title:"PlatformResource",permalink:"/docs/generated/metamodel/entities/platformresource"},next:{title:"DataHubPolicy",permalink:"/docs/generated/metamodel/entities/datahubpolicy"}},d={},y=[{value:"Identity",id:"identity",level:2},{value:"Examples",id:"examples",level:3},{value:"Platform Name Conventions",id:"platform-name-conventions",level:3},{value:"Custom Platforms",id:"custom-platforms",level:3},{value:"Important Capabilities",id:"important-capabilities",level:2},{value:"Platform Information",id:"platform-information",level:3},{value:"Platform Types",id:"platform-types",level:4},{value:"Dataset Name Delimiter",id:"dataset-name-delimiter",level:3},{value:"Logo URL",id:"logo-url",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Relationship with Datasets",id:"relationship-with-datasets",level:3},{value:"Relationship with Other Entities",id:"relationship-with-other-entities",level:3},{value:"Platform Instances",id:"platform-instances",level:3},{value:"Ingestion Sources",id:"ingestion-sources",level:3},{value:"Search and Discovery",id:"search-and-discovery",level:3},{value:"GraphQL API",id:"graphql-api",level:3},{value:"Notable Exceptions",id:"notable-exceptions",level:2},{value:"Bootstrap vs Custom Platforms",id:"bootstrap-vs-custom-platforms",level:3},{value:"Platform Name Immutability",id:"platform-name-immutability",level:3},{value:"Platform Name Length Limit",id:"platform-name-length-limit",level:3},{value:"Case Sensitivity",id:"case-sensitivity",level:3},{value:"Platform Types Are Descriptive, Not Functional",id:"platform-types-are-descriptive-not-functional",level:3},{value:"Common Platform Categories",id:"common-platform-categories",level:2},{value:"Databases and Data Warehouses",id:"databases-and-data-warehouses",level:3},{value:"Business Intelligence Tools",id:"business-intelligence-tools",level:3},{value:"Data Lakes and Object Stores",id:"data-lakes-and-object-stores",level:3},{value:"Streaming Platforms",id:"streaming-platforms",level:3},{value:"Orchestration and Pipeline Tools",id:"orchestration-and-pipeline-tools",level:3},{value:"Transformation Tools",id:"transformation-tools",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"Technical Reference Guide",id:"technical-reference-guide",level:2},{value:"Reading the Field Tables",id:"reading-the-field-tables",level:3},{value:"Aspects",id:"aspects",level:3},{value:"dataPlatformKey",id:"dataplatformkey",level:4},{value:"dataPlatformInfo",id:"dataplatforminfo",level:4},{value:"Relationships",id:"relationships",level:3},{value:"Global Metadata Model",id:"global-metadata-model",level:3}],u={toc:y},c="wrapper";function f(e){var{components:a}=e,t=s(e,["components"]);return(0,n.yg)(c,i(function(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(a){o(e,a,t[a])}))}return e}({},u,t),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"data-platform"},"Data Platform"),(0,n.yg)("p",null,"A Data Platform is a metadata entity that represents a source system, technology, or tool that contains and manages data assets. Data Platforms are the foundational building blocks in DataHub's metadata model, serving as the namespace and classification system for all datasets, dashboards, charts, jobs, and other data assets."),(0,n.yg)("p",null,"Examples of data platforms include databases (MySQL, PostgreSQL, Oracle), data warehouses (Snowflake, BigQuery, Redshift), BI tools (Looker, Tableau, Power BI), data lakes (S3, HDFS), message brokers (Kafka), and many other systems where data resides or flows through."),(0,n.yg)("h2",{id:"identity"},"Identity"),(0,n.yg)("p",null,"A Data Platform is uniquely identified by a single component:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platformName"),': The standardized name of the technology (e.g., "mysql", "snowflake", "looker", "kafka")')),(0,n.yg)("p",null,"The URN structure for a Data Platform is:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"urn:li:dataPlatform:<platformName>\n")),(0,n.yg)("h3",{id:"examples"},"Examples"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"urn:li:dataPlatform:mysql\nurn:li:dataPlatform:snowflake\nurn:li:dataPlatform:bigquery\nurn:li:dataPlatform:looker\nurn:li:dataPlatform:kafka\nurn:li:dataPlatform:s3\nurn:li:dataPlatform:dbt\n")),(0,n.yg)("h3",{id:"platform-name-conventions"},"Platform Name Conventions"),(0,n.yg)("p",null,"Platform names follow these conventions:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Lowercase"),': All platform names are lowercase (e.g., "bigquery" not "BigQuery")'),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"No spaces"),': Use hyphens for multi-word names (e.g., "azure-ad" not "Azure AD")'),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Technology-specific"),": Name represents the specific technology, not a vendor or product line"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Standardized"),": DataHub maintains a canonical list of platform names to ensure consistency")),(0,n.yg)("p",null,"The complete list of officially supported data platforms is maintained in DataHub's ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub/blob/master/metadata-service/configuration/src/main/resources/bootstrap_mcps/data-platforms.yaml"},"data-platforms.yaml")," bootstrap configuration."),(0,n.yg)("h3",{id:"custom-platforms"},"Custom Platforms"),(0,n.yg)("p",null,"While DataHub ships with 100+ pre-defined platforms, you can create custom platform entities for:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"In-house or proprietary data systems"),(0,n.yg)("li",{parentName:"ul"},"New technologies not yet in the official list"),(0,n.yg)("li",{parentName:"ul"},"Logical groupings of related systems"),(0,n.yg)("li",{parentName:"ul"},"Platform variations with specific configurations")),(0,n.yg)("p",null,"When creating custom platforms, follow the naming conventions above and ensure uniqueness across your DataHub instance."),(0,n.yg)("h2",{id:"important-capabilities"},"Important Capabilities"),(0,n.yg)("h3",{id:"platform-information"},"Platform Information"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"dataPlatformInfo")," aspect contains the core metadata about a data platform:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"name"),": The canonical name of the platform (max 15 characters, searchable)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"displayName"),': A user-friendly display name for the platform (e.g., "Google BigQuery" for platform "bigquery")'),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"type"),": The category of platform from the PlatformType enumeration"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"datasetNameDelimiter"),': The character used to separate components in dataset names (e.g., "." for Oracle, "/" for HDFS)'),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"logoUrl"),": Optional URL to a logo image representing the platform")),(0,n.yg)("h4",{id:"platform-types"},"Platform Types"),(0,n.yg)("p",null,"Data platforms are classified into these categories:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"RELATIONAL_DB"),": Traditional relational databases (MySQL, PostgreSQL, Oracle, SQL Server)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"OLAP_DATASTORE"),": Online analytical processing systems (Pinot, Druid, ClickHouse)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"KEY_VALUE_STORE"),": Key-value and NoSQL databases (Redis, DynamoDB, Cassandra)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"SEARCH_ENGINE"),": Search and indexing platforms (Elasticsearch, Solr)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"MESSAGE_BROKER"),": Event streaming and messaging systems (Kafka, Pulsar, RabbitMQ)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"FILE_SYSTEM"),": Distributed file systems (HDFS, NFS, local file systems)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"OBJECT_STORE"),": Cloud object storage (S3, GCS, Azure Blob Storage)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"QUERY_ENGINE"),": SQL query engines (Presto, Trino, Athena, Hive)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"OTHERS"),": Other platform types including BI tools, orchestrators, data catalogs, and specialized systems")),(0,n.yg)("p",null,"The platform type helps DataHub understand how to interact with the platform and what kinds of metadata are expected."),(0,n.yg)("p",null,"The following code snippet shows you how to create a custom Data Platform."),(0,n.yg)("details",null,(0,n.yg)("summary",null,"Python SDK: Create a Data Platform"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/data_platform_create.py\n# metadata-ingestion/examples/library/data_platform_create.py\nimport logging\nimport os\n\nfrom datahub.emitter.mcp import MetadataChangeProposalWrapper\nfrom datahub.emitter.rest_emitter import DatahubRestEmitter\nfrom datahub.metadata.schema_classes import (\n    DataPlatformInfoClass,\n)\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\ngms_server = os.getenv("DATAHUB_GMS_URL", "http://localhost:8080")\ntoken = os.getenv("DATAHUB_GMS_TOKEN")\nemitter = DatahubRestEmitter(gms_server=gms_server, token=token)\n\nplatform_urn = "urn:li:dataPlatform:customdb"\n\nplatform_info = DataPlatformInfoClass(\n    name="customdb",\n    displayName="Custom Database Platform",\n    type="RELATIONAL_DB",\n    datasetNameDelimiter=".",\n    logoUrl="https://company.com/logos/customdb.png",\n)\n\nevent = MetadataChangeProposalWrapper(\n    entityUrn=platform_urn,\n    aspect=platform_info,\n)\n\nemitter.emit(event)\nlog.info(f"Created data platform {platform_urn}")\n\n'))),(0,n.yg)("h3",{id:"dataset-name-delimiter"},"Dataset Name Delimiter"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"datasetNameDelimiter")," field is critical for understanding dataset naming conventions on each platform:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},'"."'),": Used by most relational databases (e.g., ",(0,n.yg)("inlineCode",{parentName:"li"},"database.schema.table")," in PostgreSQL)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},'"/"'),": Used by file systems (e.g., ",(0,n.yg)("inlineCode",{parentName:"li"},"/data/warehouse/customers")," in HDFS)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},'""')," (empty string): Used when dataset names are flat without hierarchy")),(0,n.yg)("p",null,"This delimiter helps DataHub:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Parse dataset names correctly"),(0,n.yg)("li",{parentName:"ul"},"Build browse paths for hierarchical navigation"),(0,n.yg)("li",{parentName:"ul"},"Display dataset names in a user-friendly format"),(0,n.yg)("li",{parentName:"ul"},"Generate proper URNs for datasets on the platform")),(0,n.yg)("h3",{id:"logo-url"},"Logo URL"),(0,n.yg)("p",null,"Platforms can have custom logos displayed in the DataHub UI through the ",(0,n.yg)("inlineCode",{parentName:"p"},"logoUrl")," field. This helps users quickly recognize platforms visually. DataHub ships with built-in logos for all officially supported platforms, but custom platforms can specify their own logo URLs."),(0,n.yg)("h2",{id:"integration-points"},"Integration Points"),(0,n.yg)("h3",{id:"relationship-with-datasets"},"Relationship with Datasets"),(0,n.yg)("p",null,"Data Platforms are the parent entity for all datasets. Every dataset URN includes a platform reference:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"urn:li:dataset:(urn:li:dataPlatform:snowflake,database.schema.table,PROD)\n")),(0,n.yg)("p",null,"This relationship enables:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Discovery"),": Find all datasets belonging to a specific platform"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Governance"),": Apply platform-level policies and access controls"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Lineage"),": Track data movement between different platforms"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Inventory"),": Understand the distribution of data across your technology stack")),(0,n.yg)("h3",{id:"relationship-with-other-entities"},"Relationship with Other Entities"),(0,n.yg)("p",null,"Beyond datasets, platforms are referenced by many other entity types:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Dashboards"),": BI dashboards from platforms like Looker, Tableau, Superset"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Charts"),": Visualizations from BI platforms"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"DataFlows"),": Orchestration workflows from Airflow, Prefect, Dagster"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"DataJobs"),": Individual tasks or jobs within data pipelines"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"ML Models"),": Machine learning models from platforms like SageMaker, MLflow"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"DataProcesses"),": Streaming processes from platforms like Flink, Spark")),(0,n.yg)("p",null,"All of these entities include a platform reference in their URNs, creating a comprehensive technology inventory."),(0,n.yg)("h3",{id:"platform-instances"},"Platform Instances"),(0,n.yg)("p",null,"For organizations running multiple instances of the same platform (e.g., multiple Snowflake accounts, multiple production BigQuery projects), DataHub provides a ",(0,n.yg)("inlineCode",{parentName:"p"},"dataPlatformInstance")," entity. This allows distinguishing between:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},'Platform: The technology itself (e.g., "snowflake")'),(0,n.yg)("li",{parentName:"ul"},'Platform Instance: A specific deployment of that technology (e.g., "snowflake-prod-us-west", "snowflake-dev-eu")')),(0,n.yg)("p",null,"Platform instances reference their parent platform and add deployment-specific metadata like environment, region, or account information."),(0,n.yg)("details",null,(0,n.yg)("summary",null,"Python SDK: Create a Platform Instance"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/platform_instance_create.py\n# metadata-ingestion/examples/library/platform_instance_create.py\nimport os\n\nimport datahub.emitter.mce_builder as builder\nfrom datahub.emitter.mcp import MetadataChangeProposalWrapper\nfrom datahub.emitter.rest_emitter import DatahubRestEmitter\nfrom datahub.metadata.schema_classes import DataPlatformInstancePropertiesClass\n\n# Create the platform instance URN\nplatform_instance_urn = builder.make_dataplatform_instance_urn(\n    platform="mysql", instance="production-mysql-cluster"\n)\n\n# Define properties for the platform instance\nplatform_properties = DataPlatformInstancePropertiesClass(\n    name="Production MySQL Cluster",\n    description="Primary MySQL database cluster serving production workloads in US West region",\n    customProperties={\n        "region": "us-west-2",\n        "environment": "production",\n        "cluster_size": "3-node",\n        "version": "8.0.35",\n    },\n    externalUrl="https://cloud.mysql.com/console/clusters/prod-cluster",\n)\n\n# Create metadata change proposal\nplatform_instance_mcp = MetadataChangeProposalWrapper(\n    entityUrn=platform_instance_urn,\n    aspect=platform_properties,\n)\n\n# Emit metadata to DataHub\ngms_server = os.getenv("DATAHUB_GMS_URL", "http://localhost:8080")\ntoken = os.getenv("DATAHUB_GMS_TOKEN")\nemitter = DatahubRestEmitter(gms_server=gms_server, token=token)\nemitter.emit_mcp(platform_instance_mcp)\n\nprint(f"Created platform instance: {platform_instance_urn}")\n\n'))),(0,n.yg)("h3",{id:"ingestion-sources"},"Ingestion Sources"),(0,n.yg)("p",null,"Data Platforms are typically created automatically through two mechanisms:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Bootstrap Data"),": When DataHub starts, it loads ~100 pre-defined platforms from the bootstrap configuration"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Ingestion Connectors"),": When you run an ingestion source (e.g., the Snowflake connector), it automatically creates platform references for any assets it ingests")),(0,n.yg)("p",null,"You rarely need to manually create platform entities unless you're adding a custom or in-house system not covered by the standard bootstrap list."),(0,n.yg)("h3",{id:"search-and-discovery"},"Search and Discovery"),(0,n.yg)("p",null,"Platforms are fully searchable in DataHub:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Platform Name Search"),": Find platforms by their canonical name"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Display Name Search"),": Search using user-friendly display names"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Platform Filtering"),": Filter datasets and other entities by platform"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Platform Browse"),": Navigate through entities organized by platform")),(0,n.yg)("p",null,"This enables users to explore the data landscape from a platform-centric view."),(0,n.yg)("h3",{id:"graphql-api"},"GraphQL API"),(0,n.yg)("p",null,"Data Platforms can be queried through the GraphQL API to retrieve:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Platform metadata (name, type, logo)"),(0,n.yg)("li",{parentName:"ul"},"Counts of entities on the platform"),(0,n.yg)("li",{parentName:"ul"},"Platform configuration information")),(0,n.yg)("p",null,"While platforms are rarely created via GraphQL (since they're mostly bootstrap data), the API enables programmatic access to platform information."),(0,n.yg)("h2",{id:"notable-exceptions"},"Notable Exceptions"),(0,n.yg)("h3",{id:"bootstrap-vs-custom-platforms"},"Bootstrap vs Custom Platforms"),(0,n.yg)("p",null,"DataHub makes a distinction between:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Bootstrap Platforms"),": The ~100 platforms loaded at startup, maintained by the DataHub project"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Custom Platforms"),": Platforms you create for your own use cases")),(0,n.yg)("p",null,"Bootstrap platforms:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Have official logos and display names"),(0,n.yg)("li",{parentName:"ul"},"Are maintained across DataHub upgrades"),(0,n.yg)("li",{parentName:"ul"},"Are tested with DataHub's ingestion connectors"),(0,n.yg)("li",{parentName:"ul"},"Follow consistent naming conventions")),(0,n.yg)("p",null,"Custom platforms:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"May not have logos (unless you provide logoUrl)"),(0,n.yg)("li",{parentName:"ul"},"Are your responsibility to maintain"),(0,n.yg)("li",{parentName:"ul"},"May not have pre-built ingestion connectors"),(0,n.yg)("li",{parentName:"ul"},"Should follow the same naming conventions to avoid confusion")),(0,n.yg)("h3",{id:"platform-name-immutability"},"Platform Name Immutability"),(0,n.yg)("p",null,"Once a platform is created and assets are associated with it, the platform name becomes immutable for practical purposes. Changing a platform name would require:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Migrating all dataset URNs that reference the platform"),(0,n.yg)("li",{parentName:"ul"},"Updating all lineage edges"),(0,n.yg)("li",{parentName:"ul"},"Re-ingesting all metadata from that platform")),(0,n.yg)("p",null,"If you need to rename a platform, it's generally easier to:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Create a new platform with the desired name"),(0,n.yg)("li",{parentName:"ol"},"Re-ingest all assets using the new platform name"),(0,n.yg)("li",{parentName:"ol"},"Deprecate or delete the old platform")),(0,n.yg)("h3",{id:"platform-name-length-limit"},"Platform Name Length Limit"),(0,n.yg)("p",null,"Platform names are limited to 15 characters (enforced by ",(0,n.yg)("inlineCode",{parentName:"p"},"@validate.strlen.max = 15"),"). This is a legacy constraint that ensures platform names are concise and fit well in URNs and UI displays."),(0,n.yg)("p",null,"If your platform's natural name exceeds 15 characters, use an abbreviation or acronym:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},'"azure-synapse" \u2192 "synapse"'),(0,n.yg)("li",{parentName:"ul"},'"amazon-redshift" \u2192 "redshift"'),(0,n.yg)("li",{parentName:"ul"},'"google-bigquery" \u2192 "bigquery"')),(0,n.yg)("p",null,"The full name can go in the ",(0,n.yg)("inlineCode",{parentName:"p"},"displayName")," field without length restrictions."),(0,n.yg)("h3",{id:"case-sensitivity"},"Case Sensitivity"),(0,n.yg)("p",null,'Platform names are case-sensitive in URNs but conventionally always lowercase. Avoid creating platforms that differ only in case (e.g., "MySQL" and "mysql") as this will cause confusion and potential URN conflicts.'),(0,n.yg)("h3",{id:"platform-types-are-descriptive-not-functional"},"Platform Types Are Descriptive, Not Functional"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"type")," field (FILE_SYSTEM, RELATIONAL_DB, etc.) is primarily for classification and display purposes. DataHub does not enforce different behaviors based on platform type. Two platforms of different types are treated the same way by the system."),(0,n.yg)("p",null,"However, connectors and ingestion logic may use platform type to determine:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"What metadata to extract"),(0,n.yg)("li",{parentName:"ul"},"How to parse dataset names"),(0,n.yg)("li",{parentName:"ul"},"What lineage patterns to expect"),(0,n.yg)("li",{parentName:"ul"},"What profiling or usage collection is possible")),(0,n.yg)("h2",{id:"common-platform-categories"},"Common Platform Categories"),(0,n.yg)("h3",{id:"databases-and-data-warehouses"},"Databases and Data Warehouses"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"RELATIONAL_DB platforms"),": MySQL, PostgreSQL, Oracle, SQL Server, MariaDB, DB2"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"OLAP_DATASTORE platforms"),": Snowflake, BigQuery, Redshift, Clickhouse, Pinot, Druid"),(0,n.yg)("p",null,"These platforms typically have:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Hierarchical dataset names (database.schema.table)"),(0,n.yg)("li",{parentName:"ul"},'"." as the delimiter'),(0,n.yg)("li",{parentName:"ul"},"Schema metadata (columns, types, constraints)"),(0,n.yg)("li",{parentName:"ul"},"Query log metadata for usage and lineage")),(0,n.yg)("h3",{id:"business-intelligence-tools"},"Business Intelligence Tools"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"OTHERS platform type")," (BI-specific): Looker, Tableau, Power BI, Metabase, Superset, Mode"),(0,n.yg)("p",null,"These platforms typically have:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Dashboard and chart entities"),(0,n.yg)("li",{parentName:"ul"},"Lineage from dashboards to underlying datasets"),(0,n.yg)("li",{parentName:"ul"},"Usage statistics for views and interactions"),(0,n.yg)("li",{parentName:"ul"},"Metadata about report authors and schedules")),(0,n.yg)("h3",{id:"data-lakes-and-object-stores"},"Data Lakes and Object Stores"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"OBJECT_STORE platforms"),": S3, GCS, Azure Blob Storage, MinIO"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"FILE_SYSTEM platforms"),": HDFS, NFS, Azure Data Lake"),(0,n.yg)("p",null,"These platforms typically have:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},'"/" as the delimiter'),(0,n.yg)("li",{parentName:"ul"},"File-based datasets (Parquet, Avro, CSV, JSON)"),(0,n.yg)("li",{parentName:"ul"},"Path-based naming conventions"),(0,n.yg)("li",{parentName:"ul"},"Schema-on-read metadata")),(0,n.yg)("h3",{id:"streaming-platforms"},"Streaming Platforms"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"MESSAGE_BROKER platforms"),": Kafka, Pulsar, Kinesis, Event Hubs, RabbitMQ"),(0,n.yg)("p",null,"These platforms typically have:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Topic or stream datasets"),(0,n.yg)("li",{parentName:"ul"},"Schema registry integration"),(0,n.yg)("li",{parentName:"ul"},"Real-time lineage tracking"),(0,n.yg)("li",{parentName:"ul"},"Throughput and lag metrics")),(0,n.yg)("h3",{id:"orchestration-and-pipeline-tools"},"Orchestration and Pipeline Tools"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"OTHERS platform type")," (orchestration-specific): Airflow, Prefect, Dagster, Luigi, Argo"),(0,n.yg)("p",null,"These platforms typically have:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"DataFlow (pipeline) and DataJob (task) entities"),(0,n.yg)("li",{parentName:"ul"},"DAG structures and dependencies"),(0,n.yg)("li",{parentName:"ul"},"Execution statistics and run history"),(0,n.yg)("li",{parentName:"ul"},"Lineage based on job dependencies")),(0,n.yg)("h3",{id:"transformation-tools"},"Transformation Tools"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"OTHERS platform type")," (transformation-specific): dbt, Spark, Flink, Databricks"),(0,n.yg)("p",null,"These platforms typically have:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Strong column-level lineage"),(0,n.yg)("li",{parentName:"ul"},"Transformation logic metadata"),(0,n.yg)("li",{parentName:"ul"},"Model/job entities"),(0,n.yg)("li",{parentName:"ul"},"Test and documentation metadata")),(0,n.yg)("h2",{id:"use-cases"},"Use Cases"),(0,n.yg)("p",null,"Data Platforms enable several critical use cases in DataHub:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Technology Inventory"),": Understand what platforms your organization uses and how extensively"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Platform Governance"),": Apply policies and access controls at the platform level"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Migration Planning"),": Identify datasets to migrate when consolidating or replacing platforms"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Cost Optimization"),": Track which platforms host the most/least used data"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Multi-Platform Lineage"),": Trace data flows across different technologies in your data ecosystem"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Technology Standardization"),": Enforce or monitor adoption of approved platforms"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Impact Analysis"),": Understand the blast radius of platform outages or changes"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Discovery Navigation"),": Browse and filter assets by platform for easier discovery")),(0,n.yg)("p",null,"By establishing platforms as first-class entities, DataHub provides a comprehensive view of your organization's data technology landscape."),(0,n.yg)("h2",{id:"technical-reference-guide"},"Technical Reference Guide"),(0,n.yg)("p",null,"The sections above provide an overview of how to use this entity. The following sections provide detailed technical information about how metadata is stored and represented in DataHub."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Aspects")," are the individual pieces of metadata that can be attached to an entity. Each aspect contains specific information (like ownership, tags, or properties) and is stored as a separate record, allowing for flexible and incremental metadata updates."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Relationships")," show how this entity connects to other entities in the metadata graph. These connections are derived from the fields within each aspect and form the foundation of DataHub's knowledge graph."),(0,n.yg)("h3",{id:"reading-the-field-tables"},"Reading the Field Tables"),(0,n.yg)("p",null,"Each aspect's field table includes an ",(0,n.yg)("strong",{parentName:"p"},"Annotations")," column that provides additional metadata about how fields are used:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"\u26a0\ufe0f Deprecated"),": This field is deprecated and may be removed in a future version. Check the description for the recommended alternative"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Searchable"),": This field is indexed and can be searched in DataHub's search interface"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Searchable (fieldname)"),": When the field name in parentheses is shown, it indicates the field is indexed under a different name in the search index. For example, ",(0,n.yg)("inlineCode",{parentName:"li"},"dashboardTool")," is indexed as ",(0,n.yg)("inlineCode",{parentName:"li"},"tool")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"\u2192 RelationshipName"),": This field creates a relationship to another entity. The arrow indicates this field contains a reference (URN) to another entity, and the name indicates the type of relationship (e.g., ",(0,n.yg)("inlineCode",{parentName:"li"},"\u2192 Contains"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"\u2192 OwnedBy"),")")),(0,n.yg)("p",null,"Fields with complex types (like ",(0,n.yg)("inlineCode",{parentName:"p"},"Edge"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"AuditStamp"),") link to their definitions in the ",(0,n.yg)("a",{parentName:"p",href:"#common-types"},"Common Types")," section below."),(0,n.yg)("h3",{id:"aspects"},"Aspects"),(0,n.yg)("h4",{id:"dataplatformkey"},"dataPlatformKey"),(0,n.yg)("p",null,"Key for a Data Platform"),(0,n.yg)(l.A,{mdxType:"Tabs"},(0,n.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Field"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Required"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"platformName"),(0,n.yg)("td",{parentName:"tr",align:null},"string"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,n.yg)("td",{parentName:"tr",align:null},"Data platform name i.e. hdfs, oracle, espresso"),(0,n.yg)("td",{parentName:"tr",align:null}))))),(0,n.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataPlatformKey"\n  },\n  "name": "DataPlatformKey",\n  "namespace": "com.linkedin.metadata.key",\n  "fields": [\n    {\n      "type": "string",\n      "name": "platformName",\n      "doc": "Data platform name i.e. hdfs, oracle, espresso"\n    }\n  ],\n  "doc": "Key for a Data Platform"\n}\n')))),(0,n.yg)("h4",{id:"dataplatforminfo"},"dataPlatformInfo"),(0,n.yg)("p",null,"Information about a data platform"),(0,n.yg)(l.A,{mdxType:"Tabs"},(0,n.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Field"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Required"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"name"),(0,n.yg)("td",{parentName:"tr",align:null},"string"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,n.yg)("td",{parentName:"tr",align:null},"Name of the data platform"),(0,n.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"displayName"),(0,n.yg)("td",{parentName:"tr",align:null},"string"),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"The name that will be used for displaying a platform type."),(0,n.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"type"),(0,n.yg)("td",{parentName:"tr",align:null},"PlatformType"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,n.yg)("td",{parentName:"tr",align:null},"Platform type this data platform describes"),(0,n.yg)("td",{parentName:"tr",align:null})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"datasetNameDelimiter"),(0,n.yg)("td",{parentName:"tr",align:null},"string"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,n.yg)("td",{parentName:"tr",align:null},"The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle"),(0,n.yg)("td",{parentName:"tr",align:null})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"logoUrl"),(0,n.yg)("td",{parentName:"tr",align:null},"string"),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"The URL for a logo associated with the platform"),(0,n.yg)("td",{parentName:"tr",align:null}))))),(0,n.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataPlatformInfo"\n  },\n  "name": "DataPlatformInfo",\n  "namespace": "com.linkedin.dataplatform",\n  "fields": [\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": false,\n        "fieldNameAliases": [\n          "_entityName"\n        ],\n        "fieldType": "WORD_GRAM"\n      },\n      "validate": {\n        "strlen": {\n          "max": 15\n        }\n      },\n      "type": "string",\n      "name": "name",\n      "doc": "Name of the data platform"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldType": "WORD_GRAM"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "displayName",\n      "default": null,\n      "doc": "The name that will be used for displaying a platform type."\n    },\n    {\n      "type": {\n        "type": "enum",\n        "symbolDocs": {\n          "FILE_SYSTEM": "Value for a file system, e.g. hdfs",\n          "KEY_VALUE_STORE": "Value for a key value store, e.g. espresso, voldemort",\n          "MESSAGE_BROKER": "Value for a message broker, e.g. kafka",\n          "OBJECT_STORE": "Value for an object store, e.g. ambry",\n          "OLAP_DATASTORE": "Value for an OLAP datastore, e.g. pinot",\n          "OTHERS": "Value for other platforms, e.g salesforce, dovetail",\n          "QUERY_ENGINE": "Value for a query engine, e.g. presto",\n          "RELATIONAL_DB": "Value for a relational database, e.g. oracle, mysql",\n          "SEARCH_ENGINE": "Value for a search engine, e.g seas"\n        },\n        "name": "PlatformType",\n        "namespace": "com.linkedin.dataplatform",\n        "symbols": [\n          "FILE_SYSTEM",\n          "KEY_VALUE_STORE",\n          "MESSAGE_BROKER",\n          "OBJECT_STORE",\n          "OLAP_DATASTORE",\n          "OTHERS",\n          "QUERY_ENGINE",\n          "RELATIONAL_DB",\n          "SEARCH_ENGINE"\n        ],\n        "doc": "Platform types available at LinkedIn"\n      },\n      "name": "type",\n      "doc": "Platform type this data platform describes"\n    },\n    {\n      "type": "string",\n      "name": "datasetNameDelimiter",\n      "doc": "The delimiter in the dataset names on the data platform, e.g. \'/\' for HDFS and \'.\' for Oracle"\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "logoUrl",\n      "default": null,\n      "doc": "The URL for a logo associated with the platform"\n    }\n  ],\n  "doc": "Information about a data platform"\n}\n')))),(0,n.yg)("h3",{id:"relationships"},"Relationships"),(0,n.yg)("h3",{id:"global-metadata-model"},(0,n.yg)("a",{parentName:"h3",href:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,n.yg)("p",null,(0,n.yg)("img",{parentName:"p",src:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}f.isMDXComponent=!0}}]);