"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[505],{8970:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>p,metadata:()=>g,toc:()=>y});t(96540);var n=t(15680),i=t(53720),l=t(5400);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){return a=null!=a?a:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):function(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})),e}function o(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}const p={sidebar_position:35,title:"Looker",slug:"/generated/ingestion/sources/looker",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/looker.md"},d="Looker",g={unversionedId:"docs/generated/ingestion/sources/looker",id:"version-1.1.0/docs/generated/ingestion/sources/looker",title:"Looker",description:"There are 2 sources that provide integration with Looker",source:"@site/versioned_docs/version-1.1.0/docs/generated/ingestion/sources/looker.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/looker",permalink:"/docs/1.1.0/generated/ingestion/sources/looker",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/looker.md",tags:[],version:"1.1.0",sidebarPosition:35,frontMatter:{sidebar_position:35,title:"Looker",slug:"/generated/ingestion/sources/looker",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/looker.md"},sidebar:"overviewSidebar",previous:{title:"LDAP",permalink:"/docs/1.1.0/generated/ingestion/sources/ldap"},next:{title:"MariaDB",permalink:"/docs/1.1.0/generated/ingestion/sources/mariadb"}},m={},y=[{value:"Module <code>looker</code>",id:"module-looker",level:2},{value:"Important Capabilities",id:"important-capabilities",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Set up the right permissions",id:"set-up-the-right-permissions",level:4},{value:"Get an API key",id:"get-an-api-key",level:4},{value:"Ingestion through UI",id:"ingestion-through-ui",level:3},{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Code Coordinates",id:"code-coordinates",level:3},{value:"Module <code>lookml</code>",id:"module-lookml",level:2},{value:"Important Capabilities",id:"important-capabilities-1",level:3},{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Recommended Create a GitHub Deploy Key",id:"recommended-create-a-github-deploy-key",level:4},{value:"Setup your connection mapping",id:"setup-your-connection-mapping",level:3},{value:"Optional Create an API key with admin privileges",id:"optional-create-an-api-key-with-admin-privileges",level:4},{value:"Ingestion Options",id:"ingestion-options",level:3},{value:"UI-based Ingestion Recommended for ease of use",id:"ui-based-ingestion-recommended-for-ease-of-use",level:3},{value:"GitHub Action based Ingestion Recommended for push-based integration",id:"github-action-based-ingestion-recommended-for-push-based-integration",level:3},{value:"Sample GitHub Action",id:"sample-github-action",level:4},{value:"CLI based Ingestion",id:"cli-based-ingestion-1",level:3},{value:"Starter Recipe",id:"starter-recipe-1",level:3},{value:"Config Details",id:"config-details-1",level:3},{value:"Configuration Notes",id:"configuration-notes",level:3},{value:"Multi-Project LookML (Advanced)",id:"multi-project-lookml-advanced",level:3},{value:"Debugging LookML Parsing Errors",id:"debugging-lookml-parsing-errors",level:3},{value:"Code Coordinates",id:"code-coordinates-1",level:3}],c={toc:y},u="wrapper";function f(e){var{components:a}=e,t=o(e,["components"]);return(0,n.yg)(u,r(function(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(a){s(e,a,t[a])}))}return e}({},c,t),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"looker"},"Looker"),(0,n.yg)("p",null,"There are 2 sources that provide integration with Looker"),(0,n.yg)("table",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"Source Module"),(0,n.yg)("td",null,"Documentation")),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"looker"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"This plugin extracts the following:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Looker dashboards, dashboard elements (charts) and explores"),(0,n.yg)("li",{parentName:"ul"},"Names, descriptions, URLs, chart types, input explores for the charts"),(0,n.yg)("li",{parentName:"ul"},"Schemas and input views for explores"),(0,n.yg)("li",{parentName:"ul"},"Owners of dashboards")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"To get complete Looker metadata integration (including Looker views and lineage to the underlying warehouse tables), you must ALSO use the ",(0,n.yg)("inlineCode",{parentName:"p"},"lookml")," module.")),(0,n.yg)("p",null," ",(0,n.yg)("a",{parentName:"p",href:"#module-looker"},"Read more...")))),(0,n.yg)("tr",null,(0,n.yg)("td",null,(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"lookml"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"This plugin extracts the following:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"LookML views from model files in a project"),(0,n.yg)("li",{parentName:"ul"},"Name, upstream table names, metadata for dimensions, measures, and dimension groups attached as tags"),(0,n.yg)("li",{parentName:"ul"},"If API integration is enabled (recommended), resolves table and view names by calling the Looker API, otherwise supports offline resolution of these names.")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"To get complete Looker metadata integration (including Looker dashboards and charts and lineage to the underlying Looker views, you must ALSO use the ",(0,n.yg)("inlineCode",{parentName:"p"},"looker")," source module.")),(0,n.yg)("p",null," ",(0,n.yg)("a",{parentName:"p",href:"#module-lookml"},"Read more..."))))),(0,n.yg)("h2",{id:"module-looker"},"Module ",(0,n.yg)("inlineCode",{parentName:"h2"},"looker")),(0,n.yg)("p",null,(0,n.yg)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,n.yg)("h3",{id:"important-capabilities"},"Important Capabilities"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Capability"),(0,n.yg)("th",{parentName:"tr",align:null},"Status"),(0,n.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Column-level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default, configured using ",(0,n.yg)("inlineCode",{parentName:"td"},"extract_column_level_lineage"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dataset Usage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default, configured using ",(0,n.yg)("inlineCode",{parentName:"td"},"extract_usage_history"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Descriptions"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/1.1.0/metadata-ingestion/docs/dev_guides/stateful#stale-entity-removal"},"Detect Deleted Entities")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Optionally enabled via ",(0,n.yg)("inlineCode",{parentName:"td"},"stateful_ingestion.remove_stale_metadata"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Extract Ownership"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default, configured using ",(0,n.yg)("inlineCode",{parentName:"td"},"extract_owners"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/1.1.0/platform-instances"},"Platform Instance")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Use the ",(0,n.yg)("inlineCode",{parentName:"td"},"platform_instance")," field")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Table-Level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Supported by default")))),(0,n.yg)("p",null,"This plugin extracts the following:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Looker dashboards, dashboard elements (charts) and explores"),(0,n.yg)("li",{parentName:"ul"},"Names, descriptions, URLs, chart types, input explores for the charts"),(0,n.yg)("li",{parentName:"ul"},"Schemas and input views for explores"),(0,n.yg)("li",{parentName:"ul"},"Owners of dashboards")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"To get complete Looker metadata integration (including Looker views and lineage to the underlying warehouse tables), you must ALSO use the ",(0,n.yg)("inlineCode",{parentName:"p"},"lookml")," module.")),(0,n.yg)("h3",{id:"prerequisites"},"Prerequisites"),(0,n.yg)("h4",{id:"set-up-the-right-permissions"},"Set up the right permissions"),(0,n.yg)("p",null,"You need to provide the following permissions for ingestion to work correctly."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"access_data\nexplore\nmanage_models\nsee_datagroups\nsee_lookml\nsee_lookml_dashboards\nsee_looks\nsee_pdts\nsee_queries\nsee_schedules\nsee_sql\nsee_system_activity\nsee_user_dashboards\nsee_users\n")),(0,n.yg)("p",null,"Here is an example permission set after configuration."),(0,n.yg)("p",{align:"center"},(0,n.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/looker_datahub_permission_set.png"})),(0,n.yg)("h4",{id:"get-an-api-key"},"Get an API key"),(0,n.yg)("p",null,"You need to get an API key for the account with the above privileges to perform ingestion. See the ",(0,n.yg)("a",{parentName:"p",href:"https://docs.looker.com/reference/api-and-integration/api-auth#authentication_with_an_sdk"},"Looker authentication docs")," for the steps to create a client ID and secret."),(0,n.yg)("h3",{id:"ingestion-through-ui"},"Ingestion through UI"),(0,n.yg)("p",null,"The following video shows you how to get started with ingesting Looker metadata through the UI."),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"You will need to run ",(0,n.yg)("inlineCode",{parentName:"p"},"lookml")," ingestion through the CLI after you have ingested Looker metadata through the UI. Otherwise you will not be able to see Looker Views and their lineage to your warehouse tables.")),(0,n.yg)("div",{style:{position:"relative",paddingBottom:"57.692307692307686%",height:0}},(0,n.yg)("iframe",{src:"https://www.loom.com/embed/b8b9654e02714d20a44122cc1bffc1bb",frameBorder:0,webkitallowfullscreen:"",mozallowfullscreen:"",allowFullScreen:"",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"}})),(0,n.yg)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,n.yg)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,n.yg)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,n.yg)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,n.yg)("p",null,"For general pointers on writing and running a recipe, see our ",(0,n.yg)("a",{parentName:"p",href:"/docs/1.1.0/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: "looker"\n  config:\n    # Coordinates\n    base_url: "https://<company>.cloud.looker.com"\n\n    # Credentials\n    client_id: ${LOOKER_CLIENT_ID}\n    client_secret: ${LOOKER_CLIENT_SECRET}\n\n    # Liquid variables\n    # liquid_variables:\n    #   _user_attributes:\n    #     looker_env: "dev"\n    #     dev_database_prefix: "employee"\n    #     dev_schema_prefix: "public"\n    #   dw_eff_dt_date:\n    #     _is_selected: true\n    #   source_region: "ap-south-1"\n    #   db: "test-db"\n\n    # LookML Constants\n    # lookml_constants:\n    #   star_award_winner_year: "public.winner_2025"\n# sink configs\n\n')),(0,n.yg)("h3",{id:"config-details"},"Config Details"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(l.A,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"Note that a ",(0,n.yg)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,n.yg)("div",{className:"config-table"},(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"left"},"Field"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"base_url"),"\xa0",(0,n.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Url to your Looker instance: ",(0,n.yg)("inlineCode",{parentName:"td"},"https://company.looker.com:19999")," or ",(0,n.yg)("inlineCode",{parentName:"td"},"https://looker.company.com"),", or similar. Used for making API calls to Looker and constructing clickable dashboard and chart urls.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"client_id"),"\xa0",(0,n.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Looker API client id.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"client_secret"),"\xa0",(0,n.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Looker API client secret.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"emit_used_explores_only"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, only explores that are used by a Dashboard/Look will be ingested. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"external_base_url"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Optional URL to use when constructing external URLs to Looker if the ",(0,n.yg)("inlineCode",{parentName:"td"},"base_url")," is not the correct one to use. For example, ",(0,n.yg)("inlineCode",{parentName:"td"},"https://looker-public.company.com"),". If not provided, the external base URL will default to ",(0,n.yg)("inlineCode",{parentName:"td"},"base_url"),".")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_column_level_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, extracts column-level lineage from Views and Explores ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_embed_urls"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Produce URLs used to render Looker Explores as Previews inside of DataHub UI. Embeds must be enabled inside of Looker to use this feature. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_independent_looks"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Extract looks which are not part of any Dashboard. To enable this flag the stateful_ingestion should also be enabled. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_owners"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, extracts ownership from Looker directly. When disabled, ownership is left empty for dashboards and charts. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_usage_history"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ingest usage statistics for dashboards. Setting this to True will query looker system activity explores to fetch historical dashboard usage. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_usage_history_for_interval"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Used only if extract_usage_history is set to True. Interval to extract looker dashboard usage history for. See ",(0,n.yg)("a",{parentName:"td",href:"https://docs.looker.com/reference/filter-expressions#date_and_time"},"https://docs.looker.com/reference/filter-expressions#date_and_time"),". ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"30 days")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_deleted"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to include deleted dashboards and looks. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_platform_instance_in_urns"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, platform instance will be added in dashboard and chart urn. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"max_retries"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of retries for Looker API calls ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"3")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"max_threads"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Max parallelism for Looker API calls. Defaults to cpuCount or 40")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"platform_instance"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See ",(0,n.yg)("a",{parentName:"td",href:"https://docs.datahub.com/docs/platform-instances/"},"https://docs.datahub.com/docs/platform-instances/")," for more details.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"skip_personal_folders"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to skip ingestion of dashboards in personal folders. Setting this to True will only ingest dashboards in the Shared folder space. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"strip_user_ids_from_email"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, converts Looker user emails of the form ",(0,n.yg)("a",{parentName:"td",href:"mailto:name@domain.com"},"name@domain.com")," to urn:li:corpuser:name when assigning ownership ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"tag_measures_and_dimensions"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, attaches tags to measures, dimensions and dimension groups to make them more discoverable. When disabled, adds this information to the description of the column. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"env"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"PROD")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"chart_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Patterns for selecting chart ids that are to be included ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"chart_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"chart_pattern."),(0,n.yg)("span",{className:"path-main"},"allow"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"chart_pattern.allow."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"chart_pattern."),(0,n.yg)("span",{className:"path-main"},"deny"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"chart_pattern.deny."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"dashboard_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Patterns for selecting dashboard ids that are to be included ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"dashboard_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"dashboard_pattern."),(0,n.yg)("span",{className:"path-main"},"allow"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"dashboard_pattern.allow."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"dashboard_pattern."),(0,n.yg)("span",{className:"path-main"},"deny"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"dashboard_pattern.deny."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"explore_browse_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing browse paths to explores. Allowed variables are ","['platform', 'env', 'project', 'model', 'name']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","/Explore/","{","model","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"explore_browse_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if explore_browse_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"explore_naming_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing dataset names to explores. Allowed variables are ","['platform', 'env', 'project', 'model', 'name']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","{","model","}",".explore.","{","name","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"explore_naming_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if explore_naming_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"folder_path_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Allow or deny dashboards from specific folders using their fully qualified paths. For example:  ",(0,n.yg)("br",null)," deny:  ",(0,n.yg)("br",null),"  - Shared/deprecated  ",(0,n.yg)("br",null)," This pattern will deny the ingestion of all dashboards and looks within the Shared/deprecated folder.  ",(0,n.yg)("br",null)," allow:  ",(0,n.yg)("br",null),"  - Shared/sales  ",(0,n.yg)("br",null)," This pattern will allow only the ingestion of dashboards within the Shared/sales folder.  ",(0,n.yg)("br",null)," To get the correct path from Looker, take the folder hierarchy shown in the UI and join it with slashes. For example, Shared -> Customer Reports -> Sales becomes Shared/Customer Reports/Sales. Dashboards will only be ingested if they're allowed by both this config and dashboard_pattern. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"folder_path_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"folder_path_pattern."),(0,n.yg)("span",{className:"path-main"},"allow"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"folder_path_pattern.allow."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"folder_path_pattern."),(0,n.yg)("span",{className:"path-main"},"deny"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"folder_path_pattern.deny."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"transport_options"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"TransportOptionsConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Populates the ",(0,n.yg)("a",{parentName:"td",href:"https://github.com/looker-open-source/sdk-codegen/blob/94d6047a0d52912ac082eb91616c1e7c379ab262/python/looker_sdk/rtl/transport.py#L70"},"TransportOptions")," struct for looker client")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"transport_options."),(0,n.yg)("span",{className:"path-main"},"headers"),"\xa0",(0,n.yg)("abbr",{title:"Required if transport_options is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,string)"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"transport_options."),(0,n.yg)("span",{className:"path-main"},"timeout"),"\xa0",(0,n.yg)("abbr",{title:"Required if transport_options is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"view_browse_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerViewNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing browse paths to views. Allowed variables are ","['platform', 'env', 'project', 'model', 'name', 'file_path', 'folder_path']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","/Develop/","{","project","}","/","{","folder","_","path","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_browse_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if view_browse_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"view_naming_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerViewNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing dataset names to views. Allowed variables are ","['platform', 'env', 'project', 'model', 'name', 'file_path', 'folder_path']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","{","project","}",".view.","{","name","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_naming_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if view_naming_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"stateful_ingestion"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"StatefulStaleMetadataRemovalConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Base specialized config for Stateful Ingestion with stale metadata removal capability.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or ",(0,n.yg)("inlineCode",{parentName:"td"},"datahub_api")," is specified, otherwise False ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"fail_safe_threshold"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"number"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Prevents large amount of soft deletes & the state from committing from accidental changes to the source configuration if the relative change percent in entities compared to the previous state is above the 'fail_safe_threshold'. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"75.0")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"remove_stale_metadata"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))))))),(0,n.yg)(l.A,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,n.yg)("p",null,"The ",(0,n.yg)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "LookerDashboardSourceConfig",\n  "description": "Base configuration class for stateful ingestion for source configs to inherit from.",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "stateful_ingestion": {\n      "$ref": "#/definitions/StatefulStaleMetadataRemovalConfig"\n    },\n    "platform_instance": {\n      "title": "Platform Instance",\n      "description": "The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See https://docs.datahub.com/docs/platform-instances/ for more details.",\n      "type": "string"\n    },\n    "explore_naming_pattern": {\n      "title": "Explore Naming Pattern",\n      "description": "Pattern for providing dataset names to explores. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\']",\n      "default": {\n        "pattern": "{model}.explore.{name}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerNamingPattern"\n        }\n      ]\n    },\n    "explore_browse_pattern": {\n      "title": "Explore Browse Pattern",\n      "description": "Pattern for providing browse paths to explores. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\']",\n      "default": {\n        "pattern": "/Explore/{model}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerNamingPattern"\n        }\n      ]\n    },\n    "view_naming_pattern": {\n      "title": "View Naming Pattern",\n      "description": "Pattern for providing dataset names to views. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\', \'file_path\', \'folder_path\']",\n      "default": {\n        "pattern": "{project}.view.{name}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerViewNamingPattern"\n        }\n      ]\n    },\n    "view_browse_pattern": {\n      "title": "View Browse Pattern",\n      "description": "Pattern for providing browse paths to views. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\', \'file_path\', \'folder_path\']",\n      "default": {\n        "pattern": "/Develop/{project}/{folder_path}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerViewNamingPattern"\n        }\n      ]\n    },\n    "tag_measures_and_dimensions": {\n      "title": "Tag Measures And Dimensions",\n      "description": "When enabled, attaches tags to measures, dimensions and dimension groups to make them more discoverable. When disabled, adds this information to the description of the column.",\n      "default": true,\n      "type": "boolean"\n    },\n    "extract_column_level_lineage": {\n      "title": "Extract Column Level Lineage",\n      "description": "When enabled, extracts column-level lineage from Views and Explores",\n      "default": true,\n      "type": "boolean"\n    },\n    "client_id": {\n      "title": "Client Id",\n      "description": "Looker API client id.",\n      "type": "string"\n    },\n    "client_secret": {\n      "title": "Client Secret",\n      "description": "Looker API client secret.",\n      "type": "string"\n    },\n    "base_url": {\n      "title": "Base Url",\n      "description": "Url to your Looker instance: `https://company.looker.com:19999` or `https://looker.company.com`, or similar. Used for making API calls to Looker and constructing clickable dashboard and chart urls.",\n      "type": "string"\n    },\n    "transport_options": {\n      "title": "Transport Options",\n      "description": "Populates the [TransportOptions](https://github.com/looker-open-source/sdk-codegen/blob/94d6047a0d52912ac082eb91616c1e7c379ab262/python/looker_sdk/rtl/transport.py#L70) struct for looker client",\n      "allOf": [\n        {\n          "$ref": "#/definitions/TransportOptionsConfig"\n        }\n      ]\n    },\n    "max_retries": {\n      "title": "Max Retries",\n      "description": "Number of retries for Looker API calls",\n      "default": 3,\n      "type": "integer"\n    },\n    "dashboard_pattern": {\n      "title": "Dashboard Pattern",\n      "description": "Patterns for selecting dashboard ids that are to be included",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "chart_pattern": {\n      "title": "Chart Pattern",\n      "description": "Patterns for selecting chart ids that are to be included",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "include_deleted": {\n      "title": "Include Deleted",\n      "description": "Whether to include deleted dashboards and looks.",\n      "default": false,\n      "type": "boolean"\n    },\n    "extract_owners": {\n      "title": "Extract Owners",\n      "description": "When enabled, extracts ownership from Looker directly. When disabled, ownership is left empty for dashboards and charts.",\n      "default": true,\n      "type": "boolean"\n    },\n    "strip_user_ids_from_email": {\n      "title": "Strip User Ids From Email",\n      "description": "When enabled, converts Looker user emails of the form name@domain.com to urn:li:corpuser:name when assigning ownership",\n      "default": false,\n      "type": "boolean"\n    },\n    "skip_personal_folders": {\n      "title": "Skip Personal Folders",\n      "description": "Whether to skip ingestion of dashboards in personal folders. Setting this to True will only ingest dashboards in the Shared folder space.",\n      "default": false,\n      "type": "boolean"\n    },\n    "max_threads": {\n      "title": "Max Threads",\n      "description": "Max parallelism for Looker API calls. Defaults to cpuCount or 40",\n      "type": "integer"\n    },\n    "external_base_url": {\n      "title": "External Base Url",\n      "description": "Optional URL to use when constructing external URLs to Looker if the `base_url` is not the correct one to use. For example, `https://looker-public.company.com`. If not provided, the external base URL will default to `base_url`.",\n      "type": "string"\n    },\n    "extract_usage_history": {\n      "title": "Extract Usage History",\n      "description": "Whether to ingest usage statistics for dashboards. Setting this to True will query looker system activity explores to fetch historical dashboard usage.",\n      "default": true,\n      "type": "boolean"\n    },\n    "extract_usage_history_for_interval": {\n      "title": "Extract Usage History For Interval",\n      "description": "Used only if extract_usage_history is set to True. Interval to extract looker dashboard usage history for. See https://docs.looker.com/reference/filter-expressions#date_and_time.",\n      "default": "30 days",\n      "type": "string"\n    },\n    "extract_embed_urls": {\n      "title": "Extract Embed Urls",\n      "description": "Produce URLs used to render Looker Explores as Previews inside of DataHub UI. Embeds must be enabled inside of Looker to use this feature.",\n      "default": true,\n      "type": "boolean"\n    },\n    "extract_independent_looks": {\n      "title": "Extract Independent Looks",\n      "description": "Extract looks which are not part of any Dashboard. To enable this flag the stateful_ingestion should also be enabled.",\n      "default": false,\n      "type": "boolean"\n    },\n    "emit_used_explores_only": {\n      "title": "Emit Used Explores Only",\n      "description": "When enabled, only explores that are used by a Dashboard/Look will be ingested.",\n      "default": true,\n      "type": "boolean"\n    },\n    "include_platform_instance_in_urns": {\n      "title": "Include Platform Instance In Urns",\n      "description": "When enabled, platform instance will be added in dashboard and chart urn.",\n      "default": false,\n      "type": "boolean"\n    },\n    "folder_path_pattern": {\n      "title": "Folder Path Pattern",\n      "description": "Allow or deny dashboards from specific folders using their fully qualified paths. For example: \\ndeny: \\n - Shared/deprecated \\nThis pattern will deny the ingestion of all dashboards and looks within the Shared/deprecated folder. \\nallow: \\n - Shared/sales \\nThis pattern will allow only the ingestion of dashboards within the Shared/sales folder. \\nTo get the correct path from Looker, take the folder hierarchy shown in the UI and join it with slashes. For example, Shared -> Customer Reports -> Sales becomes Shared/Customer Reports/Sales. Dashboards will only be ingested if they\'re allowed by both this config and dashboard_pattern.",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    }\n  },\n  "required": [\n    "client_id",\n    "client_secret",\n    "base_url"\n  ],\n  "additionalProperties": false,\n  "definitions": {\n    "DynamicTypedStateProviderConfig": {\n      "title": "DynamicTypedStateProviderConfig",\n      "type": "object",\n      "properties": {\n        "type": {\n          "title": "Type",\n          "description": "The type of the state provider to use. For DataHub use `datahub`",\n          "type": "string"\n        },\n        "config": {\n          "title": "Config",\n          "description": "The configuration required for initializing the state provider. Default: The datahub_api config if set at pipeline level. Otherwise, the default DatahubClientConfig. See the defaults (https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/graph/client.py#L19).",\n          "default": {},\n          "type": "object"\n        }\n      },\n      "required": [\n        "type"\n      ],\n      "additionalProperties": false\n    },\n    "StatefulStaleMetadataRemovalConfig": {\n      "title": "StatefulStaleMetadataRemovalConfig",\n      "description": "Base specialized config for Stateful Ingestion with stale metadata removal capability.",\n      "type": "object",\n      "properties": {\n        "enabled": {\n          "title": "Enabled",\n          "description": "Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or `datahub_api` is specified, otherwise False",\n          "default": false,\n          "type": "boolean"\n        },\n        "remove_stale_metadata": {\n          "title": "Remove Stale Metadata",\n          "description": "Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled.",\n          "default": true,\n          "type": "boolean"\n        },\n        "fail_safe_threshold": {\n          "title": "Fail Safe Threshold",\n          "description": "Prevents large amount of soft deletes & the state from committing from accidental changes to the source configuration if the relative change percent in entities compared to the previous state is above the \'fail_safe_threshold\'.",\n          "default": 75.0,\n          "minimum": 0.0,\n          "maximum": 100.0,\n          "type": "number"\n        }\n      },\n      "additionalProperties": false\n    },\n    "LookerNamingPattern": {\n      "title": "LookerNamingPattern",\n      "type": "object",\n      "properties": {\n        "pattern": {\n          "title": "Pattern",\n          "type": "string"\n        }\n      },\n      "required": [\n        "pattern"\n      ],\n      "additionalProperties": false\n    },\n    "LookerViewNamingPattern": {\n      "title": "LookerViewNamingPattern",\n      "type": "object",\n      "properties": {\n        "pattern": {\n          "title": "Pattern",\n          "type": "string"\n        }\n      },\n      "required": [\n        "pattern"\n      ],\n      "additionalProperties": false\n    },\n    "TransportOptionsConfig": {\n      "title": "TransportOptionsConfig",\n      "type": "object",\n      "properties": {\n        "timeout": {\n          "title": "Timeout",\n          "type": "integer"\n        },\n        "headers": {\n          "title": "Headers",\n          "type": "object",\n          "additionalProperties": {\n            "type": "string"\n          }\n        }\n      },\n      "required": [\n        "timeout",\n        "headers"\n      ],\n      "additionalProperties": false\n    },\n    "AllowDenyPattern": {\n      "title": "AllowDenyPattern",\n      "description": "A class to store allow deny regexes",\n      "type": "object",\n      "properties": {\n        "allow": {\n          "title": "Allow",\n          "description": "List of regex patterns to include in ingestion",\n          "default": [\n            ".*"\n          ],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "deny": {\n          "title": "Deny",\n          "description": "List of regex patterns to exclude from ingestion.",\n          "default": [],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "ignoreCase": {\n          "title": "Ignorecase",\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    }\n  }\n}\n')))),(0,n.yg)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Class Name: ",(0,n.yg)("inlineCode",{parentName:"li"},"datahub.ingestion.source.looker.looker_source.LookerDashboardSource")),(0,n.yg)("li",{parentName:"ul"},"Browse on ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/looker/looker_source.py"},"GitHub"))),(0,n.yg)("h2",{id:"module-lookml"},"Module ",(0,n.yg)("inlineCode",{parentName:"h2"},"lookml")),(0,n.yg)("p",null,(0,n.yg)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,n.yg)("h3",{id:"important-capabilities-1"},"Important Capabilities"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Capability"),(0,n.yg)("th",{parentName:"tr",align:null},"Status"),(0,n.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Column-level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default, configured using ",(0,n.yg)("inlineCode",{parentName:"td"},"extract_column_level_lineage"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/1.1.0/metadata-ingestion/docs/dev_guides/stateful#stale-entity-removal"},"Detect Deleted Entities")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Optionally enabled via ",(0,n.yg)("inlineCode",{parentName:"td"},"stateful_ingestion.remove_stale_metadata"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/1.1.0/platform-instances"},"Platform Instance")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Use the ",(0,n.yg)("inlineCode",{parentName:"td"},"platform_instance")," and ",(0,n.yg)("inlineCode",{parentName:"td"},"connection_to_platform_map")," fields")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Table-Level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Supported by default")))),(0,n.yg)("p",null,"This plugin extracts the following:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"LookML views from model files in a project"),(0,n.yg)("li",{parentName:"ul"},"Name, upstream table names, metadata for dimensions, measures, and dimension groups attached as tags"),(0,n.yg)("li",{parentName:"ul"},"If API integration is enabled (recommended), resolves table and view names by calling the Looker API, otherwise supports offline resolution of these names.")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"To get complete Looker metadata integration (including Looker dashboards and charts and lineage to the underlying Looker views, you must ALSO use the ",(0,n.yg)("inlineCode",{parentName:"p"},"looker")," source module.")),(0,n.yg)("h3",{id:"prerequisites-1"},"Prerequisites"),(0,n.yg)("h4",{id:"recommended-create-a-github-deploy-key"},"[Recommended]"," Create a GitHub Deploy Key"),(0,n.yg)("p",null,"To use LookML ingestion through the UI, or automate github checkout through the cli, you must set up a GitHub deploy key for your Looker GitHub repository. Read ",(0,n.yg)("a",{parentName:"p",href:"https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys"},"this")," document for how to set up deploy keys for your Looker git repo."),(0,n.yg)("p",null,"In a nutshell, there are three steps:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"Generate a private-public ssh key pair. This will typically generate two files, e.g. looker_datahub_deploy_key (this is the private key) and looker_datahub_deploy_key.pub (this is the public key). Do not add a passphrase.\n",(0,n.yg)("img",{parentName:"p",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/gitssh/ssh-key-generation.png",alt:"Image"}))),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"Add the public key to your Looker git repo as a deploy key with read access (no need to provision write access). Follow the guide ",(0,n.yg)("a",{parentName:"p",href:"https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys"},"here")," for that.\n",(0,n.yg)("img",{parentName:"p",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/gitssh/git-deploy-key.png",alt:"Image"}))),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"Make note of the private key file, you will need to paste the contents of the file into the ",(0,n.yg)("strong",{parentName:"p"},"GitHub Deploy Key")," field later while setting up ",(0,n.yg)("a",{parentName:"p",href:"#ui-based-ingestion-recommended-for-ease-of-use"},"ingestion using the UI"),"."))),(0,n.yg)("h3",{id:"setup-your-connection-mapping"},"Setup your connection mapping"),(0,n.yg)("p",null,"The connection mapping enables DataHub to accurately generate lineage to your upstream warehouse.\nIt maps Looker connection names to the platform and database that they're pointing to."),(0,n.yg)("p",null,"There's two ways to configure this:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Provide Looker ",(0,n.yg)("strong",{parentName:"li"},"admin")," API credentials, and we'll automatically map lineage correctly. Details on how to do this are below."),(0,n.yg)("li",{parentName:"ol"},"Manually populate the ",(0,n.yg)("inlineCode",{parentName:"li"},"connection_to_platform_map")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"project_name")," configuration fields. See the starter recipe for an example of what this should look like.")),(0,n.yg)("h4",{id:"optional-create-an-api-key-with-admin-privileges"},"[Optional]"," Create an API key with admin privileges"),(0,n.yg)("p",null,"See the ",(0,n.yg)("a",{parentName:"p",href:"https://docs.looker.com/reference/api-and-integration/api-auth#authentication_with_an_sdk"},"Looker authentication docs")," for the steps to create a client ID and secret.\nYou need to ensure that the API key is attached to a user that has Admin privileges."),(0,n.yg)("p",null,"If you don't want to provide admin API credentials, you can manually populate the ",(0,n.yg)("inlineCode",{parentName:"p"},"connection_to_platform_map")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"project_name")," in the ingestion configuration."),(0,n.yg)("h3",{id:"ingestion-options"},"Ingestion Options"),(0,n.yg)("p",null,"You have 3 options for controlling where your ingestion of LookML is run."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"The DataHub UI (recommended for the easiest out-of-the-box experience)"),(0,n.yg)("li",{parentName:"ul"},"As a GitHub Action (recommended to ensure that you have the freshest metadata pushed on change)"),(0,n.yg)("li",{parentName:"ul"},"Using the CLI (scheduled via an orchestrator like Airflow)")),(0,n.yg)("p",null,"Read on to learn more about these options."),(0,n.yg)("h3",{id:"ui-based-ingestion-recommended-for-ease-of-use"},"UI-based Ingestion ","[Recommended for ease of use]"),(0,n.yg)("p",null,"To ingest LookML metadata through the UI, you must set up a GitHub deploy key using the instructions in the section ",(0,n.yg)("a",{parentName:"p",href:"#recommended-create-a-github-deploy-key"},"above"),". Once that is complete, you can follow the on-screen instructions to set up a LookML source using the Ingestion page.\nThe following video shows you how to ingest LookML metadata through the UI and find the relevant information from your Looker account."),(0,n.yg)("div",{style:{position:"relative",paddingBottom:"56.25%",height:0}},(0,n.yg)("iframe",{src:"https://www.loom.com/embed/c66dd625de7f48b39005e0eb9c345f5a",frameBorder:0,webkitallowfullscreen:"",mozallowfullscreen:"",allowFullScreen:"",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"}})),(0,n.yg)("h3",{id:"github-action-based-ingestion-recommended-for-push-based-integration"},"GitHub Action based Ingestion ","[Recommended for push-based integration]"),(0,n.yg)("p",null,"You can set up ingestion using a GitHub Action to push metadata whenever your main Looker GitHub repo changes.\nThe following sample GitHub action file can be modified to emit LookML metadata whenever there is a change to your repository. This ensures that metadata is already fresh and up to date."),(0,n.yg)("h4",{id:"sample-github-action"},"Sample GitHub Action"),(0,n.yg)("p",null,"Drop this file into your ",(0,n.yg)("inlineCode",{parentName:"p"},".github/workflows")," directory inside your Looker GitHub repo.\nYou need to set up the following secrets in your GitHub repository to get this workflow to work:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"DATAHUB_GMS_HOST: The endpoint where your DataHub host is running"),(0,n.yg)("li",{parentName:"ul"},"DATAHUB_TOKEN: An authentication token provisioned for DataHub ingestion"),(0,n.yg)("li",{parentName:"ul"},"LOOKER_BASE_URL: The base url where your Looker assets are hosted (e.g. ",(0,n.yg)("a",{parentName:"li",href:"https://acryl.cloud.looker.com"},"https://acryl.cloud.looker.com"),")"),(0,n.yg)("li",{parentName:"ul"},"LOOKER_CLIENT_ID: A provisioned Looker Client ID"),(0,n.yg)("li",{parentName:"ul"},"LOOKER_CLIENT_SECRET: A provisioned Looker Client Secret")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yml"},'name: lookml metadata upload\non:\n  # Note that this action only runs on pushes to your main branch. If you want to also\n  # run on pull requests, we\'d recommend running datahub ingest with the `--dry-run` flag.\n  push:\n    branches:\n      - main\n  release:\n    types: [published, edited]\n  workflow_dispatch:\n\njobs:\n  lookml-metadata-upload:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-python@v5\n        with:\n          python-version: "3.10"\n      - name: Run LookML ingestion\n        run: |\n          pip install \'acryl-datahub[lookml,datahub-rest]\'\n          cat << EOF > lookml_ingestion.yml\n          # LookML ingestion configuration.\n          # This is a full ingestion recipe, and supports all config options that the LookML source supports.\n          source:\n            type: "lookml"\n            config:\n              base_folder: ${{ github.workspace }}\n              parse_table_names_from_sql: true\n              github_info:\n                repo: ${{ github.repository }}\n                branch: ${{ github.ref }}\n              # Options\n              #connection_to_platform_map:\n              #  connection-name:\n              #    platform: platform-name (e.g. snowflake)\n              #    default_db: default-db-name (e.g. DEMO_PIPELINE)\n              api:\n                client_id: ${LOOKER_CLIENT_ID}\n                client_secret: ${LOOKER_CLIENT_SECRET}\n                base_url: ${LOOKER_BASE_URL}\n          sink:\n            type: datahub-rest\n            config:\n              server: ${DATAHUB_GMS_URL}\n              token: ${DATAHUB_GMS_TOKEN}\n          EOF\n          datahub ingest -c lookml_ingestion.yml\n        env:\n          DATAHUB_GMS_URL: ${{ secrets.DATAHUB_GMS_URL }}\n          DATAHUB_GMS_TOKEN: ${{ secrets.DATAHUB_GMS_TOKEN }}\n          LOOKER_BASE_URL: ${{ secrets.LOOKER_BASE_URL }}\n          LOOKER_CLIENT_ID: ${{ secrets.LOOKER_CLIENT_ID }}\n          LOOKER_CLIENT_SECRET: ${{ secrets.LOOKER_CLIENT_SECRET }}\n')),(0,n.yg)("p",null,"If you want to ingest lookml using the ",(0,n.yg)("strong",{parentName:"p"},"datahub")," cli directly, read on for instructions and configuration details."),(0,n.yg)("h3",{id:"cli-based-ingestion-1"},"CLI based Ingestion"),(0,n.yg)("h3",{id:"starter-recipe-1"},"Starter Recipe"),(0,n.yg)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,n.yg)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,n.yg)("p",null,"For general pointers on writing and running a recipe, see our ",(0,n.yg)("a",{parentName:"p",href:"/docs/1.1.0/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: "lookml"\n  config:\n    # GitHub Coordinates: Used to check out the repo locally and add github links on the dataset\'s entity page.\n    github_info:\n      repo: org/repo-name\n      deploy_key_file: ${LOOKER_DEPLOY_KEY_FILE} # file containing the private ssh key for a deploy key for the looker git repo\n\n    # Coordinates\n    # base_folder: /path/to/model/files ## Optional if you are not able to provide a GitHub deploy key\n\n    # Options\n    api:\n      # Coordinates for your looker instance\n      base_url: "https://YOUR_INSTANCE.cloud.looker.com"\n\n      # Credentials for your Looker connection (https://docs.looker.com/reference/api-and-integration/api-auth)\n      client_id: ${LOOKER_CLIENT_ID}\n      client_secret: ${LOOKER_CLIENT_SECRET}\n\n    # Alternative to API section above if you want a purely file-based ingestion with no api calls to Looker or if you want to provide platform_instance ids for your connections\n    # project_name: PROJECT_NAME # See (https://docs.looker.com/data-modeling/getting-started/how-project-works) to understand what is your project name\n    # connection_to_platform_map:\n    #   connection_name_1:\n    #     platform: snowflake # bigquery, hive, etc\n    #     default_db: DEFAULT_DATABASE. # the default database configured for this connection\n    #     default_schema: DEFAULT_SCHEMA # the default schema configured for this connection\n    #     platform_instance: snow_warehouse # optional\n    #     platform_env: PROD  # optional\n    #   connection_name_2:\n    #     platform: bigquery # snowflake, hive, etc\n    #     default_db: DEFAULT_DATABASE. # the default database configured for this connection\n    #     default_schema: DEFAULT_SCHEMA # the default schema configured for this connection\n    #     platform_instance: bq_warehouse # optional\n    #     platform_env: DEV  # optional\n# Default sink is datahub-rest and doesn\'t need to be configured\n# See https://docs.datahub.com/docs/metadata-ingestion/sink_docs/datahub for customization options\n\n\n')),(0,n.yg)("h3",{id:"config-details-1"},"Config Details"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(l.A,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"Note that a ",(0,n.yg)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,n.yg)("div",{className:"config-table"},(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"left"},"Field"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"base_folder"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(directory-path)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Required if not providing github configuration and deploy keys. A pointer to a local directory (accessible to the ingestion system) where the root of the LookML repo has been checked out (typically via a git clone). This is typically the root folder where the ",(0,n.yg)("inlineCode",{parentName:"td"},"*.model.lkml")," and ",(0,n.yg)("inlineCode",{parentName:"td"},"*.view.lkml")," files are stored. e.g. If you have checked out your LookML repo under ",(0,n.yg)("inlineCode",{parentName:"td"},"/Users/jdoe/workspace/my-lookml-repo"),", then set ",(0,n.yg)("inlineCode",{parentName:"td"},"base_folder")," to ",(0,n.yg)("inlineCode",{parentName:"td"},"/Users/jdoe/workspace/my-lookml-repo"),".")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"emit_reachable_views_only"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, only views that are reachable from explores defined in the model files are emitted. If set to False, all views imported in model files are emitted. Views that are unreachable i.e. not explicitly defined in the model files are currently not emitted however reported as warning for debugging purposes. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_column_level_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, extracts column-level lineage from Views and Explores ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"liquid_variables"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"object"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A dictionary containing Liquid variables with their corresponding values, utilized in SQL-defined derived views. The Liquid template will be resolved in view.derived_table.sql and view.sql_table_name. Defaults to an empty dictionary. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"looker_environment"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"Enum"))),(0,n.yg)("td",{parentName:"tr",align:"left"},'One of: "prod", "dev" ',(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"prod")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"lookml_constants"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,string)"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"max_file_snippet_length"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When extracting the view definition from a lookml file, the maximum number of characters to extract. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"512000")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"parse_table_names_from_sql"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"See note below. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"platform_instance"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See ",(0,n.yg)("a",{parentName:"td",href:"https://docs.datahub.com/docs/platform-instances/"},"https://docs.datahub.com/docs/platform-instances/")," for more details.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"populate_sql_logic_for_missing_descriptions"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, field descriptions will include the sql logic for computed fields if descriptions are missing ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"process_isolation_for_sql_parsing"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, sql parsing will be executed in a separate process to prevent memory leaks. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"process_refinements"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, looker refinement will be processed to adapt an existing view. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"project_name"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Required if you don't specify the ",(0,n.yg)("inlineCode",{parentName:"td"},"api")," section. The project name within which all the model files live. See (",(0,n.yg)("a",{parentName:"td",href:"https://docs.looker.com/data-modeling/getting-started/how-project-works"},"https://docs.looker.com/data-modeling/getting-started/how-project-works"),") to understand what the Looker project name should be. The simplest way to see your projects is to click on ",(0,n.yg)("inlineCode",{parentName:"td"},"Develop")," followed by ",(0,n.yg)("inlineCode",{parentName:"td"},"Manage LookML Projects")," in the Looker application.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"tag_measures_and_dimensions"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, attaches tags to measures, dimensions and dimension groups to make them more discoverable. When disabled, adds this information to the description of the column. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"env"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"PROD")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"api"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerAPIConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"api."),(0,n.yg)("span",{className:"path-main"},"base_url"),"\xa0",(0,n.yg)("abbr",{title:"Required if api is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Url to your Looker instance: ",(0,n.yg)("inlineCode",{parentName:"td"},"https://company.looker.com:19999")," or ",(0,n.yg)("inlineCode",{parentName:"td"},"https://looker.company.com"),", or similar. Used for making API calls to Looker and constructing clickable dashboard and chart urls.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"api."),(0,n.yg)("span",{className:"path-main"},"client_id"),"\xa0",(0,n.yg)("abbr",{title:"Required if api is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Looker API client id.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"api."),(0,n.yg)("span",{className:"path-main"},"client_secret"),"\xa0",(0,n.yg)("abbr",{title:"Required if api is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Looker API client secret.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"api."),(0,n.yg)("span",{className:"path-main"},"max_retries"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of retries for Looker API calls ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"3")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"api."),(0,n.yg)("span",{className:"path-main"},"transport_options"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"TransportOptionsConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Populates the ",(0,n.yg)("a",{parentName:"td",href:"https://github.com/looker-open-source/sdk-codegen/blob/94d6047a0d52912ac082eb91616c1e7c379ab262/python/looker_sdk/rtl/transport.py#L70"},"TransportOptions")," struct for looker client")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"api.transport_options."),(0,n.yg)("span",{className:"path-main"},"headers"),"\xa0",(0,n.yg)("abbr",{title:"Required if transport_options is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,string)"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"api.transport_options."),(0,n.yg)("span",{className:"path-main"},"timeout"),"\xa0",(0,n.yg)("abbr",{title:"Required if transport_options is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"connection_to_platform_map"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,LookerConnectionDefinition)"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"platform"),"\xa0",(0,n.yg)("abbr",{title:"Required if connection_to_platform_map is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"default_db"),"\xa0",(0,n.yg)("abbr",{title:"Required if connection_to_platform_map is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"default_schema"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"platform_env"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The environment that the platform is located in. Leaving this empty will inherit defaults from the top level Looker configuration")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"platform_instance"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"explore_browse_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing browse paths to explores. Allowed variables are ","['platform', 'env', 'project', 'model', 'name']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","/Explore/","{","model","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"explore_browse_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if explore_browse_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"explore_naming_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing dataset names to explores. Allowed variables are ","['platform', 'env', 'project', 'model', 'name']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","{","model","}",".explore.","{","name","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"explore_naming_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if explore_naming_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"git_info"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"GitInfo"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Reference to your git location. If present, supplies handy links to your lookml on the dataset entity page.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"git_info."),(0,n.yg)("span",{className:"path-main"},"repo"),"\xa0",(0,n.yg)("abbr",{title:"Required if git_info is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Name of your Git repo e.g. ",(0,n.yg)("a",{parentName:"td",href:"https://github.com/datahub-project/datahub"},"https://github.com/datahub-project/datahub")," or ",(0,n.yg)("a",{parentName:"td",href:"https://gitlab.com/gitlab-org/gitlab"},"https://gitlab.com/gitlab-org/gitlab"),". If organization/repo is provided, we assume it is a GitHub repo.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"git_info."),(0,n.yg)("span",{className:"path-main"},"branch"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Branch on which your files live by default. Typically main or master. This can also be a commit hash. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"main")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"git_info."),(0,n.yg)("span",{className:"path-main"},"deploy_key"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(password)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A private key that contains an ssh key that has been configured as a deploy key for this repository. See deploy_key_file if you want to use a file that contains this key.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"git_info."),(0,n.yg)("span",{className:"path-main"},"deploy_key_file"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(file-path)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A private key file that contains an ssh key that has been configured as a deploy key for this repository. Use a file where possible, else see deploy_key for a config field that accepts a raw string. We expect the key not have a passphrase.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"git_info."),(0,n.yg)("span",{className:"path-main"},"repo_ssh_locator"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The url to call ",(0,n.yg)("inlineCode",{parentName:"td"},"git clone")," on. We infer this for github and gitlab repos, but it is required for other hosts.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"git_info."),(0,n.yg)("span",{className:"path-main"},"url_subdir"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Prefix to prepend when generating URLs for files - useful when files are in a subdirectory. Only affects URL generation, not git operations.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"git_info."),(0,n.yg)("span",{className:"path-main"},"url_template"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Template for generating a URL to a file in the repo e.g. '{repo_url}/blob/{branch}/{file_path}'. We can infer this for GitHub and GitLab repos, and it is otherwise required.It supports the following variables: {repo_url}, {branch}, {file_path}")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"model_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns for LookML models to include in the extraction. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"model_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"model_pattern."),(0,n.yg)("span",{className:"path-main"},"allow"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"model_pattern.allow."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"model_pattern."),(0,n.yg)("span",{className:"path-main"},"deny"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"model_pattern.deny."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"project_dependencies"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of map(str,union)(directory-path), map(str,union)"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"project_dependencies.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"repo"),"\xa0",(0,n.yg)("abbr",{title:"Required if project_dependencies is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Name of your Git repo e.g. ",(0,n.yg)("a",{parentName:"td",href:"https://github.com/datahub-project/datahub"},"https://github.com/datahub-project/datahub")," or ",(0,n.yg)("a",{parentName:"td",href:"https://gitlab.com/gitlab-org/gitlab"},"https://gitlab.com/gitlab-org/gitlab"),". If organization/repo is provided, we assume it is a GitHub repo.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"project_dependencies.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"branch"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Branch on which your files live by default. Typically main or master. This can also be a commit hash. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"main")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"project_dependencies.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"deploy_key"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(password)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A private key that contains an ssh key that has been configured as a deploy key for this repository. See deploy_key_file if you want to use a file that contains this key.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"project_dependencies.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"deploy_key_file"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(file-path)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A private key file that contains an ssh key that has been configured as a deploy key for this repository. Use a file where possible, else see deploy_key for a config field that accepts a raw string. We expect the key not have a passphrase.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"project_dependencies.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"repo_ssh_locator"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The url to call ",(0,n.yg)("inlineCode",{parentName:"td"},"git clone")," on. We infer this for github and gitlab repos, but it is required for other hosts.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"project_dependencies.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"url_subdir"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Prefix to prepend when generating URLs for files - useful when files are in a subdirectory. Only affects URL generation, not git operations.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"project_dependencies.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"url_template"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Template for generating a URL to a file in the repo e.g. '{repo_url}/blob/{branch}/{file_path}'. We can infer this for GitHub and GitLab repos, and it is otherwise required.It supports the following variables: {repo_url}, {branch}, {file_path}")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"transport_options"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"TransportOptionsConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Populates the ",(0,n.yg)("a",{parentName:"td",href:"https://github.com/looker-open-source/sdk-codegen/blob/94d6047a0d52912ac082eb91616c1e7c379ab262/python/looker_sdk/rtl/transport.py#L70"},"TransportOptions")," struct for looker client")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"transport_options."),(0,n.yg)("span",{className:"path-main"},"headers"),"\xa0",(0,n.yg)("abbr",{title:"Required if transport_options is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,string)"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"transport_options."),(0,n.yg)("span",{className:"path-main"},"timeout"),"\xa0",(0,n.yg)("abbr",{title:"Required if transport_options is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"view_browse_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerViewNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing browse paths to views. Allowed variables are ","['platform', 'env', 'project', 'model', 'name', 'file_path', 'folder_path']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","/Develop/","{","project","}","/","{","folder","_","path","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_browse_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if view_browse_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"view_naming_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"LookerViewNamingPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Pattern for providing dataset names to views. Allowed variables are ","['platform', 'env', 'project', 'model', 'name', 'file_path', 'folder_path']"," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","pattern","'",": ","'","{","project","}",".view.","{","name","}","'","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_naming_pattern."),(0,n.yg)("span",{className:"path-main"},"pattern"),"\xa0",(0,n.yg)("abbr",{title:"Required if view_naming_pattern is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"view_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns for LookML views to include in the extraction. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_pattern."),(0,n.yg)("span",{className:"path-main"},"allow"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_pattern.allow."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_pattern."),(0,n.yg)("span",{className:"path-main"},"deny"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_pattern.deny."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"stateful_ingestion"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"StatefulStaleMetadataRemovalConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Base specialized config for Stateful Ingestion with stale metadata removal capability.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or ",(0,n.yg)("inlineCode",{parentName:"td"},"datahub_api")," is specified, otherwise False ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"fail_safe_threshold"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"number"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Prevents large amount of soft deletes & the state from committing from accidental changes to the source configuration if the relative change percent in entities compared to the previous state is above the 'fail_safe_threshold'. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"75.0")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"remove_stale_metadata"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))))))),(0,n.yg)(l.A,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,n.yg)("p",null,"The ",(0,n.yg)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "LookMLSourceConfig",\n  "description": "Base configuration class for stateful ingestion for source configs to inherit from.",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "stateful_ingestion": {\n      "$ref": "#/definitions/StatefulStaleMetadataRemovalConfig"\n    },\n    "platform_instance": {\n      "title": "Platform Instance",\n      "description": "The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See https://docs.datahub.com/docs/platform-instances/ for more details.",\n      "type": "string"\n    },\n    "explore_naming_pattern": {\n      "title": "Explore Naming Pattern",\n      "description": "Pattern for providing dataset names to explores. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\']",\n      "default": {\n        "pattern": "{model}.explore.{name}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerNamingPattern"\n        }\n      ]\n    },\n    "explore_browse_pattern": {\n      "title": "Explore Browse Pattern",\n      "description": "Pattern for providing browse paths to explores. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\']",\n      "default": {\n        "pattern": "/Explore/{model}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerNamingPattern"\n        }\n      ]\n    },\n    "view_naming_pattern": {\n      "title": "View Naming Pattern",\n      "description": "Pattern for providing dataset names to views. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\', \'file_path\', \'folder_path\']",\n      "default": {\n        "pattern": "{project}.view.{name}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerViewNamingPattern"\n        }\n      ]\n    },\n    "view_browse_pattern": {\n      "title": "View Browse Pattern",\n      "description": "Pattern for providing browse paths to views. Allowed variables are [\'platform\', \'env\', \'project\', \'model\', \'name\', \'file_path\', \'folder_path\']",\n      "default": {\n        "pattern": "/Develop/{project}/{folder_path}"\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/LookerViewNamingPattern"\n        }\n      ]\n    },\n    "tag_measures_and_dimensions": {\n      "title": "Tag Measures And Dimensions",\n      "description": "When enabled, attaches tags to measures, dimensions and dimension groups to make them more discoverable. When disabled, adds this information to the description of the column.",\n      "default": true,\n      "type": "boolean"\n    },\n    "extract_column_level_lineage": {\n      "title": "Extract Column Level Lineage",\n      "description": "When enabled, extracts column-level lineage from Views and Explores",\n      "default": true,\n      "type": "boolean"\n    },\n    "git_info": {\n      "title": "Git Info",\n      "description": "Reference to your git location. If present, supplies handy links to your lookml on the dataset entity page.",\n      "allOf": [\n        {\n          "$ref": "#/definitions/GitInfo"\n        }\n      ]\n    },\n    "base_folder": {\n      "title": "Base Folder",\n      "description": "Required if not providing github configuration and deploy keys. A pointer to a local directory (accessible to the ingestion system) where the root of the LookML repo has been checked out (typically via a git clone). This is typically the root folder where the `*.model.lkml` and `*.view.lkml` files are stored. e.g. If you have checked out your LookML repo under `/Users/jdoe/workspace/my-lookml-repo`, then set `base_folder` to `/Users/jdoe/workspace/my-lookml-repo`.",\n      "format": "directory-path",\n      "type": "string"\n    },\n    "project_dependencies": {\n      "title": "Project Dependencies",\n      "description": "A map of project_name to local directory (accessible to the ingestion system) or Git credentials. Every local_dependencies or private remote_dependency listed in the main project\'s manifest.lkml file should have a corresponding entry here.If a deploy key is not provided, the ingestion system will use the same deploy key as the main project. ",\n      "default": {},\n      "type": "object",\n      "additionalProperties": {\n        "anyOf": [\n          {\n            "type": "string",\n            "format": "directory-path"\n          },\n          {\n            "$ref": "#/definitions/GitInfo"\n          }\n        ]\n      }\n    },\n    "connection_to_platform_map": {\n      "title": "Connection To Platform Map",\n      "description": "A mapping of [Looker connection names](https://docs.looker.com/reference/model-params/connection-for-model) to DataHub platform, database, and schema values.",\n      "type": "object",\n      "additionalProperties": {\n        "$ref": "#/definitions/LookerConnectionDefinition"\n      }\n    },\n    "model_pattern": {\n      "title": "Model Pattern",\n      "description": "List of regex patterns for LookML models to include in the extraction.",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "view_pattern": {\n      "title": "View Pattern",\n      "description": "List of regex patterns for LookML views to include in the extraction.",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "parse_table_names_from_sql": {\n      "title": "Parse Table Names From Sql",\n      "description": "See note below.",\n      "default": true,\n      "type": "boolean"\n    },\n    "api": {\n      "$ref": "#/definitions/LookerAPIConfig"\n    },\n    "project_name": {\n      "title": "Project Name",\n      "description": "Required if you don\'t specify the `api` section. The project name within which all the model files live. See (https://docs.looker.com/data-modeling/getting-started/how-project-works) to understand what the Looker project name should be. The simplest way to see your projects is to click on `Develop` followed by `Manage LookML Projects` in the Looker application.",\n      "type": "string"\n    },\n    "transport_options": {\n      "title": "Transport Options",\n      "description": "Populates the [TransportOptions](https://github.com/looker-open-source/sdk-codegen/blob/94d6047a0d52912ac082eb91616c1e7c379ab262/python/looker_sdk/rtl/transport.py#L70) struct for looker client",\n      "allOf": [\n        {\n          "$ref": "#/definitions/TransportOptionsConfig"\n        }\n      ]\n    },\n    "max_file_snippet_length": {\n      "title": "Max File Snippet Length",\n      "description": "When extracting the view definition from a lookml file, the maximum number of characters to extract.",\n      "default": 512000,\n      "type": "integer"\n    },\n    "emit_reachable_views_only": {\n      "title": "Emit Reachable Views Only",\n      "description": "When enabled, only views that are reachable from explores defined in the model files are emitted. If set to False, all views imported in model files are emitted. Views that are unreachable i.e. not explicitly defined in the model files are currently not emitted however reported as warning for debugging purposes.",\n      "default": true,\n      "type": "boolean"\n    },\n    "populate_sql_logic_for_missing_descriptions": {\n      "title": "Populate Sql Logic For Missing Descriptions",\n      "description": "When enabled, field descriptions will include the sql logic for computed fields if descriptions are missing",\n      "default": false,\n      "type": "boolean"\n    },\n    "process_isolation_for_sql_parsing": {\n      "title": "Process Isolation For Sql Parsing",\n      "description": "When enabled, sql parsing will be executed in a separate process to prevent memory leaks.",\n      "default": false,\n      "type": "boolean"\n    },\n    "process_refinements": {\n      "title": "Process Refinements",\n      "description": "When enabled, looker refinement will be processed to adapt an existing view.",\n      "default": false,\n      "type": "boolean"\n    },\n    "liquid_variables": {\n      "title": "Liquid Variables",\n      "description": "A dictionary containing Liquid variables with their corresponding values, utilized in SQL-defined derived views. The Liquid template will be resolved in view.derived_table.sql and view.sql_table_name. Defaults to an empty dictionary.",\n      "default": {},\n      "type": "object"\n    },\n    "lookml_constants": {\n      "title": "Lookml Constants",\n      "description": "A dictionary containing LookML constants (`@{constant_name}`) and their values. If a constant is defined in the `manifest.lkml` file, its value will be used. If not found in the manifest, the value from this config will be used instead. Defaults to an empty dictionary.",\n      "default": {},\n      "type": "object",\n      "additionalProperties": {\n        "type": "string"\n      }\n    },\n    "looker_environment": {\n      "title": "Looker Environment",\n      "description": "A looker prod or dev environment. It helps to evaluate looker if comments i.e. -- if prod --. All if comments are evaluated to true for configured looker_environment value",\n      "default": "prod",\n      "enum": [\n        "prod",\n        "dev"\n      ],\n      "type": "string"\n    }\n  },\n  "additionalProperties": false,\n  "definitions": {\n    "DynamicTypedStateProviderConfig": {\n      "title": "DynamicTypedStateProviderConfig",\n      "type": "object",\n      "properties": {\n        "type": {\n          "title": "Type",\n          "description": "The type of the state provider to use. For DataHub use `datahub`",\n          "type": "string"\n        },\n        "config": {\n          "title": "Config",\n          "description": "The configuration required for initializing the state provider. Default: The datahub_api config if set at pipeline level. Otherwise, the default DatahubClientConfig. See the defaults (https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/graph/client.py#L19).",\n          "default": {},\n          "type": "object"\n        }\n      },\n      "required": [\n        "type"\n      ],\n      "additionalProperties": false\n    },\n    "StatefulStaleMetadataRemovalConfig": {\n      "title": "StatefulStaleMetadataRemovalConfig",\n      "description": "Base specialized config for Stateful Ingestion with stale metadata removal capability.",\n      "type": "object",\n      "properties": {\n        "enabled": {\n          "title": "Enabled",\n          "description": "Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or `datahub_api` is specified, otherwise False",\n          "default": false,\n          "type": "boolean"\n        },\n        "remove_stale_metadata": {\n          "title": "Remove Stale Metadata",\n          "description": "Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled.",\n          "default": true,\n          "type": "boolean"\n        },\n        "fail_safe_threshold": {\n          "title": "Fail Safe Threshold",\n          "description": "Prevents large amount of soft deletes & the state from committing from accidental changes to the source configuration if the relative change percent in entities compared to the previous state is above the \'fail_safe_threshold\'.",\n          "default": 75.0,\n          "minimum": 0.0,\n          "maximum": 100.0,\n          "type": "number"\n        }\n      },\n      "additionalProperties": false\n    },\n    "LookerNamingPattern": {\n      "title": "LookerNamingPattern",\n      "type": "object",\n      "properties": {\n        "pattern": {\n          "title": "Pattern",\n          "type": "string"\n        }\n      },\n      "required": [\n        "pattern"\n      ],\n      "additionalProperties": false\n    },\n    "LookerViewNamingPattern": {\n      "title": "LookerViewNamingPattern",\n      "type": "object",\n      "properties": {\n        "pattern": {\n          "title": "Pattern",\n          "type": "string"\n        }\n      },\n      "required": [\n        "pattern"\n      ],\n      "additionalProperties": false\n    },\n    "GitInfo": {\n      "title": "GitInfo",\n      "description": "A reference to a Git repository, including a deploy key that can be used to clone it.",\n      "type": "object",\n      "properties": {\n        "repo": {\n          "title": "Repo",\n          "description": "Name of your Git repo e.g. https://github.com/datahub-project/datahub or https://gitlab.com/gitlab-org/gitlab. If organization/repo is provided, we assume it is a GitHub repo.",\n          "type": "string"\n        },\n        "branch": {\n          "title": "Branch",\n          "description": "Branch on which your files live by default. Typically main or master. This can also be a commit hash.",\n          "default": "main",\n          "type": "string"\n        },\n        "url_subdir": {\n          "title": "Url Subdir",\n          "description": "Prefix to prepend when generating URLs for files - useful when files are in a subdirectory. Only affects URL generation, not git operations.",\n          "type": "string"\n        },\n        "url_template": {\n          "title": "Url Template",\n          "description": "Template for generating a URL to a file in the repo e.g. \'{repo_url}/blob/{branch}/{file_path}\'. We can infer this for GitHub and GitLab repos, and it is otherwise required.It supports the following variables: {repo_url}, {branch}, {file_path}",\n          "type": "string"\n        },\n        "deploy_key_file": {\n          "title": "Deploy Key File",\n          "description": "A private key file that contains an ssh key that has been configured as a deploy key for this repository. Use a file where possible, else see deploy_key for a config field that accepts a raw string. We expect the key not have a passphrase.",\n          "format": "file-path",\n          "type": "string"\n        },\n        "deploy_key": {\n          "title": "Deploy Key",\n          "description": "A private key that contains an ssh key that has been configured as a deploy key for this repository. See deploy_key_file if you want to use a file that contains this key.",\n          "type": "string",\n          "writeOnly": true,\n          "format": "password"\n        },\n        "repo_ssh_locator": {\n          "title": "Repo Ssh Locator",\n          "description": "The url to call `git clone` on. We infer this for github and gitlab repos, but it is required for other hosts.",\n          "type": "string"\n        }\n      },\n      "required": [\n        "repo"\n      ],\n      "additionalProperties": false\n    },\n    "LookerConnectionDefinition": {\n      "title": "LookerConnectionDefinition",\n      "type": "object",\n      "properties": {\n        "platform": {\n          "title": "Platform",\n          "type": "string"\n        },\n        "default_db": {\n          "title": "Default Db",\n          "type": "string"\n        },\n        "default_schema": {\n          "title": "Default Schema",\n          "type": "string"\n        },\n        "platform_instance": {\n          "title": "Platform Instance",\n          "type": "string"\n        },\n        "platform_env": {\n          "title": "Platform Env",\n          "description": "The environment that the platform is located in. Leaving this empty will inherit defaults from the top level Looker configuration",\n          "type": "string"\n        }\n      },\n      "required": [\n        "platform",\n        "default_db"\n      ],\n      "additionalProperties": false\n    },\n    "AllowDenyPattern": {\n      "title": "AllowDenyPattern",\n      "description": "A class to store allow deny regexes",\n      "type": "object",\n      "properties": {\n        "allow": {\n          "title": "Allow",\n          "description": "List of regex patterns to include in ingestion",\n          "default": [\n            ".*"\n          ],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "deny": {\n          "title": "Deny",\n          "description": "List of regex patterns to exclude from ingestion.",\n          "default": [],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "ignoreCase": {\n          "title": "Ignorecase",\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    },\n    "TransportOptionsConfig": {\n      "title": "TransportOptionsConfig",\n      "type": "object",\n      "properties": {\n        "timeout": {\n          "title": "Timeout",\n          "type": "integer"\n        },\n        "headers": {\n          "title": "Headers",\n          "type": "object",\n          "additionalProperties": {\n            "type": "string"\n          }\n        }\n      },\n      "required": [\n        "timeout",\n        "headers"\n      ],\n      "additionalProperties": false\n    },\n    "LookerAPIConfig": {\n      "title": "LookerAPIConfig",\n      "type": "object",\n      "properties": {\n        "client_id": {\n          "title": "Client Id",\n          "description": "Looker API client id.",\n          "type": "string"\n        },\n        "client_secret": {\n          "title": "Client Secret",\n          "description": "Looker API client secret.",\n          "type": "string"\n        },\n        "base_url": {\n          "title": "Base Url",\n          "description": "Url to your Looker instance: `https://company.looker.com:19999` or `https://looker.company.com`, or similar. Used for making API calls to Looker and constructing clickable dashboard and chart urls.",\n          "type": "string"\n        },\n        "transport_options": {\n          "title": "Transport Options",\n          "description": "Populates the [TransportOptions](https://github.com/looker-open-source/sdk-codegen/blob/94d6047a0d52912ac082eb91616c1e7c379ab262/python/looker_sdk/rtl/transport.py#L70) struct for looker client",\n          "allOf": [\n            {\n              "$ref": "#/definitions/TransportOptionsConfig"\n            }\n          ]\n        },\n        "max_retries": {\n          "title": "Max Retries",\n          "description": "Number of retries for Looker API calls",\n          "default": 3,\n          "type": "integer"\n        }\n      },\n      "required": [\n        "client_id",\n        "client_secret",\n        "base_url"\n      ],\n      "additionalProperties": false\n    }\n  }\n}\n')))),(0,n.yg)("h3",{id:"configuration-notes"},"Configuration Notes"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"Handling Liquid Templates"),(0,n.yg)("p",{parentName:"li"},"If a view contains a liquid template, for example:"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre"},"sql_table_name: {{ user_attributes['db'] }}.kafka_streaming.events\n")),(0,n.yg)("p",{parentName:"li"},"where ",(0,n.yg)("inlineCode",{parentName:"p"},"db=ANALYTICS_PROD"),", you need to specify the values of those variables in the liquid_variables configuration as shown below:"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-yml"},"liquid_variables:\n  user_attributes:\n    db: ANALYTICS_PROD\n"))),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"Resolving LookML Constants"),(0,n.yg)("p",{parentName:"li"},"If a view contains a LookML constant, for example:"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre"},"sql_table_name: @{db}.kafka_streaming.events;\n")),(0,n.yg)("p",{parentName:"li"},"Ingestion attempts to resolve it's value by looking at project manifest files"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-yml"},'manifest.lkml\n  constant: db {\n      value: "ANALYTICS_PROD"\n  }\n')),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"If the constant's value is not resolved or incorrectly resolved, you can specify ",(0,n.yg)("inlineCode",{parentName:"p"},"lookml_constants")," configuration in ingestion recipe as shown below. The constant value in recipe takes precedence over constant values resolved from manifest."),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-yml"},"lookml_constants:\n  db: ANALYTICS_PROD\n")))))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Additional Notes")),(0,n.yg)("p",null,"Although liquid variables and LookML constants can be used anywhere in LookML code, their values are currently resolved only for LookML views by DataHub LookML ingestion. This behavior is sufficient since LookML ingestion processes only views and their upstream dependencies."),(0,n.yg)("h3",{id:"multi-project-lookml-advanced"},"Multi-Project LookML (Advanced)"),(0,n.yg)("p",null,"Looker projects support organization as multiple git repos, with ",(0,n.yg)("a",{parentName:"p",href:"https://cloud.google.com/looker/docs/importing-projects#include_files_from_an_imported_project"},"remote includes that can refer to projects that are stored in a different repo"),". If your Looker implementation uses multi-project setup, you can configure the LookML source to pull in metadata from your remote projects as well."),(0,n.yg)("p",null,"If you are using local or remote dependencies, you will see include directives in your lookml files that look like this:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},'include: "//e_flights/views/users.view.lkml"\ninclude: "//e_commerce/public/orders.view.lkml"\n')),(0,n.yg)("p",null,"Also, you will see projects that are being referred to listed in your ",(0,n.yg)("inlineCode",{parentName:"p"},"manifest.lkml")," file. Something like this:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},'project_name: this_project\n\nlocal_dependency: {\n    project: "my-remote-project"\n}\n\nremote_dependency: ga_360_block {\n  url: "https://github.com/llooker/google_ga360"\n  ref: "0bbbef5d8080e88ade2747230b7ed62418437c21"\n}\n')),(0,n.yg)("p",null,"To ingest Looker repositories that are including files defined in other projects, you will need to use the ",(0,n.yg)("inlineCode",{parentName:"p"},"project_dependencies")," directive within the configuration section.\nConsider the following scenario:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Your primary project refers to a remote project called ",(0,n.yg)("inlineCode",{parentName:"li"},"my_remote_project")),(0,n.yg)("li",{parentName:"ul"},"The remote project is homed in the GitHub repo ",(0,n.yg)("inlineCode",{parentName:"li"},"my_org/my_remote_project")),(0,n.yg)("li",{parentName:"ul"},"You have provisioned a GitHub deploy key and stored the credential in the environment variable (or UI secret), ",(0,n.yg)("inlineCode",{parentName:"li"},"${MY_REMOTE_PROJECT_DEPLOY_KEY}"))),(0,n.yg)("p",null,"In this case, you can add this section to your recipe to activate multi-project LookML ingestion."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"source:\n  type: lookml\n  config:\n    ... other config variables\n\n    project_dependencies:\n      my_remote_project:\n         repo: my_org/my_remote_project\n         deploy_key: ${MY_REMOTE_PROJECT_DEPLOY_KEY}\n")),(0,n.yg)("p",null,"Under the hood, DataHub will check out your remote repository using the provisioned deploy key, and use it to navigate includes that you have in the model files from your primary project."),(0,n.yg)("p",null,"If you have the remote project checked out locally, and do not need DataHub to clone the project for you, you can provide DataHub directly with the path to the project like the config snippet below:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"source:\n  type: lookml\n  config:\n    ... other config variables\n\n    project_dependencies:\n      my_remote_project: /path/to/local_git_clone_of_remote_project\n")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"This is not the same as ingesting the remote project as a primary Looker project because DataHub will not be processing the model files that might live in the remote project. If you want to additionally include the views accessible via the models in the remote project, create a second recipe where your remote project is the primary project.")),(0,n.yg)("h3",{id:"debugging-lookml-parsing-errors"},"Debugging LookML Parsing Errors"),(0,n.yg)("p",null,"If you see messages like ",(0,n.yg)("inlineCode",{parentName:"p"},"my_file.view.lkml': \"failed to load view file: Unable to find a matching expression for '<literal>' on line 5\"")," in the failure logs, it indicates a parsing error for the LookML file."),(0,n.yg)("p",null,'The first thing to check is that the Looker IDE can validate the file without issues. You can check this by clicking this "Validate LookML" button in the IDE when in development mode.'),(0,n.yg)("p",null,"If that's not the issue, it might be because DataHub's parser, which is based on the ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/joshtemple/lkml"},"joshtemple/lkml")," library, is slightly more strict than the official Looker parser.\nNote that there's currently only one known discrepancy between the two parsers, and it's related to using ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/joshtemple/lkml/issues/90"},"leading colons in blocks"),"."),(0,n.yg)("p",null,"To check if DataHub can parse your LookML file syntax, you can use the ",(0,n.yg)("inlineCode",{parentName:"p"},"lkml")," CLI tool. If this raises an exception, DataHub will fail to parse the file."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"pip install lkml\n\nlkml path/to/my_file.view.lkml\n")),(0,n.yg)("h3",{id:"code-coordinates-1"},"Code Coordinates"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Class Name: ",(0,n.yg)("inlineCode",{parentName:"li"},"datahub.ingestion.source.looker.lookml_source.LookMLSource")),(0,n.yg)("li",{parentName:"ul"},"Browse on ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/looker/lookml_source.py"},"GitHub"))),(0,n.yg)("h2",null,"Questions"),(0,n.yg)("p",null,"If you've got any questions on configuring ingestion for Looker, feel free to ping us on ",(0,n.yg)("a",{parentName:"p",href:"https://datahub.com/slack"},"our Slack"),"."))}f.isMDXComponent=!0}}]);