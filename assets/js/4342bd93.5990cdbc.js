"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[55076],{15680:(l,t,e)=>{e.d(t,{xA:()=>o,yg:()=>c});var n=e(96540);function g(l,t,e){return t in l?Object.defineProperty(l,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):l[t]=e,l}function r(l,t){var e=Object.keys(l);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(l);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(l,t).enumerable}))),e.push.apply(e,n)}return e}function y(l){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){g(l,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(l,t,Object.getOwnPropertyDescriptor(e,t))}))}return l}function a(l,t){if(null==l)return{};var e,n,g=function(l,t){if(null==l)return{};var e,n,g={},r=Object.keys(l);for(n=0;n<r.length;n++)e=r[n],t.indexOf(e)>=0||(g[e]=l[e]);return g}(l,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(l);for(n=0;n<r.length;n++)e=r[n],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(l,e)&&(g[e]=l[e])}return g}var u=n.createContext({}),s=function(l){var t=n.useContext(u),e=t;return l&&(e="function"==typeof l?l(t):y(y({},t),l)),e},o=function(l){var t=s(l.components);return n.createElement(u.Provider,{value:t},l.children)},i="mdxType",d={inlineCode:"code",wrapper:function(l){var t=l.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(l,t){var e=l.components,g=l.mdxType,r=l.originalType,u=l.parentName,o=a(l,["components","mdxType","originalType","parentName"]),i=s(e),h=g,c=i["".concat(u,".").concat(h)]||i[h]||d[h]||r;return e?n.createElement(c,y(y({ref:t},o),{},{components:e})):n.createElement(c,y({ref:t},o))}));function c(l,t){var e=arguments,g=t&&t.mdxType;if("string"==typeof l||g){var r=e.length,y=new Array(r);y[0]=h;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=l,a[i]="string"==typeof l?l:g,y[1]=a;for(var s=2;s<r;s++)y[s]=e[s];return n.createElement.apply(null,y)}return n.createElement.apply(null,e)}h.displayName="MDXCreateElement"},37306:(l,t,e)=>{e.r(t),e.d(t,{assets:()=>o,contentTitle:()=>u,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>i});e(96540);var n=e(15680);function g(l,t,e){return t in l?Object.defineProperty(l,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):l[t]=e,l}function r(l,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(t)):function(l,t){var e=Object.keys(l);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(l);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(l,t).enumerable}))),e.push.apply(e,n)}return e}(Object(t)).forEach((function(e){Object.defineProperty(l,e,Object.getOwnPropertyDescriptor(t,e))})),l}function y(l,t){if(null==l)return{};var e,n,g=function(l,t){if(null==l)return{};var e,n,g={},r=Object.keys(l);for(n=0;n<r.length;n++)e=r[n],t.indexOf(e)>=0||(g[e]=l[e]);return g}(l,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(l);for(n=0;n<r.length;n++)e=r[n],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(l,e)&&(g[e]=l[e])}return g}const a={id:"objects",title:"Objects",slug:"objects",sidebar_position:3},u=void 0,s={unversionedId:"graphql/objects",id:"version-1.1.0/graphql/objects",title:"Objects",description:"Access",source:"@site/versioned_docs/version-1.1.0/graphql/objects.md",sourceDirName:"graphql",slug:"/graphql/objects",permalink:"/docs/1.1.0/graphql/objects",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/versioned_docs/version-1.1.0/graphql/objects.md",tags:[],version:"1.1.0",sidebarPosition:3,frontMatter:{id:"objects",title:"Objects",slug:"objects",sidebar_position:3},sidebar:"overviewSidebar",previous:{title:"Mutations",permalink:"/docs/1.1.0/graphql/mutations"},next:{title:"Input objects",permalink:"/docs/1.1.0/graphql/inputObjects"}},o={},i=[{value:"Access",id:"access",level:2},{value:"AccessToken",id:"accesstoken",level:2},{value:"AccessTokenMetadata",id:"accesstokenmetadata",level:2},{value:"Actor",id:"actor",level:2},{value:"ActorFilter",id:"actorfilter",level:2},{value:"AggregateResults",id:"aggregateresults",level:2},{value:"AggregationMetadata",id:"aggregationmetadata",level:2},{value:"AllowedValue",id:"allowedvalue",level:2},{value:"AnalyticsChartGroup",id:"analyticschartgroup",level:2},{value:"AnalyticsConfig",id:"analyticsconfig",level:2},{value:"AppConfig",id:"appconfig",level:2},{value:"AspectRenderSpec",id:"aspectrenderspec",level:2},{value:"Assertion",id:"assertion",level:2},{value:"AssertionAction",id:"assertionaction",level:2},{value:"AssertionActions",id:"assertionactions",level:2},{value:"AssertionInfo",id:"assertioninfo",level:2},{value:"AssertionResult",id:"assertionresult",level:2},{value:"AssertionResultError",id:"assertionresulterror",level:2},{value:"AssertionRunEvent",id:"assertionrunevent",level:2},{value:"AssertionRunEventsResult",id:"assertionruneventsresult",level:2},{value:"AssertionSource",id:"assertionsource",level:2},{value:"AssertionStdParameter",id:"assertionstdparameter",level:2},{value:"AssertionStdParameters",id:"assertionstdparameters",level:2},{value:"AuditStamp",id:"auditstamp",level:2},{value:"AuthConfig",id:"authconfig",level:2},{value:"AuthenticatedUser",id:"authenticateduser",level:2},{value:"AutoCompleteMultipleResults",id:"autocompletemultipleresults",level:2},{value:"AutoCompleteResultForEntity",id:"autocompleteresultforentity",level:2},{value:"AutoCompleteResults",id:"autocompleteresults",level:2},{value:"BarChart",id:"barchart",level:2},{value:"BarSegment",id:"barsegment",level:2},{value:"BaseData",id:"basedata",level:2},{value:"BatchGetStepStatesResult",id:"batchgetstepstatesresult",level:2},{value:"BatchSpec",id:"batchspec",level:2},{value:"BatchUpdateStepStatesResult",id:"batchupdatestepstatesresult",level:2},{value:"BooleanBox",id:"booleanbox",level:2},{value:"BrowsePath",id:"browsepath",level:2},{value:"BrowsePathEntry",id:"browsepathentry",level:2},{value:"BrowsePathV2",id:"browsepathv2",level:2},{value:"BrowseResultGroup",id:"browseresultgroup",level:2},{value:"BrowseResultGroupV2",id:"browseresultgroupv2",level:2},{value:"BrowseResultMetadata",id:"browseresultmetadata",level:2},{value:"BrowseResults",id:"browseresults",level:2},{value:"BrowseResultsV2",id:"browseresultsv2",level:2},{value:"BusinessAttribute",id:"businessattribute",level:2},{value:"BusinessAttributeAssociation",id:"businessattributeassociation",level:2},{value:"BusinessAttributeInfo",id:"businessattributeinfo",level:2},{value:"BusinessAttributes",id:"businessattributes",level:2},{value:"CaveatDetails",id:"caveatdetails",level:2},{value:"CaveatsAndRecommendations",id:"caveatsandrecommendations",level:2},{value:"Cell",id:"cell",level:2},{value:"ChangeAuditStamps",id:"changeauditstamps",level:2},{value:"ChangeEvent",id:"changeevent",level:2},{value:"ChangeTransaction",id:"changetransaction",level:2},{value:"Chart",id:"chart",level:2},{value:"ChartCell",id:"chartcell",level:2},{value:"ChartEditableProperties",id:"charteditableproperties",level:2},{value:"ChartInfo",id:"chartinfo",level:2},{value:"ChartProperties",id:"chartproperties",level:2},{value:"ChartQuery",id:"chartquery",level:2},{value:"ChartStatsSummary",id:"chartstatssummary",level:2},{value:"ChromeExtensionConfig",id:"chromeextensionconfig",level:2},{value:"Container",id:"container",level:2},{value:"ContainerEditableProperties",id:"containereditableproperties",level:2},{value:"ContainerProperties",id:"containerproperties",level:2},{value:"ContentParams",id:"contentparams",level:2},{value:"CorpGroup",id:"corpgroup",level:2},{value:"CorpGroupEditableProperties",id:"corpgroupeditableproperties",level:2},{value:"CorpGroupInfo",id:"corpgroupinfo",level:2},{value:"CorpGroupProperties",id:"corpgroupproperties",level:2},{value:"CorpUser",id:"corpuser",level:2},{value:"CorpUserAppearanceSettings",id:"corpuserappearancesettings",level:2},{value:"CorpUserEditableInfo",id:"corpusereditableinfo",level:2},{value:"CorpUserEditableProperties",id:"corpusereditableproperties",level:2},{value:"CorpUserInfo",id:"corpuserinfo",level:2},{value:"CorpUserProperties",id:"corpuserproperties",level:2},{value:"CorpUserSettings",id:"corpusersettings",level:2},{value:"CorpUserViewsSettings",id:"corpuserviewssettings",level:2},{value:"Cost",id:"cost",level:2},{value:"CostValue",id:"costvalue",level:2},{value:"CronSchedule",id:"cronschedule",level:2},{value:"CustomAssertionInfo",id:"customassertioninfo",level:2},{value:"CustomPropertiesEntry",id:"custompropertiesentry",level:2},{value:"Dashboard",id:"dashboard",level:2},{value:"DashboardEditableProperties",id:"dashboardeditableproperties",level:2},{value:"DashboardInfo",id:"dashboardinfo",level:2},{value:"DashboardProperties",id:"dashboardproperties",level:2},{value:"DashboardStatsSummary",id:"dashboardstatssummary",level:2},{value:"DashboardUsageAggregation",id:"dashboardusageaggregation",level:2},{value:"DashboardUsageAggregationMetrics",id:"dashboardusageaggregationmetrics",level:2},{value:"DashboardUsageMetrics",id:"dashboardusagemetrics",level:2},{value:"DashboardUsageQueryResult",id:"dashboardusagequeryresult",level:2},{value:"DashboardUsageQueryResultAggregations",id:"dashboardusagequeryresultaggregations",level:2},{value:"DashboardUserUsageCounts",id:"dashboarduserusagecounts",level:2},{value:"DataContract",id:"datacontract",level:2},{value:"DataContractProperties",id:"datacontractproperties",level:2},{value:"DataContractStatus",id:"datacontractstatus",level:2},{value:"DataFlow",id:"dataflow",level:2},{value:"DataFlowDataJobsRelationships",id:"dataflowdatajobsrelationships",level:2},{value:"DataFlowEditableProperties",id:"datafloweditableproperties",level:2},{value:"DataFlowInfo",id:"dataflowinfo",level:2},{value:"DataFlowProperties",id:"dataflowproperties",level:2},{value:"DataHubConnection",id:"datahubconnection",level:2},{value:"DataHubConnectionDetails",id:"datahubconnectiondetails",level:2},{value:"DataHubJsonConnection",id:"datahubjsonconnection",level:2},{value:"DataHubPersona",id:"datahubpersona",level:2},{value:"DataHubPolicy",id:"datahubpolicy",level:2},{value:"DataHubRole",id:"datahubrole",level:2},{value:"DataHubView",id:"datahubview",level:2},{value:"DataHubViewDefinition",id:"datahubviewdefinition",level:2},{value:"DataHubViewFilter",id:"datahubviewfilter",level:2},{value:"DataJob",id:"datajob",level:2},{value:"DataJobEditableProperties",id:"datajobeditableproperties",level:2},{value:"DataJobInfo",id:"datajobinfo",level:2},{value:"DataJobInputOutput",id:"datajobinputoutput",level:2},{value:"DataJobProperties",id:"datajobproperties",level:2},{value:"DataPlatform",id:"dataplatform",level:2},{value:"DataPlatformInfo",id:"dataplatforminfo",level:2},{value:"DataPlatformInstance",id:"dataplatforminstance",level:2},{value:"DataPlatformInstanceProperties",id:"dataplatforminstanceproperties",level:2},{value:"DataPlatformProperties",id:"dataplatformproperties",level:2},{value:"DataProcessInstance",id:"dataprocessinstance",level:2},{value:"DataProcessInstanceProperties",id:"dataprocessinstanceproperties",level:2},{value:"DataProcessInstanceResult",id:"dataprocessinstanceresult",level:2},{value:"DataProcessInstanceRunResult",id:"dataprocessinstancerunresult",level:2},{value:"DataProcessRunEvent",id:"dataprocessrunevent",level:2},{value:"DataProduct",id:"dataproduct",level:2},{value:"DataProductProperties",id:"dataproductproperties",level:2},{value:"DataQualityContract",id:"dataqualitycontract",level:2},{value:"Dataset",id:"dataset",level:2},{value:"DatasetAssertionInfo",id:"datasetassertioninfo",level:2},{value:"DatasetDeprecation",id:"datasetdeprecation",level:2},{value:"DatasetEditableProperties",id:"dataseteditableproperties",level:2},{value:"DatasetFieldProfile",id:"datasetfieldprofile",level:2},{value:"DatasetFilter",id:"datasetfilter",level:2},{value:"DatasetProfile",id:"datasetprofile",level:2},{value:"DatasetProperties",id:"datasetproperties",level:2},{value:"DatasetStatsSummary",id:"datasetstatssummary",level:2},{value:"DataTransform",id:"datatransform",level:2},{value:"DataTransformLogic",id:"datatransformlogic",level:2},{value:"DataTypeEntity",id:"datatypeentity",level:2},{value:"DataTypeInfo",id:"datatypeinfo",level:2},{value:"DateRange",id:"daterange",level:2},{value:"DebugAccessResult",id:"debugaccessresult",level:2},{value:"Deprecation",id:"deprecation",level:2},{value:"DisplayProperties",id:"displayproperties",level:2},{value:"DocPropagationSettings",id:"docpropagationsettings",level:2},{value:"Documentation",id:"documentation",level:2},{value:"DocumentationAssociation",id:"documentationassociation",level:2},{value:"Domain",id:"domain",level:2},{value:"DomainAssociation",id:"domainassociation",level:2},{value:"DomainProperties",id:"domainproperties",level:2},{value:"DownstreamEntityRelationships",id:"downstreamentityrelationships",level:2},{value:"EditableSchemaFieldInfo",id:"editableschemafieldinfo",level:2},{value:"EditableSchemaMetadata",id:"editableschemametadata",level:2},{value:"EditableTagProperties",id:"editabletagproperties",level:2},{value:"Embed",id:"embed",level:2},{value:"EntityAssertionsResult",id:"entityassertionsresult",level:2},{value:"EntityCountResult",id:"entitycountresult",level:2},{value:"EntityCountResults",id:"entitycountresults",level:2},{value:"EntityIncidentsResult",id:"entityincidentsresult",level:2},{value:"EntityLineageResult",id:"entitylineageresult",level:2},{value:"EntityPath",id:"entitypath",level:2},{value:"EntityPrivileges",id:"entityprivileges",level:2},{value:"EntityProfileConfig",id:"entityprofileconfig",level:2},{value:"EntityProfileParams",id:"entityprofileparams",level:2},{value:"EntityProfilesConfig",id:"entityprofilesconfig",level:2},{value:"EntityRelationship",id:"entityrelationship",level:2},{value:"EntityRelationshipLegacy",id:"entityrelationshiplegacy",level:2},{value:"EntityRelationshipsResult",id:"entityrelationshipsresult",level:2},{value:"EntityTypeEntity",id:"entitytypeentity",level:2},{value:"EntityTypeInfo",id:"entitytypeinfo",level:2},{value:"ERModelRelationship",id:"ermodelrelationship",level:2},{value:"ERModelRelationshipEditableProperties",id:"ermodelrelationshipeditableproperties",level:2},{value:"ERModelRelationshipProperties",id:"ermodelrelationshipproperties",level:2},{value:"EthicalConsiderations",id:"ethicalconsiderations",level:2},{value:"ExecutionRequest",id:"executionrequest",level:2},{value:"ExecutionRequestInput",id:"executionrequestinput",level:2},{value:"ExecutionRequestResult",id:"executionrequestresult",level:2},{value:"ExecutionRequestSource",id:"executionrequestsource",level:2},{value:"ExtraProperty",id:"extraproperty",level:2},{value:"FacetFilter",id:"facetfilter",level:2},{value:"FacetMetadata",id:"facetmetadata",level:2},{value:"FeatureFlagsConfig",id:"featureflagsconfig",level:2},{value:"FieldAssertionInfo",id:"fieldassertioninfo",level:2},{value:"FieldFormPromptAssociation",id:"fieldformpromptassociation",level:2},{value:"FieldMetricAssertion",id:"fieldmetricassertion",level:2},{value:"FieldTransform",id:"fieldtransform",level:2},{value:"FieldUsageCounts",id:"fieldusagecounts",level:2},{value:"FieldValuesAssertion",id:"fieldvaluesassertion",level:2},{value:"FieldValuesFailThreshold",id:"fieldvaluesfailthreshold",level:2},{value:"FineGrainedLineage",id:"finegrainedlineage",level:2},{value:"FixedIntervalSchedule",id:"fixedintervalschedule",level:2},{value:"FloatBox",id:"floatbox",level:2},{value:"ForeignKeyConstraint",id:"foreignkeyconstraint",level:2},{value:"Form",id:"form",level:2},{value:"FormActorAssignment",id:"formactorassignment",level:2},{value:"FormAssociation",id:"formassociation",level:2},{value:"FormInfo",id:"forminfo",level:2},{value:"FormPrompt",id:"formprompt",level:2},{value:"FormPromptAssociation",id:"formpromptassociation",level:2},{value:"FormPromptFieldAssociations",id:"formpromptfieldassociations",level:2},{value:"Forms",id:"forms",level:2},{value:"FormVerificationAssociation",id:"formverificationassociation",level:2},{value:"FreshnessAssertionInfo",id:"freshnessassertioninfo",level:2},{value:"FreshnessAssertionSchedule",id:"freshnessassertionschedule",level:2},{value:"FreshnessContract",id:"freshnesscontract",level:2},{value:"FreshnessCronSchedule",id:"freshnesscronschedule",level:2},{value:"FreshnessStats",id:"freshnessstats",level:2},{value:"GetQuickFiltersResult",id:"getquickfiltersresult",level:2},{value:"GetRootGlossaryNodesResult",id:"getrootglossarynodesresult",level:2},{value:"GetRootGlossaryTermsResult",id:"getrootglossarytermsresult",level:2},{value:"GetSchemaBlameResult",id:"getschemablameresult",level:2},{value:"GetSchemaVersionListResult",id:"getschemaversionlistresult",level:2},{value:"GetTimelineResult",id:"gettimelineresult",level:2},{value:"GlobalTags",id:"globaltags",level:2},{value:"GlobalViewsSettings",id:"globalviewssettings",level:2},{value:"GlossaryNode",id:"glossarynode",level:2},{value:"GlossaryNodeChildrenCount",id:"glossarynodechildrencount",level:2},{value:"GlossaryNodeProperties",id:"glossarynodeproperties",level:2},{value:"GlossaryTerm",id:"glossaryterm",level:2},{value:"GlossaryTermAssociation",id:"glossarytermassociation",level:2},{value:"GlossaryTermInfo",id:"glossaryterminfo",level:2},{value:"GlossaryTermProperties",id:"glossarytermproperties",level:2},{value:"GlossaryTerms",id:"glossaryterms",level:2},{value:"Health",id:"health",level:2},{value:"Highlight",id:"highlight",level:2},{value:"HomePageConfig",id:"homepageconfig",level:2},{value:"HyperParameterMap",id:"hyperparametermap",level:2},{value:"IconProperties",id:"iconproperties",level:2},{value:"IdentityManagementConfig",id:"identitymanagementconfig",level:2},{value:"Incident",id:"incident",level:2},{value:"IncidentSource",id:"incidentsource",level:2},{value:"IncidentStatus",id:"incidentstatus",level:2},{value:"IncrementingSegmentFieldTransformer",id:"incrementingsegmentfieldtransformer",level:2},{value:"IncrementingSegmentRowCountChange",id:"incrementingsegmentrowcountchange",level:2},{value:"IncrementingSegmentRowCountTotal",id:"incrementingsegmentrowcounttotal",level:2},{value:"IncrementingSegmentSpec",id:"incrementingsegmentspec",level:2},{value:"IngestionConfig",id:"ingestionconfig",level:2},{value:"IngestionRun",id:"ingestionrun",level:2},{value:"IngestionSchedule",id:"ingestionschedule",level:2},{value:"IngestionSource",id:"ingestionsource",level:2},{value:"IngestionSourceExecutionRequests",id:"ingestionsourceexecutionrequests",level:2},{value:"InputField",id:"inputfield",level:2},{value:"InputFields",id:"inputfields",level:2},{value:"InstitutionalMemory",id:"institutionalmemory",level:2},{value:"InstitutionalMemoryMetadata",id:"institutionalmemorymetadata",level:2},{value:"IntBox",id:"intbox",level:2},{value:"IntendedUse",id:"intendeduse",level:2},{value:"InviteToken",id:"invitetoken",level:2},{value:"KeyValueSchema",id:"keyvalueschema",level:2},{value:"LineageConfig",id:"lineageconfig",level:2},{value:"LineageRelationship",id:"lineagerelationship",level:2},{value:"LinkParams",id:"linkparams",level:2},{value:"ListAccessTokenResult",id:"listaccesstokenresult",level:2},{value:"ListBusinessAttributesResult",id:"listbusinessattributesresult",level:2},{value:"ListDomainsResult",id:"listdomainsresult",level:2},{value:"ListGroupsResult",id:"listgroupsresult",level:2},{value:"ListIngestionSourcesResult",id:"listingestionsourcesresult",level:2},{value:"ListOwnershipTypesResult",id:"listownershiptypesresult",level:2},{value:"ListPoliciesResult",id:"listpoliciesresult",level:2},{value:"ListPostsResult",id:"listpostsresult",level:2},{value:"ListQueriesResult",id:"listqueriesresult",level:2},{value:"ListRecommendationsResult",id:"listrecommendationsresult",level:2},{value:"ListRolesResult",id:"listrolesresult",level:2},{value:"ListSecretsResult",id:"listsecretsresult",level:2},{value:"ListTestsResult",id:"listtestsresult",level:2},{value:"ListUsersResult",id:"listusersresult",level:2},{value:"ListViewsResult",id:"listviewsresult",level:2},{value:"ManagedIngestionConfig",id:"managedingestionconfig",level:2},{value:"MatchedField",id:"matchedfield",level:2},{value:"Media",id:"media",level:2},{value:"MetadataAttribution",id:"metadataattribution",level:2},{value:"Metrics",id:"metrics",level:2},{value:"MLFeature",id:"mlfeature",level:2},{value:"MLFeatureEditableProperties",id:"mlfeatureeditableproperties",level:2},{value:"MLFeatureProperties",id:"mlfeatureproperties",level:2},{value:"MLFeatureTable",id:"mlfeaturetable",level:2},{value:"MLFeatureTableEditableProperties",id:"mlfeaturetableeditableproperties",level:2},{value:"MLFeatureTableProperties",id:"mlfeaturetableproperties",level:2},{value:"MLHyperParam",id:"mlhyperparam",level:2},{value:"MLMetric",id:"mlmetric",level:2},{value:"MLModel",id:"mlmodel",level:2},{value:"MLModelEditableProperties",id:"mlmodeleditableproperties",level:2},{value:"MLModelFactorPrompts",id:"mlmodelfactorprompts",level:2},{value:"MLModelFactors",id:"mlmodelfactors",level:2},{value:"MLModelGroup",id:"mlmodelgroup",level:2},{value:"MLModelGroupEditableProperties",id:"mlmodelgroupeditableproperties",level:2},{value:"MLModelGroupProperties",id:"mlmodelgroupproperties",level:2},{value:"MLModelLineageInfo",id:"mlmodellineageinfo",level:2},{value:"MLModelProperties",id:"mlmodelproperties",level:2},{value:"MLPrimaryKey",id:"mlprimarykey",level:2},{value:"MLPrimaryKeyEditableProperties",id:"mlprimarykeyeditableproperties",level:2},{value:"MLPrimaryKeyProperties",id:"mlprimarykeyproperties",level:2},{value:"MLTrainingRunProperties",id:"mltrainingrunproperties",level:2},{value:"NamedBar",id:"namedbar",level:2},{value:"NamedLine",id:"namedline",level:2},{value:"Notebook",id:"notebook",level:2},{value:"NotebookCell",id:"notebookcell",level:2},{value:"NotebookContent",id:"notebookcontent",level:2},{value:"NotebookEditableProperties",id:"notebookeditableproperties",level:2},{value:"NotebookInfo",id:"notebookinfo",level:2},{value:"NumberValue",id:"numbervalue",level:2},{value:"NumericDataPoint",id:"numericdatapoint",level:2},{value:"Operation",id:"operation",level:2},{value:"Origin",id:"origin",level:2},{value:"Owner",id:"owner",level:2},{value:"Ownership",id:"ownership",level:2},{value:"OwnershipSource",id:"ownershipsource",level:2},{value:"OwnershipTypeEntity",id:"ownershiptypeentity",level:2},{value:"OwnershipTypeInfo",id:"ownershiptypeinfo",level:2},{value:"ParentContainersResult",id:"parentcontainersresult",level:2},{value:"ParentDomainsResult",id:"parentdomainsresult",level:2},{value:"ParentNodesResult",id:"parentnodesresult",level:2},{value:"PartitionSpec",id:"partitionspec",level:2},{value:"PlatformPrivileges",id:"platformprivileges",level:2},{value:"PoliciesConfig",id:"policiesconfig",level:2},{value:"Policy",id:"policy",level:2},{value:"PolicyEvaluationDetail",id:"policyevaluationdetail",level:2},{value:"PolicyMatchCriterion",id:"policymatchcriterion",level:2},{value:"PolicyMatchCriterionValue",id:"policymatchcriterionvalue",level:2},{value:"PolicyMatchFilter",id:"policymatchfilter",level:2},{value:"Post",id:"post",level:2},{value:"PostContent",id:"postcontent",level:2},{value:"Privilege",id:"privilege",level:2},{value:"Privileges",id:"privileges",level:2},{value:"Quantile",id:"quantile",level:2},{value:"QuantitativeAnalyses",id:"quantitativeanalyses",level:2},{value:"QueriesTabConfig",id:"queriestabconfig",level:2},{value:"QueryCell",id:"querycell",level:2},{value:"QueryEntity",id:"queryentity",level:2},{value:"QueryProperties",id:"queryproperties",level:2},{value:"QueryStatement",id:"querystatement",level:2},{value:"QuerySubject",id:"querysubject",level:2},{value:"QuickFilter",id:"quickfilter",level:2},{value:"RawAspect",id:"rawaspect",level:2},{value:"RecommendationContent",id:"recommendationcontent",level:2},{value:"RecommendationModule",id:"recommendationmodule",level:2},{value:"RecommendationParams",id:"recommendationparams",level:2},{value:"RelationshipFieldMapping",id:"relationshipfieldmapping",level:2},{value:"ResetToken",id:"resettoken",level:2},{value:"ResolvedAuditStamp",id:"resolvedauditstamp",level:2},{value:"ResourceFilter",id:"resourcefilter",level:2},{value:"ResourcePrivileges",id:"resourceprivileges",level:2},{value:"Restricted",id:"restricted",level:2},{value:"Role",id:"role",level:2},{value:"RoleAssociation",id:"roleassociation",level:2},{value:"RoleProperties",id:"roleproperties",level:2},{value:"RoleUser",id:"roleuser",level:2},{value:"Row",id:"row",level:2},{value:"RowCountChange",id:"rowcountchange",level:2},{value:"RowCountTotal",id:"rowcounttotal",level:2},{value:"Schema",id:"schema",level:2},{value:"SchemaAssertionField",id:"schemaassertionfield",level:2},{value:"SchemaAssertionInfo",id:"schemaassertioninfo",level:2},{value:"SchemaContract",id:"schemacontract",level:2},{value:"SchemaField",id:"schemafield",level:2},{value:"SchemaFieldBlame",id:"schemafieldblame",level:2},{value:"SchemaFieldChange",id:"schemafieldchange",level:2},{value:"SchemaFieldEntity",id:"schemafieldentity",level:2},{value:"SchemaFieldRef",id:"schemafieldref",level:2},{value:"SchemaFieldSpec",id:"schemafieldspec",level:2},{value:"SchemaMetadata",id:"schemametadata",level:2},{value:"ScrollAcrossLineageResults",id:"scrollacrosslineageresults",level:2},{value:"ScrollResults",id:"scrollresults",level:2},{value:"SearchAcrossLineageResult",id:"searchacrosslineageresult",level:2},{value:"SearchAcrossLineageResults",id:"searchacrosslineageresults",level:2},{value:"SearchBarConfig",id:"searchbarconfig",level:2},{value:"SearchInsight",id:"searchinsight",level:2},{value:"SearchParams",id:"searchparams",level:2},{value:"SearchResult",id:"searchresult",level:2},{value:"SearchResults",id:"searchresults",level:2},{value:"SearchResultsVisualConfig",id:"searchresultsvisualconfig",level:2},{value:"SearchSuggestion",id:"searchsuggestion",level:2},{value:"Secret",id:"secret",level:2},{value:"SecretValue",id:"secretvalue",level:2},{value:"SemanticVersionStruct",id:"semanticversionstruct",level:2},{value:"SiblingProperties",id:"siblingproperties",level:2},{value:"SourceCode",id:"sourcecode",level:2},{value:"SourceCodeUrl",id:"sourcecodeurl",level:2},{value:"SqlAssertionInfo",id:"sqlassertioninfo",level:2},{value:"Status",id:"status",level:2},{value:"StepStateResult",id:"stepstateresult",level:2},{value:"StringBox",id:"stringbox",level:2},{value:"StringMapEntry",id:"stringmapentry",level:2},{value:"StringValue",id:"stringvalue",level:2},{value:"StructuredProperties",id:"structuredproperties",level:2},{value:"StructuredPropertiesEntry",id:"structuredpropertiesentry",level:2},{value:"StructuredPropertyDefinition",id:"structuredpropertydefinition",level:2},{value:"StructuredPropertyEntity",id:"structuredpropertyentity",level:2},{value:"StructuredPropertyParams",id:"structuredpropertyparams",level:2},{value:"StructuredPropertySettings",id:"structuredpropertysettings",level:2},{value:"StructuredReport",id:"structuredreport",level:2},{value:"SubTypes",id:"subtypes",level:2},{value:"SystemFreshness",id:"systemfreshness",level:2},{value:"TableChart",id:"tablechart",level:2},{value:"TableSchema",id:"tableschema",level:2},{value:"Tag",id:"tag",level:2},{value:"TagAssociation",id:"tagassociation",level:2},{value:"TagProperties",id:"tagproperties",level:2},{value:"TelemetryConfig",id:"telemetryconfig",level:2},{value:"Test",id:"test",level:2},{value:"TestDefinition",id:"testdefinition",level:2},{value:"TestResult",id:"testresult",level:2},{value:"TestResults",id:"testresults",level:2},{value:"TestsConfig",id:"testsconfig",level:2},{value:"TextCell",id:"textcell",level:2},{value:"ThemeConfig",id:"themeconfig",level:2},{value:"TimelineParameterEntry",id:"timelineparameterentry",level:2},{value:"TimeSeriesChart",id:"timeserieschart",level:2},{value:"TimeWindow",id:"timewindow",level:2},{value:"TypeQualifier",id:"typequalifier",level:2},{value:"UpdateStepStateResult",id:"updatestepstateresult",level:2},{value:"UpstreamEntityRelationships",id:"upstreamentityrelationships",level:2},{value:"UsageAggregation",id:"usageaggregation",level:2},{value:"UsageAggregationMetrics",id:"usageaggregationmetrics",level:2},{value:"UsageQueryResult",id:"usagequeryresult",level:2},{value:"UsageQueryResultAggregations",id:"usagequeryresultaggregations",level:2},{value:"UserUsageCounts",id:"userusagecounts",level:2},{value:"ValueFrequency",id:"valuefrequency",level:2},{value:"VersionedDataset",id:"versioneddataset",level:2},{value:"VersionProperties",id:"versionproperties",level:2},{value:"VersionSet",id:"versionset",level:2},{value:"VersionTag",id:"versiontag",level:2},{value:"ViewProperties",id:"viewproperties",level:2},{value:"ViewsConfig",id:"viewsconfig",level:2},{value:"VisualConfig",id:"visualconfig",level:2},{value:"VolumeAssertionInfo",id:"volumeassertioninfo",level:2}],d={toc:i},h="wrapper";function c(l){var{components:t}=l,e=y(l,["components"]);return(0,n.yg)(h,r(function(l){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{},n=Object.keys(e);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(e).filter((function(l){return Object.getOwnPropertyDescriptor(e,l).enumerable})))),n.forEach((function(t){g(l,t,e[t])}))}return l}({},d,e),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"access"},"Access"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"roles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#roleassociation"},(0,n.yg)("code",null,"[RoleAssociation!]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"accesstoken"},"AccessToken"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"accessToken",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The access token itself"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metadata",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#accesstokenmetadata"},(0,n.yg)("code",null,"AccessTokenMetadata"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Metadata about the generated token"))))),(0,n.yg)("h2",{id:"accesstokenmetadata"},"AccessTokenMetadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the access token"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique identifier of the token."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the token, if it exists."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of the token if defined."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actorUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actor associated with the Access Token."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownerUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actor who created the Access Token."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time when token was generated at."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"expiresAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Time when token will be expired."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"actor"},"Actor"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"users",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#roleuser"},(0,n.yg)("code",null,"[RoleUser!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of users for which the role is provisioned"))))),(0,n.yg)("h2",{id:"actorfilter"},"ActorFilter"),(0,n.yg)("p",null,"The actors that a DataHub Access Policy applies to"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"users",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A disjunctive set of users to apply the policy to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A disjunctive set of groups to apply the policy to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"roles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A disjunctive set of roles to apply the policy to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resourceOwners",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the filter should return TRUE for owners of a particular resource Only applies to policies of type METADATA, which have a resource associated with them"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resourceOwnersTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Set of OwnershipTypes to apply the policy to (if resourceOwners field is set to True)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resolvedOwnershipTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownershiptypeentity"},(0,n.yg)("code",null,"[OwnershipTypeEntity!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Set of OwnershipTypes to apply the policy to (if resourceOwners field is set to True), resolved."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"allUsers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the filter should apply to all users"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"allGroups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the filter should apply to all groups"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resolvedUsers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The list of users on the Policy, resolved."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resolvedGroups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpgroup"},(0,n.yg)("code",null,"[CorpGroup!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The list of groups on the Policy, resolved."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resolvedRoles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubrole"},(0,n.yg)("code",null,"[DataHubRole!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The list of roles on the Policy, resolved."))))),(0,n.yg)("h2",{id:"aggregateresults"},"AggregateResults"),(0,n.yg)("p",null,"Results returned from aggregateAcrossEntities"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"facets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#facetmetadata"},(0,n.yg)("code",null,"[FacetMetadata!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Candidate facet aggregations used for search filtering"))))),(0,n.yg)("h2",{id:"aggregationmetadata"},"AggregationMetadata"),(0,n.yg)("p",null,"Information about the aggregation that can be used for filtering, included the field value and number of results"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A particular value of a facet field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of search results containing the value"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity corresponding to the facet field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional display name to show in the UI for this filter value"))))),(0,n.yg)("h2",{id:"allowedvalue"},"AllowedValue"),(0,n.yg)("p",null,"An entry for an allowed value for a structured property"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#propertyvalue"},(0,n.yg)("code",null,"PropertyValue!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The allowed value"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of this allowed value"))))),(0,n.yg)("h2",{id:"analyticschartgroup"},"AnalyticsChartGroup"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"groupId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"charts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#analyticschart"},(0,n.yg)("code",null,"[AnalyticsChart!]!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"analyticsconfig"},"AnalyticsConfig"),(0,n.yg)("p",null,"Configurations related to the Analytics Feature"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the Analytics feature is enabled and should be displayed"))))),(0,n.yg)("h2",{id:"appconfig"},"AppConfig"),(0,n.yg)("p",null,"Config loaded at application boot time\nThis configuration dictates the behavior of the UI, such as which features are enabled or disabled"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"appVersion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"App version"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"authConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#authconfig"},(0,n.yg)("code",null,"AuthConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Auth-related configurations"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"analyticsConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#analyticsconfig"},(0,n.yg)("code",null,"AnalyticsConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to the Analytics Feature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"policiesConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#policiesconfig"},(0,n.yg)("code",null,"PoliciesConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to the Policies Feature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"identityManagementConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#identitymanagementconfig"},(0,n.yg)("code",null,"IdentityManagementConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to the User & Group management"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"managedIngestionConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#managedingestionconfig"},(0,n.yg)("code",null,"ManagedIngestionConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to UI-based ingestion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineageConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#lineageconfig"},(0,n.yg)("code",null,"LineageConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to Lineage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"visualConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#visualconfig"},(0,n.yg)("code",null,"VisualConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to visual appearance, allows styling the UI without rebuilding the bundle"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"telemetryConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#telemetryconfig"},(0,n.yg)("code",null,"TelemetryConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to tracking users in the app"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"testsConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#testsconfig"},(0,n.yg)("code",null,"TestsConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to DataHub tests"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewsConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#viewsconfig"},(0,n.yg)("code",null,"ViewsConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to DataHub Views"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchBarConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchbarconfig"},(0,n.yg)("code",null,"SearchBarConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configurations related to the Search bar"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"featureFlags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#featureflagsconfig"},(0,n.yg)("code",null,"FeatureFlagsConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Feature flags telling the UI whether a feature is enabled or not"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"chromeExtensionConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#chromeextensionconfig"},(0,n.yg)("code",null,"ChromeExtensionConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configuration related to the DataHub Chrome Extension"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"homePageConfig",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#homepageconfig"},(0,n.yg)("code",null,"HomePageConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configuration related to the home page"))))),(0,n.yg)("h2",{id:"aspectrenderspec"},"AspectRenderSpec"),(0,n.yg)("p",null,"Details for the frontend on how the raw aspect should be rendered"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Format the aspect should be displayed in for the UI. Powered by the renderSpec annotation on the aspect model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name to refer to the aspect type by for the UI. Powered by the renderSpec annotation on the aspect model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"key",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Field in the aspect payload to index into for rendering."))))),(0,n.yg)("h2",{id:"assertion"},"Assertion"),(0,n.yg)("p",null,"An assertion represents a programmatic validation, check, or test performed periodically against another Entity."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"actions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionactions"},(0,n.yg)("code",null,"AssertionActions"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actions associated with the Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the assertion is evaluated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertioninfo"},(0,n.yg)("code",null,"AssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Details about assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"runEvents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionruneventsresult"},(0,n.yg)("code",null,"AssertionRunEventsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Lifecycle events detailing individual runs of this assertion. If startTimeMillis & endTimeMillis are not provided, the most recent events will be returned."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionrunstatus"},(0,n.yg)("code",null,"AssertionRunStatus"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"startTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"endTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#filterinput"},(0,n.yg)("code",null,"FilterInput"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"limit",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard tags for the Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra aspects that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"assertionaction"},"AssertionAction"),(0,n.yg)("p",null,"An action associated with an assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionactiontype"},(0,n.yg)("code",null,"AssertionActionType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the actions"))))),(0,n.yg)("h2",{id:"assertionactions"},"AssertionActions"),(0,n.yg)("p",null,"Some actions associated with an assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"onSuccess",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionaction"},(0,n.yg)("code",null,"[AssertionAction!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Actions to be executed on successful assertion run."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"onFailure",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionaction"},(0,n.yg)("code",null,"[AssertionAction!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Actions to be executed on failed assertion run."))))),(0,n.yg)("h2",{id:"assertioninfo"},"AssertionInfo"),(0,n.yg)("p",null,"Type of assertion. Assertion types can evolve to span Datasets, Flows (Pipelines), Models, Features etc."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"freshnessAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#freshnessassertioninfo"},(0,n.yg)("code",null,"FreshnessAssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about an Freshness Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"volumeAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#volumeassertioninfo"},(0,n.yg)("code",null,"VolumeAssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about an Volume Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sqlAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#sqlassertioninfo"},(0,n.yg)("code",null,"SqlAssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about a SQL Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldassertioninfo"},(0,n.yg)("code",null,"FieldAssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about a Field Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemaassertioninfo"},(0,n.yg)("code",null,"SchemaAssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema assertion, e.g. defining the expected structure for an asset."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#customassertioninfo"},(0,n.yg)("code",null,"CustomAssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about Custom assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionsource"},(0,n.yg)("code",null,"AssertionSource"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source or origin of the Assertion definition."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastUpdated",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time that the status last changed and the actor who changed it"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertiontype"},(0,n.yg)("code",null,"AssertionType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Top-level type of the assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"datasetAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetassertioninfo"},(0,n.yg)("code",null,"DatasetAssertionInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Dataset-specific assertion information"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional human-readable description of the assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"URL where assertion details are available"))))),(0,n.yg)("h2",{id:"assertionresult"},"AssertionResult"),(0,n.yg)("p",null,"The result of evaluating an assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionresulttype"},(0,n.yg)("code",null,"AssertionResultType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The final result, e.g. either SUCCESS or FAILURE."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rowCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of rows for evaluated batch"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"missingCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of rows with missing value for evaluated batch"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"unexpectedCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of rows with unexpected value for evaluated batch"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actualAggValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#float"},(0,n.yg)("code",null,"Float"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Observed aggregate value for evaluated batch"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"URL where full results are available"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native results / properties of evaluation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"error",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionresulterror"},(0,n.yg)("code",null,"AssertionResultError"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Error details, if type is ERROR"))))),(0,n.yg)("h2",{id:"assertionresulterror"},"AssertionResultError"),(0,n.yg)("p",null,"An error encountered when evaluating an AssertionResult"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionresulterrortype"},(0,n.yg)("code",null,"AssertionResultErrorType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of error encountered"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional metadata depending on the type of error"))))),(0,n.yg)("h2",{id:"assertionrunevent"},"AssertionRunEvent"),(0,n.yg)("p",null,"An event representing an event in the assertion evaluation lifecycle."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#timeseriesaspect"},"TimeSeriesAspect"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"timestampMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the assertion was evaluated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastObservedMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the run event was last observed by the DataHub system - ie, when it was reported by external systems"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assertionUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urn of assertion which is evaluated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"asserteeUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urn of entity on which the assertion is applicable"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"runId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native (platform-specific) identifier for this run"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionrunstatus"},(0,n.yg)("code",null,"AssertionRunStatus!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The status of the assertion run as per this timeseries event"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"batchSpec",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#batchspec"},(0,n.yg)("code",null,"BatchSpec"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Specification of the batch which this run is evaluating"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"partitionSpec",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#partitionspec"},(0,n.yg)("code",null,"PartitionSpec"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about the partition that was evaluated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"runtimeContext",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Runtime parameters of evaluation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"result",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionresult"},(0,n.yg)("code",null,"AssertionResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Results of assertion, present if the status is COMPLETE"))))),(0,n.yg)("h2",{id:"assertionruneventsresult"},"AssertionRunEventsResult"),(0,n.yg)("p",null,"Result returned when fetching run events for an assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of run events returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"failed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of failed run events"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"succeeded",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of succeeded run events"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"errored",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of errored run events"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"runEvents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionrunevent"},(0,n.yg)("code",null,"[AssertionRunEvent!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The run events themselves"))))),(0,n.yg)("h2",{id:"assertionsource"},"AssertionSource"),(0,n.yg)("p",null,"The source of an Assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionsourcetype"},(0,n.yg)("code",null,"AssertionSourceType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the assertion was initially created and the actor who created it"))))),(0,n.yg)("h2",{id:"assertionstdparameter"},"AssertionStdParameter"),(0,n.yg)("p",null,"Parameter for AssertionStdOperator."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parameter value"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdparametertype"},(0,n.yg)("code",null,"AssertionStdParameterType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the parameter"))))),(0,n.yg)("h2",{id:"assertionstdparameters"},"AssertionStdParameters"),(0,n.yg)("p",null,"Parameters for AssertionStdOperators"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameter"},(0,n.yg)("code",null,"AssertionStdParameter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value parameter of an assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"maxValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameter"},(0,n.yg)("code",null,"AssertionStdParameter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The maxValue parameter of an assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"minValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameter"},(0,n.yg)("code",null,"AssertionStdParameter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The minValue parameter of an assertion"))))),(0,n.yg)("h2",{id:"auditstamp"},"AuditStamp"),(0,n.yg)("p",null,"A time stamp along with an optional actor"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"time",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When the audited action took place"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Who performed the audited action"))))),(0,n.yg)("h2",{id:"authconfig"},"AuthConfig"),(0,n.yg)("p",null,"Configurations related to auth"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"tokenAuthEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether token-based auth is enabled."))))),(0,n.yg)("h2",{id:"authenticateduser"},"AuthenticatedUser"),(0,n.yg)("p",null,"Information about the currently authenticated user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"corpUser",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The user information associated with the authenticated user, including properties used in rendering the profile"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformPrivileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#platformprivileges"},(0,n.yg)("code",null,"PlatformPrivileges!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The privileges assigned to the currently authenticated user, which dictates which parts of the UI they should be able to use"))))),(0,n.yg)("h2",{id:"autocompletemultipleresults"},"AutoCompleteMultipleResults"),(0,n.yg)("p",null,"The results returned on a multi entity autocomplete query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"query",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The raw query string"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"suggestions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#autocompleteresultforentity"},(0,n.yg)("code",null,"[AutoCompleteResultForEntity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The autocompletion suggestions"))))),(0,n.yg)("h2",{id:"autocompleteresultforentity"},"AutoCompleteResultForEntity"),(0,n.yg)("p",null,"An individual auto complete result specific to an individual Metadata Entity Type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"suggestions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The autocompletion results for specified entity type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"[Entity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of entities to render in autocomplete"))))),(0,n.yg)("h2",{id:"autocompleteresults"},"AutoCompleteResults"),(0,n.yg)("p",null,"The results returned on a single entity autocomplete query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"query",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The query string"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"suggestions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The autocompletion results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"[Entity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of entities to render in autocomplete"))))),(0,n.yg)("h2",{id:"barchart"},"BarChart"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"bars",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#namedbar"},(0,n.yg)("code",null,"[NamedBar!]!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"barsegment"},"BarSegment"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"label",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"basedata"},"BaseData"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataset",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Dataset used for the Training or Evaluation of the MLModel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"motivation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Motivation to pick these datasets"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"preProcessing",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Details of Data Proprocessing"))))),(0,n.yg)("h2",{id:"batchgetstepstatesresult"},"BatchGetStepStatesResult"),(0,n.yg)("p",null,"Result returned when fetching step state"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"results",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stepstateresult"},(0,n.yg)("code",null,"[StepStateResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The step states"))))),(0,n.yg)("h2",{id:"batchspec"},"BatchSpec"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeBatchId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The native identifier as specified by the system operating on the batch."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"query",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A query that identifies a batch of data"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"limit",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Any limit to the number of rows in the batch, if applied"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the Batch"))))),(0,n.yg)("h2",{id:"batchupdatestepstatesresult"},"BatchUpdateStepStatesResult"),(0,n.yg)("p",null,"Result returned when fetching step state"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"results",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#updatestepstateresult"},(0,n.yg)("code",null,"[UpdateStepStateResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Results for each step"))))),(0,n.yg)("h2",{id:"booleanbox"},"BooleanBox"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"booleanValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"browsepath"},"BrowsePath"),(0,n.yg)("p",null,"A hierarchical entity path"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"path",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The components of the browse path"))))),(0,n.yg)("h2",{id:"browsepathentry"},"BrowsePathEntry"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The path name of a group of browse results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional entity associated with this browse entry. This will usually be a container entity. If this entity is not populated, the name must be used."))))),(0,n.yg)("h2",{id:"browsepathv2"},"BrowsePathV2"),(0,n.yg)("p",null,"A hierarchical entity path V2"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"path",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathentry"},(0,n.yg)("code",null,"[BrowsePathEntry!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The components of the browse path"))))),(0,n.yg)("h2",{id:"browseresultgroup"},"BrowseResultGroup"),(0,n.yg)("p",null,"A group of Entities under a given browse path"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The path name of a group of browse results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities within the group"))))),(0,n.yg)("h2",{id:"browseresultgroupv2"},"BrowseResultGroupV2"),(0,n.yg)("p",null,"A group of Entities under a given browse path"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The path name of a group of browse results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional entity associated with this browse group. This will usually be a container entity. If this entity is not populated, the name must be used."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities within the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hasSubGroups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not there are any more groups underneath this group"))))),(0,n.yg)("h2",{id:"browseresultmetadata"},"BrowseResultMetadata"),(0,n.yg)("p",null,"Metadata about the Browse Paths response"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"path",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The provided path"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"totalNumEntities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of entities under the provided browse path"))))),(0,n.yg)("h2",{id:"browseresults"},"BrowseResults"),(0,n.yg)("p",null,"The results of a browse path traversal query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"[Entity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browseresultgroup"},(0,n.yg)("code",null,"[BrowseResultGroup!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The groups present at the provided browse path"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting point of paginated results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of elements included in the results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of browse results under the path with filters applied"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metadata",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browseresultmetadata"},(0,n.yg)("code",null,"BrowseResultMetadata!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Metadata containing resulting browse groups"))))),(0,n.yg)("h2",{id:"browseresultsv2"},"BrowseResultsV2"),(0,n.yg)("p",null,"The results of a browse path V2 traversal query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browseresultgroupv2"},(0,n.yg)("code",null,"[BrowseResultGroupV2!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The groups present at the provided browse path V2"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting point of paginated results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of groups included in the results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of browse groups under the path with filters applied"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metadata",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browseresultmetadata"},(0,n.yg)("code",null,"BrowseResultMetadata!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Metadata containing resulting browse groups"))))),(0,n.yg)("h2",{id:"businessattribute"},"BusinessAttribute"),(0,n.yg)("p",null,"A Business Attribute, or a logical schema Field"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#businessattributeinfo"},(0,n.yg)("code",null,"BusinessAttributeInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Properties about a Business Attribute"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the Business Attribute"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to Business Attribute"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of relationships between the source Entity and some destination entities with a given types"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"businessattributeassociation"},"BusinessAttributeAssociation"),(0,n.yg)("p",null,"Input required to attach business attribute to an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"businessAttribute",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#businessattribute"},(0,n.yg)("code",null,"BusinessAttribute!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Business Attribute itself"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the associated urn for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"businessattributeinfo"},"BusinessAttributeInfo"),(0,n.yg)("p",null,"Business Attribute type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"name of the business attribute"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"description of business attribute"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags associated with the business attribute"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Glossary terms associated with the business attribute"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#schemafielddatatype"},(0,n.yg)("code",null,"SchemaFieldDataType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Platform independent field type of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the creation of this chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the modification of this chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deleted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional AuditStamp corresponding to the deletion of this chart"))))),(0,n.yg)("h2",{id:"businessattributes"},"BusinessAttributes"),(0,n.yg)("p",null,"Business attributes attached to the metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"businessAttribute",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#businessattributeassociation"},(0,n.yg)("code",null,"BusinessAttributeAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Business Attribute attached to the Metadata Entity"))))),(0,n.yg)("h2",{id:"caveatdetails"},"CaveatDetails"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"needsFurtherTesting",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Did the results suggest any further testing"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"caveatDescription",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Caveat Description"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groupsNotRepresented",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Relevant groups that were not represented in the evaluation dataset"))))),(0,n.yg)("h2",{id:"caveatsandrecommendations"},"CaveatsAndRecommendations"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"caveats",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#caveatdetails"},(0,n.yg)("code",null,"CaveatDetails"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Caveats on using this MLModel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"recommendations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recommendations on where this MLModel should be used"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"idealDatasetCharacteristics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ideal characteristics of an evaluation dataset for this MLModel"))))),(0,n.yg)("h2",{id:"cell"},"Cell"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"linkParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#linkparams"},(0,n.yg)("code",null,"LinkParams"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"changeauditstamps"},"ChangeAuditStamps"),(0,n.yg)("p",null,"Captures information about who created/last modified/deleted the entity and when"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the creation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the modification"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deleted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional AuditStamp corresponding to the deletion"))))),(0,n.yg)("h2",{id:"changeevent"},"ChangeEvent"),(0,n.yg)("p",null,"An individual change in a transaction"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the entity that was changed"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"category",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#changecategorytype"},(0,n.yg)("code",null,"ChangeCategoryType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The category of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#changeoperationtype"},(0,n.yg)("code",null,"ChangeOperationType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The operation of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"modifier",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The modifier of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#timelineparameterentry"},(0,n.yg)("code",null,"[TimelineParameterEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parameters of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"auditStamp",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The audit stamp of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"description of the change"))))),(0,n.yg)("h2",{id:"changetransaction"},"ChangeTransaction"),(0,n.yg)("p",null,"A change transaction is a set of changes that were committed together."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"timestampMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the transaction was committed"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastSemanticVersion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The last semantic version that this schema was changed in"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionStamp",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Version stamp of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#changeoperationtype"},(0,n.yg)("code",null,"ChangeOperationType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#changeevent"},(0,n.yg)("code",null,"[ChangeEvent!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The list of changes in this transaction"))))),(0,n.yg)("h2",{id:"chart"},"Chart"),(0,n.yg)("p",null,"A Chart Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent container in which the entity resides"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tool",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The chart tool name Note that this field will soon be deprecated in favor a unified notion of Data Platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"chartId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An id unique within the charting tool"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#chartproperties"},(0,n.yg)("code",null,"ChartProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties about the Chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#charteditableproperties"},(0,n.yg)("code",null,"ChartEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read write properties about the Chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"query",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#chartquery"},(0,n.yg)("code",null,"ChartQuery"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Info about the query which is used to render the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"embed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#embed"},(0,n.yg)("code",null,"Embed"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Embed information about the Chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tags associated with the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"statsSummary",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#chartstatssummary"},(0,n.yg)("code",null,"ChartStatsSummary"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Not yet implemented."),(0,n.yg)("p",null,"Experimental - Summary operational & usage statistics about a Chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the chart. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#chartinfo"},(0,n.yg)("code",null,"ChartInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead Additional read only information about the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#charteditableproperties"},(0,n.yg)("code",null,"ChartEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use editableProperties field instead Additional read write information about the Chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use tags instead The structured tags associated with the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the chart is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"inputFields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#inputfields"},(0,n.yg)("code",null,"InputFields"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Input fields to power the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sub Types that this entity implements"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"health",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#health"},(0,n.yg)("code",null,"[Health!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental! The resolved health statuses of the asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incidents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityincidentsresult"},(0,n.yg)("code",null,"EntityIncidentsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Incidents associated with the Chart"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstate"},(0,n.yg)("code",null,"IncidentState"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident state to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"stage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstage"},(0,n.yg)("code",null,"IncidentStage"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident stage to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"priority",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentpriority"},(0,n.yg)("code",null,"IncidentPriority"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident priority to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assigneeUrns",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional assignee urns for an incident."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 0."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 20."))))))))),(0,n.yg)("h2",{id:"chartcell"},"ChartCell"),(0,n.yg)("p",null,"A Notebook cell which contains chart as content"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"cellTitle",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title of the cell"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cellId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique id for the cell."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeAuditStamps",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#changeauditstamps"},(0,n.yg)("code",null,"ChangeAuditStamps"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Captures information about who created/last modified/deleted this TextCell and when"))))),(0,n.yg)("h2",{id:"charteditableproperties"},"ChartEditableProperties"),(0,n.yg)("p",null,"Chart properties that are editable via the UI This represents logical metadata,\nas opposed to technical metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Chart"))))),(0,n.yg)("h2",{id:"chartinfo"},"ChartInfo"),(0,n.yg)("p",null,"Deprecated, use ChartProperties instead\nAdditional read only information about the chart"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"inputs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"[Dataset!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use relationship Consumes instead Data sources for the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native platform URL of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#charttype"},(0,n.yg)("code",null,"ChartType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Access level for the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"access",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#accesslevel"},(0,n.yg)("code",null,"AccessLevel"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Access level for the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastRefreshed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time when this chart last refreshed"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the creation of this chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the modification of this chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deleted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional AuditStamp corresponding to the deletion of this chart"))))),(0,n.yg)("h2",{id:"chartproperties"},"ChartProperties"),(0,n.yg)("p",null,"Additional read only properties about the chart"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native platform URL of the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#charttype"},(0,n.yg)("code",null,"ChartType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Access level for the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"access",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#accesslevel"},(0,n.yg)("code",null,"AccessLevel"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Access level for the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastRefreshed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time when this chart last refreshed"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the creation of this chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the modification of this chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deleted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional AuditStamp corresponding to the deletion of this chart"))))),(0,n.yg)("h2",{id:"chartquery"},"ChartQuery"),(0,n.yg)("p",null,"The query that was used to populate a Chart"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"rawQuery",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Raw query to build a chart from input datasets"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#chartquerytype"},(0,n.yg)("code",null,"ChartQueryType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the chart query"))))),(0,n.yg)("h2",{id:"chartstatssummary"},"ChartStatsSummary"),(0,n.yg)("p",null,"Experimental - subject to change. A summary of usage metrics about a Chart."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total view count for the chart"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewCountLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The view count in the last 30 days"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueUserCountLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique user count in the past 30 days"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"topUsersLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The top users in the past 30 days"))))),(0,n.yg)("h2",{id:"chromeextensionconfig"},"ChromeExtensionConfig"),(0,n.yg)("p",null,"Configurations related to DataHub Chrome extension"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the Chrome Extension is enabled"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineageEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether lineage is enabled"))))),(0,n.yg)("h2",{id:"container"},"Container"),(0,n.yg)("p",null,"A container of other Metadata Entities"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Fetch an Entity Container by primary key (urn)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#containerproperties"},(0,n.yg)("code",null,"ContainerProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Read-only properties that originate in the source data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#containereditableproperties"},(0,n.yg)("code",null,"ContainerEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Read-write properties that originate in DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags used for searching dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'Sub types of the container, e.g. "Database" etc'))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchresults"},(0,n.yg)("code",null,"SearchResults"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Children entities inside of the Container"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#containerentitiesinput"},(0,n.yg)("code",null,"ContainerEntitiesInput"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"access",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#access"},(0,n.yg)("code",null,"Access"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Roles and the properties to access the container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))))),(0,n.yg)("h2",{id:"containereditableproperties"},"ContainerEditableProperties"),(0,n.yg)("p",null,"Read-write properties that originate in DataHub"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"DataHub description of the Container"))))),(0,n.yg)("h2",{id:"containerproperties"},"ContainerProperties"),(0,n.yg)("p",null,"Read-only properties that originate in the source data platform"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the Container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"System description of the Container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the Container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native platform URL of the Container"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"qualifiedName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Fully-qualified name of the Container"))))),(0,n.yg)("h2",{id:"contentparams"},"ContentParams"),(0,n.yg)("p",null,"Params about the recommended content"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of entities corresponding to the recommended content"))))),(0,n.yg)("h2",{id:"corpgroup"},"CorpGroup"),(0,n.yg)("p",null,"A DataHub Group entity, which represents a Person on the Metadata Entity Graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Group name eg wherehows dev, ask_metadata"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the Corp Group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpgroupproperties"},(0,n.yg)("code",null,"CorpGroupProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties about the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpgroupeditableproperties"},(0,n.yg)("code",null,"CorpGroupEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read write properties about the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"origin",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#origin"},(0,n.yg)("code",null,"Origin"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Origin info about this group."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpgroupinfo"},(0,n.yg)("code",null,"CorpGroupInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead Additional read only info about the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"corpgroupeditableproperties"},"CorpGroupEditableProperties"),(0,n.yg)("p",null,"Additional read write properties about a group"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"DataHub description of the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"slack",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Slack handle for the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"email",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Email address for the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"pictureLink",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A URL which points to a picture which user wants to set as a profile photo"))))),(0,n.yg)("h2",{id:"corpgroupinfo"},"CorpGroupInfo"),(0,n.yg)("p",null,"Deprecated, use CorpUserProperties instead\nAdditional read only info about a group"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name to display when rendering the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description provided for the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"email",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"email of this group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"admins",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, do not use owners of this group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"members",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use relationship IsMemberOfGroup instead List of ldap urn in this group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, do not use List of groups urns in this group"))))),(0,n.yg)("h2",{id:"corpgroupproperties"},"CorpGroupProperties"),(0,n.yg)("p",null,"Additional read only properties about a group"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"display name of this group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description provided for the group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"email",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"email of this group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"slack",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Slack handle for the group"))))),(0,n.yg)("h2",{id:"corpuser"},"CorpUser"),(0,n.yg)("p",null,"A DataHub User entity, which represents a Person on the Metadata Entity Graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"username",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A username associated with the user This uniquely identifies the user within DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuserproperties"},(0,n.yg)("code",null,"CorpUserProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties about the corp user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpusereditableproperties"},(0,n.yg)("code",null,"CorpUserEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Read write properties about the corp user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#corpuserstatus"},(0,n.yg)("code",null,"CorpUserStatus"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The status of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tags associated with the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"isNativeUser",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this user is a native DataHub user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuserinfo"},(0,n.yg)("code",null,"CorpUserInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead Additional read only info about the corp user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpusereditableinfo"},(0,n.yg)("code",null,"CorpUserEditableInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use editableProperties field instead Read write info about the corp user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use the tags field instead The structured tags associated with the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"settings",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpusersettings"},(0,n.yg)("code",null,"CorpUserSettings"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Settings that a user can customize through the datahub ui"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra aspects that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"corpuserappearancesettings"},"CorpUserAppearanceSettings"),(0,n.yg)("p",null,"Settings that control look and feel of the DataHub UI for the user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"showSimplifiedHomepage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Flag whether the user should see a homepage with only datasets, charts & dashboards. Intended for users who have less operational use cases for the datahub tool."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showThemeV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Flag controlling whether the V2 UI for DataHub is shown."))))),(0,n.yg)("h2",{id:"corpusereditableinfo"},"CorpUserEditableInfo"),(0,n.yg)("p",null,"Deprecated, use CorpUserEditableProperties instead\nAdditional read write info about a user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name to show on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title to show on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aboutMe",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"About me section of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"teams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Teams that the user belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"skills",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Skills that the user possesses"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"pictureLink",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A URL which points to a picture which user wants to set as a profile photo"))))),(0,n.yg)("h2",{id:"corpusereditableproperties"},"CorpUserEditableProperties"),(0,n.yg)("p",null,"Additional read write properties about a user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name to show on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title to show on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aboutMe",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"About me section of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"teams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Teams that the user belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"skills",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Skills that the user possesses"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"pictureLink",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A URL which points to a picture which user wants to set as a profile photo"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"slack",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The slack handle of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"phone",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Phone number for the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"email",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Email address for the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"persona",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubpersona"},(0,n.yg)("code",null,"DataHubPersona"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"User persona, if present"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platforms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"[DataPlatform!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Platforms commonly used by the user, if present."))))),(0,n.yg)("h2",{id:"corpuserinfo"},"CorpUserInfo"),(0,n.yg)("p",null,"Deprecated, use CorpUserProperties instead\nAdditional read only info about a user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"active",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user is active"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"email",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Email address of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manager",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Direct manager of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"departmentId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"department id the user belong to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"departmentName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"department name this user belong to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"firstName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"first name of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"last name of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fullName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Common name of this user, format is firstName plus lastName"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"countryCode",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"two uppercase letters country code"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the ldap"))))),(0,n.yg)("h2",{id:"corpuserproperties"},"CorpUserProperties"),(0,n.yg)("p",null,"Additional read only properties about a user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"active",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user is active"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"email",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Email address of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manager",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Direct manager of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"departmentId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"department id the user belong to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"departmentName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"department name this user belong to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"firstName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"first name of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"last name of the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fullName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Common name of this user, format is firstName plus lastName"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"countryCode",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"two uppercase letters country code"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the ldap"))))),(0,n.yg)("h2",{id:"corpusersettings"},"CorpUserSettings"),(0,n.yg)("p",null,"Settings that a user can customize through the datahub ui"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"appearance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuserappearancesettings"},(0,n.yg)("code",null,"CorpUserAppearanceSettings"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Settings that control look and feel of the DataHub UI for the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"views",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuserviewssettings"},(0,n.yg)("code",null,"CorpUserViewsSettings"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Settings related to the DataHub Views feature"))))),(0,n.yg)("h2",{id:"corpuserviewssettings"},"CorpUserViewsSettings"),(0,n.yg)("p",null,"Settings related to the Views feature of DataHub."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"defaultView",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubview"},(0,n.yg)("code",null,"DataHubView"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The default view for the User."))))),(0,n.yg)("h2",{id:"cost"},"Cost"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"costType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#costtype"},(0,n.yg)("code",null,"CostType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Type of Cost Code"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"costValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#costvalue"},(0,n.yg)("code",null,"CostValue!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Code to which the Cost of this entity should be attributed to ie organizational cost ID"))))),(0,n.yg)("h2",{id:"costvalue"},"CostValue"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"costId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#float"},(0,n.yg)("code",null,"Float"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Organizational Cost ID"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"costCode",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Organizational Cost Code"))))),(0,n.yg)("h2",{id:"cronschedule"},"CronSchedule"),(0,n.yg)("p",null,"A cron schedule"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"cron",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A cron-formatted execution interval, as a cron string, e.g. 1 * * * *"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"timezone",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Timezone in which the cron interval applies, e.g. America/Los_Angeles"))))),(0,n.yg)("h2",{id:"customassertioninfo"},"CustomAssertionInfo"),(0,n.yg)("p",null,"Information about a custom assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of custom assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The entity targeted by this custom assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldref"},(0,n.yg)("code",null,"SchemaFieldRef"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The field serving as input to the assertion, if any."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"logic",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Logic comprising a raw, unstructured assertion."))))),(0,n.yg)("h2",{id:"custompropertiesentry"},"CustomPropertiesEntry"),(0,n.yg)("p",null,"An entry in a custom properties map represented as a tuple"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"key",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The key of the map entry"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value fo the map entry"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the entity this property came from for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"dashboard"},"Dashboard"),(0,n.yg)("p",null,"A Dashboard Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent container in which the entity resides"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tool",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The dashboard tool name Note that this will soon be deprecated in favor of a standardized notion of Data Platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dashboardId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An id unique within the dashboard tool"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardproperties"},(0,n.yg)("code",null,"DashboardProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties about the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardeditableproperties"},(0,n.yg)("code",null,"DashboardEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read write properties about the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"embed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#embed"},(0,n.yg)("code",null,"Embed"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Embed information about the Dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tags associated with the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the dashboard. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"usageStats",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardusagequeryresult"},(0,n.yg)("code",null,"DashboardUsageQueryResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental (Subject to breaking change) -- Statistics about how this Dashboard is used"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"startTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"endTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"limit",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"statsSummary",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardstatssummary"},(0,n.yg)("code",null,"DashboardStatsSummary"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental - Summary operational & usage statistics about a Dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardinfo"},(0,n.yg)("code",null,"DashboardInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead Additional read only information about the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardeditableproperties"},(0,n.yg)("code",null,"DashboardEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use editableProperties instead Additional read write properties about the Dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use tags field instead The structured tags associated with the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the dashboard is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"inputFields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#inputfields"},(0,n.yg)("code",null,"InputFields"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Input fields that power all the charts in the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sub Types of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"health",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#health"},(0,n.yg)("code",null,"[Health!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental! The resolved health statuses of the asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incidents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityincidentsresult"},(0,n.yg)("code",null,"EntityIncidentsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Incidents associated with the Dashboard"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstate"},(0,n.yg)("code",null,"IncidentState"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident state to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"stage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstage"},(0,n.yg)("code",null,"IncidentStage"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident stage to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"priority",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentpriority"},(0,n.yg)("code",null,"IncidentPriority"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident priority to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assigneeUrns",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional assignee urns for an incident."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 0."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 20."))))))))),(0,n.yg)("h2",{id:"dashboardeditableproperties"},"DashboardEditableProperties"),(0,n.yg)("p",null,"Dashboard properties that are editable via the UI This represents logical metadata,\nas opposed to technical metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Dashboard"))))),(0,n.yg)("h2",{id:"dashboardinfo"},"DashboardInfo"),(0,n.yg)("p",null,"Deprecated, use DashboardProperties instead\nAdditional read only info about a Dashboard"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"charts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#chart"},(0,n.yg)("code",null,"[Chart!]!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use relationship Contains instead Charts that comprise the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native platform URL of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"access",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#accesslevel"},(0,n.yg)("code",null,"AccessLevel"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Access level for the dashboard Note that this will soon be deprecated for low usage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastRefreshed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time when this dashboard last refreshed"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the creation of this dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the modification of this dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deleted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional AuditStamp corresponding to the deletion of this dashboard"))))),(0,n.yg)("h2",{id:"dashboardproperties"},"DashboardProperties"),(0,n.yg)("p",null,"Additional read only properties about a Dashboard"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native platform URL of the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"access",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#accesslevel"},(0,n.yg)("code",null,"AccessLevel"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Access level for the dashboard Note that this will soon be deprecated for low usage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastRefreshed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time when this dashboard last refreshed"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the creation of this dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the modification of this dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deleted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional AuditStamp corresponding to the deletion of this dashboard"))))),(0,n.yg)("h2",{id:"dashboardstatssummary"},"DashboardStatsSummary"),(0,n.yg)("p",null,"Experimental - subject to change. A summary of usage metrics about a Dashboard."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total view count for the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewCountLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The view count in the last 30 days"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueUserCountLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique user count in the past 30 days"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"topUsersLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The top users in the past 30 days"))))),(0,n.yg)("h2",{id:"dashboardusageaggregation"},"DashboardUsageAggregation"),(0,n.yg)("p",null,"An aggregation of Dashboard usage statistics"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"bucket",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time window start time"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"duration",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#windowduration"},(0,n.yg)("code",null,"WindowDuration"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time window span"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resource",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The resource urn associated with the usage information, eg a Dashboard urn"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metrics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardusageaggregationmetrics"},(0,n.yg)("code",null,"DashboardUsageAggregationMetrics"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The rolled up usage metrics"))))),(0,n.yg)("h2",{id:"dashboardusageaggregationmetrics"},"DashboardUsageAggregationMetrics"),(0,n.yg)("p",null,"Rolled up metrics about Dashboard usage over time"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueUserCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique number of dashboard users within the time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of dashboard views within the time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executionsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of dashboard executions within the time range"))))),(0,n.yg)("h2",{id:"dashboardusagemetrics"},"DashboardUsageMetrics"),(0,n.yg)("p",null,"A set of absolute dashboard usage metrics"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#timeseriesaspect"},"TimeSeriesAspect"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"timestampMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the metrics were reported"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"favoritesCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of times dashboard has been favorited FIXME: Qualifies as Popularity Metric rather than Usage Metric?"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of dashboard views"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executionsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of dashboard execution"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastViewed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time when this dashboard was last viewed"))))),(0,n.yg)("h2",{id:"dashboardusagequeryresult"},"DashboardUsageQueryResult"),(0,n.yg)("p",null,"The result of a dashboard usage query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"buckets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardusageaggregation"},(0,n.yg)("code",null,"[DashboardUsageAggregation]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of relevant time windows for use in displaying usage statistics"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aggregations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardusagequeryresultaggregations"},(0,n.yg)("code",null,"DashboardUsageQueryResultAggregations"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of rolled up aggregations about the dashboard usage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metrics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboardusagemetrics"},(0,n.yg)("code",null,"[DashboardUsageMetrics!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of absolute dashboard usage metrics"))))),(0,n.yg)("h2",{id:"dashboardusagequeryresultaggregations"},"DashboardUsageQueryResultAggregations"),(0,n.yg)("p",null,"A set of rolled up aggregations about the Dashboard usage"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueUserCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The count of unique Dashboard users within the queried time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"users",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dashboarduserusagecounts"},(0,n.yg)("code",null,"[DashboardUserUsageCounts]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific per user usage counts within the queried time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of dashboard views within the queried time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executionsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of dashboard executions within the queried time range"))))),(0,n.yg)("h2",{id:"dashboarduserusagecounts"},"DashboardUserUsageCounts"),(0,n.yg)("p",null,"Information about individual user usage of a Dashboard"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"user",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The user of the Dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"number of times dashboard has been viewed by the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executionsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"number of dashboard executions by the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"usageCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Normalized numeric metric representing user's dashboard usage Higher value represents more usage"))))),(0,n.yg)("h2",{id:"datacontract"},"DataContract"),(0,n.yg)("p",null,'A Data Contract Entity. A Data Contract is a verifiable group of assertions regarding various aspects of the data: its freshness (sla),\nschema, and data quality or validity. This group of assertions represents a data owner\'s commitment to producing data that confirms to the agreed\nupon contract. Each dataset can have a single contract. The contract can be in a "passing" or "violating" state, depending\non whether the assertions that compose the contract are passing or failing.\nNote that the data contract entity is currently in early preview (beta).'),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key of the data contract"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard entity type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datacontractproperties"},(0,n.yg)("code",null,"DataContractProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Properties describing the data contract"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datacontractstatus"},(0,n.yg)("code",null,"DataContractStatus"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The status of the data contract"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this Data Contract"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of relationships between the source Entity and some destination entities with a given types"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"datacontractproperties"},"DataContractProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the related entity, e.g. the Dataset today. In the future, we may support additional contract entities."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"freshness",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#freshnesscontract"},(0,n.yg)("code",null,"[FreshnessContract!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Freshness (SLA) portion of the contract. As of today, it is expected that there will not be more than 1 Freshness contract. If there are, only the first will be displayed."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemacontract"},(0,n.yg)("code",null,"[SchemaContract!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The schema / structural portion of the contract. As of today, it is expected that there will not be more than 1 Schema contract. If there are, only the first will be displayed."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataQuality",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataqualitycontract"},(0,n.yg)("code",null,"[DataQualityContract!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of data quality related contracts, e.g. table and column-level contract constraints."))))),(0,n.yg)("h2",{id:"datacontractstatus"},"DataContractStatus"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#datacontractstate"},(0,n.yg)("code",null,"DataContractState!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The state of the data contract"))))),(0,n.yg)("h2",{id:"dataflow"},"DataFlow"),(0,n.yg)("p",null,"A Data Flow Metadata Entity, representing an set of pipelined Data Job or Tasks required\nto produce an output Dataset Also known as a Data Pipeline"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of a Data Flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"orchestrator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Workflow orchestrator ei Azkaban, Airflow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"flowId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Id of the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cluster",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Cluster of the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataflowproperties"},(0,n.yg)("code",null,"DataFlowProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties about a Data flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datafloweditableproperties"},(0,n.yg)("code",null,"DataFlowEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read write properties about a Data Flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tags associated with the dataflow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the dataflow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the Data Flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the DataFlow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent container in which the entity resides"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the data flow. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataflowinfo"},(0,n.yg)("code",null,"DataFlowInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead Additional read only information about a Data flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use tags field instead The structured tags associated with the dataflow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataJobs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataflowdatajobsrelationships"},(0,n.yg)("code",null,"DataFlowDataJobsRelationships"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use relationship IsPartOf instead Data Jobs"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the datflow is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"health",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#health"},(0,n.yg)("code",null,"[Health!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental! The resolved health statuses of the asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incidents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityincidentsresult"},(0,n.yg)("code",null,"EntityIncidentsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Incidents associated with the DataFlow"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstate"},(0,n.yg)("code",null,"IncidentState"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident state to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"stage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstage"},(0,n.yg)("code",null,"IncidentStage"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident stage to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"priority",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentpriority"},(0,n.yg)("code",null,"IncidentPriority"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident priority to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assigneeUrns",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional assignee urns for an incident."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 0."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 20."))))))))),(0,n.yg)("h2",{id:"dataflowdatajobsrelationships"},"DataFlowDataJobsRelationships"),(0,n.yg)("p",null,"Deprecated, use relationships query instead"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshiplegacy"},(0,n.yg)("code",null,"[EntityRelationshipLegacy]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"datafloweditableproperties"},"DataFlowEditableProperties"),(0,n.yg)("p",null,"Data Flow properties that are editable via the UI This represents logical metadata,\nas opposed to technical metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Data Flow"))))),(0,n.yg)("h2",{id:"dataflowinfo"},"DataFlowInfo"),(0,n.yg)("p",null,"Deprecated, use DataFlowProperties instead\nAdditional read only properties about a Data Flow aka Pipeline"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"project",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional project or namespace associated with the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"External URL associated with the DataFlow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))))),(0,n.yg)("h2",{id:"dataflowproperties"},"DataFlowProperties"),(0,n.yg)("p",null,"Additional read only properties about a Data Flow aka Pipeline"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"project",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional project or namespace associated with the flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"External URL associated with the DataFlow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))))),(0,n.yg)("h2",{id:"datahubconnection"},"DataHubConnection"),(0,n.yg)("p",null,"A connection between DataHub and an external Platform."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the connection"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"details",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubconnectiondetails"},(0,n.yg)("code",null,"DataHubConnectionDetails!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The connection details"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The external Data Platform associated with the connection"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Not implemented!"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"datahubconnectiondetails"},"DataHubConnectionDetails"),(0,n.yg)("p",null,"The details of the Connection"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#datahubconnectiondetailstype"},(0,n.yg)("code",null,"DataHubConnectionDetailsType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type or format of connection"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"json",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubjsonconnection"},(0,n.yg)("code",null,"DataHubJsonConnection"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A JSON-encoded connection. Present when type is JSON."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name for this DataHub connection"))))),(0,n.yg)("h2",{id:"datahubjsonconnection"},"DataHubJsonConnection"),(0,n.yg)("p",null,"The details of a JSON Connection"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"blob",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The JSON blob containing the specific connection details."))))),(0,n.yg)("h2",{id:"datahubpersona"},"DataHubPersona"),(0,n.yg)("p",null,"A standardized type of a user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the persona type"))))),(0,n.yg)("h2",{id:"datahubpolicy"},"DataHubPolicy"),(0,n.yg)("p",null,"An DataHub Platform Access Policy -  Policies determine who can perform what actions against which resources on the platform"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from the Role"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"policyType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#policytype"},(0,n.yg)("code",null,"PolicyType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#policystate"},(0,n.yg)("code",null,"PolicyState!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The present state of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resources",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resourcefilter"},(0,n.yg)("code",null,"ResourceFilter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The resources that the Policy privileges apply to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The privileges that the Policy grants"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actors",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#actorfilter"},(0,n.yg)("code",null,"ActorFilter!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actors that the Policy grants privileges to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editable",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the Policy is editable, ie system policies, or not"))))),(0,n.yg)("h2",{id:"datahubrole"},"DataHubRole"),(0,n.yg)("p",null,"A DataHub Role is a high-level abstraction on top of Policies that dictates what actions users can take."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the role"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from the Role"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Role."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of the Role"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"datahubview"},"DataHubView"),(0,n.yg)("p",null,"An DataHub View - Filters that are applied across the application automatically."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the View"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#datahubviewtype"},(0,n.yg)("code",null,"DataHubViewType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the View"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the View"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of the View"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"definition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubviewdefinition"},(0,n.yg)("code",null,"DataHubViewDefinition!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The definition of the View"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from the View"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"datahubviewdefinition"},"DataHubViewDefinition"),(0,n.yg)("p",null,"An DataHub View Definition"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"[EntityType!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of filters to apply. If left empty, then ALL entity types are in scope."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubviewfilter"},(0,n.yg)("code",null,"DataHubViewFilter!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of filters to apply. If left empty, then no filters will be applied."))))),(0,n.yg)("h2",{id:"datahubviewfilter"},"DataHubViewFilter"),(0,n.yg)("p",null,"A DataHub View Filter. Note that"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#logicaloperator"},(0,n.yg)("code",null,"LogicalOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The operator used to combine the filters."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#facetfilter"},(0,n.yg)("code",null,"[FacetFilter!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of filters combined using the operator. If left empty, then no filters will be applied."))))),(0,n.yg)("h2",{id:"datajob"},"DataJob"),(0,n.yg)("p",null,"A Data Job Metadata Entity, representing an individual unit of computation or Task\nto produce an output Dataset Always part of a parent Data Flow aka Pipeline"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Data Job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sub Types that this entity implements"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataFlow",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataflow"},(0,n.yg)("code",null,"DataFlow"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Deprecated, use relationship IsPartOf instead The associated data flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"jobId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Id of the job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datajobproperties"},(0,n.yg)("code",null,"DataJobProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties associated with the Data Job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent container in which the entity resides"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datajobeditableproperties"},(0,n.yg)("code",null,"DataJobEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read write properties associated with the Data Job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tags associated with the DataJob"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the DataJob"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the Data Flow"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dashboard"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Data Job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the data job. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datajobinfo"},(0,n.yg)("code",null,"DataJobInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead Additional read only information about a Data processing job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"inputOutput",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datajobinputoutput"},(0,n.yg)("code",null,"DataJobInputOutput"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about the inputs and outputs of a Data processing job including column-level lineage."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use the tags field instead The structured tags associated with the DataJob"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"runs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataprocessinstanceresult"},(0,n.yg)("code",null,"DataProcessInstanceResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"History of runs of this task"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"health",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#health"},(0,n.yg)("code",null,"[Health!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental! The resolved health statuses of the asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataTransformLogic",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datatransformlogic"},(0,n.yg)("code",null,"DataTransformLogic"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Data Transform Logic associated with the Data Job"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incidents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityincidentsresult"},(0,n.yg)("code",null,"EntityIncidentsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Incidents associated with the DataJob"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstate"},(0,n.yg)("code",null,"IncidentState"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident state to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"stage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstage"},(0,n.yg)("code",null,"IncidentStage"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident stage to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"priority",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentpriority"},(0,n.yg)("code",null,"IncidentPriority"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident priority to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assigneeUrns",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional assignee urns for an incident."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 0."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 20."))))))))),(0,n.yg)("h2",{id:"datajobeditableproperties"},"DataJobEditableProperties"),(0,n.yg)("p",null,"Data Job properties that are editable via the UI This represents logical metadata,\nas opposed to technical metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Data Job"))))),(0,n.yg)("h2",{id:"datajobinfo"},"DataJobInfo"),(0,n.yg)("p",null,"Deprecated, use DataJobProperties instead\nAdditional read only information about a Data Job aka Task"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Job display name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Job description"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"External URL associated with the DataJob"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))))),(0,n.yg)("h2",{id:"datajobinputoutput"},"DataJobInputOutput"),(0,n.yg)("p",null,"The lineage information for a DataJob\nTODO Rename this to align with other Lineage models"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"inputDatasets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"[Dataset!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use relationship Consumes instead Input datasets produced by the data job during processing"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"outputDatasets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"[Dataset!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use relationship Produces instead Output datasets produced by the data job during processing"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"inputDatajobs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datajob"},(0,n.yg)("code",null,"[DataJob!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use relationship DownstreamOf instead Input datajobs that this data job depends on"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fineGrainedLineages",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#finegrainedlineage"},(0,n.yg)("code",null,"[FineGrainedLineage!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Lineage information for the column-level. Includes a list of objects detailing which columns are upstream and which are downstream of each other. The upstream and downstream columns are from datasets."))))),(0,n.yg)("h2",{id:"datajobproperties"},"DataJobProperties"),(0,n.yg)("p",null,"Additional read only properties about a Data Job aka Task"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Job display name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Job description"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"External URL associated with the DataJob"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))))),(0,n.yg)("h2",{id:"dataplatform"},"DataPlatform"),(0,n.yg)("p",null,"A Data Platform represents a specific third party Data System or Tool Examples include\nwarehouses like Snowflake, orchestrators like Airflow, and dashboarding tools like Looker"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urn of the data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatformproperties"},(0,n.yg)("code",null,"DataPlatformProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties associated with a data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties displayName instead Display name of the data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminfo"},(0,n.yg)("code",null,"DataPlatformInfo"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead Additional properties associated with a data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"dataplatforminfo"},"DataPlatformInfo"),(0,n.yg)("p",null,"Deprecated, use DataPlatformProperties instead\nAdditional read only information about a Data Platform"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#platformtype"},(0,n.yg)("code",null,"PlatformType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The platform category"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name associated with the platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"datasetNameDelimiter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The delimiter in the dataset names on the data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"logoUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A logo URL associated with the platform"))))),(0,n.yg)("h2",{id:"dataplatforminstance"},"DataPlatformInstance"),(0,n.yg)("p",null,"A Data Platform instance represents an instance of a 3rd party platform like Looker, Snowflake, etc."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urn of the data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"instanceId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The platform instance id"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstanceproperties"},(0,n.yg)("code",null,"DataPlatformInstanceProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties associated with a data platform instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the data platform instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the data platform instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags used for searching the data platform instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the data platform instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the container"))))),(0,n.yg)("h2",{id:"dataplatforminstanceproperties"},"DataPlatformInstanceProperties"),(0,n.yg)("p",null,"Additional read only properties about a DataPlatformInstance"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the data platform instance used in display"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Read only technical description for the data platform instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the data platform instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"External URL associated with the data platform instance"))))),(0,n.yg)("h2",{id:"dataplatformproperties"},"DataPlatformProperties"),(0,n.yg)("p",null,"Additional read only properties about a Data Platform"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#platformtype"},(0,n.yg)("code",null,"PlatformType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The platform category"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name associated with the platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"datasetNameDelimiter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The delimiter in the dataset names on the data platform"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"logoUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A logo URL associated with the platform"))))),(0,n.yg)("h2",{id:"dataprocessinstance"},"DataProcessInstance"),(0,n.yg)("p",null,"A DataProcessInstance Metadata Entity, representing an individual run of\na task or datajob."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the DataProcessInstance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the data process instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataprocessrunevent"},(0,n.yg)("code",null,"[DataProcessRunEvent]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The history of state changes for the run"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"startTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"endTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"limit",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: Use `properties.created`"),(0,n.yg)("p",null,"When the run was kicked off"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: Use `properties.name`"),(0,n.yg)("p",null,"The name of the data process"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity. In the UI, used for inputs, outputs and parentTemplate"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The link to view the task run in the source system"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataprocessinstanceproperties"},(0,n.yg)("code",null,"DataProcessInstanceProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties associated with the Data Process Instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sub Types that this entity implements"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent container in which the entity resides"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the data process instance is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mlTrainingRunProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mltrainingrunproperties"},(0,n.yg)("code",null,"MLTrainingRunProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional properties when subtype is Training Run"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentTemplate",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent entity whose run instance it is"))))),(0,n.yg)("h2",{id:"dataprocessinstanceproperties"},"DataProcessInstanceProperties"),(0,n.yg)("p",null,"Properties describing a data process instance's execution metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name of this process instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"URL to view this process instance in the external system"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When this process instance was created"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional custom properties specific to this process instance"))))),(0,n.yg)("h2",{id:"dataprocessinstanceresult"},"DataProcessInstanceResult"),(0,n.yg)("p",null,"Data Process instances that match the provided query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities to include in result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of run events returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"runs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataprocessinstance"},(0,n.yg)("code",null,"[DataProcessInstance]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The data process instances that produced or consumed the entity"))))),(0,n.yg)("h2",{id:"dataprocessinstancerunresult"},"DataProcessInstanceRunResult"),(0,n.yg)("p",null,"the result of a run, part of the run state"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"resultType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#dataprocessinstancerunresulttype"},(0,n.yg)("code",null,"DataProcessInstanceRunResultType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The outcome of the run"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeResultType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The outcome of the run in the data platforms native language"))))),(0,n.yg)("h2",{id:"dataprocessrunevent"},"DataProcessRunEvent"),(0,n.yg)("p",null,"A state change event in the data process instance lifecycle"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#timeseriesaspect"},"TimeSeriesAspect"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#dataprocessrunstatus"},(0,n.yg)("code",null,"DataProcessRunStatus"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The status of the data process instance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"attempt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The try number that this instance run is in"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"result",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataprocessinstancerunresult"},(0,n.yg)("code",null,"DataProcessInstanceRunResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The result of a run"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"timestampMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp associated with the run event in milliseconds"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"durationMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The duration of the run in milliseconds"))))),(0,n.yg)("h2",{id:"dataproduct"},"DataProduct"),(0,n.yg)("p",null,"A Data Product, or a logical grouping of Metadata Entities"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataproductproperties"},(0,n.yg)("code",null,"DataProductProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Properties about a Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchresults"},(0,n.yg)("code",null,"SearchResults"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Children entities inside of the DataProduct"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#searchacrossentitiesinput"},(0,n.yg)("code",null,"SearchAcrossEntitiesInput"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags used for searching Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"dataproductproperties"},"DataProductProperties"),(0,n.yg)("p",null,"Properties about a domain"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Data Product"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"External URL for the DataProduct (most likely GitHub repo where Data Products are managed as code)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"numAssets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of children entities inside of the Data Product. This number includes soft deleted entities."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the Data Product"))))),(0,n.yg)("h2",{id:"dataqualitycontract"},"DataQualityContract"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"assertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertion"},(0,n.yg)("code",null,"Assertion!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The assertion representing the schema contract."))))),(0,n.yg)("h2",{id:"dataset"},"Dataset"),(0,n.yg)("p",null,"A Dataset entity, which encompasses Relational Tables, Document store collections, streaming topics, and other sets of data having an independent lifecycle"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#supportsversions"},"SupportsVersions"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"contract",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datacontract"},(0,n.yg)("code",null,"DataContract"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional Data Contract defined for the Dataset."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the dataset is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent container in which the entity resides"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique guid for dataset No longer to be used as the Dataset display name. Use properties.name instead"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetproperties"},(0,n.yg)("code",null,"DatasetProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of read only properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataseteditableproperties"},(0,n.yg)("code",null,"DatasetEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaMetadata",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemametadata"},(0,n.yg)("code",null,"SchemaMetadata"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema metadata of the dataset, available by version number"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableSchemaMetadata",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#editableschemametadata"},(0,n.yg)("code",null,"EditableSchemaMetadata"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Editable schema metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"embed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#embed"},(0,n.yg)("code",null,"Embed"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Embed information about the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags used for searching dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"access",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#access"},(0,n.yg)("code",null,"Access"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Roles and the properties to access the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"usageStats",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#usagequeryresult"},(0,n.yg)("code",null,"UsageQueryResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Statistics about how this Dataset is used The first parameter, ",(0,n.yg)("code",null,"resource"),", is deprecated and no longer needs to be provided"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"resource",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"range",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#timerange"},(0,n.yg)("code",null,"TimeRange"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"statsSummary",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetstatssummary"},(0,n.yg)("code",null,"DatasetStatsSummary"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental - Summary operational & usage statistics about a Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"datasetProfiles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetprofile"},(0,n.yg)("code",null,"[DatasetProfile!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Profile Stats resource that retrieves the events in a previous unit of time in descending order If no start or end time are provided, the most recent events will be returned"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"startTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"endTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#filterinput"},(0,n.yg)("code",null,"FilterInput"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"limit",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#operation"},(0,n.yg)("code",null,"[Operation!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Operational events for an entity."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"startTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"endTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#filterinput"},(0,n.yg)("code",null,"FilterInput"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"limit",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assertions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityassertionsresult"},(0,n.yg)("code",null,"EntityAssertionsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Assertions associated with the Dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"includeSoftDeleted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the dataset. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"health",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#health"},(0,n.yg)("code",null,"[Health!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental! The resolved health statuses of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schema"},(0,n.yg)("code",null,"Schema"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: Use `schemaMetadata`"),(0,n.yg)("p",null,"Schema metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead External URL associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"origin",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fabrictype"},(0,n.yg)("code",null,"FabricType!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, see the properties field instead Environment in which the dataset belongs to or where it was generated Note that this field will soon be deprecated in favor of a more standardized concept of Environment"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use the properties field instead Read only technical description for dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformNativeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#platformnativetype"},(0,n.yg)("code",null,"PlatformNativeType"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, do not use this field The logical type of the dataset ie table, stream, etc"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"uri",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties instead Native Dataset Uri Uri should not include any environment specific properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use tags field instead The structured tags associated with the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sub Types that this entity implements"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#viewproperties"},(0,n.yg)("code",null,"ViewProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"View related properties. Only relevant if subtypes field contains view."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"runs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataprocessinstanceresult"},(0,n.yg)("code",null,"DataProcessInstanceResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"History of datajob runs that either produced or consumed this dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"direction",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#relationshipdirection"},(0,n.yg)("code",null,"RelationshipDirection!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"siblings",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#siblingproperties"},(0,n.yg)("code",null,"SiblingProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Metadata about the datasets siblings"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"siblingsSearch",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#scrollresults"},(0,n.yg)("code",null,"ScrollResults"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Executes a search on only the siblings of an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#scrollacrossentitiesinput"},(0,n.yg)("code",null,"ScrollAcrossEntitiesInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fineGrainedLineages",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#finegrainedlineage"},(0,n.yg)("code",null,"[FineGrainedLineage!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Lineage information for the column-level. Includes a list of objects detailing which columns are upstream and which are downstream of each other. The upstream and downstream columns are from datasets."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incidents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityincidentsresult"},(0,n.yg)("code",null,"EntityIncidentsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Incidents associated with the Dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstate"},(0,n.yg)("code",null,"IncidentState"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident state to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"stage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstage"},(0,n.yg)("code",null,"IncidentStage"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident stage to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"priority",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentpriority"},(0,n.yg)("code",null,"IncidentPriority"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional incident priority to filter by, defaults to any state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assigneeUrns",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional assignee urns for an incident."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 0."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional start offset, defaults to 20."))))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"testResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#testresults"},(0,n.yg)("code",null,"TestResults"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The results of evaluating tests"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versionproperties"},(0,n.yg)("code",null,"VersionProperties"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"datasetassertioninfo"},"DatasetAssertionInfo"),(0,n.yg)("p",null,"Detailed information about a Dataset Assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"datasetUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the dataset that the assertion is related to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"scope",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#datasetassertionscope"},(0,n.yg)("code",null,"DatasetAssertionScope!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The scope of the Dataset assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldref"},(0,n.yg)("code",null,"[SchemaFieldRef!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The fields serving as input to the assertion. Empty if there are none."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aggregation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdaggregation"},(0,n.yg)("code",null,"AssertionStdAggregation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized assertion operator"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized assertion operator"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standard parameters required for the assertion. e.g. min_value, max_value, value, columns"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The native operator for the assertion. For Great Expectations, this will contain the original expectation name."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeParameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native parameters required for the assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"logic",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Logic comprising a raw, unstructured assertion."))))),(0,n.yg)("h2",{id:"datasetdeprecation"},"DatasetDeprecation"),(0,n.yg)("p",null,"Deprecated, use Deprecation instead\nInformation about Dataset deprecation status\nNote that this model will soon be migrated to a more general purpose Entity status"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecated",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the dataset has been deprecated by owner"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"decommissionTime",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time user plan to decommission this dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"note",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional information about the dataset deprecation plan"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The user who will be credited for modifying this deprecation content"))))),(0,n.yg)("h2",{id:"dataseteditableproperties"},"DatasetEditableProperties"),(0,n.yg)("p",null,"Dataset properties that are editable via the UI This represents logical metadata,\nas opposed to technical metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Editable name of the Dataset"))))),(0,n.yg)("h2",{id:"datasetfieldprofile"},"DatasetFieldProfile"),(0,n.yg)("p",null,"An individual Dataset Field Profile"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standardized path of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique value count for the field across the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueProportion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#float"},(0,n.yg)("code",null,"Float"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The proportion of rows with unique values across the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nullCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of NULL row values across the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nullProportion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#float"},(0,n.yg)("code",null,"Float"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The proportion of rows with NULL values across the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"min",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The min value for the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"max",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The max value for the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mean",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The mean value for the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"median",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The median value for the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"stdev",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard deviation for the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sampleValues",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of sample values for the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"quantiles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#quantile"},(0,n.yg)("code",null,"[Quantile!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sorted list of quantile cutoffs for the field, in ascending order Only for numerical columns"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"distinctValueFrequencies",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#valuefrequency"},(0,n.yg)("code",null,"[ValueFrequency!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Volume of each column value for a low-cardinality / categorical field"))))),(0,n.yg)("h2",{id:"datasetfilter"},"DatasetFilter"),(0,n.yg)("p",null,"Describes a generic filter on a dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#datasetfiltertype"},(0,n.yg)("code",null,"DatasetFilterType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Type of partition"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sql",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The raw query if using a SQL FilterType"))))),(0,n.yg)("h2",{id:"datasetprofile"},"DatasetProfile"),(0,n.yg)("p",null,"A Dataset Profile associated with a Dataset, containing profiling statistics about the Dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#timeseriesaspect"},"TimeSeriesAspect"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"timestampMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the profile was reported"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rowCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional row count of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"columnCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional column count of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sizeInBytes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The storage size in bytes"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldProfiles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetfieldprofile"},(0,n.yg)("code",null,"[DatasetFieldProfile!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional set of per field statistics obtained in the profile"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"partitionSpec",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#partitionspec"},(0,n.yg)("code",null,"PartitionSpec"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about the partition that was profiled"))))),(0,n.yg)("h2",{id:"datasetproperties"},"DatasetProperties"),(0,n.yg)("p",null,"Additional read only properties about a Dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the dataset used in display"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"qualifiedName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Fully-qualified name of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"origin",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fabrictype"},(0,n.yg)("code",null,"FabricType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Environment in which the dataset belongs to or where it was generated Note that this field will soon be deprecated in favor of a more standardized concept of Environment"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Read only technical description for dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"External URL associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Created timestamp millis associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdActor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Actor associated with the Dataset's created timestamp"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Last Modified timestamp millis associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModifiedActor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Actor associated with the Dataset's lastModified timestamp. Deprecated - Use lastModified.actor instead."))))),(0,n.yg)("h2",{id:"datasetstatssummary"},"DatasetStatsSummary"),(0,n.yg)("p",null,"Experimental - subject to change. A summary of usage metrics about a Dataset."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"queryCountLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The query count in the past 30 days"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueUserCountLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique user count in the past 30 days"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"topUsersLast30Days",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The top users in the past 30 days"))))),(0,n.yg)("h2",{id:"datatransform"},"DataTransform"),(0,n.yg)("p",null,"Information about a transformation applied to data assets"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"queryStatement",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#querystatement"},(0,n.yg)("code",null,"QueryStatement"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The transformation may be defined by a query statement"))))),(0,n.yg)("h2",{id:"datatransformlogic"},"DataTransformLogic"),(0,n.yg)("p",null,"Information about transformations applied to data assets"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"transforms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datatransform"},(0,n.yg)("code",null,"[DataTransform!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of transformations applied"))))),(0,n.yg)("h2",{id:"datatypeentity"},"DataTypeEntity"),(0,n.yg)("p",null,"A data type registered in DataHub"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key associated with the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datatypeinfo"},(0,n.yg)("code",null,"DataTypeInfo!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Info about this type including its name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"datatypeinfo"},"DataTypeInfo"),(0,n.yg)("p",null,"Properties about an individual data type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#stddatatype"},(0,n.yg)("code",null,"StdDataType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard data type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"qualifiedName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The fully qualified name of the type. This includes its namespace"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name of this type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of this type"))))),(0,n.yg)("h2",{id:"daterange"},"DateRange"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"end",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"debugaccessresult"},"DebugAccessResult"),(0,n.yg)("p",null,"Experimental API result to debug Access for users.\nBackward incompatible changes will be made without notice in the future."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"roles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Roles that the user has."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Groups that the user belongs to."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groupsWithRoles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of groups that the user is assigned to AND where the group has a role. This is a subset of the groups property."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rolesViaGroups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Final set of roles that are coming through groups. If not role assigned to groups, then this would be empty."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"allRoles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Union of ",(0,n.yg)("code",null,"roles")," + ",(0,n.yg)("code",null,"rolesViaGroups")," that the user has."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"policies",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of Policy that apply to this user directly or indirectly."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of privileges that this user has directly or indirectly."))))),(0,n.yg)("h2",{id:"deprecation"},"Deprecation"),(0,n.yg)("p",null,"Information about Metadata Entity deprecation status"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecated",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the entity has been deprecated by owner"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"decommissionTime",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time user plan to decommission this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"note",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional information about the entity deprecation plan"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The user who will be credited for modifying this deprecation content"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actorEntity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The hydrated user who will be credited for modifying this deprecation content"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"replacement",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The optional replacement entity"))))),(0,n.yg)("h2",{id:"displayproperties"},"DisplayProperties"),(0,n.yg)("p",null,"Properties related to how the entity is displayed in the Datahub UI"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"colorHex",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Color associated with the entity in Hex. For example #FFFFFF"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"icon",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#iconproperties"},(0,n.yg)("code",null,"IconProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The icon associated with the entity"))))),(0,n.yg)("h2",{id:"docpropagationsettings"},"DocPropagationSettings"),(0,n.yg)("p",null,"Global (platform-level) settings related to the doc propagation feature"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"docColumnPropagation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The default doc propagation setting for the platform."))))),(0,n.yg)("h2",{id:"documentation"},"Documentation"),(0,n.yg)("p",null,"Object containing the documentation aspect for an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"documentations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#documentationassociation"},(0,n.yg)("code",null,"[DocumentationAssociation!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties on this entity"))))),(0,n.yg)("h2",{id:"documentationassociation"},"DocumentationAssociation"),(0,n.yg)("p",null,"Object containing the documentation aspect for an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"documentation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties on this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"attribution",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#metadataattribution"},(0,n.yg)("code",null,"MetadataAttribution"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about who, why, and how this metadata was applied"))))),(0,n.yg)("h2",{id:"domain"},"Domain"),(0,n.yg)("p",null,"A domain, or a logical grouping of Metadata Entities"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the domain"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Id of the domain"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainproperties"},(0,n.yg)("code",null,"DomainProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Properties about a domain"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchresults"},(0,n.yg)("code",null,"SearchResults"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Children entities inside of the Domain"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#domainentitiesinput"},(0,n.yg)("code",null,"DomainEntitiesInput"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentDomains",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentdomainsresult"},(0,n.yg)("code",null,"ParentDomainsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of parent domains for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#displayproperties"},(0,n.yg)("code",null,"DisplayProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display properties for the domain"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"domainassociation"},"DomainAssociation"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domain"},(0,n.yg)("code",null,"Domain!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The domain related to the assocaited urn"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the tagged urn for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"domainproperties"},"DomainProperties"),(0,n.yg)("p",null,"Properties about a domain"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the domain"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Domain"))))),(0,n.yg)("h2",{id:"downstreamentityrelationships"},"DownstreamEntityRelationships"),(0,n.yg)("p",null,"Deprecated, use relationships query instead"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshiplegacy"},(0,n.yg)("code",null,"[EntityRelationshipLegacy]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"editableschemafieldinfo"},"EditableSchemaFieldInfo"),(0,n.yg)("p",null,"Editable schema field metadata ie descriptions, tags, etc"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Flattened name of a field identifying the field the editable info is applied to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edited description of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use tags field instead Tags associated with the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags associated with the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Glossary terms associated with the field"))))),(0,n.yg)("h2",{id:"editableschemametadata"},"EditableSchemaMetadata"),(0,n.yg)("p",null,"Information about schema metadata that is editable via the UI"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableSchemaFieldInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#editableschemafieldinfo"},(0,n.yg)("code",null,"[EditableSchemaFieldInfo!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Editable schema field metadata"))))),(0,n.yg)("h2",{id:"editabletagproperties"},"EditableTagProperties"),(0,n.yg)("p",null,"Additional read write Tag properties\nDeprecated! Replaced by TagProperties."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A display name for the Tag"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A description of the Tag"))))),(0,n.yg)("h2",{id:"embed"},"Embed"),(0,n.yg)("p",null,"Information required to render an embedded version of an asset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"renderUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A URL which can be rendered inside of an iframe."))))),(0,n.yg)("h2",{id:"entityassertionsresult"},"EntityAssertionsResult"),(0,n.yg)("p",null,"A list of Assertions Associated with an Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of assertions in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of assertions in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assertions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertion"},(0,n.yg)("code",null,"[Assertion!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The assertions themselves"))))),(0,n.yg)("h2",{id:"entitycountresult"},"EntityCountResult"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"entitycountresults"},"EntityCountResults"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"counts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitycountresult"},(0,n.yg)("code",null,"[EntityCountResult!]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"entityincidentsresult"},"EntityIncidentsResult"),(0,n.yg)("p",null,"A list of Incidents Associated with an Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of assertions in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of assertions in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incidents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incident"},(0,n.yg)("code",null,"[Incident!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The incidents themselves"))))),(0,n.yg)("h2",{id:"entitylineageresult"},"EntityLineageResult"),(0,n.yg)("p",null,"A list of lineage information associated with a source Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Start offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of results in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filtered",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of results that were filtered out of the page (soft-deleted or non-existent)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#lineagerelationship"},(0,n.yg)("code",null,"[LineageRelationship!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Relationships in the result set"))))),(0,n.yg)("h2",{id:"entitypath"},"EntityPath"),(0,n.yg)("p",null,"An overview of the field that was matched in the entity search document"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"path",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"[Entity]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Path of entities between source and destination nodes"))))),(0,n.yg)("h2",{id:"entityprivileges"},"EntityPrivileges"),(0,n.yg)("p",null,"Shared privileges object across entities. Not all privileges apply to every entity."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"canManageChildren",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can create child entities under a parent entity. For example, can one create Terms/Node sunder a Glossary Node."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canManageEntity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can delete or move this entity."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditLineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can create or delete lineage edges for an entity."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditEmbed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user update the embed information"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditQueries",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the Queries for the entity (e.g. dataset)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the properties for the entity (e.g. dataset)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update tags for the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditGlossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update glossary terms for the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditDescription",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the description for the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditLinks",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the links for the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditDomains",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the domain(s) for the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditDataProducts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the data product(s) that the entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditOwners",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the owners for the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditIncidents",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the incidents for an asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditAssertions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update assertions for an asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditDeprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the deprecation status for an entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditSchemaFieldTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the schema field tags for a dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditSchemaFieldGlossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the schema field tags for a dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canEditSchemaFieldDescription",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not a user can update the schema field tags for a dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canViewDatasetUsage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can view dataset usage stats"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canViewDatasetProfile",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can view dataset profiling stats"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"canViewDatasetOperations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can view dataset operations"))))),(0,n.yg)("h2",{id:"entityprofileconfig"},"EntityProfileConfig"),(0,n.yg)("p",null,"Configuration for an entity profile"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"defaultTab",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The enum value from EntityProfileTab for which tab should be showed by default on entity profile pages. If null, rely on default sorting from React code."))))),(0,n.yg)("h2",{id:"entityprofileparams"},"EntityProfileParams"),(0,n.yg)("p",null,"Context to define the entity profile page"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urn of the entity being shown"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Type of the enity being displayed"))))),(0,n.yg)("h2",{id:"entityprofilesconfig"},"EntityProfilesConfig"),(0,n.yg)("p",null,"Configuration for different entity profiles"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprofileconfig"},(0,n.yg)("code",null,"EntityProfileConfig"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The configurations for a Domain entity profile"))))),(0,n.yg)("h2",{id:"entityrelationship"},"EntityRelationship"),(0,n.yg)("p",null,"A relationship between two entities TODO Migrate all entity relationships to this more generic model"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the relationship"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"direction",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#relationshipdirection"},(0,n.yg)("code",null,"RelationshipDirection!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The direction of the relationship relative to the source entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity that is related via lineage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the last modification of this relationship"))))),(0,n.yg)("h2",{id:"entityrelationshiplegacy"},"EntityRelationshipLegacy"),(0,n.yg)("p",null,"Deprecated, use relationships query instead"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entitywithrelationships"},(0,n.yg)("code",null,"EntityWithRelationships"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity that is related via lineage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the last modification of this relationship"))))),(0,n.yg)("h2",{id:"entityrelationshipsresult"},"EntityRelationshipsResult"),(0,n.yg)("p",null,"A list of relationship information associated with a source Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Start offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of results in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationship"},(0,n.yg)("code",null,"[EntityRelationship!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Relationships in the result set"))))),(0,n.yg)("h2",{id:"entitytypeentity"},"EntityTypeEntity"),(0,n.yg)("p",null,"An entity type registered in DataHub"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key associated with the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitytypeinfo"},(0,n.yg)("code",null,"EntityTypeInfo!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Info about this type including its name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"entitytypeinfo"},"EntityTypeInfo"),(0,n.yg)("p",null,"Properties about an individual entity type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard entity type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"qualifiedName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The fully qualified name of the entity type. This includes its namespace"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name of this type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of this type"))))),(0,n.yg)("h2",{id:"ermodelrelationship"},"ERModelRelationship"),(0,n.yg)("p",null,"An ERModelRelationship is a high-level abstraction that dictates what datasets fields are erModelRelationshiped."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the role"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique id for the erModelRelationship"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ermodelrelationshipproperties"},(0,n.yg)("code",null,"ERModelRelationshipProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of read only properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ermodelrelationshipeditableproperties"},(0,n.yg)("code",null,"ERModelRelationshipEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags used for searching dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of relationships between the source Entity and some destination entities with a given types"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"No-op required for the model"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"ermodelrelationshipeditableproperties"},"ERModelRelationshipEditableProperties"),(0,n.yg)("p",null,"Additional properties about a ERModelRelationship"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Documentation of the ERModelRelationship"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the ERModelRelationship"))))),(0,n.yg)("h2",{id:"ermodelrelationshipproperties"},"ERModelRelationshipProperties"),(0,n.yg)("p",null,"Additional properties about a ERModelRelationship"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the ERModelRelationship used in display"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"Dataset!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"destination",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"Dataset!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of destination"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationshipFieldMappings",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#relationshipfieldmapping"},(0,n.yg)("code",null,"[RelationshipFieldMapping!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The relationFieldMappings"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdTime",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Created timestamp millis associated with the ERModelRelationship"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdActor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Created actor urn associated with the ERModelRelationship"))))),(0,n.yg)("h2",{id:"ethicalconsiderations"},"EthicalConsiderations"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"data",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Does the model use any sensitive data eg, protected classes"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"humanLife",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Is the model intended to inform decisions about matters central to human life or flourishing eg, health or safety"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mitigations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"What risk mitigation strategies were used during model development"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"risksAndHarms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"What risks may be present in model usage Try to identify the potential recipients, likelihood, and magnitude of harms If these cannot be determined, note that they were considered but remain unknown"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"useCases",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Are there any known model use cases that are especially fraught This may connect directly to the intended use section"))))),(0,n.yg)("h2",{id:"executionrequest"},"ExecutionRequest"),(0,n.yg)("p",null,"Retrieve an ingestion execution request"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urn of the execution request"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique id for the execution request"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#executionrequestinput"},(0,n.yg)("code",null,"ExecutionRequestInput!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Input provided when creating the Execution Request"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"result",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#executionrequestresult"},(0,n.yg)("code",null,"ExecutionRequestResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Result of the execution request"))))),(0,n.yg)("h2",{id:"executionrequestinput"},"ExecutionRequestInput"),(0,n.yg)("p",null,"Input provided when creating an Execution Request"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"task",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the task to executed"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#executionrequestsource"},(0,n.yg)("code",null,"ExecutionRequestSource!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source of the execution request"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"arguments",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Arguments provided when creating the execution request"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"requestedAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the request was created"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actorUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urn of the actor who created this execution request"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executorId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'The specific executor to route the request to. If none is provided, a "default" executor is used.'))))),(0,n.yg)("h2",{id:"executionrequestresult"},"ExecutionRequestResult"),(0,n.yg)("p",null,"The result of an ExecutionRequest"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The result of the request, e.g. either SUCCEEDED or FAILED"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"startTimeMs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Time at which the task began"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"durationMs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Duration of the task"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"report",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A report about the ingestion run"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredReport",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredreport"},(0,n.yg)("code",null,"StructuredReport"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A structured report for this Execution Request"))))),(0,n.yg)("h2",{id:"executionrequestsource"},"ExecutionRequestSource"),(0,n.yg)("p",null,"Information about the source of an execution request"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the source, e.g. SCHEDULED_INGESTION_SOURCE"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ingestionSource",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the ingestion source, if applicable"))))),(0,n.yg)("h2",{id:"extraproperty"},"ExtraProperty"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the extra property"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Value of the extra property"))))),(0,n.yg)("h2",{id:"facetfilter"},"FacetFilter"),(0,n.yg)("p",null,"A single filter value"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of field to filter by"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"condition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#filteroperator"},(0,n.yg)("code",null,"FilterOperator"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Condition for the values."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"values",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Values, one of which the intended field should match."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"negated",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If the filter should or should not be matched"))))),(0,n.yg)("h2",{id:"facetmetadata"},"FacetMetadata"),(0,n.yg)("p",null,"Contains valid fields to filter search results further on"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of a field present in the search entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity corresponding to the facet"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aggregations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#aggregationmetadata"},(0,n.yg)("code",null,"[AggregationMetadata!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Aggregated search result counts by value of the field"))))),(0,n.yg)("h2",{id:"featureflagsconfig"},"FeatureFlagsConfig"),(0,n.yg)("p",null,"Configurations related to DataHub Views feature"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"readOnlyModeEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether read only mode is enabled on an instance. Right now this only affects ability to edit user profile image URL but can be extended."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showSearchFiltersV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether search filters V2 should be shown or the default filter side-panel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showBrowseV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether browse V2 sidebar should be shown"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformBrowseV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether browse v2 is platform mode, which means that platforms are displayed instead of entity types at the root."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineageGraphV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether to show the new lineage visualization."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showAcrylInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether we should show CTAs in the UI related to moving to DataHub Cloud by DataHub."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"erModelRelationshipFeatureEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether ERModelRelationship Tables Feature should be shown."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showAccessManagement",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether we should show AccessManagement tab in the datahub UI."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nestedDomainsEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'Enables the nested Domains feature that allows users to have sub-Domains. If this is off, Domains appear "flat" again.'))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"businessAttributeEntityEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether business attribute entity should be shown"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataContractsEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether data contracts should be enabled"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableDatasetNameEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether dataset names are editable"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"themeV2Enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Allows the V2 theme to be turned on. Includes new UX for home page, search, entity profiles, and lineage. If false, then the V2 experience will be unavailable even if themeV2Default or themeV2Toggleable are true."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"themeV2Default",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sets the default theme to V2. If ",(0,n.yg)("code",null,"themeV2Toggleable")," is set, then users can toggle between V1 and V2. If not, then the default is the only option."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"themeV2Toggleable",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Allows the V2 theme to be toggled by users."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaFieldCLLEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Enables links to schema field-level lineage on lineage explorer."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showSeparateSiblings",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'If turned on, all siblings will be separated with no way to get to a "combined" sibling view'))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showManageStructuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If turned on, show the manage structured properties tab in the govern dropdown"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hideDbtSourceInLineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If turned on, hides DBT Sources from lineage by: i) Hiding the source in the lineage graph, if it has no downstreams ii) Swapping to the source's sibling urn on V2 lineage graph iii) Representing source sibling as a merged node, with both icons on graph and combined version in sidebar"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaFieldLineageIgnoreStatus",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If turned on, schema field lineage will always fetch ghost entities and present them as real"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showNavBarRedesign",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If turned on, show the newly designed nav bar in the V2 experience"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showAutoCompleteResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If turned on, we display auto complete results. Otherwise, do not."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityVersioningEnabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If turned on, exposes the versioning feature by allowing users to link entities in the UI."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showHasSiblingsFilter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'If turned on, show the "has siblings" filter in search'))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showSearchBarAutocompleteRedesign",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If turned on, show the redesigned search bar's autocomplete"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showManageTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If enabled, users will be able to view the tags management experience"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showIntroducePage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If enabled, we will show the introduce page in the V2 UI experience to add a title and select platforms"))))),(0,n.yg)("h2",{id:"fieldassertioninfo"},"FieldAssertionInfo"),(0,n.yg)("p",null,"A definition of a Field (Column) assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fieldassertiontype"},(0,n.yg)("code",null,"FieldAssertionType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the field assertion being monitored."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The entity targeted by this Field check."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldValuesAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldvaluesassertion"},(0,n.yg)("code",null,"FieldValuesAssertion"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The definition of an assertion that validates individual values of a field / column for a set of rows."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldMetricAssertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldmetricassertion"},(0,n.yg)("code",null,"FieldMetricAssertion"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The definition of an assertion that validates a common metric obtained about a field / column for a set of rows."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetfilter"},(0,n.yg)("code",null,"DatasetFilter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A definition of the specific filters that should be applied, when performing monitoring. If not provided, there is no filter, and the full table is under consideration."))))),(0,n.yg)("h2",{id:"fieldformpromptassociation"},"FieldFormPromptAssociation"),(0,n.yg)("p",null,"An association for field-level form prompts"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The schema field path"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resolvedauditstamp"},(0,n.yg)("code",null,"ResolvedAuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When and by whom this form field-level prompt has last been modified"))))),(0,n.yg)("h2",{id:"fieldmetricassertion"},"FieldMetricAssertion"),(0,n.yg)("p",null,"A definition of a Field Metric assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldspec"},(0,n.yg)("code",null,"SchemaFieldSpec!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The field under evaluation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metric",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fieldmetrictype"},(0,n.yg)("code",null,"FieldMetricType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific metric to assert against."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The predicate to evaluate against the metric for the field / column."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standard parameters required for the assertion."))))),(0,n.yg)("h2",{id:"fieldtransform"},"FieldTransform"),(0,n.yg)("p",null,"Definition of a transform applied to the values of a column / field."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fieldtransformtype"},(0,n.yg)("code",null,"FieldTransformType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the field transform."))))),(0,n.yg)("h2",{id:"fieldusagecounts"},"FieldUsageCounts"),(0,n.yg)("p",null,"The usage for a particular Dataset field"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The path of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The count of usages"))))),(0,n.yg)("h2",{id:"fieldvaluesassertion"},"FieldValuesAssertion"),(0,n.yg)("p",null,"A definition of a Field Values assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldspec"},(0,n.yg)("code",null,"SchemaFieldSpec!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The field under evaluation."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"transform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldtransform"},(0,n.yg)("code",null,"FieldTransform"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional transform to apply to field values before evaluating the operator."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The predicate to evaluate against a single value of the field. Depending on the operator, parameters may be required"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standard parameters required for the assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"failThreshold",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldvaluesfailthreshold"},(0,n.yg)("code",null,"FieldValuesFailThreshold!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional customization about when the assertion should be officially considered failing."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"excludeNulls",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether to ignore or allow nulls when running the values assertion."))))),(0,n.yg)("h2",{id:"fieldvaluesfailthreshold"},"FieldValuesFailThreshold"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fieldvaluesfailthresholdtype"},(0,n.yg)("code",null,"FieldValuesFailThresholdType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of failure threshold."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value of the threshold, either representing a count or percentage."))))),(0,n.yg)("h2",{id:"finegrainedlineage"},"FineGrainedLineage"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"upstreams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldref"},(0,n.yg)("code",null,"[SchemaFieldRef!]"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"downstreams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldref"},(0,n.yg)("code",null,"[SchemaFieldRef!]"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"query",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"transformOperation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"fixedintervalschedule"},"FixedIntervalSchedule"),(0,n.yg)("p",null,"A fixed interval schedule."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"unit",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#dateinterval"},(0,n.yg)("code",null,"DateInterval!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Interval unit such as minute/hour/day etc."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"multiple",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"How many units. Defaults to 1."))))),(0,n.yg)("h2",{id:"floatbox"},"FloatBox"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"floatValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#float"},(0,n.yg)("code",null,"Float!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"foreignkeyconstraint"},"ForeignKeyConstraint"),(0,n.yg)("p",null,"Metadata around a foreign key constraint between two datasets"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The human-readable name of the constraint"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"foreignFields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldentity"},(0,n.yg)("code",null,"[SchemaFieldEntity]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of fields in the foreign dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceFields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldentity"},(0,n.yg)("code",null,"[SchemaFieldEntity]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of fields in this dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"foreignDataset",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"Dataset"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The foreign dataset for easy reference"))))),(0,n.yg)("h2",{id:"form"},"Form"),(0,n.yg)("p",null,"A form that helps with filling out metadata on an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key associated with the Form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forminfo"},(0,n.yg)("code",null,"FormInfo!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about this form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"formactorassignment"},"FormActorAssignment"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"owners",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the form should be completed by owners of the assets which the form is applied to."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"users",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Urns of the users that the form is assigned to. If null, then no users are specifically targeted."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpgroup"},(0,n.yg)("code",null,"[CorpGroup!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Groups that the form is assigned to. If null, then no groups are specifically targeted."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"isAssignedToMe",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not the current actor is universally assigned to this form, either by user or by group. Note that this does not take into account entity ownership based assignment."))))),(0,n.yg)("h2",{id:"formassociation"},"FormAssociation"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"form",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#form"},(0,n.yg)("code",null,"Form!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The form related to the associated urn"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the urn with the form on it for tracking purposes e.g. when sibling nodes are merged together"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incompletePrompts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formpromptassociation"},(0,n.yg)("code",null,"[FormPromptAssociation!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The prompt that still need to be completed for this form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"completedPrompts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formpromptassociation"},(0,n.yg)("code",null,"[FormPromptAssociation!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The prompt that are already completed for this form"))))),(0,n.yg)("h2",{id:"forminfo"},"FormInfo"),(0,n.yg)("p",null,"Properties about an individual Form"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of this form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of this form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#formtype"},(0,n.yg)("code",null,"FormType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of this form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"prompts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formprompt"},(0,n.yg)("code",null,"[FormPrompt!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The prompt for this form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actors",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formactorassignment"},(0,n.yg)("code",null,"FormActorAssignment!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actors that are assigned to complete the forms for the associated entities."))))),(0,n.yg)("h2",{id:"formprompt"},"FormPrompt"),(0,n.yg)("p",null,"A prompt shown to the user to collect metadata about an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The ID of this prompt. This will be globally unique."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The title of this prompt"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"formUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the parent form that this prompt is part of"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of this prompt"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#formprompttype"},(0,n.yg)("code",null,"FormPromptType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of this prompt"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"required",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the prompt is required for the form to be considered completed."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredPropertyParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredpropertyparams"},(0,n.yg)("code",null,"StructuredPropertyParams"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The params for this prompt if type is STRUCTURED_PROPERTY"))))),(0,n.yg)("h2",{id:"formpromptassociation"},"FormPromptAssociation"),(0,n.yg)("p",null,"A form that helps with filling out metadata on an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique id of the form prompt"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resolvedauditstamp"},(0,n.yg)("code",null,"ResolvedAuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When and by whom this form prompt has last been modified"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldAssociations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formpromptfieldassociations"},(0,n.yg)("code",null,"FormPromptFieldAssociations"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional information about the field-level prompt associations."))))),(0,n.yg)("h2",{id:"formpromptfieldassociations"},"FormPromptFieldAssociations"),(0,n.yg)("p",null,"Information about the field-level prompt associations."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"completedFieldPrompts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldformpromptassociation"},(0,n.yg)("code",null,"[FieldFormPromptAssociation!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If this form prompt is for fields, this will contain a list of completed associations per field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incompleteFieldPrompts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldformpromptassociation"},(0,n.yg)("code",null,"[FieldFormPromptAssociation!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If this form prompt is for fields, this will contain a list of incomlete associations per field"))))),(0,n.yg)("h2",{id:"forms"},"Forms"),(0,n.yg)("p",null,"Requirements forms that are assigned to an entity."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"incompleteForms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formassociation"},(0,n.yg)("code",null,"[FormAssociation!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Forms that are still incomplete."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"completedForms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formassociation"},(0,n.yg)("code",null,"[FormAssociation!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Forms that have been completed."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"verifications",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#formverificationassociation"},(0,n.yg)("code",null,"[FormVerificationAssociation!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Verifications that have been applied to the entity via completed forms."))))),(0,n.yg)("h2",{id:"formverificationassociation"},"FormVerificationAssociation"),(0,n.yg)("p",null,"Verification object that has been applied to the entity via a completed form."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"form",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#form"},(0,n.yg)("code",null,"Form!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The form related to the associated urn"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resolvedauditstamp"},(0,n.yg)("code",null,"ResolvedAuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When this verification was applied to this entity"))))),(0,n.yg)("h2",{id:"freshnessassertioninfo"},"FreshnessAssertionInfo"),(0,n.yg)("p",null,"Information about an Freshness assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the entity that the Freshness assertion is related to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#freshnessassertiontype"},(0,n.yg)("code",null,"FreshnessAssertionType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the Freshness Assertion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schedule",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#freshnessassertionschedule"},(0,n.yg)("code",null,"FreshnessAssertionSchedule!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Produce FAIL Assertion Result if the asset is not updated on the cadence and within the time range described by the schedule."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetfilter"},(0,n.yg)("code",null,"DatasetFilter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A filter applied when querying an external Dataset or Table"))))),(0,n.yg)("h2",{id:"freshnessassertionschedule"},"FreshnessAssertionSchedule"),(0,n.yg)("p",null,"Attributes defining a single Freshness schedule."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#freshnessassertionscheduletype"},(0,n.yg)("code",null,"FreshnessAssertionScheduleType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of schedule"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cron",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#freshnesscronschedule"},(0,n.yg)("code",null,"FreshnessCronSchedule"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A cron schedule. This is populated if the type is CRON."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fixedInterval",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fixedintervalschedule"},(0,n.yg)("code",null,"FixedIntervalSchedule"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A fixed interval schedule. This is populated if the type is FIXED_INTERVAL."))))),(0,n.yg)("h2",{id:"freshnesscontract"},"FreshnessContract"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"assertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertion"},(0,n.yg)("code",null,"Assertion!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The assertion representing the Freshness contract."))))),(0,n.yg)("h2",{id:"freshnesscronschedule"},"FreshnessCronSchedule"),(0,n.yg)("p",null,"A cron-formatted schedule"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"cron",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A cron-formatted execution interval, as a cron string, e.g. 1 * * * *"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"timezone",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Timezone in which the cron interval applies, e.g. America/Los Angeles"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"windowStartOffsetMs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'An optional offset in milliseconds to SUBTRACT from the timestamp generated by the cron schedule to generate the lower bounds of the "Freshness window", or the window of time in which an event must have occurred in order for the Freshness to be considering passing. If left empty, the start of the Freshness window will be the ',(0,n.yg)("em",null,"end")," of the previously evaluated Freshness window."))))),(0,n.yg)("h2",{id:"freshnessstats"},"FreshnessStats"),(0,n.yg)("p",null,"Freshness stats for a query result.\nCaptures whether the query was served out of a cache, what the staleness was, etc."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"cached",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether a cache was used to respond to this query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"systemFreshness",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#systemfreshness"},(0,n.yg)("code",null,"[SystemFreshness]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The latest timestamp in millis of the system that was used to respond to this query In case a cache was consulted, this reflects the freshness of the cache In case an index was consulted, this reflects the freshness of the index"))))),(0,n.yg)("h2",{id:"getquickfiltersresult"},"GetQuickFiltersResult"),(0,n.yg)("p",null,"The result object when fetching quick filters"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"quickFilters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#quickfilter"},(0,n.yg)("code",null,"[QuickFilter]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The list of quick filters to render in the UI"))))),(0,n.yg)("h2",{id:"getrootglossarynodesresult"},"GetRootGlossaryNodesResult"),(0,n.yg)("p",null,"The result when getting Glossary entities"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"nodes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossarynode"},(0,n.yg)("code",null,"[GlossaryNode!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of Glossary Nodes without a parent node"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of nodes in the returned result"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of nodes in the result set"))))),(0,n.yg)("h2",{id:"getrootglossarytermsresult"},"GetRootGlossaryTermsResult"),(0,n.yg)("p",null,"The result when getting root GlossaryTerms"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"terms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterm"},(0,n.yg)("code",null,"[GlossaryTerm!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of Glossary Terms without a parent node"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of terms in the returned result"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of terms in the result set"))))),(0,n.yg)("h2",{id:"getschemablameresult"},"GetSchemaBlameResult"),(0,n.yg)("p",null,"Schema changes computed at a specific version."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#semanticversionstruct"},(0,n.yg)("code",null,"SemanticVersionStruct"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Selected semantic version"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaFieldBlameList",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldblame"},(0,n.yg)("code",null,"[SchemaFieldBlame!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of schema blame. Absent when there are no fields to return history for."))))),(0,n.yg)("h2",{id:"getschemaversionlistresult"},"GetSchemaVersionListResult"),(0,n.yg)("p",null,"Schema changes computed at a specific version."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"latestVersion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#semanticversionstruct"},(0,n.yg)("code",null,"SemanticVersionStruct"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Latest and current semantic version"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#semanticversionstruct"},(0,n.yg)("code",null,"SemanticVersionStruct"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Selected semantic version"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"semanticVersionList",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#semanticversionstruct"},(0,n.yg)("code",null,"[SemanticVersionStruct!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"All semantic versions. Absent when there are no versions."))))),(0,n.yg)("h2",{id:"gettimelineresult"},"GetTimelineResult"),(0,n.yg)("p",null,"Result of getting timeline from a specific version."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeTransactions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#changetransaction"},(0,n.yg)("code",null,"[ChangeTransaction!]!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"globaltags"},"GlobalTags"),(0,n.yg)("p",null,"Tags attached to a particular Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#tagassociation"},(0,n.yg)("code",null,"[TagAssociation!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The set of tags attached to the Metadata Entity"))))),(0,n.yg)("h2",{id:"globalviewssettings"},"GlobalViewsSettings"),(0,n.yg)("p",null,"Global (platform-level) settings related to the Views feature"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"defaultView",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The global default View. If a user does not have a personal default, then this will be the default view."))))),(0,n.yg)("h2",{id:"glossarynode"},"GlossaryNode"),(0,n.yg)("p",null,"A Glossary Node, or a directory in a Business Glossary represents a container of\nGlossary Terms or other Glossary Nodes"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossarynodeproperties"},(0,n.yg)("code",null,"GlossaryNodeProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional properties associated with the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentNodes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentnodesresult"},(0,n.yg)("code",null,"ParentNodesResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of glossary nodes for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#displayproperties"},(0,n.yg)("code",null,"DisplayProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display properties for the glossary node"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"childrenCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossarynodechildrencount"},(0,n.yg)("code",null,"GlossaryNodeChildrenCount"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Carries information about where an entity originated from."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryChildrenSearch",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#scrollresults"},(0,n.yg)("code",null,"ScrollResults"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Executes a search on the children of this glossary node"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#scrollacrossentitiesinput"},(0,n.yg)("code",null,"ScrollAcrossEntitiesInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"glossarynodechildrencount"},"GlossaryNodeChildrenCount"),(0,n.yg)("p",null,"All of the parent nodes for GlossaryTerms and GlossaryNodes"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"termsCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of child glossary terms"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nodesCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of child glossary nodes"))))),(0,n.yg)("h2",{id:"glossarynodeproperties"},"GlossaryNodeProperties"),(0,n.yg)("p",null,"Additional read only properties about a Glossary Node"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the Glossary Node"))))),(0,n.yg)("h2",{id:"glossaryterm"},"GlossaryTerm"),(0,n.yg)("p",null,"A Glossary Term, or a node in a Business Glossary representing a standardized domain\ndata type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"A unique identifier for the Glossary Term. Deprecated - Use properties.name field instead."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hierarchicalName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"hierarchicalName of glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossarytermproperties"},(0,n.yg)("code",null,"GlossaryTermProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional properties associated with the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTermInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterminfo"},(0,n.yg)("code",null,"GlossaryTermInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Deprecated, use properties field instead Details of the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaMetadata",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemametadata"},(0,n.yg)("code",null,"SchemaMetadata"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema metadata of the dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentNodes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentnodesresult"},(0,n.yg)("code",null,"ParentNodesResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of glossary nodes for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))))),(0,n.yg)("h2",{id:"glossarytermassociation"},"GlossaryTermAssociation"),(0,n.yg)("p",null,"An edge between a Metadata Entity and a Glossary Term Modeled as a struct to permit\nadditional attributes\nTODO Consider whether this query should be serviced by the relationships field"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"term",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterm"},(0,n.yg)("code",null,"GlossaryTerm!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The glossary term itself"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'The actor who is responsible for the term being added"'))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the associated urn for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"glossaryterminfo"},"GlossaryTermInfo"),(0,n.yg)("p",null,"Deprecated, use GlossaryTermProperties instead\nInformation about a glossary term"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"definition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Definition of the glossary term. Deprecated - Use 'description' instead."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"termSource",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Term Source of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceRef",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Ref of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Url of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Properties of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rawSchema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema definition of glossary term"))))),(0,n.yg)("h2",{id:"glossarytermproperties"},"GlossaryTermProperties"),(0,n.yg)("p",null,"Additional read only properties about a Glossary Term"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Glossary Term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"definition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Definition of the glossary term. Deprecated - Use 'description' instead."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"termSource",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Term Source of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceRef",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Ref of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Url of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Properties of the glossary term"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rawSchema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema definition of glossary term"))))),(0,n.yg)("h2",{id:"glossaryterms"},"GlossaryTerms"),(0,n.yg)("p",null,"Glossary Terms attached to a particular Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"terms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossarytermassociation"},(0,n.yg)("code",null,"[GlossaryTermAssociation!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The set of glossary terms attached to the Metadata Entity"))))),(0,n.yg)("h2",{id:"health"},"Health"),(0,n.yg)("p",null,"The resolved Health of an Asset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#healthstatustype"},(0,n.yg)("code",null,"HealthStatusType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An enum representing the type of health indicator"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#healthstatus"},(0,n.yg)("code",null,"HealthStatus!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An enum representing the resolved Health status of an Asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"message",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional message describing the resolved health status"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"causes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The causes responsible for the health status"))))),(0,n.yg)("h2",{id:"highlight"},"Highlight"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"body",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"homepageconfig"},"HomePageConfig"),(0,n.yg)("p",null,"Configurations related to the Search bar"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"firstInPersonalSidebar",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#personalsidebarsection"},(0,n.yg)("code",null,"PersonalSidebarSection!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The section that comes first on the personal sidebar on the homepage"))))),(0,n.yg)("h2",{id:"hyperparametermap"},"HyperParameterMap"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"key",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#hyperparametervaluetype"},(0,n.yg)("code",null,"HyperParameterValueType!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"iconproperties"},"IconProperties"),(0,n.yg)("p",null,"Properties describing an icon associated with an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"iconLibrary",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#iconlibrary"},(0,n.yg)("code",null,"IconLibrary"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source of the icon: e.g. Antd, Material, etc"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the icon"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"style",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Any modifier for the icon, this will be library-specific, e.g. filled/outlined, etc"))))),(0,n.yg)("h2",{id:"identitymanagementconfig"},"IdentityManagementConfig"),(0,n.yg)("p",null,"Configurations related to Identity Management"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether identity management screen is able to be shown in the UI"))))),(0,n.yg)("h2",{id:"incident"},"Incident"),(0,n.yg)("p",null,"An incident represents an active issue on a data asset."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incidentType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidenttype"},(0,n.yg)("code",null,"IncidentType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A custom type of incident. Present only if type is 'CUSTOM'"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional title associated with the incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional description associated with the incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incidentstatus"},(0,n.yg)("code",null,"IncidentStatus!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The status of an incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"priority",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentpriority"},(0,n.yg)("code",null,"IncidentPriority"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional priority of the incident."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"assignees",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#ownertype"},(0,n.yg)("code",null,"[OwnerType!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The users or groups are assigned to resolve the incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The entity that the incident is associated with."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incidentsource"},(0,n.yg)("code",null,"IncidentSource"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source of the incident, i.e. how it was generated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"startedAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional time at which the incident actually started (may be before the date it was raised)."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the incident was initially created"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard tags for the Incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of relationships between the source Entity and some destination entities with a given types"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"incidentsource"},"IncidentSource"),(0,n.yg)("p",null,"Details about the source of an incident, e.g. how it was created."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentsourcetype"},(0,n.yg)("code",null,"IncidentSourceType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the incident source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source of the incident. If the source type is ASSERTION_FAILURE, this will have the assertion that generated the incident."))))),(0,n.yg)("h2",{id:"incidentstatus"},"IncidentStatus"),(0,n.yg)("p",null,"Details about the status of an asset incident"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstate"},(0,n.yg)("code",null,"IncidentState!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The state of the incident"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"stage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incidentstage"},(0,n.yg)("code",null,"IncidentStage"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The lifecycle stage of the incident. Null means that no stage has been assigned."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"message",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional message associated with the status"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastUpdated",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time that the status last changed"))))),(0,n.yg)("h2",{id:"incrementingsegmentfieldtransformer"},"IncrementingSegmentFieldTransformer"),(0,n.yg)("p",null,"The definition of the transformer function that should be applied to a given field / column value in a dataset\nin order to determine the segment or bucket that it belongs to, which in turn is used to evaluate\nvolume assertions."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#incrementingsegmentfieldtransformertype"},(0,n.yg)("code",null,"IncrementingSegmentFieldTransformerType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The 'standard' operator type. Note that not all source systems will support all operators."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The 'native' transformer type, useful as a back door if a custom transformer is required. This field is required if the type is NATIVE."))))),(0,n.yg)("h2",{id:"incrementingsegmentrowcountchange"},"IncrementingSegmentRowCountChange"),(0,n.yg)("p",null,"Attributes defining an INCREMENTING_SEGMENT_ROW_COUNT_CHANGE volume assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"segment",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incrementingsegmentspec"},(0,n.yg)("code",null,"IncrementingSegmentSpec!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A specification of how the 'segment' can be derived using a column and an optional transformer function."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionvaluechangetype"},(0,n.yg)("code",null,"AssertionValueChangeType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the value used to evaluate the assertion: a fixed absolute value or a relative percentage."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The operator you'd like to apply to the row count value Note that only numeric operators are valid inputs: GREATER_THAN, GREATER_THAN_OR_EQUAL_TO, EQUAL_TO, LESS_THAN, LESS_THAN_OR_EQUAL_TO, BETWEEN."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parameters you'd like to provide as input to the operator. Note that only numeric parameter types are valid inputs: NUMBER."))))),(0,n.yg)("h2",{id:"incrementingsegmentrowcounttotal"},"IncrementingSegmentRowCountTotal"),(0,n.yg)("p",null,"Attributes defining an INCREMENTING_SEGMENT_ROW_COUNT_TOTAL volume assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"segment",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incrementingsegmentspec"},(0,n.yg)("code",null,"IncrementingSegmentSpec!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A specification of how the 'segment' can be derived using a column and an optional transformer function."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The operator you'd like to apply. Note that only numeric operators are valid inputs: GREATER_THAN, GREATER_THAN_OR_EQUAL_TO, EQUAL_TO, LESS_THAN, LESS_THAN_OR_EQUAL_TO, BETWEEN."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parameters you'd like to provide as input to the operator. Note that only numeric parameter types are valid inputs: NUMBER."))))),(0,n.yg)("h2",{id:"incrementingsegmentspec"},"IncrementingSegmentSpec"),(0,n.yg)("p",null,"Core attributes required to identify an incrementing segment in a table. This type is mainly useful\nfor tables that constantly increase with new rows being added on a particular cadence (e.g. fact or event tables)."),(0,n.yg)("p",null,"An incrementing segment represents a logical chunk of data which is INSERTED\ninto a dataset on a regular interval, along with the presence of a constantly-incrementing column\nvalue such as an event time, date partition, or last modified column."),(0,n.yg)("p",null,"An incrementing segment is principally identified by 2 key attributes combined:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},'A field or column that represents the incrementing value. New rows that are inserted will be identified using this column.\nNote that the value of this column may not by itself represent the "bucket" or the "segment" in which the row falls.')),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"[Optional]",' An transformer function that may be applied to the selected column value in order\nto obtain the final "segment identifier" or "bucket identifier". Rows that have the same value after applying the transformation\nwill be grouped into the same segment, using which the final value (e.g. row count) will be determined.'))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldspec"},(0,n.yg)("code",null,"SchemaFieldSpec!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The field to use to generate segments. It must be constantly incrementing as new rows are inserted."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"transformer",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incrementingsegmentfieldtransformer"},(0,n.yg)("code",null,"IncrementingSegmentFieldTransformer"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional transformer function to apply to the field in order to obtain the final segment or bucket identifier. If not provided, then no operator will be applied to the field. (identity function)"))))),(0,n.yg)("h2",{id:"ingestionconfig"},"IngestionConfig"),(0,n.yg)("p",null,"A set of configurations for an Ingestion Source"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"recipe",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The JSON-encoded recipe to use for ingestion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executorId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Advanced: The specific executor that should handle the execution request. Defaults to 'default'."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Advanced: The version of the ingestion framework to use"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"debugMode",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Advanced: Whether or not to run ingestion in debug mode"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"extraArgs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Advanced: Extra arguments for the ingestion run."))))),(0,n.yg)("h2",{id:"ingestionrun"},"IngestionRun"),(0,n.yg)("p",null,"The runs associated with an Ingestion Source managed by DataHub"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"executionRequestUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the execution request associated with the user"))))),(0,n.yg)("h2",{id:"ingestionschedule"},"IngestionSchedule"),(0,n.yg)("p",null,"A schedule associated with an Ingestion Source"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"timezone",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Time Zone abbreviation (e.g. GMT, EDT). Defaults to UTC."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"interval",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The cron-formatted interval to execute the ingestion source on"))))),(0,n.yg)("h2",{id:"ingestionsource"},"IngestionSource"),(0,n.yg)("p",null,"An Ingestion Source Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Ingestion Source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the source itself, e.g. mysql, bigquery, bigquery-usage. Should match the recipe."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name of the Ingestion Source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schedule",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ingestionschedule"},(0,n.yg)("code",null,"IngestionSchedule"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional schedule associated with the Ingestion Source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The data platform associated with this ingestion source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"config",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ingestionconfig"},(0,n.yg)("code",null,"IngestionConfig!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An type-specific set of configurations for the ingestion source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ingestionsourceexecutionrequests"},(0,n.yg)("code",null,"IngestionSourceExecutionRequests"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Previous requests to execute the ingestion source"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"ingestionsourceexecutionrequests"},"IngestionSourceExecutionRequests"),(0,n.yg)("p",null,"Requests for execution associated with an ingestion source"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of results to be returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"executionRequests",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#executionrequest"},(0,n.yg)("code",null,"[ExecutionRequest!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The execution request objects comprising the result set"))))),(0,n.yg)("h2",{id:"inputfield"},"InputField"),(0,n.yg)("p",null,"Input field of the chart"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaFieldUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaField",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafield"},(0,n.yg)("code",null,"SchemaField"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"inputfields"},"InputFields"),(0,n.yg)("p",null,"Input fields of the chart"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#inputfield"},(0,n.yg)("code",null,"[InputField]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"institutionalmemory"},"InstitutionalMemory"),(0,n.yg)("p",null,"Institutional memory metadata, meaning internal links and pointers related to an Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"elements",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemorymetadata"},(0,n.yg)("code",null,"[InstitutionalMemoryMetadata!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of records that represent the institutional memory or internal documentation of an entity"))))),(0,n.yg)("h2",{id:"institutionalmemorymetadata"},"InstitutionalMemoryMetadata"),(0,n.yg)("p",null,"An institutional memory resource about a particular Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"url",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Link to a document or wiki page or another internal resource"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"label",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Label associated with the URL"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"author",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: Use `actor`"),(0,n.yg)("p",null,"The author of this metadata Deprecated! Use actor instead for users or groups."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#resolvedactor"},(0,n.yg)("code",null,"ResolvedActor!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The author of this metadata"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An AuditStamp corresponding to the creation of this resource"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use label instead Description of the resource"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the owned urn for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"intbox"},"IntBox"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"intValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"intendeduse"},"IntendedUse"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"primaryUses",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Primary Use cases for the model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"primaryUsers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#intendedusertype"},(0,n.yg)("code",null,"[IntendedUserType!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Primary Intended Users"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"outOfScopeUses",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Out of scope uses of the MLModel"))))),(0,n.yg)("h2",{id:"invitetoken"},"InviteToken"),(0,n.yg)("p",null,"Token that allows users to sign up as a native user"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"inviteToken",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The invite token"))))),(0,n.yg)("h2",{id:"keyvalueschema"},"KeyValueSchema"),(0,n.yg)("p",null,"Information about a raw Key Value Schema"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"keySchema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Raw key schema"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"valueSchema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Raw value schema"))))),(0,n.yg)("h2",{id:"lineageconfig"},"LineageConfig"),(0,n.yg)("p",null,"Configurations related to Lineage"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"supportsImpactAnalysis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the backend support impact analysis feature"))))),(0,n.yg)("h2",{id:"lineagerelationship"},"LineageRelationship"),(0,n.yg)("p",null,"Metadata about a lineage relationship between two entities"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the relationship"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity that is related via lineage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"degree",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Degree of relationship (number of hops to get to entity)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdOn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Timestamp for when this lineage relationship was created. Could be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdActor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actor who created this lineage relationship. Could be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"updatedOn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Timestamp for when this lineage relationship was last updated. Could be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"updatedActor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actor who last updated this lineage relationship. Could be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"isManual",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether this edge is a manual edge. Could be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"paths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitypath"},(0,n.yg)("code",null,"[EntityPath]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The paths traversed for this relationship"))))),(0,n.yg)("h2",{id:"linkparams"},"LinkParams"),(0,n.yg)("p",null,"Parameters required to specify the page to land once clicked"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchparams"},(0,n.yg)("code",null,"SearchParams"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Context to define the search page"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityProfileParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprofileparams"},(0,n.yg)("code",null,"EntityProfileParams"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Context to define the entity profile page"))))),(0,n.yg)("h2",{id:"listaccesstokenresult"},"ListAccessTokenResult"),(0,n.yg)("p",null,"Results returned when listing access tokens"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of results to be returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tokens",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#accesstokenmetadata"},(0,n.yg)("code",null,"[AccessTokenMetadata!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The token metadata themselves"))))),(0,n.yg)("h2",{id:"listbusinessattributesresult"},"ListBusinessAttributesResult"),(0,n.yg)("p",null,"The result obtained when listing Business Attribute"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Business Attributes in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Business Attributes in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"businessAttributes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#businessattribute"},(0,n.yg)("code",null,"[BusinessAttribute!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Business Attributes"))))),(0,n.yg)("h2",{id:"listdomainsresult"},"ListDomainsResult"),(0,n.yg)("p",null,"The result obtained when listing DataHub Domains"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Domains in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Domains in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domains",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domain"},(0,n.yg)("code",null,"[Domain!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domains themselves"))))),(0,n.yg)("h2",{id:"listgroupsresult"},"ListGroupsResult"),(0,n.yg)("p",null,"The result obtained when listing DataHub Groups"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Policies in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Policies in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpgroup"},(0,n.yg)("code",null,"[CorpGroup!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The groups themselves"))))),(0,n.yg)("h2",{id:"listingestionsourcesresult"},"ListIngestionSourcesResult"),(0,n.yg)("p",null,"Results returned when listing ingestion sources"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of results to be returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ingestionSources",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ingestionsource"},(0,n.yg)("code",null,"[IngestionSource!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Ingestion Sources themselves"))))),(0,n.yg)("h2",{id:"listownershiptypesresult"},"ListOwnershipTypesResult"),(0,n.yg)("p",null,"Results when listing custom ownership types."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of results to be returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownershipTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownershiptypeentity"},(0,n.yg)("code",null,"[OwnershipTypeEntity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Custom Ownership Types themselves"))))),(0,n.yg)("h2",{id:"listpoliciesresult"},"ListPoliciesResult"),(0,n.yg)("p",null,"The result obtained when listing DataHub Access Policies"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Policies in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Policies in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"policies",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#policy"},(0,n.yg)("code",null,"[Policy!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Policies themselves"))))),(0,n.yg)("h2",{id:"listpostsresult"},"ListPostsResult"),(0,n.yg)("p",null,"The result obtained when listing Posts"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Roles in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Roles in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"posts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#post"},(0,n.yg)("code",null,"[Post!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Posts themselves"))))),(0,n.yg)("h2",{id:"listqueriesresult"},"ListQueriesResult"),(0,n.yg)("p",null,"Results when listing entity queries"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of results to be returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"queries",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#queryentity"},(0,n.yg)("code",null,"[QueryEntity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Queries themselves"))))),(0,n.yg)("h2",{id:"listrecommendationsresult"},"ListRecommendationsResult"),(0,n.yg)("p",null,"Results returned by the ListRecommendations query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"modules",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#recommendationmodule"},(0,n.yg)("code",null,"[RecommendationModule!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of modules to show"))))),(0,n.yg)("h2",{id:"listrolesresult"},"ListRolesResult"),(0,n.yg)("p",null,"The result obtained when listing DataHub Roles"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Roles in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Roles in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"roles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubrole"},(0,n.yg)("code",null,"[DataHubRole!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Roles themselves"))))),(0,n.yg)("h2",{id:"listsecretsresult"},"ListSecretsResult"),(0,n.yg)("p",null,"Input for listing DataHub Secrets"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of results to be returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of results in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"secrets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#secret"},(0,n.yg)("code",null,"[Secret!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The secrets themselves"))))),(0,n.yg)("h2",{id:"listtestsresult"},"ListTestsResult"),(0,n.yg)("p",null,"The result obtained when listing DataHub Tests"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Tests in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Tests in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tests",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#test"},(0,n.yg)("code",null,"[Test!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Tests themselves"))))),(0,n.yg)("h2",{id:"listusersresult"},"ListUsersResult"),(0,n.yg)("p",null,"The result obtained when listing DataHub Users"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Policies in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Policies in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"users",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"[CorpUser!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The users themselves"))))),(0,n.yg)("h2",{id:"listviewsresult"},"ListViewsResult"),(0,n.yg)("p",null,"The result obtained when listing DataHub Views"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The starting offset of the result set returned"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of Views in the returned result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of Views in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"views",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datahubview"},(0,n.yg)("code",null,"[DataHubView!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Views themselves"))))),(0,n.yg)("h2",{id:"managedingestionconfig"},"ManagedIngestionConfig"),(0,n.yg)("p",null,"Configurations related to managed, UI based ingestion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether ingestion screen is enabled in the UI"))))),(0,n.yg)("h2",{id:"matchedfield"},"MatchedField"),(0,n.yg)("p",null,"An overview of the field that was matched in the entity search document"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the field that matched"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Value of the field that matched"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity if the value is an urn"))))),(0,n.yg)("h2",{id:"media"},"Media"),(0,n.yg)("p",null,"Media content"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#mediatype"},(0,n.yg)("code",null,"MediaType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of media"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"location",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The location of the media (a URL)"))))),(0,n.yg)("h2",{id:"metadataattribution"},"MetadataAttribution"),(0,n.yg)("p",null,"Information about who, why, and how this metadata was applied"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"time",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time this metadata was applied"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actor responsible for this metadata application"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source of this metadata application. If propagated, this will be an action."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceDetail",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Extra details about how this metadata was applied"))))),(0,n.yg)("h2",{id:"metrics"},"Metrics"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"performanceMeasures",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Measures of ML Model performance"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"decisionThreshold",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Decision Thresholds used if any"))))),(0,n.yg)("h2",{id:"mlfeature"},"MLFeature"),(0,n.yg)("p",null,"An ML Feature Metadata Entity Note that this entity is incubating"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the ML Feature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name for the ML Feature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"featureNamespace",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"MLFeature featureNamespace"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description about the ML Feature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#mlfeaturedatatype"},(0,n.yg)("code",null,"MLFeatureDataType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"MLFeature data type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the MLFeature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"featureProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlfeatureproperties"},(0,n.yg)("code",null,"MLFeatureProperties"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"ModelProperties metadata of the MLFeature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlfeatureproperties"},(0,n.yg)("code",null,"MLFeatureProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"ModelProperties metadata of the MLFeature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the MLFeature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the MLFeature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Deprecation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags applied to entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlfeatureeditableproperties"},(0,n.yg)("code",null,"MLFeatureEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"mlfeatureeditableproperties"},"MLFeatureEditableProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The edited description"))))),(0,n.yg)("h2",{id:"mlfeatureproperties"},"MLFeatureProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#mlfeaturedatatype"},(0,n.yg)("code",null,"MLFeatureDataType"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versiontag"},(0,n.yg)("code",null,"VersionTag"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sources",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"[Dataset]"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"mlfeaturetable"},"MLFeatureTable"),(0,n.yg)("p",null,"An ML Feature Table Entity Note that this entity is incubating"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the ML Feature Table"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the MLFeatureTable is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"MLFeatureTable description"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the MLFeatureTable"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlfeaturetableproperties"},(0,n.yg)("code",null,"MLFeatureTableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties associated the the ML Feature Table"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"featureTableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlfeaturetableproperties"},(0,n.yg)("code",null,"MLFeatureTableProperties"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead ModelProperties metadata of the MLFeature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the MLFeature"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the MLFeatureTable"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Deprecation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the ML Feature Table. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags applied to entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlfeaturetableeditableproperties"},(0,n.yg)("code",null,"MLFeatureTableEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"mlfeaturetableeditableproperties"},"MLFeatureTableEditableProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The edited description"))))),(0,n.yg)("h2",{id:"mlfeaturetableproperties"},"MLFeatureTableProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mlFeatures",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlfeature"},(0,n.yg)("code",null,"[MLFeature]"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mlPrimaryKeys",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlprimarykey"},(0,n.yg)("code",null,"[MLPrimaryKey]"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"mlhyperparam"},"MLHyperParam"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"mlmetric"},"MLMetric"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the metric (e.g. accuracy, precision, recall)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of what this metric measures"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The computed value of the metric"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Timestamp when this metric was recorded"))))),(0,n.yg)("h2",{id:"mlmodel"},"MLModel"),(0,n.yg)("p",null,"An ML Model Metadata Entity Note that this entity is incubating"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#supportsversions"},"SupportsVersions"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the ML model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"ML model display name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the MLModel is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"origin",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fabrictype"},(0,n.yg)("code",null,"FabricType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Fabric type where mlmodel belongs to or where it was generated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Human readable description for mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use tags field instead The standard tags for the ML Model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard tags for the ML Model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodelproperties"},(0,n.yg)("code",null,"MLModelProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only information about the ML Model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"intendedUse",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#intendeduse"},(0,n.yg)("code",null,"IntendedUse"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Intended use of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"factorPrompts",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodelfactorprompts"},(0,n.yg)("code",null,"MLModelFactorPrompts"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Factors metadata of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metrics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#metrics"},(0,n.yg)("code",null,"Metrics"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Metrics metadata of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"evaluationData",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#basedata"},(0,n.yg)("code",null,"[BaseData!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Evaluation Data of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"trainingData",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#basedata"},(0,n.yg)("code",null,"[BaseData!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Training Data of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"quantitativeAnalyses",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#quantitativeanalyses"},(0,n.yg)("code",null,"QuantitativeAnalyses"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Quantitative Analyses of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ethicalConsiderations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ethicalconsiderations"},(0,n.yg)("code",null,"EthicalConsiderations"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ethical Considerations of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"caveatsAndRecommendations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#caveatsandrecommendations"},(0,n.yg)("code",null,"CaveatsAndRecommendations"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Caveats and Recommendations of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceCode",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#sourcecode"},(0,n.yg)("code",null,"SourceCode"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Code"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cost",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#cost"},(0,n.yg)("code",null,"Cost"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Cost Aspect of the mlmodel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Deprecation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the ML Model. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodeleditableproperties"},(0,n.yg)("code",null,"MLModelEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versionproperties"},(0,n.yg)("code",null,"VersionProperties"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"mlmodeleditableproperties"},"MLModelEditableProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The edited description"))))),(0,n.yg)("h2",{id:"mlmodelfactorprompts"},"MLModelFactorPrompts"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"relevantFactors",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodelfactors"},(0,n.yg)("code",null,"[MLModelFactors!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"What are foreseeable salient factors for which MLModel performance may vary, and how were these determined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"evaluationFactors",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodelfactors"},(0,n.yg)("code",null,"[MLModelFactors!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Which factors are being reported, and why were these chosen"))))),(0,n.yg)("h2",{id:"mlmodelfactors"},"MLModelFactors"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Distinct categories with similar characteristics that are present in the evaluation data instances"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"instrumentation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Instrumentation used for MLModel"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"environment",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Environment in which the MLModel is deployed"))))),(0,n.yg)("h2",{id:"mlmodelgroup"},"MLModelGroup"),(0,n.yg)("p",null,"An ML Model Group Metadata Entity\nNote that this entity is incubating"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the ML Model Group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name for the Entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the MLModelGroup is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"origin",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fabrictype"},(0,n.yg)("code",null,"FabricType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Fabric type where MLModelGroup belongs to or where it was generated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Human readable description for MLModelGroup"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodelgroupproperties"},(0,n.yg)("code",null,"MLModelGroupProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties about the ML Model Group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the MLModelGroup"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the MLModelGroup"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Deprecation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the ML Model Group. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags applied to entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodelgroupeditableproperties"},(0,n.yg)("code",null,"MLModelGroupEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"mlmodelgroupeditableproperties"},"MLModelGroupEditableProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The edited description"))))),(0,n.yg)("h2",{id:"mlmodelgroupproperties"},"MLModelGroupProperties"),(0,n.yg)("p",null,"Properties describing a group of related ML models"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display name of the model group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Detailed description of the model group's purpose and contents"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When this model group was created"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When this model group was last modified"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versiontag"},(0,n.yg)("code",null,"VersionTag"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Version identifier for this model group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom key-value properties for the model group"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"URL to view this model group in the external system"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: Use `created` instead"),(0,n.yg)("p",null,"Deprecated creation timestamp @deprecated Use the 'created' field instead"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mlModelLineageInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodellineageinfo"},(0,n.yg)("code",null,"MLModelLineageInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information related to lineage to this model group"))))),(0,n.yg)("h2",{id:"mlmodellineageinfo"},"MLModelLineageInfo"),(0,n.yg)("p",null,"Represents lineage information for ML entities."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"trainingJobs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of jobs or processes used to train the model."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"downstreamJobs",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of jobs or processes that use this model."))))),(0,n.yg)("h2",{id:"mlmodelproperties"},"MLModelProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name of the model used in the UI"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Detailed description of the model's purpose and characteristics"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When the model was last modified"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Version identifier for this model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type/category of ML model (e.g. classification, regression)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hyperParameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#hyperparametermap"},(0,n.yg)("code",null,"HyperParameterMap"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Mapping of hyperparameter configurations"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hyperParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlhyperparam"},(0,n.yg)("code",null,"[MLHyperParam]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of hyperparameter settings used to train this model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"trainingMetrics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmetric"},(0,n.yg)("code",null,"[MLMetric]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Performance metrics from model training"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mlFeatures",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Names of ML features used by this model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags for categorizing and searching models"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"groups",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodelgroup"},(0,n.yg)("code",null,"[MLModelGroup]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Model groups this model belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional custom properties specific to this model"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"URL to view this model in external system"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When this model was created"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"date",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: Use `created` instead"),(0,n.yg)("p",null,"Deprecated timestamp for model creation @deprecated Use 'created' field instead"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"mlModelLineageInfo",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmodellineageinfo"},(0,n.yg)("code",null,"MLModelLineageInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information related to lineage to this model group"))))),(0,n.yg)("h2",{id:"mlprimarykey"},"MLPrimaryKey"),(0,n.yg)("p",null,"An ML Primary Key Entity Note that this entity is incubating"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the ML Primary Key"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastIngested",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The timestamp for the last time this entity was ingested"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"featureNamespace",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"MLPrimaryKey featureNamespace"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"MLPrimaryKey description"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#mlfeaturedatatype"},(0,n.yg)("code",null,"MLFeatureDataType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"MLPrimaryKey data type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlprimarykeyproperties"},(0,n.yg)("code",null,"MLPrimaryKeyProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only properties of the ML Primary Key"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"primaryKeyProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlprimarykeyproperties"},(0,n.yg)("code",null,"MLPrimaryKeyProperties"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties field instead MLPrimaryKeyProperties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the MLPrimaryKey"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the MLPrimaryKey"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the MLPrimaryKey"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Deprecation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags applied to entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlprimarykeyeditableproperties"},(0,n.yg)("code",null,"MLPrimaryKeyEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties about this asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprivileges"},(0,n.yg)("code",null,"EntityPrivileges"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Privileges given to a user relevant to this entity"))))),(0,n.yg)("h2",{id:"mlprimarykeyeditableproperties"},"MLPrimaryKeyEditableProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The edited description"))))),(0,n.yg)("h2",{id:"mlprimarykeyproperties"},"MLPrimaryKeyProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#mlfeaturedatatype"},(0,n.yg)("code",null,"MLFeatureDataType"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versiontag"},(0,n.yg)("code",null,"VersionTag"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sources",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"[Dataset]"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"mltrainingrunproperties"},"MLTrainingRunProperties"),(0,n.yg)("p",null,"Properties specific to an ML model training run instance"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique identifier for this training run"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"outputUrls",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of URLs to access training run outputs (e.g. model artifacts, logs)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hyperParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlhyperparam"},(0,n.yg)("code",null,"[MLHyperParam]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Hyperparameters used in this training run"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"trainingMetrics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#mlmetric"},(0,n.yg)("code",null,"[MLMetric]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Performance metrics recorded during this training run"))))),(0,n.yg)("h2",{id:"namedbar"},"NamedBar"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"segments",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#barsegment"},(0,n.yg)("code",null,"[BarSegment!]!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"namedline"},"NamedLine"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"data",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#numericdatapoint"},(0,n.yg)("code",null,"[NumericDataPoint!]!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"notebook"},"Notebook"),(0,n.yg)("p",null,"A Notebook Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#browsableentity"},"BrowsableEntity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tool",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Notebook tool name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"notebookId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An id unique within the Notebook tool"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#notebookinfo"},(0,n.yg)("code",null,"NotebookInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read only information about the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#notebookeditableproperties"},(0,n.yg)("code",null,"NotebookEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional read write properties about the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status metadata of the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"content",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#notebookcontent"},(0,n.yg)("code",null,"NotebookContent!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The content of this Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tags associated with the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataPlatformInstance",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatforminstance"},(0,n.yg)("code",null,"DataPlatformInstance"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific instance of the data platform that this entity belongs to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sub Types that this entity implements"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePaths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepath"},(0,n.yg)("code",null,"[BrowsePath!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse paths corresponding to the Notebook. If no Browse Paths have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"browsePathV2",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#browsepathv2"},(0,n.yg)("code",null,"BrowsePathV2"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The browse path V2 corresponding to an entity. If no Browse Paths V2 have been generated before, this will be null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"notebookcell"},"NotebookCell"),(0,n.yg)("p",null,"The Union of every NotebookCell"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"chartCell",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#chartcell"},(0,n.yg)("code",null,"ChartCell"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The chart cell content. The will be non-null only when all other cell field is null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"textCell",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#textcell"},(0,n.yg)("code",null,"TextCell"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The text cell content. The will be non-null only when all other cell field is null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"queryChell",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#querycell"},(0,n.yg)("code",null,"QueryCell"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The query cell content. The will be non-null only when all other cell field is null."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#notebookcelltype"},(0,n.yg)("code",null,"NotebookCellType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of this Notebook cell"))))),(0,n.yg)("h2",{id:"notebookcontent"},"NotebookContent"),(0,n.yg)("p",null,"The actual content in a Notebook"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"cells",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#notebookcell"},(0,n.yg)("code",null,"[NotebookCell!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The content of a Notebook which is composed by a list of NotebookCell"))))),(0,n.yg)("h2",{id:"notebookeditableproperties"},"NotebookEditableProperties"),(0,n.yg)("p",null,"Notebook properties that are editable via the UI This represents logical metadata,\nas opposed to technical metadata"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Notebook"))))),(0,n.yg)("h2",{id:"notebookinfo"},"NotebookInfo"),(0,n.yg)("p",null,"Additional read only information about a Notebook"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display of the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Native platform URL of the Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform specific metadata tuples"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeAuditStamps",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#changeauditstamps"},(0,n.yg)("code",null,"ChangeAuditStamps"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Captures information about who created/last modified/deleted this Notebook and when"))))),(0,n.yg)("h2",{id:"numbervalue"},"NumberValue"),(0,n.yg)("p",null,"Numeric property value"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"numberValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#float"},(0,n.yg)("code",null,"Float!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value of a number type property"))))),(0,n.yg)("h2",{id:"numericdatapoint"},"NumericDataPoint"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"x",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"y",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"operation"},"Operation"),(0,n.yg)("p",null,"Operational info for an entity."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#timeseriesaspect"},"TimeSeriesAspect"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"timestampMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the operation was reported"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Actor who issued this operation."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operationType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#operationtype"},(0,n.yg)("code",null,"OperationType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Operation type of change."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customOperationType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A custom operation type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#operationsourcetype"},(0,n.yg)("code",null,"OperationSourceType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source of the operation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"numAffectedRows",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"How many rows were affected by this operation."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"affectedDatasets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Which other datasets were affected by this operation."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastUpdatedTimestamp",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When time at which the asset was actually updated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"partition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional partition identifier"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom operation properties"))))),(0,n.yg)("h2",{id:"origin"},"Origin"),(0,n.yg)("p",null,"Carries information about where an entity originated from."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#origintype"},(0,n.yg)("code",null,"OriginType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Where an entity originated from. Either NATIVE or EXTERNAL"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"externalType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Only populated if type is EXTERNAL. The externalType of the entity, such as the name of the identity provider."))))),(0,n.yg)("h2",{id:"owner"},"Owner"),(0,n.yg)("p",null,"An owner of a Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"owner",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#ownertype"},(0,n.yg)("code",null,"OwnerType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Owner object"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#ownershiptype"},(0,n.yg)("code",null,"OwnershipType"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"The type of the ownership. Deprecated - Use ownershipType field instead."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownershipType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownershiptypeentity"},(0,n.yg)("code",null,"OwnershipTypeEntity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership type information"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownershipsource"},(0,n.yg)("code",null,"OwnershipSource"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source information for the ownership"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the owned urn for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"ownership"},"Ownership"),(0,n.yg)("p",null,"Ownership information about a Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"owners",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#owner"},(0,n.yg)("code",null,"[Owner!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of owners of the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Audit stamp containing who last modified the record and when"))))),(0,n.yg)("h2",{id:"ownershipsource"},"OwnershipSource"),(0,n.yg)("p",null,"Information about the source of Ownership metadata about a Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#ownershipsourcetype"},(0,n.yg)("code",null,"OwnershipSourceType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the source"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"url",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional reference URL for the source"))))),(0,n.yg)("h2",{id:"ownershiptypeentity"},"OwnershipTypeEntity"),(0,n.yg)("p",null,"A single Custom Ownership Type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key associated with the custom ownership type."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"info",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownershiptypeinfo"},(0,n.yg)("code",null,"OwnershipTypeInfo"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Information about the Custom Ownership Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status of the Custom Ownership Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from the Custom Ownership Type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"ownershiptypeinfo"},"OwnershipTypeInfo"),(0,n.yg)("p",null,"Properties about an individual Custom Ownership Type."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Custom Ownership Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of the Custom Ownership Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An Audit Stamp corresponding to the creation of this resource"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An Audit Stamp corresponding to the update of this resource"))))),(0,n.yg)("h2",{id:"parentcontainersresult"},"ParentContainersResult"),(0,n.yg)("p",null,"All of the parent containers for a given entity. Returns parents with direct parent first followed by the parent's parent etc."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of containers bubbling up for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"containers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"[Container!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of parent containers in order from direct parent, to parent's parent etc. If there are no containers, return an emty list"))))),(0,n.yg)("h2",{id:"parentdomainsresult"},"ParentDomainsResult"),(0,n.yg)("p",null,"All of the parent domains starting from a single Domain through all of its ancestors"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of parent domains bubbling up for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domains",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"[Entity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of parent domains in order from direct parent, to parent's parent etc. If there are no parents, return an empty list"))))),(0,n.yg)("h2",{id:"parentnodesresult"},"ParentNodesResult"),(0,n.yg)("p",null,"All of the parent nodes for GlossaryTerms and GlossaryNodes"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of parent nodes bubbling up for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nodes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossarynode"},(0,n.yg)("code",null,"[GlossaryNode!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of parent nodes in order from direct parent, to parent's parent etc. If there are no nodes, return an empty list"))))),(0,n.yg)("h2",{id:"partitionspec"},"PartitionSpec"),(0,n.yg)("p",null,"Information about the partition being profiled"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#partitiontype"},(0,n.yg)("code",null,"PartitionType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The partition type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"partition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The partition identifier"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"timePartition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#timewindow"},(0,n.yg)("code",null,"TimeWindow"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The optional time window partition information - required if type is TIMESTAMP_FIELD."))))),(0,n.yg)("h2",{id:"platformprivileges"},"PlatformPrivileges"),(0,n.yg)("p",null,"The platform privileges that the currently authenticated user has"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewAnalytics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to view analytics"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"managePolicies",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to manage policies"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageIdentities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to manage users & groups"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"generatePersonalAccessTokens",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to generate personal access tokens"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createDomains",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to create new Domains"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageDomains",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to manage Domains"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageIngestion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user is able to manage UI-based ingestion"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageSecrets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user is able to manage UI-based secrets"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageTokens",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to manage tokens on behalf of other users."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewTests",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user is able to view Tests"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageTests",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user is able to manage Tests"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageGlossaries",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to manage Glossaries"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageUserCredentials",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user is able to manage user credentials"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to create new Tags"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to create and delete all Tags"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewManageTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to view the tags management page."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageGlobalViews",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to create, update, and delete global views."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageOwnershipTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user should be able to create, update, and delete ownership types."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageGlobalAnnouncements",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can create and delete posts pinned to the home page."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createBusinessAttributes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can create Business Attributes."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageBusinessAttributes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can manage Business Attributes."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"manageStructuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can create, edit, and delete structured properties."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewStructuredPropertiesPage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the user can view the manage structured properties page."))))),(0,n.yg)("h2",{id:"policiesconfig"},"PoliciesConfig"),(0,n.yg)("p",null,"Configurations related to the Policies Feature"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the policies feature is enabled and should be displayed in the UI"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformPrivileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#privilege"},(0,n.yg)("code",null,"[Privilege!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of platform privileges to display in the Policy Builder experience"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resourcePrivileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resourceprivileges"},(0,n.yg)("code",null,"[ResourcePrivileges!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of resource privileges to display in the Policy Builder experience"))))),(0,n.yg)("h2",{id:"policy"},"Policy"),(0,n.yg)("p",null,"DEPRECATED\nTODO: Eventually get rid of this in favor of DataHub Policy\nAn DataHub Platform Access Policy Access Policies determine who can perform what actions against which resources on the platform"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#policytype"},(0,n.yg)("code",null,"PolicyType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"state",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#policystate"},(0,n.yg)("code",null,"PolicyState!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The present state of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of the Policy"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resources",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resourcefilter"},(0,n.yg)("code",null,"ResourceFilter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The resources that the Policy privileges apply to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The privileges that the Policy grants"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actors",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#actorfilter"},(0,n.yg)("code",null,"ActorFilter!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actors that the Policy grants privileges to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editable",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the Policy is editable, ie system policies, or not"))))),(0,n.yg)("h2",{id:"policyevaluationdetail"},"PolicyEvaluationDetail"),(0,n.yg)("p",null,"Details about how a policy was evaluated for a given actor and resource"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"policyName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The policy that was evaluated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"reason",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The reason for deny for this policy"))))),(0,n.yg)("h2",{id:"policymatchcriterion"},"PolicyMatchCriterion"),(0,n.yg)("p",null,"Criterion to define relationship between field and values"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the field that the criterion refers to e.g. entity_type, entity_urn, domain"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"values",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#policymatchcriterionvalue"},(0,n.yg)("code",null,"[PolicyMatchCriterionValue!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Values. Matches criterion if any one of the values matches condition (OR-relationship)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"condition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#policymatchcondition"},(0,n.yg)("code",null,"PolicyMatchCondition!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the field that the criterion refers to"))))),(0,n.yg)("h2",{id:"policymatchcriterionvalue"},"PolicyMatchCriterionValue"),(0,n.yg)("p",null,"Value in PolicyMatchCriterion with hydrated entity if value is urn"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value of the field to match"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Hydrated entities of the above values. Only set if the value is an urn"))))),(0,n.yg)("h2",{id:"policymatchfilter"},"PolicyMatchFilter"),(0,n.yg)("p",null,"Filter object that encodes a complex filter logic with OR + AND"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"criteria",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#policymatchcriterion"},(0,n.yg)("code",null,"[PolicyMatchCriterion!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of criteria to apply"))))),(0,n.yg)("h2",{id:"post"},"Post"),(0,n.yg)("p",null,"Input provided when creating a Post"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Post"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from the Post"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"postType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#posttype"},(0,n.yg)("code",null,"PostType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of post"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"content",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#postcontent"},(0,n.yg)("code",null,"PostContent!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The content of the post"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When the post was last modified"))))),(0,n.yg)("h2",{id:"postcontent"},"PostContent"),(0,n.yg)("p",null,"Post content"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"contentType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#postcontenttype"},(0,n.yg)("code",null,"PostContentType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of post content"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The title of the post"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional content of the post"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"link",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional link that the post is associated with"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"media",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#media"},(0,n.yg)("code",null,"Media"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional media contained in the post"))))),(0,n.yg)("h2",{id:"privilege"},"Privilege"),(0,n.yg)("p",null,"An individual DataHub Access Privilege"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized privilege type, serving as a unique identifier for a privilege eg EDIT_ENTITY"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name to appear when displaying the privilege, eg Edit Entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A description of the privilege to display"))))),(0,n.yg)("h2",{id:"privileges"},"Privileges"),(0,n.yg)("p",null,"Object that encodes the privileges the actor has for a given resource"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granted Privileges"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"evaluationDetails",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#policyevaluationdetail"},(0,n.yg)("code",null,"[PolicyEvaluationDetail]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Details about how each policy was evaluated"))))),(0,n.yg)("h2",{id:"quantile"},"Quantile"),(0,n.yg)("p",null,"A quantile along with its corresponding value"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"quantile",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'Quantile. E.g. "0.25" for the 25th percentile'))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value of the quantile"))))),(0,n.yg)("h2",{id:"quantitativeanalyses"},"QuantitativeAnalyses"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"unitaryResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#resultstype"},(0,n.yg)("code",null,"ResultsType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Link to a dashboard with results showing how the model performed with respect to each factor"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"intersectionalResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#resultstype"},(0,n.yg)("code",null,"ResultsType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Link to a dashboard with results showing how the model performed with respect to the intersection of evaluated factors"))))),(0,n.yg)("h2",{id:"queriestabconfig"},"QueriesTabConfig"),(0,n.yg)("p",null,"Configuration for the queries tab"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"queriesTabResultSize",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Number of queries to show in the queries tab"))))),(0,n.yg)("h2",{id:"querycell"},"QueryCell"),(0,n.yg)("p",null,"A Notebook cell which contains Query as content"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"cellTitle",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title of the cell"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cellId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique id for the cell."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeAuditStamps",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#changeauditstamps"},(0,n.yg)("code",null,"ChangeAuditStamps"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Captures information about who created/last modified/deleted this TextCell and when"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rawQuery",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Raw query to explain some specific logic in a Notebook"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastExecuted",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Captures information about who last executed this query cell and when"))))),(0,n.yg)("h2",{id:"queryentity"},"QueryEntity"),(0,n.yg)("p",null,"An individual Query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key associated with the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#queryproperties"},(0,n.yg)("code",null,"QueryProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Properties about the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subjects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#querysubject"},(0,n.yg)("code",null,"[QuerySubject!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Subjects for the query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Platform from which the Query was detected"))))),(0,n.yg)("h2",{id:"queryproperties"},"QueryProperties"),(0,n.yg)("p",null,"Properties about an individual Query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"statement",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#querystatement"},(0,n.yg)("code",null,"QueryStatement!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Query statement itself"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"source",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#querysource"},(0,n.yg)("code",null,"QuerySource!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The source of the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An Audit Stamp corresponding to the creation of this resource"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#auditstamp"},(0,n.yg)("code",null,"AuditStamp!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An Audit Stamp corresponding to the update of this resource"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"origin",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The asset that this query originated from, e.g. a View, a dbt Model, etc."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"customProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#custompropertiesentry"},(0,n.yg)("code",null,"[CustomPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom properties of the Data Product"))))),(0,n.yg)("h2",{id:"querystatement"},"QueryStatement"),(0,n.yg)("p",null,"An individual Query Statement"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The query statement value"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"language",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#querylanguage"},(0,n.yg)("code",null,"QueryLanguage!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The language for the Query Statement"))))),(0,n.yg)("h2",{id:"querysubject"},"QuerySubject"),(0,n.yg)("p",null,"The subject for a Query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"dataset",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataset"},(0,n.yg)("code",null,"Dataset!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The dataset which is the subject of the Query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaField",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldentity"},(0,n.yg)("code",null,"SchemaFieldEntity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The schema field which is the subject of the Query. This will be populated if the subject is specifically a schema field."))))),(0,n.yg)("h2",{id:"quickfilter"},"QuickFilter"),(0,n.yg)("p",null,"A quick filter in search and auto-complete"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"field",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of field to filter by"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Value to filter on"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity that the value maps to if any"))))),(0,n.yg)("h2",{id:"rawaspect"},"RawAspect"),(0,n.yg)("p",null,"Payload representing data about a single aspect"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspectName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the aspect"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"payload",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"JSON string containing the aspect's payload"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"renderSpec",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#aspectrenderspec"},(0,n.yg)("code",null,"AspectRenderSpec"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Details for the frontend on how the raw aspect should be rendered"))))),(0,n.yg)("h2",{id:"recommendationcontent"},"RecommendationContent"),(0,n.yg)("p",null,"Content to display within each recommendation module"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"String representation of content"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity being recommended. Empty if the content being recommended is not an entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"params",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#recommendationparams"},(0,n.yg)("code",null,"RecommendationParams"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional context required to generate the the recommendation"))))),(0,n.yg)("h2",{id:"recommendationmodule"},"RecommendationModule"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title of the module to display"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"moduleId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique id of the module being recommended"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"renderType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#recommendationrendertype"},(0,n.yg)("code",null,"RecommendationRenderType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Type of rendering that defines how the module should be rendered"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"content",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#recommendationcontent"},(0,n.yg)("code",null,"[RecommendationContent!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of content to display inside the module"))))),(0,n.yg)("h2",{id:"recommendationparams"},"RecommendationParams"),(0,n.yg)("p",null,"Parameters required to render a recommendation of a given type"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchparams"},(0,n.yg)("code",null,"SearchParams"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Context to define the search recommendations"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityProfileParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprofileparams"},(0,n.yg)("code",null,"EntityProfileParams"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Context to define the entity profile page"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"contentParams",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#contentparams"},(0,n.yg)("code",null,"ContentParams"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Context about the recommendation"))))),(0,n.yg)("h2",{id:"relationshipfieldmapping"},"RelationshipFieldMapping"),(0,n.yg)("p",null,"ERModelRelationship FieldMap"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceField",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"left field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"destinationField",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"bfield"))))),(0,n.yg)("h2",{id:"resettoken"},"ResetToken"),(0,n.yg)("p",null,"Token that allows native users to reset their credentials"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"resetToken",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The reset token"))))),(0,n.yg)("h2",{id:"resolvedauditstamp"},"ResolvedAuditStamp"),(0,n.yg)("p",null,"Audit stamp containing a resolved actor"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"time",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"When the audited action took place"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actor",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Who performed the audited action"))))),(0,n.yg)("h2",{id:"resourcefilter"},"ResourceFilter"),(0,n.yg)("p",null,"The resources that a DataHub Access Policy applies to"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use filter instead The type of the resource the policy should apply to Not required because in the future we want to support filtering by type OR by domain"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resources",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use filter instead A list of specific resource urns to apply the filter to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"allResources",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use filter instead Whether of not to apply the filter to all resources of the type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#policymatchfilter"},(0,n.yg)("code",null,"PolicyMatchFilter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether of not to apply the filter to all resources of the type"))))),(0,n.yg)("h2",{id:"resourceprivileges"},"ResourcePrivileges"),(0,n.yg)("p",null,"A privilege associated with a particular resource type\nA resource is most commonly a DataHub Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"resourceType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Resource type associated with the Access Privilege, eg dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resourceTypeDisplayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name to used for displaying the resourceType"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional entity type to use when performing search and navigation to the entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"privileges",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#privilege"},(0,n.yg)("code",null,"[Privilege!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of privileges that are supported against this resource"))))),(0,n.yg)("h2",{id:"restricted"},"Restricted"),(0,n.yg)("p",null,"A restricted entity that the user does not have full permissions to view.\nThis entity type does not relate to an entity type in the database."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the restricted entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"role"},"Role"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key of the Metadata Entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"List of relationships between the source Entity and some destination entities with a given types"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Id of the Role"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#roleproperties"},(0,n.yg)("code",null,"RoleProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Role properties to include Request Access Url"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actors",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#actor"},(0,n.yg)("code",null,"Actor"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"isAssignedToMe",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"roleassociation"},"RoleAssociation"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"role",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#role"},(0,n.yg)("code",null,"Role!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Role entity itself"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the tagged urn for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"roleproperties"},"RoleProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the Role in an organisation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description about the role"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Role type can be READ, WRITE or ADMIN"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"requestUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Url to request a role for a user in an organisation"))))),(0,n.yg)("h2",{id:"roleuser"},"RoleUser"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"user",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Linked corp user of a role"))))),(0,n.yg)("h2",{id:"row"},"Row"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"values",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cells",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#cell"},(0,n.yg)("code",null,"[Cell!]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"rowcountchange"},"RowCountChange"),(0,n.yg)("p",null,"Attributes defining an ROW_COUNT_CHANGE volume assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionvaluechangetype"},(0,n.yg)("code",null,"AssertionValueChangeType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the value used to evaluate the assertion: a fixed absolute value or a relative percentage."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The operator you'd like to apply. Note that only numeric operators are valid inputs: GREATER_THAN, GREATER_THAN_OR_EQUAL_TO, EQUAL_TO, LESS_THAN, LESS_THAN_OR_EQUAL_TO, BETWEEN."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parameters you'd like to provide as input to the operator. Note that only numeric parameter types are valid inputs: NUMBER."))))),(0,n.yg)("h2",{id:"rowcounttotal"},"RowCountTotal"),(0,n.yg)("p",null,"Attributes defining an ROW_COUNT_TOTAL volume assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The operator you'd like to apply. Note that only numeric operators are valid inputs: GREATER_THAN, GREATER_THAN_OR_EQUAL_TO, EQUAL_TO, LESS_THAN, LESS_THAN_OR_EQUAL_TO, BETWEEN."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parameters you'd like to provide as input to the operator. Note that only numeric parameter types are valid inputs: NUMBER."))))),(0,n.yg)("h2",{id:"schema"},"Schema"),(0,n.yg)("p",null,"Deprecated, use SchemaMetadata instead\nMetadata about a Dataset schema"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"datasetUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Dataset this schema metadata is associated with"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Platform this schema metadata is associated with"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The version of the GMS Schema metadata"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cluster",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The cluster this schema metadata is derived from"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hash",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The SHA1 hash of the schema content"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformSchema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#platformschema"},(0,n.yg)("code",null,"PlatformSchema"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The native schema in the datasets platform, schemaless if it was not provided"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafield"},(0,n.yg)("code",null,"[SchemaField!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Client provided a list of fields from value schema"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"primaryKeys",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Client provided list of fields that define primary keys to access record"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"foreignKeys",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#foreignkeyconstraint"},(0,n.yg)("code",null,"[ForeignKeyConstraint]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Client provided list of foreign key constraints"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the schema metadata information was created"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastObserved",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the schema metadata information was last ingested"))))),(0,n.yg)("h2",{id:"schemaassertionfield"},"SchemaAssertionField"),(0,n.yg)("p",null,"Defines a schema field, each with a specified path and type."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"path",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard V1 path of the field within the schema."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#schemafielddatatype"},(0,n.yg)("code",null,"SchemaFieldDataType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The std type of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional: The specific native or standard type of the field."))))),(0,n.yg)("h2",{id:"schemaassertioninfo"},"SchemaAssertionInfo"),(0,n.yg)("p",null,"Information about an Schema assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The entity targeted by this schema assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemaassertionfield"},(0,n.yg)("code",null,"[SchemaAssertionField!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A single field in the schema assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemametadata"},(0,n.yg)("code",null,"SchemaMetadata"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A definition of the expected structure for the asset Deprecated! Use the simpler 'fields' instead."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"compatibility",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#schemaassertioncompatibility"},(0,n.yg)("code",null,"SchemaAssertionCompatibility!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The compatibility level required for the assertion to pass."))))),(0,n.yg)("h2",{id:"schemacontract"},"SchemaContract"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"assertion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertion"},(0,n.yg)("code",null,"Assertion!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The assertion representing the schema contract."))))),(0,n.yg)("h2",{id:"schemafield"},"SchemaField"),(0,n.yg)("p",null,"Information about an individual field in a Dataset schema"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Flattened name of the field computed from jsonPath field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"jsonPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Flattened name of a field in JSON Path notation"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"label",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Human readable label for the field. Not supplied by all data sources"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nullable",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Indicates if this field is optional or nullable"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#schemafielddatatype"},(0,n.yg)("code",null,"SchemaFieldDataType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Platform independent field type of the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeDataType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The native type of the field in the datasets platform as declared by platform schema"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"recursive",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the field references its own type recursively"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"globalTags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use tags field instead Tags associated with the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags associated with the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Glossary terms associated with the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"isPartOfKey",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the field is part of a key schema"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"isPartitioningKey",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the field is part of a partitioning key schema"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"jsonProps",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"For schema fields that have other properties that are not modeled explicitly, represented as a JSON string."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaFieldEntity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldentity"},(0,n.yg)("code",null,"SchemaFieldEntity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema field entity that exist in the database for this schema field"))))),(0,n.yg)("h2",{id:"schemafieldblame"},"SchemaFieldBlame"),(0,n.yg)("p",null,"Blame for a single field"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Flattened name of a schema field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schemaFieldChange",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafieldchange"},(0,n.yg)("code",null,"SchemaFieldChange!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Attributes identifying a field change"))))),(0,n.yg)("h2",{id:"schemafieldchange"},"SchemaFieldChange"),(0,n.yg)("p",null,"Attributes identifying a field change"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"timestampMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the schema was updated"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastSemanticVersion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The last semantic version that this schema was changed in"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionStamp",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Version stamp of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#changeoperationtype"},(0,n.yg)("code",null,"ChangeOperationType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastSchemaFieldChange",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Last column update, such as Added/Modified/Removed in v1.2.3."))))),(0,n.yg)("h2",{id:"schemafieldentity"},"SchemaFieldEntity"),(0,n.yg)("p",null,"Standalone schema field entity. Differs from the SchemaField struct because it is not directly nested inside a\nschema field"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entitywithrelationships"},"EntityWithRelationships")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Primary key of the schema field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fieldPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Field path identifying the field in its dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parent",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The field's parent."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredproperties"},(0,n.yg)("code",null,"StructuredProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties on this schema field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"forms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#forms"},(0,n.yg)("code",null,"Forms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The forms associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitylineageresult"},(0,n.yg)("code",null,"EntityLineageResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Edges extending from this entity grouped by direction in the lineage graph"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#lineageinput"},(0,n.yg)("code",null,"LineageInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"businessAttributes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#businessattributes"},(0,n.yg)("code",null,"BusinessAttributes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Business Attribute associated with the field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"documentation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#documentation"},(0,n.yg)("code",null,"Documentation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Documentation aspect for this schema field"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The status of the SchemaFieldEntity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"deprecation status of the schema field"))))),(0,n.yg)("h2",{id:"schemafieldref"},"SchemaFieldRef"),(0,n.yg)("p",null,"A Dataset schema field (i.e. column)"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A schema field urn"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"path",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A schema field path"))))),(0,n.yg)("h2",{id:"schemafieldspec"},"SchemaFieldSpec"),(0,n.yg)("p",null,"Information about the field to use in an assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"path",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The field path"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The DataHub standard schema field type."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nativeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The native field type"))))),(0,n.yg)("h2",{id:"schemametadata"},"SchemaMetadata"),(0,n.yg)("p",null,"Metadata about a Dataset schema"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#aspect"},"Aspect"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspectVersion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The logical version of the schema metadata, where zero represents the latest version with otherwise monotonic ordering starting at one"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"datasetUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Dataset this schema metadata is associated with"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Platform this schema metadata is associated with"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The version of the GMS Schema metadata"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cluster",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The cluster this schema metadata is derived from"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hash",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The SHA1 hash of the schema content"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platformSchema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#platformschema"},(0,n.yg)("code",null,"PlatformSchema"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The native schema in the datasets platform, schemaless if it was not provided"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schemafield"},(0,n.yg)("code",null,"[SchemaField!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Client provided a list of fields from value schema"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"primaryKeys",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Client provided list of fields that define primary keys to access record"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"foreignKeys",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#foreignkeyconstraint"},(0,n.yg)("code",null,"[ForeignKeyConstraint]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Client provided list of foreign key constraints"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdAt",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time at which the schema metadata information was created"))))),(0,n.yg)("h2",{id:"scrollacrosslineageresults"},"ScrollAcrossLineageResults"),(0,n.yg)("p",null,"Results returned by issuing a search across relationships query using scroll API"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"nextScrollId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Opaque ID to pass to the next request to the server"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities included in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of search results matching the query and filters"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchacrosslineageresult"},(0,n.yg)("code",null,"[SearchAcrossLineageResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The search result entities"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"facets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#facetmetadata"},(0,n.yg)("code",null,"[FacetMetadata!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Candidate facet aggregations used for search filtering"))))),(0,n.yg)("h2",{id:"scrollresults"},"ScrollResults"),(0,n.yg)("p",null,"Results returned by issuing a search query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"nextScrollId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Opaque ID to pass to the next request to the server"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities included in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of search results matching the query and filters"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchresult"},(0,n.yg)("code",null,"[SearchResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The search result entities for a scroll request"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"facets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#facetmetadata"},(0,n.yg)("code",null,"[FacetMetadata!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Candidate facet aggregations used for search filtering"))))),(0,n.yg)("h2",{id:"searchacrosslineageresult"},"SearchAcrossLineageResult"),(0,n.yg)("p",null,"Individual search result from a search across relationships query (has added metadata about the path)"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The resolved DataHub Metadata Entity matching the search query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"insights",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchinsight"},(0,n.yg)("code",null,"[SearchInsight!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Insights about why the search result was matched"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"matchedFields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#matchedfield"},(0,n.yg)("code",null,"[MatchedField!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Matched field hint"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"paths",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitypath"},(0,n.yg)("code",null,"[EntityPath]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional list of entities between the source and destination node"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"degree",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Degree of relationship (number of hops to get to entity)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"degrees",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"[Int!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Degrees of relationship (for entities discoverable at multiple degrees)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"explored",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Marks whether or not this entity was explored further for lineage"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"truncatedChildren",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Indicates this destination node has additional unexplored child relationships"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ignoredAsHop",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether this relationship was ignored as a hop"))))),(0,n.yg)("h2",{id:"searchacrosslineageresults"},"SearchAcrossLineageResults"),(0,n.yg)("p",null,"Results returned by issuing a search across relationships query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities included in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of search results matching the query and filters"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchacrosslineageresult"},(0,n.yg)("code",null,"[SearchAcrossLineageResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The search result entities"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"facets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#facetmetadata"},(0,n.yg)("code",null,"[FacetMetadata!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Candidate facet aggregations used for search filtering"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"freshness",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#freshnessstats"},(0,n.yg)("code",null,"FreshnessStats"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Optional freshness characteristics of this query (cached, staleness etc.)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lineageSearchPath",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#lineagesearchpath"},(0,n.yg)("code",null,"LineageSearchPath"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The path taken when doing search across lineage"))))),(0,n.yg)("h2",{id:"searchbarconfig"},"SearchBarConfig"),(0,n.yg)("p",null,"Configurations related to the Search bar"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"apiVariant",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#searchbarapi"},(0,n.yg)("code",null,"SearchBarAPI!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"API variant"))))),(0,n.yg)("h2",{id:"searchinsight"},"SearchInsight"),(0,n.yg)("p",null,"Insights about why a search result was returned or ranked in the way that it was"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"text",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The insight to display"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"icon",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional emoji to display in front of the text"))))),(0,n.yg)("h2",{id:"searchparams"},"SearchParams"),(0,n.yg)("p",null,"Context to define the search recommendations"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"types",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"[EntityType!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity types to be searched. If this is not provided, all entities will be searched."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"query",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Search query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#facetfilter"},(0,n.yg)("code",null,"[FacetFilter!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Filters"))))),(0,n.yg)("h2",{id:"searchresult"},"SearchResult"),(0,n.yg)("p",null,"An individual search result hit"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entity",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The resolved DataHub Metadata Entity matching the search query"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"insights",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchinsight"},(0,n.yg)("code",null,"[SearchInsight!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Insights about why the search result was matched"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"matchedFields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#matchedfield"},(0,n.yg)("code",null,"[MatchedField!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Matched field hint"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"extraProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#extraproperty"},(0,n.yg)("code",null,"[ExtraProperty!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional properties about the search result. Used for rendering in the UI"))))),(0,n.yg)("h2",{id:"searchresults"},"SearchResults"),(0,n.yg)("p",null,"Results returned by issuing a search query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"start",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The offset of the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities included in the result set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"total",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of search results matching the query and filters"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchResults",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchresult"},(0,n.yg)("code",null,"[SearchResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The search result entities"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"facets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#facetmetadata"},(0,n.yg)("code",null,"[FacetMetadata!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Candidate facet aggregations used for search filtering"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"suggestions",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchsuggestion"},(0,n.yg)("code",null,"[SearchSuggestion!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Search suggestions based on the query provided for alternate query texts"))))),(0,n.yg)("h2",{id:"searchresultsvisualconfig"},"SearchResultsVisualConfig"),(0,n.yg)("p",null,"Configuration for a search result"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enableNameHighlight",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether a search result should highlight the name/description if it was matched on those fields."))))),(0,n.yg)("h2",{id:"searchsuggestion"},"SearchSuggestion"),(0,n.yg)("p",null,"A suggestion for an alternate search query given an original query compared to all\nof the entity names in our search index."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"text",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The suggested text based on the provided query text compared to the entity name field in the search index."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"score",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#float"},(0,n.yg)("code",null,"Float"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'The "edit distance" for this suggestion. The closer this number is to 1, the closer the suggested text is to the original text. The closer it is to 0, the further from the original text it is.'))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"frequency",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of entities that would match on the name field given the suggested text"))))),(0,n.yg)("h2",{id:"secret"},"Secret"),(0,n.yg)("p",null,"A referencible secret stored in DataHub's system. Notice that we do not return the actual secret value."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the secret"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the secret"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional description for the secret"))))),(0,n.yg)("h2",{id:"secretvalue"},"SecretValue"),(0,n.yg)("p",null,"A plaintext secret value"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the secret"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The plaintext value of the secret."))))),(0,n.yg)("h2",{id:"semanticversionstruct"},"SemanticVersionStruct"),(0,n.yg)("p",null,"Properties identify a semantic version"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"semanticVersion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Semantic version of the change"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"semanticVersionTimestamp",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Semantic version timestamp"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionStamp",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Version stamp of the change"))))),(0,n.yg)("h2",{id:"siblingproperties"},"SiblingProperties"),(0,n.yg)("p",null,"Metadata about the entity's siblings"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"isPrimary",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"If this entity is the primary sibling among the sibling set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"siblings",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"[Entity]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The sibling entities"))))),(0,n.yg)("h2",{id:"sourcecode"},"SourceCode"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceCode",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#sourcecodeurl"},(0,n.yg)("code",null,"[SourceCodeUrl!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Code along with types"))))),(0,n.yg)("h2",{id:"sourcecodeurl"},"SourceCodeUrl"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#sourcecodeurltype"},(0,n.yg)("code",null,"SourceCodeUrlType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Code Url Types"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"sourceCodeUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Source Code Url"))))),(0,n.yg)("h2",{id:"sqlassertioninfo"},"SqlAssertionInfo"),(0,n.yg)("p",null,"Attributes defining a SQL Assertion"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#sqlassertiontype"},(0,n.yg)("code",null,"SqlAssertionType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the SQL assertion being monitored."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The entity targeted by this SQL check."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"statement",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The SQL statement to be executed when evaluating the assertion."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionvaluechangetype"},(0,n.yg)("code",null,"AssertionValueChangeType"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the value used to evaluate the assertion: a fixed absolute value or a relative percentage. Required if the type is METRIC_CHANGE."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"operator",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#assertionstdoperator"},(0,n.yg)("code",null,"AssertionStdOperator!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The operator you'd like to apply to the result of the SQL query."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parameters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#assertionstdparameters"},(0,n.yg)("code",null,"AssertionStdParameters!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parameters you'd like to provide as input to the operator."))))),(0,n.yg)("h2",{id:"status"},"Status"),(0,n.yg)("p",null,"The status of a particular Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"removed",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the entity is removed or not"))))),(0,n.yg)("h2",{id:"stepstateresult"},"StepStateResult"),(0,n.yg)("p",null,"A single step state"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique id of the step"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#stringmapentry"},(0,n.yg)("code",null,"[StringMapEntry!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The properties for the step state"))))),(0,n.yg)("h2",{id:"stringbox"},"StringBox"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"stringValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"stringmapentry"},"StringMapEntry"),(0,n.yg)("p",null,"An entry in a string string map represented as a tuple"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"key",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The key of the map entry"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value fo the map entry"))))),(0,n.yg)("h2",{id:"stringvalue"},"StringValue"),(0,n.yg)("p",null,"String property value"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"stringValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value of a string type property"))))),(0,n.yg)("h2",{id:"structuredproperties"},"StructuredProperties"),(0,n.yg)("p",null,"Object containing structured properties for an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredpropertiesentry"},(0,n.yg)("code",null,"[StructuredPropertiesEntry!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structured properties on this entity"))))),(0,n.yg)("h2",{id:"structuredpropertiesentry"},"StructuredPropertiesEntry"),(0,n.yg)("p",null,"An entry in an structured properties list represented as a tuple"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperty",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredpropertyentity"},(0,n.yg)("code",null,"StructuredPropertyEntity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The key of the map entry"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"values",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/unions#propertyvalue"},(0,n.yg)("code",null,"[PropertyValue]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The values of the structured property for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"valueEntities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"[Entity]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The optional entities associated with the values if the values are entity urns"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The urn of the entity this property came from for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"structuredpropertydefinition"},"StructuredPropertyDefinition"),(0,n.yg)("p",null,"Properties about an individual Query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"qualifiedName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The fully qualified name of the property. This includes its namespace"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"displayName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The display name of this structured property"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The description of this property"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cardinality",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#propertycardinality"},(0,n.yg)("code",null,"PropertyCardinality"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The cardinality of a Structured Property determining whether one or multiple values can be applied to the entity from this property."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"allowedValues",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#allowedvalue"},(0,n.yg)("code",null,"[AllowedValue!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A list of allowed values that the property is allowed to take."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"valueType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datatypeentity"},(0,n.yg)("code",null,"DataTypeEntity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of this structured property"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"typeQualifier",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#typequalifier"},(0,n.yg)("code",null,"TypeQualifier"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Allows for type specialization of the valueType to be more specific about which entity types are allowed, for example."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitytypeentity"},(0,n.yg)("code",null,"[EntityTypeEntity!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Entity types that this structured property can be applied to"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"immutable",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this structured property is immutable"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resolvedauditstamp"},(0,n.yg)("code",null,"ResolvedAuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Audit stamp for when this structured property was created"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lastModified",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resolvedauditstamp"},(0,n.yg)("code",null,"ResolvedAuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Audit stamp for when this structured property was last modified"))))),(0,n.yg)("h2",{id:"structuredpropertyentity"},"StructuredPropertyEntity"),(0,n.yg)("p",null,"A structured property that can be shared between different entities"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A primary key associated with the structured property"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"exists",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this entity exists on DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"definition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredpropertydefinition"},(0,n.yg)("code",null,"StructuredPropertyDefinition!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Definition of this structured property including its name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"settings",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredpropertysettings"},(0,n.yg)("code",null,"StructuredPropertySettings"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Definition of this structured property including its name"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"structuredpropertyparams"},"StructuredPropertyParams"),(0,n.yg)("p",null,"A prompt shown to the user to collect metadata about an entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"structuredProperty",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#structuredpropertyentity"},(0,n.yg)("code",null,"StructuredPropertyEntity!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured property required for the prompt on this entity"))))),(0,n.yg)("h2",{id:"structuredpropertysettings"},"StructuredPropertySettings"),(0,n.yg)("p",null,"Settings specific to a structured property entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"isHidden",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this asset should be hidden in the main application"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showInSearchFilters",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this asset should be displayed as a search filter"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showInAssetSummary",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this asset should be displayed in the asset sidebar"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showAsAssetBadge",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether or not this asset should be displayed as an asset badge on other asset's headers"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showInColumnsTable",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'Whether or not this asset should be displayed as a column in the schema field table in a Dataset\'s "Columns" tab.'))))),(0,n.yg)("h2",{id:"structuredreport"},"StructuredReport"),(0,n.yg)("p",null,"A flexible carrier for structured results of an execution request."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the structured report. (e.g. INGESTION_REPORT, TEST_CONNECTION_REPORT, etc.)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"serializedValue",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The serialized value of the structured report"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"contentType",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The content-type of the serialized value (e.g. application/json, application/json;gzip etc.)"))))),(0,n.yg)("h2",{id:"subtypes"},"SubTypes"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"typeNames",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,'The sub-types that this entity implements. e.g. Datasets that are views will implement the "view" subtype'))))),(0,n.yg)("h2",{id:"systemfreshness"},"SystemFreshness"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"systemName",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the system"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"freshnessMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The latest timestamp in millis of the system that was used to respond to this query In case a cache was consulted, this reflects the freshness of the cache In case an index was consulted, this reflects the freshness of the index"))))),(0,n.yg)("h2",{id:"tablechart"},"TableChart"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"columns",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String!]!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rows",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#row"},(0,n.yg)("code",null,"[Row!]!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"tableschema"},"TableSchema"),(0,n.yg)("p",null,"Information about a raw Table Schema"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"schema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Raw table schema"))))),(0,n.yg)("h2",{id:"tag"},"Tag"),(0,n.yg)("p",null,"A Tag Entity, which can be associated with other Metadata Entities and subresources"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the TAG"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"A unique identifier for the Tag. Deprecated - Use properties.name field instead."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#tagproperties"},(0,n.yg)("code",null,"TagProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional properties about the Tag"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#editabletagproperties"},(0,n.yg)("code",null,"EditableTagProperties"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Additional read write properties about the Tag Deprecated! Use 'properties' field instead."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, use properties.description field instead"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aspects",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rawaspect"},(0,n.yg)("code",null,"[RawAspect!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental API. For fetching extra entities that do not have custom UI code yet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#aspectparams"},(0,n.yg)("code",null,"AspectParams"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"tagassociation"},"TagAssociation"),(0,n.yg)("p",null,"An edge between a Metadata Entity and a Tag Modeled as a struct to permit\nadditional attributes\nTODO Consider whether this query should be serviced by the relationships field"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"tag",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#tag"},(0,n.yg)("code",null,"Tag!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tag itself"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"associatedUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Reference back to the tagged urn for tracking purposes e.g. when sibling nodes are merged together"))))),(0,n.yg)("h2",{id:"tagproperties"},"TagProperties"),(0,n.yg)("p",null,"Properties for a DataHub Tag"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A display name for the Tag"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A description of the Tag"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"colorHex",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An optional RGB hex code for a Tag color, e.g. #FFFFFF"))))),(0,n.yg)("h2",{id:"telemetryconfig"},"TelemetryConfig"),(0,n.yg)("p",null,"Configurations related to tracking users in the app"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enableThirdPartyLogging",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Env variable for whether or not third party logging should be enabled for this instance"))))),(0,n.yg)("h2",{id:"test"},"Test"),(0,n.yg)("p",null,"A metadata entity representing a DataHub Test"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Test itself"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The name of the Test"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"category",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The category of the Test (user defined)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"description",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Description of the test"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"definition",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#testdefinition"},(0,n.yg)("code",null,"TestDefinition!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Definition for the test"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unused for tests"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"testdefinition"},"TestDefinition"),(0,n.yg)("p",null,"Definition of the test"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"json",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"JSON-based def for the test Deprecated! JSON representation is no longer supported."))))),(0,n.yg)("h2",{id:"testresult"},"TestResult"),(0,n.yg)("p",null,"The result of running a test"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"test",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#test"},(0,n.yg)("code",null,"Test"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The test itself, or null if the test has been deleted"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#testresulttype"},(0,n.yg)("code",null,"TestResultType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The final result, e.g. either SUCCESS or FAILURE."))))),(0,n.yg)("h2",{id:"testresults"},"TestResults"),(0,n.yg)("p",null,"A set of test results"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"passing",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#testresult"},(0,n.yg)("code",null,"[TestResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tests passing"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"failing",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#testresult"},(0,n.yg)("code",null,"[TestResult!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The tests failing"))))),(0,n.yg)("h2",{id:"testsconfig"},"TestsConfig"),(0,n.yg)("p",null,"Configurations related to DataHub Tests feature"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether Tests feature is enabled"))))),(0,n.yg)("h2",{id:"textcell"},"TextCell"),(0,n.yg)("p",null,"A Notebook cell which contains text as content"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"cellTitle",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Title of the cell"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"cellId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique id for the cell."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"changeAuditStamps",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#changeauditstamps"},(0,n.yg)("code",null,"ChangeAuditStamps"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Captures information about who created/last modified/deleted this TextCell and when"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"text",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The actual text in a TextCell in a Notebook"))))),(0,n.yg)("h2",{id:"themeconfig"},"ThemeConfig"),(0,n.yg)("p",null,"Configuration for any custom theme-ing"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"themeId",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The optional custom theme ID to determine which theme config we use in the frontend"))))),(0,n.yg)("h2",{id:"timelineparameterentry"},"TimelineParameterEntry"),(0,n.yg)("p",null,"A timeline parameter entry"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"key",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The key of the parameter"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The value of the parameter"))))),(0,n.yg)("h2",{id:"timeserieschart"},"TimeSeriesChart"),(0,n.yg)("p",null,"For consumption by UI only"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"title",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"lines",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#namedline"},(0,n.yg)("code",null,"[NamedLine!]!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"dateRange",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#daterange"},(0,n.yg)("code",null,"DateRange!"))),(0,n.yg)("td",null)),(0,n.yg)("tr",null,(0,n.yg)("td",null,"interval",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#dateinterval"},(0,n.yg)("code",null,"DateInterval!"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"timewindow"},"TimeWindow"),(0,n.yg)("p",null,"A time window with a finite start and end time"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"startTimeMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The start time of the time window"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"durationMillis",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The end time of the time window"))))),(0,n.yg)("h2",{id:"typequalifier"},"TypeQualifier"),(0,n.yg)("p",null,"Allows for type specialization of the valueType to be more specific about which\nentity types are allowed, for example."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"allowedTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entitytypeentity"},(0,n.yg)("code",null,"[EntityTypeEntity!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The list of allowed entity types"))))),(0,n.yg)("h2",{id:"updatestepstateresult"},"UpdateStepStateResult"),(0,n.yg)("p",null,"Result returned when fetching step state"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"id",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Id of the step"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"succeeded",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the update succeeded."))))),(0,n.yg)("h2",{id:"upstreamentityrelationships"},"UpstreamEntityRelationships"),(0,n.yg)("p",null,"Deprecated, use relationships query instead"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entities",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshiplegacy"},(0,n.yg)("code",null,"[EntityRelationshipLegacy]"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"usageaggregation"},"UsageAggregation"),(0,n.yg)("p",null,"An aggregation of Dataset usage statistics"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"bucket",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time window start time"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"duration",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#windowduration"},(0,n.yg)("code",null,"WindowDuration"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The time window span"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"resource",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The resource urn associated with the usage information, eg a Dataset urn"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"metrics",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#usageaggregationmetrics"},(0,n.yg)("code",null,"UsageAggregationMetrics"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The rolled up usage metrics"))))),(0,n.yg)("h2",{id:"usageaggregationmetrics"},"UsageAggregationMetrics"),(0,n.yg)("p",null,"Rolled up metrics about Dataset usage over time"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueUserCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The unique number of users who have queried the dataset within the time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"users",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#userusagecounts"},(0,n.yg)("code",null,"[UserUsageCounts]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Usage statistics within the time range by user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"totalSqlQueries",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of queries issued against the dataset within the time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"topSqlQueries",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"[String]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of common queries issued against the dataset within the time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldusagecounts"},(0,n.yg)("code",null,"[FieldUsageCounts]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Per field usage statistics within the time range"))))),(0,n.yg)("h2",{id:"usagequeryresult"},"UsageQueryResult"),(0,n.yg)("p",null,"The result of a Dataset usage query"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"buckets",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#usageaggregation"},(0,n.yg)("code",null,"[UsageAggregation]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of relevant time windows for use in displaying usage statistics"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aggregations",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#usagequeryresultaggregations"},(0,n.yg)("code",null,"UsageQueryResultAggregations"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A set of rolled up aggregations about the Dataset usage"))))),(0,n.yg)("h2",{id:"usagequeryresultaggregations"},"UsageQueryResultAggregations"),(0,n.yg)("p",null,"A set of rolled up aggregations about the Dataset usage"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"uniqueUserCount",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The count of unique Dataset users within the queried time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"users",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#userusagecounts"},(0,n.yg)("code",null,"[UserUsageCounts]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific per user usage counts within the queried time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"fields",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#fieldusagecounts"},(0,n.yg)("code",null,"[FieldUsageCounts]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The specific per field usage counts within the queried time range"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"totalSqlQueries",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The total number of queries executed within the queried time range Note that this field will likely be deprecated in favor of a totalQueries field"))))),(0,n.yg)("h2",{id:"userusagecounts"},"UserUsageCounts"),(0,n.yg)("p",null,"Information about individual user usage of a Dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"user",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#corpuser"},(0,n.yg)("code",null,"CorpUser"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The user of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"count",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#int"},(0,n.yg)("code",null,"Int"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The number of queries issued by the user"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"userEmail",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The extracted user email Note that this field will soon be deprecated and merged with user"))))),(0,n.yg)("h2",{id:"valuefrequency"},"ValueFrequency"),(0,n.yg)("p",null,"A frequency distribution of a specific value within a dataset"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"value",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Specific value. For numeric colums, the value will contain a strigified value"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"frequency",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#long"},(0,n.yg)("code",null,"Long!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Volume of the value"))))),(0,n.yg)("h2",{id:"versioneddataset"},"VersionedDataset"),(0,n.yg)("p",null,"A Dataset entity, which encompasses Relational Tables, Document store collections, streaming topics, and other sets of data having an independent lifecycle"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"platform",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataplatform"},(0,n.yg)("code",null,"DataPlatform!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Standardized platform urn where the dataset is defined"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"container",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#container"},(0,n.yg)("code",null,"Container"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The parent container in which the entity resides"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"parentContainers",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#parentcontainersresult"},(0,n.yg)("code",null,"ParentContainersResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Recursively get the lineage of containers for this entity"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"name",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Unique guid for dataset No longer to be used as the Dataset display name. Use properties.name instead"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"properties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetproperties"},(0,n.yg)("code",null,"DatasetProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of read only properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#dataseteditableproperties"},(0,n.yg)("code",null,"DatasetEditableProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"An additional set of of read write properties"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"ownership",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#ownership"},(0,n.yg)("code",null,"Ownership"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Ownership metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"deprecation",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#deprecation"},(0,n.yg)("code",null,"Deprecation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The deprecation status of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"institutionalMemory",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#institutionalmemory"},(0,n.yg)("code",null,"InstitutionalMemory"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"References to internal resources related to the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"editableSchemaMetadata",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#editableschemametadata"},(0,n.yg)("code",null,"EditableSchemaMetadata"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Editable schema metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"status",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#status"},(0,n.yg)("code",null,"Status"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Status of the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"tags",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#globaltags"},(0,n.yg)("code",null,"GlobalTags"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Tags used for searching dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"glossaryTerms",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#glossaryterms"},(0,n.yg)("code",null,"GlossaryTerms"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The structured glossary terms associated with the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"domain",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#domainassociation"},(0,n.yg)("code",null,"DomainAssociation"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The Domain associated with the Dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"health",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#health"},(0,n.yg)("code",null,"[Health!]"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Experimental! The resolved health status of the asset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"schema",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#schema"},(0,n.yg)("code",null,"Schema"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Schema metadata of the dataset"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"subTypes",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#subtypes"},(0,n.yg)("code",null,"SubTypes"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sub Types that this entity implements"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"viewProperties",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#viewproperties"},(0,n.yg)("code",null,"ViewProperties"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"View related properties. Only relevant if subtypes field contains view."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"origin",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#fabrictype"},(0,n.yg)("code",null,"FabricType!"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"Deprecated, see the properties field instead Environment in which the dataset belongs to or where it was generated Note that this field will soon be deprecated in favor of a more standardized concept of Environment"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("blockquote",null,"Deprecated: No longer supported"),(0,n.yg)("p",null,"No-op, has to be included due to model"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"versionproperties"},"VersionProperties"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionSet",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versionset"},(0,n.yg)("code",null,"VersionSet!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The linked Version Set entity that ties multiple versioned assets together"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"version",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versiontag"},(0,n.yg)("code",null,"VersionTag!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Label for this versioned asset, should be unique within a version set (not enforced)"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"aliases",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#versiontag"},(0,n.yg)("code",null,"[VersionTag!]!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Additional version identifiers for this versioned asset."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"comment",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Comment documenting what this version was created for, changes, or represents"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"isLatest",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether this version is currently the latest in its verison set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"created",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resolvedauditstamp"},(0,n.yg)("code",null,"ResolvedAuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Timestamp reflecting when the metadata for this version was created in DataHub"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"createdInSource",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#resolvedauditstamp"},(0,n.yg)("code",null,"ResolvedAuditStamp"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Timestamp reflecting when the metadata for this version was created in DataHub"))))),(0,n.yg)("h2",{id:"versionset"},"VersionSet"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Implements")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/graphql/interfaces#entity"},"Entity"))),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"urn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The primary key of the VersionSet"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#entitytype"},(0,n.yg)("code",null,"EntityType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The standard Entity Type"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"relationships",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityrelationshipsresult"},(0,n.yg)("code",null,"EntityRelationshipsResult"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Granular API for querying edges extending from this entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#relationshipsinput"},(0,n.yg)("code",null,"RelationshipsInput!"))),(0,n.yg)("td",null)))))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"latestVersion",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/interfaces#entity"},(0,n.yg)("code",null,"Entity"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The latest versioned entity linked to in this version set"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionsSearch",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchresults"},(0,n.yg)("code",null,"SearchResults"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Executes a search on all versioned entities linked to this version set By default sorts by sortId in descending order"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Arguments")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"input",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/inputObjects#searchacrossentitiesinput"},(0,n.yg)("code",null,"SearchAcrossEntitiesInput!"))),(0,n.yg)("td",null)))))))),(0,n.yg)("h2",{id:"versiontag"},"VersionTag"),(0,n.yg)("p",null,"The technical version associated with a given Metadata Entity"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"versionTag",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null)))),(0,n.yg)("h2",{id:"viewproperties"},"ViewProperties"),(0,n.yg)("p",null,"Properties about a Dataset of type view"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"materialized",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether the view is materialized or not"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"logic",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The logic associated with the view, most commonly a SQL statement"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"formattedLogic",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A formatted version of the logic associated with the view. For dbt, this contains the compiled SQL."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"language",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The language in which the view logic is written, for example SQL"))))),(0,n.yg)("h2",{id:"viewsconfig"},"ViewsConfig"),(0,n.yg)("p",null,"Configurations related to DataHub Views feature"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"enabled",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether Views feature is enabled"))))),(0,n.yg)("h2",{id:"visualconfig"},"VisualConfig"),(0,n.yg)("p",null,"Configurations related to visual appearance of the app"),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"logoUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom logo url for the homepage & top banner"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"faviconUrl",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom favicon url for the homepage & top banner"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"appTitle",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Custom app title to show in the browser tab"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"hideGlossary",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Boolean flag disabling viewing the Business Glossary page for users without the 'Manage Glossaries' privilege"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"queriesTab",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#queriestabconfig"},(0,n.yg)("code",null,"QueriesTabConfig"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configuration for the queries tab"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityProfiles",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#entityprofilesconfig"},(0,n.yg)("code",null,"EntityProfilesConfig"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configuration for the queries tab"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"searchResult",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#searchresultsvisualconfig"},(0,n.yg)("code",null,"SearchResultsVisualConfig"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configuration for search results"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"showFullTitleInLineage",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#boolean"},(0,n.yg)("code",null,"Boolean"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Show full title in lineage view by default"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"theme",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#themeconfig"},(0,n.yg)("code",null,"ThemeConfig"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Configuration for custom theme-ing"))))),(0,n.yg)("h2",{id:"volumeassertioninfo"},"VolumeAssertionInfo"),(0,n.yg)("p",null,"A definition of a Volume (row count) assertion."),(0,n.yg)("p",{style:{marginBottom:"0.4em"}},(0,n.yg)("strong",null,"Fields")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"entityUrn",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/scalars#string"},(0,n.yg)("code",null,"String!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The entity targeted by this Volume check."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"type",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/enums#volumeassertiontype"},(0,n.yg)("code",null,"VolumeAssertionType!"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The type of the freshness assertion being monitored."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rowCountTotal",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rowcounttotal"},(0,n.yg)("code",null,"RowCountTotal"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Produce FAILURE Assertion Result if the row count of the asset does not meet specific requirements. Required if type is 'ROW_COUNT_TOTAL'."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"rowCountChange",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#rowcountchange"},(0,n.yg)("code",null,"RowCountChange"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Produce FAILURE Assertion Result if the row count delta of the asset does not meet specific requirements. Required if type is 'ROW_COUNT_CHANGE'."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incrementingSegmentRowCountTotal",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incrementingsegmentrowcounttotal"},(0,n.yg)("code",null,"IncrementingSegmentRowCountTotal"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Produce FAILURE Assertion Result if the latest incrementing segment row count total of the asset does not meet specific requirements. Required if type is 'INCREMENTING_SEGMENT_ROW_COUNT_TOTAL'."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"incrementingSegmentRowCountChange",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#incrementingsegmentrowcountchange"},(0,n.yg)("code",null,"IncrementingSegmentRowCountChange"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"Produce FAILURE Assertion Result if the incrementing segment row count delta of the asset does not meet specific requirements. Required if type is 'INCREMENTING_SEGMENT_ROW_COUNT_CHANGE'."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"filter",(0,n.yg)("br",null),(0,n.yg)("a",{href:"/docs/graphql/objects#datasetfilter"},(0,n.yg)("code",null,"DatasetFilter"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"A definition of the specific filters that should be applied, when performing monitoring. If not provided, there is no filter, and the full table is under consideration."))))))}c.isMDXComponent=!0}}]);