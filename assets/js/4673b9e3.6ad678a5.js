"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[28444],{59075:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>p,metadata:()=>g,toc:()=>c});t(96540);var n=t(15680),l=t(53720),s=t(5400);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){return a=null!=a?a:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):function(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})),e}function o(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}const p={sidebar_position:59,title:"Redshift",slug:"/generated/ingestion/sources/redshift",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/redshift.md"},d="Redshift",g={unversionedId:"docs/generated/ingestion/sources/redshift",id:"docs/generated/ingestion/sources/redshift",title:"Redshift",description:"Certified",source:"@site/genDocs/docs/generated/ingestion/sources/redshift.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/redshift",permalink:"/docs/generated/ingestion/sources/redshift",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/redshift.md",tags:[],version:"current",sidebarPosition:59,frontMatter:{sidebar_position:59,title:"Redshift",slug:"/generated/ingestion/sources/redshift",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/redshift.md"},sidebar:"overviewSidebar",previous:{title:"Redash",permalink:"/docs/generated/ingestion/sources/redash"},next:{title:"S3 / Local Files",permalink:"/docs/generated/ingestion/sources/s3"}},m={},c=[{value:"Important Capabilities",id:"important-capabilities",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Permission Overview",id:"permission-overview",level:2},{value:"System Table and View Permissions",id:"system-table-and-view-permissions",level:2},{value:"Detailed Permission Breakdown",id:"detailed-permission-breakdown",level:2},{value:"Core System Views (Always Required)",id:"core-system-views-always-required",level:3},{value:"Conditional System Tables (Feature Dependent)",id:"conditional-system-tables-feature-dependent",level:3},{value:"Shared Database (Datashare Consumer)",id:"shared-database-datashare-consumer",level:4},{value:"Redshift Serverless Workgroups",id:"redshift-serverless-workgroups",level:4},{value:"Redshift Provisioned Clusters",id:"redshift-provisioned-clusters",level:4},{value:"Datashares Lineage",id:"datashares-lineage",level:4},{value:"Recommended Permission Set",id:"recommended-permission-set",level:3},{value:"Data Access Privileges (Required for Data Profiling and Classification)",id:"data-access-privileges-required-for-data-profiling-and-classification",level:4},{value:"Optional: Datashare Privileges",id:"optional-datashare-privileges",level:4},{value:"Ingestion of multiple redshift databases, namespaces",id:"ingestion-of-multiple-redshift-databases-namespaces",level:2},{value:"Lineage",id:"lineage",level:2},{value:"stl_scan_based",id:"stl_scan_based",level:3},{value:"sql_based",id:"sql_based",level:3},{value:"mixed",id:"mixed",level:3},{value:"Datashares Lineage",id:"datashares-lineage-1",level:2},{value:"Profiling",id:"profiling",level:2},{value:"Caveats",id:"caveats",level:3},{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Schema Discovery Issues",id:"schema-discovery-issues",level:3},{value:"Missing Schemas",id:"missing-schemas",level:4},{value:"Missing Tables Within Schemas",id:"missing-tables-within-schemas",level:4},{value:"Configuration Issues",id:"configuration-issues",level:4},{value:"Permission Test Queries",id:"permission-test-queries",level:4},{value:"Data Profiling Issues",id:"data-profiling-issues",level:3},{value:"Profile Data Not Appearing",id:"profile-data-not-appearing",level:4},{value:"Lineage Issues",id:"lineage-issues",level:3},{value:"Missing Lineage Information",id:"missing-lineage-information",level:4},{value:"Cross-Cluster Lineage (Datashares)",id:"cross-cluster-lineage-datashares",level:4},{value:"Code Coordinates",id:"code-coordinates",level:3}],y={toc:c},u="wrapper";function f(e){var{components:a}=e,t=o(e,["components"]);return(0,n.yg)(u,r(function(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(a){i(e,a,t[a])}))}return e}({},y,t),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"redshift"},"Redshift"),(0,n.yg)("p",null,(0,n.yg)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,n.yg)("h3",{id:"important-capabilities"},"Important Capabilities"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Capability"),(0,n.yg)("th",{parentName:"tr",align:null},"Status"),(0,n.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Asset Containers"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default. Supported for types - Database, Schema.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/metadata-ingestion/docs/dev_guides/classification"},"Classification")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Optionally enabled via ",(0,n.yg)("inlineCode",{parentName:"td"},"classification.enabled"),".")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Column-level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Optionally enabled via configuration (",(0,n.yg)("inlineCode",{parentName:"td"},"mixed")," or ",(0,n.yg)("inlineCode",{parentName:"td"},"sql_based")," lineage needs to be enabled).")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/metadata-ingestion/docs/dev_guides/sql_profiles"},"Data Profiling")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Optionally enabled via configuration.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dataset Usage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Optionally enabled via ",(0,n.yg)("inlineCode",{parentName:"td"},"include_usage_statistics"),".")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Descriptions"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/metadata-ingestion/docs/dev_guides/stateful#stale-entity-removal"},"Detect Deleted Entities")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default via stateful ingestion.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/domains"},"Domains")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Supported via the ",(0,n.yg)("inlineCode",{parentName:"td"},"domain")," config field.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/platform-instances"},"Platform Instance")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Schema Metadata"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Table-Level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Optionally enabled via configuration.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Test Connection"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")))),(0,n.yg)("p",null,"This plugin extracts the following:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Metadata for databases, schemas, views and tables"),(0,n.yg)("li",{parentName:"ul"},"Column types associated with each table"),(0,n.yg)("li",{parentName:"ul"},"Table, row, and column statistics via optional SQL profiling"),(0,n.yg)("li",{parentName:"ul"},"Table lineage"),(0,n.yg)("li",{parentName:"ul"},"Usage statistics")),(0,n.yg)("h3",{id:"prerequisites"},"Prerequisites"),(0,n.yg)("p",null,"The DataHub Redshift connector requires specific database privileges to extract metadata, lineage, and usage statistics from your Amazon Redshift cluster."),(0,n.yg)("h2",{id:"permission-overview"},"Permission Overview"),(0,n.yg)("p",null,"DataHub requires three categories of permissions:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"System Table Access")," - Access to Redshift system tables for lineage and usage statistics"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"System View Access")," - Access to system views for metadata discovery"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Data Access")," - Access to user schemas and tables for profiling and classification")),(0,n.yg)("h2",{id:"system-table-and-view-permissions"},"System Table and View Permissions"),(0,n.yg)("p",null,"Execute the following commands as a database superuser or user with sufficient privileges to grant these permissions:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Core system access (required for lineage and usage statistics)\nALTER USER datahub WITH SYSLOG ACCESS UNRESTRICTED;\n\n-- Core metadata extraction (always required)\nGRANT SELECT ON pg_catalog.svv_redshift_databases TO datahub;    -- Database information and properties\nGRANT SELECT ON pg_catalog.svv_redshift_schemas TO datahub;      -- Schema information within databases\nGRANT SELECT ON pg_catalog.svv_external_schemas TO datahub;      -- External schemas (Spectrum, federated)\nGRANT SELECT ON pg_catalog.svv_table_info TO datahub;           -- Table metadata, statistics, and properties\nGRANT SELECT ON pg_catalog.svv_external_tables TO datahub;       -- External table definitions (Spectrum)\nGRANT SELECT ON pg_catalog.svv_external_columns TO datahub;      -- External table column information\nGRANT SELECT ON pg_catalog.pg_class_info TO datahub;            -- Table creation timestamps and basic info\n\n-- Essential pg_catalog tables for table discovery\nGRANT SELECT ON pg_catalog.pg_class TO datahub;                 -- Table and view definitions\nGRANT SELECT ON pg_catalog.pg_namespace TO datahub;             -- Schema namespace information\nGRANT SELECT ON pg_catalog.pg_description TO datahub;           -- Table and column descriptions/comments\nGRANT SELECT ON pg_catalog.pg_database TO datahub;              -- Database catalog information\nGRANT SELECT ON pg_catalog.pg_attribute TO datahub;             -- Column definitions and properties\nGRANT SELECT ON pg_catalog.pg_attrdef TO datahub;               -- Column default values\nGRANT SELECT ON pg_catalog.svl_user_info TO datahub;            -- User information for ownership\n\n-- Datashare lineage (enabled by default)\nGRANT SELECT ON pg_catalog.svv_datashares TO datahub;           -- Cross-cluster datashare information\n\n-- Choose ONE based on your Redshift type:\n-- For Provisioned Clusters:\nGRANT SELECT ON pg_catalog.stv_mv_info TO datahub;              -- Materialized view information (provisioned)\n\n-- For Serverless Workgroups:\n-- GRANT SELECT ON pg_catalog.svv_user_info TO datahub;          -- User information (serverless alternative)\n-- GRANT SELECT ON pg_catalog.svv_mv_info TO datahub;           -- Materialized view information (serverless)\n\n-- Schema access (required to read tables in each schema)\nGRANT USAGE ON SCHEMA <schema_to_ingest> TO datahub;             -- Replace with actual schema names\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Important"),": Make sure to grant USAGE on any schema you want to ingest from:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"GRANT USAGE ON SCHEMA <schema_to_ingest> TO datahub;\n")),(0,n.yg)("h2",{id:"detailed-permission-breakdown"},"Detailed Permission Breakdown"),(0,n.yg)("p",null,"The following sections provide detailed information about which permissions are required for specific features and configurations."),(0,n.yg)("h3",{id:"core-system-views-always-required"},"Core System Views (Always Required)"),(0,n.yg)("p",null,"These system views are accessed in all DataHub configurations:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Schema discovery\nGRANT SELECT ON pg_catalog.svv_redshift_schemas TO datahub;      -- Schema information within databases\nGRANT SELECT ON pg_catalog.svv_external_schemas TO datahub;      -- External schemas (Spectrum, federated)\n\n-- Database information\nGRANT SELECT ON pg_catalog.svv_redshift_databases TO datahub;    -- Database information and properties\n\n-- Table metadata and statistics\nGRANT SELECT ON pg_catalog.svv_table_info TO datahub;           -- Table metadata, statistics, and properties\n\n-- External table support\nGRANT SELECT ON pg_catalog.svv_external_tables TO datahub;       -- External table definitions (Spectrum)\nGRANT SELECT ON pg_catalog.svv_external_columns TO datahub;      -- External table column information\n\n-- Table creation timestamps\nGRANT SELECT ON pg_catalog.pg_class_info TO datahub;            -- Table creation timestamps and basic info\n")),(0,n.yg)("h3",{id:"conditional-system-tables-feature-dependent"},"Conditional System Tables (Feature Dependent)"),(0,n.yg)("h4",{id:"shared-database-datashare-consumer"},"Shared Database (Datashare Consumer)"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Required when is_shared_database = True\nGRANT SELECT ON pg_catalog.svv_redshift_tables TO datahub;       -- Table information in shared databases\nGRANT SELECT ON pg_catalog.svv_redshift_columns TO datahub;      -- Column information in shared databases\n")),(0,n.yg)("h4",{id:"redshift-serverless-workgroups"},"Redshift Serverless Workgroups"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Required for serverless workgroups\nGRANT SELECT ON pg_catalog.svv_user_info TO datahub;            -- User information (serverless alternative)\nGRANT SELECT ON pg_catalog.svv_mv_info TO datahub;             -- Materialized view information (serverless)\n")),(0,n.yg)("h4",{id:"redshift-provisioned-clusters"},"Redshift Provisioned Clusters"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Required for provisioned clusters\nGRANT SELECT ON pg_catalog.svl_user_info TO datahub;            -- User information for ownership (superuser table)\nGRANT SELECT ON pg_catalog.stv_mv_info TO datahub;              -- Materialized view information (provisioned)\n")),(0,n.yg)("h4",{id:"datashares-lineage"},"Datashares Lineage"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Required when include_share_lineage: true (default)\nGRANT SELECT ON pg_catalog.svv_datashares TO datahub;           -- Cross-cluster datashare information\n")),(0,n.yg)("h3",{id:"recommended-permission-set"},"Recommended Permission Set"),(0,n.yg)("p",null,"For a typical provisioned cluster with default settings:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Core system access\nALTER USER datahub WITH SYSLOG ACCESS UNRESTRICTED;\n\n-- Always required\nGRANT SELECT ON pg_catalog.svv_redshift_databases TO datahub;    -- Database information and properties\nGRANT SELECT ON pg_catalog.svv_redshift_schemas TO datahub;      -- Schema information within databases\nGRANT SELECT ON pg_catalog.svv_external_schemas TO datahub;      -- External schemas (Spectrum, federated)\nGRANT SELECT ON pg_catalog.svv_table_info TO datahub;           -- Table metadata, statistics, and properties\nGRANT SELECT ON pg_catalog.svv_external_tables TO datahub;       -- External table definitions (Spectrum)\nGRANT SELECT ON pg_catalog.svv_external_columns TO datahub;      -- External table column information\nGRANT SELECT ON pg_catalog.pg_class_info TO datahub;            -- Table creation timestamps and basic info\n\n-- Essential pg_catalog tables for table discovery\nGRANT SELECT ON pg_catalog.pg_class TO datahub;                 -- Table and view definitions\nGRANT SELECT ON pg_catalog.pg_namespace TO datahub;             -- Schema namespace information\nGRANT SELECT ON pg_catalog.pg_description TO datahub;           -- Table and column descriptions/comments\nGRANT SELECT ON pg_catalog.pg_database TO datahub;              -- Database catalog information\nGRANT SELECT ON pg_catalog.pg_attribute TO datahub;             -- Column definitions and properties\nGRANT SELECT ON pg_catalog.pg_attrdef TO datahub;               -- Column default values\nGRANT SELECT ON pg_catalog.svl_user_info TO datahub;            -- User information for ownership (superuser table)\n\n-- Datashares (since include_share_lineage defaults to true)\nGRANT SELECT ON pg_catalog.svv_datashares TO datahub;           -- Cross-cluster datashare information\n\n-- Provisioned cluster materialized views\nGRANT SELECT ON pg_catalog.stv_mv_info TO datahub;              -- Materialized view information (provisioned)\n\n-- Schema access (required to read tables in each schema)\nGRANT USAGE ON SCHEMA <schema_to_ingest> TO datahub;             -- Replace with actual schema names\n")),(0,n.yg)("h4",{id:"data-access-privileges-required-for-data-profiling-and-classification"},"Data Access Privileges (Required for Data Profiling and Classification)"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Important"),": The system table permissions above only provide access to metadata. To enable data profiling, classification, or any feature that reads actual table data, you must grant additional privileges:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Grant USAGE privilege on schemas (required to access schema objects)\nGRANT USAGE ON SCHEMA public TO datahub;\nGRANT USAGE ON SCHEMA your_schema_name TO datahub;\n\n-- Grant SELECT privilege on existing tables for data access\nGRANT SELECT ON ALL TABLES IN SCHEMA public TO datahub;\nGRANT SELECT ON ALL TABLES IN SCHEMA your_schema_name TO datahub;\n\n-- Grant privileges on future objects (recommended for production)\n-- IMPORTANT: These must be run by each user who will create tables/views\n-- OR by a superuser with FOR ROLE clause\n\n-- Option 1: If you (as admin) will create all future tables/views:\nALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO datahub;\nALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON VIEWS TO datahub;\nALTER DEFAULT PRIVILEGES IN SCHEMA your_schema_name GRANT SELECT ON TABLES TO datahub;\nALTER DEFAULT PRIVILEGES IN SCHEMA your_schema_name GRANT SELECT ON VIEWS TO datahub;\n\n-- Option 2: If other users will create tables/views, run this for each user:\n-- ALTER DEFAULT PRIVILEGES FOR ROLE other_user_name IN SCHEMA public GRANT SELECT ON TABLES TO datahub;\n-- ALTER DEFAULT PRIVILEGES FOR ROLE other_user_name IN SCHEMA public GRANT SELECT ON VIEWS TO datahub;\n\n-- Option 3: For all future users (requires superuser):\n-- ALTER DEFAULT PRIVILEGES FOR ALL ROLES IN SCHEMA public GRANT SELECT ON TABLES TO datahub;\n-- ALTER DEFAULT PRIVILEGES FOR ALL ROLES IN SCHEMA public GRANT SELECT ON VIEWS TO datahub;\n")),(0,n.yg)("admonition",{title:"Data Access vs Metadata Access",type:"caution"},(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("strong",{parentName:"p"},"The permissions are split into two categories:")),(0,n.yg)("ol",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"System table permissions")," (above) - Required for metadata extraction, lineage, and usage statistics"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Data access permissions")," (this section) - Required for data profiling, classification, and any feature that reads actual table content")),(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("strong",{parentName:"p"},"Default privileges only apply to objects created by the user who ran the ALTER DEFAULT PRIVILEGES command.")," If multiple users create tables in your schemas, you need to:"),(0,n.yg)("ol",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Run the commands as each user"),", OR"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Use ",(0,n.yg)("inlineCode",{parentName:"strong"},"FOR ROLE other_user_name"))," for each user who creates objects, OR"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Use ",(0,n.yg)("inlineCode",{parentName:"strong"},"FOR ALL ROLES"))," (requires superuser privileges)")),(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("strong",{parentName:"p"},"Common gotcha"),": If User A runs ",(0,n.yg)("inlineCode",{parentName:"p"},"ALTER DEFAULT PRIVILEGES")," and User B creates a table, DataHub won't have access to User B's table unless you used Option 2 or 3 above."),(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("strong",{parentName:"p"},"Alternative approach"),": Instead of default privileges, consider using a scheduled job to periodically grant access to new tables:"),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Run this periodically to catch new tables\nGRANT SELECT ON ALL TABLES IN SCHEMA your_schema_name TO datahub;\n"))),(0,n.yg)("h4",{id:"optional-datashare-privileges"},"Optional: Datashare Privileges"),(0,n.yg)("p",null,"To enable cross-cluster lineage through datashares, grant the following privileges:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Grant SHARE privilege on datashares (replace with actual datashare names)\nGRANT SHARE ON your_datashare_name TO datahub;\n")),(0,n.yg)("h2",{id:"ingestion-of-multiple-redshift-databases-namespaces"},"Ingestion of multiple redshift databases, namespaces"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"If multiple databases are present in the Redshift namespace (or provisioned cluster),\nyou would need to set up a separate ingestion per database.")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Ingestion recipes of all databases in a particular redshift namespace should use same platform instance.")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"If you've multiple redshift namespaces that you want to ingest within DataHub, it is highly recommended that\nyou specify a platform_instance equivalent to namespace in recipe. It can be same as namespace id or other\nhuman readable name however it should be unique across all your redshift namespaces."))),(0,n.yg)("h2",{id:"lineage"},"Lineage"),(0,n.yg)("p",null,"There are multiple lineage collector implementations as Redshift does not support table lineage out of the box."),(0,n.yg)("h3",{id:"stl_scan_based"},"stl_scan_based"),(0,n.yg)("p",null,"The stl_scan based collector uses Redshift's ",(0,n.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/redshift/latest/dg/r_STL_INSERT.html"},"stl_insert")," and ",(0,n.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/redshift/latest/dg/r_STL_SCAN.html"},"stl_scan")," system tables to\ndiscover lineage between tables."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Pros:")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Fast"),(0,n.yg)("li",{parentName:"ul"},"Reliable")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Cons:")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Does not work with Spectrum/external tables because those scans do not show up in stl_scan table."),(0,n.yg)("li",{parentName:"ul"},"If a table is depending on a view then the view won't be listed as dependency. Instead the table will be connected with the view's dependencies.")),(0,n.yg)("h3",{id:"sql_based"},"sql_based"),(0,n.yg)("p",null,"The sql_based based collector uses Redshift's ",(0,n.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/redshift/latest/dg/r_STL_INSERT.html"},"stl_insert")," to discover all the insert queries\nand uses sql parsing to discover the dependencies."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Pros:")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Works with Spectrum tables"),(0,n.yg)("li",{parentName:"ul"},"Views are connected properly if a table depends on it")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Cons:")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Slow."),(0,n.yg)("li",{parentName:"ul"},"Less reliable as the query parser can fail on certain queries")),(0,n.yg)("h3",{id:"mixed"},"mixed"),(0,n.yg)("p",null,"Using both collector above and first applying the sql based and then the stl_scan based one."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Pros:")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Works with Spectrum tables"),(0,n.yg)("li",{parentName:"ul"},"Views are connected properly if a table depends on it"),(0,n.yg)("li",{parentName:"ul"},"A bit more reliable than the sql_based one only")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Cons:")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Slow"),(0,n.yg)("li",{parentName:"ul"},"May be incorrect at times as the query parser can fail on certain queries")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"The redshift stl redshift tables which are used for getting data lineage retain at most seven days of log history, and sometimes closer to 2-5 days. This means you cannot extract lineage from queries issued outside that window.")),(0,n.yg)("h2",{id:"datashares-lineage-1"},"Datashares Lineage"),(0,n.yg)("p",null,"This is enabled by default, can be disabled via setting ",(0,n.yg)("inlineCode",{parentName:"p"},"include_share_lineage: False")),(0,n.yg)("p",null,"It is mandatory to run redshift ingestion of datashare producer namespace at least once so that lineage\nshows up correctly after datashare consumer namespace is ingested."),(0,n.yg)("h2",{id:"profiling"},"Profiling"),(0,n.yg)("p",null,"Profiling runs sql queries on the redshift cluster to get statistics about the tables. To be able to do that, the user needs to have read access to the tables that should be profiled."),(0,n.yg)("p",null,"If you don't want to grant read access to the tables you can enable table level profiling which will get table statistics without reading the data."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"profiling:\n  profile_table_level_only: true\n")),(0,n.yg)("h3",{id:"caveats"},"Caveats"),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("strong",{parentName:"p"},"System table access"),": The ",(0,n.yg)("inlineCode",{parentName:"p"},"SYSLOG ACCESS UNRESTRICTED")," privilege gives the user visibility to data generated by other users. For example, STL_QUERY and STL_QUERYTEXT contain the full text of INSERT, UPDATE, and DELETE statements.")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("strong",{parentName:"p"},"Datashare lineage"),": For cross-cluster lineage through datashares, the ",(0,n.yg)("inlineCode",{parentName:"p"},"datahub")," user requires ",(0,n.yg)("inlineCode",{parentName:"p"},"SHARE")," privileges on datashares in both producer and consumer namespaces. See the ",(0,n.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/redshift/latest/dg/r_SVV_DATASHARES.html"},"Amazon Redshift datashare documentation")," for more information.")),(0,n.yg)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,n.yg)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,n.yg)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,n.yg)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,n.yg)("p",null,"For general pointers on writing and running a recipe, see our ",(0,n.yg)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: redshift\n  config:\n    # Coordinates\n    host_port: example.something.us-west-2.redshift.amazonaws.com:5439\n    database: DemoDatabase\n\n    # Credentials\n    username: user\n    password: pass\n\n    # Options\n    options:\n      # driver_option: some-option\n\n    include_table_lineage: true\n    include_usage_statistics: true\n    # The following options are only used when include_usage_statistics is true\n    # it appends the domain after the redshift username which is extracted from the Redshift audit history\n    # in the format username@email_domain\n    email_domain: mydomain.com\n\n    profiling:\n      enabled: true\n      # Only collect table level profiling information\n      profile_table_level_only: true\n\n  sink:\n  # sink configs\n\n#------------------------------------------------------------------------------\n# Extra options when running Redshift behind a proxy</summary>\n# This requires you to have already installed the Microsoft ODBC Driver for SQL Server.\n# See https://docs.microsoft.com/en-us/sql/connect/python/pyodbc/step-1-configure-development-environment-for-pyodbc-python-development?view=sql-server-ver15\n#------------------------------------------------------------------------------\n\nsource:\n  type: redshift\n  config:\n    host_port: my-proxy-hostname:5439\n\n    options:\n      connect_args:\n        # check all available options here: https://pypi.org/project/redshift-connector/\n        ssl_insecure: "false" # Specifies if IDP hosts server certificate will be verified\n\nsink:\n  # sink configs\n\n')),(0,n.yg)("h3",{id:"config-details"},"Config Details"),(0,n.yg)(l.A,{mdxType:"Tabs"},(0,n.yg)(s.A,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"Note that a ",(0,n.yg)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,n.yg)("div",{className:"config-table"},(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"left"},"Field"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"host_port"),"\xa0",(0,n.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"host URL")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"bucket_duration"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"Enum"))),(0,n.yg)("td",{parentName:"tr",align:"left"},'One of: "DAY", "HOUR"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"convert_urns_to_lowercase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to convert dataset urns to lowercase. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"database"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"database ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"dev")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"default_schema"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The default schema to use if the sql parser fails to parse the schema with ",(0,n.yg)("inlineCode",{parentName:"td"},"sql_based")," lineage collector ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"public")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"email_domain"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Email domain of your organisation so users can be displayed on UI appropriately. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"enable_stateful_lineage_ingestion"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Enable stateful lineage ingestion. This will store lineage window timestamps after successful lineage ingestion. and will not run lineage ingestion for same timestamps in subsequent run. NOTE: This only works with use_queries_v2=False (legacy extraction path). For queries v2, use enable_stateful_time_window instead. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"enable_stateful_profiling"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Enable stateful profiling. This will store profiling timestamps per dataset after successful profiling. and will not run profiling again in subsequent run if table has not been updated.  ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"enable_stateful_usage_ingestion"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Enable stateful lineage ingestion. This will store usage window timestamps after successful usage ingestion. and will not run usage ingestion for same timestamps in subsequent run. NOTE: This only works with use_queries_v2=False (legacy extraction path). For queries v2, use enable_stateful_time_window instead. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"end_time"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(date-time)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Latest date of lineage/usage to consider. Default: Current time in UTC")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extra_client_options"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"object"))),(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"default-line "},"Default: ",(0,n.yg)("span",{className:"default-value"},"{","}")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"extract_column_level_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to extract column level lineage. This config works with rest-sink only. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"format_sql_queries"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to format sql queries ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_copy_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether lineage should be collected from copy commands ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_operational_stats"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to display operational stats. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_read_operational_stats"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to report read operational stats. Experimental. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_share_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether lineage should be collected from datashares ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_table_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether table lineage should be ingested. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_table_location_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"If the source supports it, include table lineage to the underlying storage location. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_table_rename_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether we should follow ",(0,n.yg)("inlineCode",{parentName:"td"},"alter table ... rename to")," statements when computing lineage.  ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_tables"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether tables should be ingested. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_top_n_queries"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ingest the top_n_queries. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_unload_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether lineage should be collected from unload commands ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_usage_statistics"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Generate usage statistic. email_domain config parameter needs to be set if enabled ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_view_column_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Populates column-level lineage for  view->view and table->view lineage using DataHub's sql parser. Requires ",(0,n.yg)("inlineCode",{parentName:"td"},"include_view_lineage")," to be enabled. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_view_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Populates view->view and table->view lineage using DataHub's sql parser. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_views"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether views should be ingested. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"incremental_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"When enabled, emits lineage as incremental to existing lineage already in DataHub. When disabled, re-states lineage on each run. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"is_serverless"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether target Redshift instance is serverless (alternative is provisioned cluster) ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"lineage_generate_queries"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to generate queries entities for the SQL-based lineage collector. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"match_fully_qualified_names"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether ",(0,n.yg)("inlineCode",{parentName:"td"},"schema_pattern")," is matched against fully qualified schema name ",(0,n.yg)("inlineCode",{parentName:"td"},"<database>.<schema>"),". ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"options"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"object"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Any options specified here will be passed to ",(0,n.yg)("a",{parentName:"td",href:"https://docs.sqlalchemy.org/en/14/core/engines.html#sqlalchemy.create_engine"},"SQLAlchemy.create_engine")," as kwargs. To set connection arguments in the URL, specify them under ",(0,n.yg)("inlineCode",{parentName:"td"},"connect_args"),".")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"password"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string(password), null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"password ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"patch_custom_properties"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to patch custom properties on existing datasets rather than replace. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"platform_instance"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See ",(0,n.yg)("a",{parentName:"td",href:"https://docs.datahub.com/docs/platform-instances/"},"https://docs.datahub.com/docs/platform-instances/")," for more details. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"platform_instance_map"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A holder for platform -> platform_instance mappings to generate correct dataset urns ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"resolve_temp_table_in_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to resolve temp table appear in lineage to upstream permanent tables. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"skip_external_tables"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to skip EXTERNAL tables. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"sqlalchemy_uri"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"URI of database to connect to. See ",(0,n.yg)("a",{parentName:"td",href:"https://docs.sqlalchemy.org/en/14/core/engines.html#database-urls"},"https://docs.sqlalchemy.org/en/14/core/engines.html#database-urls"),". Takes precedence over other connection parameters. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"start_time"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(date-time)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Earliest date of lineage/usage to consider. Default: Last full day in UTC (or hour, depending on ",(0,n.yg)("inlineCode",{parentName:"td"},"bucket_duration"),"). You can also specify relative time with respect to end_time such as '-7 days' Or '-7d'. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"table_lineage_mode"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"Enum"))),(0,n.yg)("td",{parentName:"tr",align:"left"},'One of: "sql_based", "stl_scan_based", "mixed"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"top_n_queries"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of top queries to save to each table. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"10")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"use_file_backed_cache"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to use a file backed cache for the view definitions. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"username"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"username ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"env"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"PROD")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"domain"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,AllowDenyPattern)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"domain.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"allow"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"domain.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),".allow."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"domain.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"domain.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"deny"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"domain.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),".deny."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"profile_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profile_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"s3_lineage_config"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"S3LineageProviderConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Any source that produces s3 lineage from/to Datasets should inherit this class.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config."),(0,n.yg)("span",{className:"path-main"},"ignore_non_path_spec_path"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Ignore paths that are not match in path_specs. It only applies if path_specs are specified. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config."),(0,n.yg)("span",{className:"path-main"},"strip_urls"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Strip filename from s3 url. It only applies if path_specs are not specified. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config."),(0,n.yg)("span",{className:"path-main"},"path_specs"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"List of PathSpec. See below the details about PathSpec ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs."),(0,n.yg)("span",{className:"path-main"},"PathSpec"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"PathSpec"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"include"),"\xa0",(0,n.yg)("abbr",{title:"Required if PathSpec is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Path to table. Name variable ",(0,n.yg)("inlineCode",{parentName:"td"},"{table}")," is used to mark the folder with dataset. In absence of ",(0,n.yg)("inlineCode",{parentName:"td"},"{table}"),", file level dataset will be created. Check below examples for more details.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"allow_double_stars"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Allow double stars in the include path. This can affect performance significantly if enabled ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"autodetect_partitions"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Autodetect partition(s) from the path. If set to true, it will autodetect partition key/value if the folder format is {partition_key}={partition_value} for example ",(0,n.yg)("inlineCode",{parentName:"td"},"year=2024")," ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"default_extension"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"For files without extension it will assume the specified file type. If it is not set the files without extensions will be skipped. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"enable_compression"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Enable or disable processing compressed files. Currently .gz and .bz files are supported. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"include_hidden_folders"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Include hidden folders in the traversal (folders starting with . or _ ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"sample_files"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Not listing all the files but only taking a handful amount of sample file to infer the schema. File count and file size calculation will be disabled. This can affect performance significantly if enabled ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"table_name"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Display name of the dataset.Combination of named variables from include path and strings ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"traversal_method"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"Enum"))),(0,n.yg)("td",{parentName:"tr",align:"left"},'One of: "ALL", "MIN_MAX", "MAX"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"exclude"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of array, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"list of paths in glob pattern which will be excluded while scanning for the datasets ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec.exclude."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"file_types"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Files with extenstions specified here (subset of default value) only will be scanned to create dataset. Other files will be omitted. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","'","csv","'",", ","'","tsv","'",", ","'","json","'",", ","'","parquet","'",", ","'","avro","'","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec.file_types."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec."),(0,n.yg)("span",{className:"path-main"},"tables_filter_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"s3_lineage_config.path_specs.PathSpec.tables_filter_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"schema_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"schema_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"table_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"table_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"user_email_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"user_email_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"view_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"view_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"classification"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"ClassificationConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification."),(0,n.yg)("span",{className:"path-main"},"enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether classification should be used to auto-detect glossary terms ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification."),(0,n.yg)("span",{className:"path-main"},"info_type_to_term"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,string)"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification."),(0,n.yg)("span",{className:"path-main"},"max_workers"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of worker processes to use for classification. Set to 1 to disable. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"4")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification."),(0,n.yg)("span",{className:"path-main"},"sample_size"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of sample values used for classification. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"100")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification."),(0,n.yg)("span",{className:"path-main"},"classifiers"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"array"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Classifiers to use to auto-detect glossary terms. If more than one classifier, infotype predictions from the classifier defined later in sequence take precedance. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"[","{","'","type","'",": ","'","datahub","'",", ","'","config","'",": None","}","]")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification.classifiers."),(0,n.yg)("span",{className:"path-main"},"DynamicTypedClassifierConfig"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"DynamicTypedClassifierConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification.classifiers.DynamicTypedClassifierConfig."),(0,n.yg)("span",{className:"path-main"},"type"),"\xa0",(0,n.yg)("abbr",{title:"Required if DynamicTypedClassifierConfig is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The type of the classifier to use. For DataHub,  use ",(0,n.yg)("inlineCode",{parentName:"td"},"datahub"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification.classifiers.DynamicTypedClassifierConfig."),(0,n.yg)("span",{className:"path-main"},"config"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of object, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The configuration required for initializing the classifier. If not specified, uses defaults for classifer type. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification."),(0,n.yg)("span",{className:"path-main"},"column_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification.column_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification."),(0,n.yg)("span",{className:"path-main"},"table_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"classification.table_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"profiling"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"GEProfilingConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"catch_exceptions"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"default-line "},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether profiling should be done. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"field_sample_values_limit"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Upper limit for number of sample values to collect for all columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"20")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_distinct_count"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the number of distinct values for each column. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_distinct_value_frequencies"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for distinct value frequencies. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_histogram"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the histogram for numeric fields. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_max_value"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the max value of numeric columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_mean_value"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the mean value of numeric columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_median_value"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the median value of numeric columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_min_value"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the min value of numeric columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_null_count"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the number of nulls for each column. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_quantiles"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the quantiles of numeric columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_sample_values"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the sample values for all columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"include_field_stddev_value"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile for the standard deviation of numeric columns. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"limit"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of integer, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Max number of documents to profile. By default, profiles all documents. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"max_number_of_fields_to_profile"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of integer, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A positive integer that specifies the maximum number of columns to profile for any table. ",(0,n.yg)("inlineCode",{parentName:"td"},"None")," implies all columns. The cost of profiling goes up significantly as the number of columns to profile goes up. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"max_workers"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of worker threads to use for profiling. Set to 1 to disable. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"20")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"offset"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of integer, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Offset in documents to profile. By default, uses no offset. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"partition_datetime"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string(date-time), null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"If specified, profile only the partition which matches this datetime. If not specified, profile the latest partition. Only Bigquery supports this. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"partition_profiling_enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile partitioned tables. Only BigQuery and Aws Athena supports this. If enabled, latest partition data is used for profiling. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"profile_external_tables"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile external tables. Only Snowflake and Redshift supports this. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"profile_if_updated_since_days"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of number, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Profile table only if it has been updated since these many number of days. If set to ",(0,n.yg)("inlineCode",{parentName:"td"},"null"),", no constraint of last modified time for tables to profile. Supported only in ",(0,n.yg)("inlineCode",{parentName:"td"},"snowflake")," and ",(0,n.yg)("inlineCode",{parentName:"td"},"BigQuery"),". ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"profile_nested_fields"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile complex types like structs, arrays and maps.  ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"profile_table_level_only"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to perform profiling at table-level only, or include column-level profiling as well. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"profile_table_row_count_estimate_only"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Use an approximate query for row count. This will be much faster but slightly less accurate. Only supported for Postgres and MySQL.  ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"profile_table_row_limit"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of integer, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Profile tables only if their row count is less than specified count. If set to ",(0,n.yg)("inlineCode",{parentName:"td"},"null"),", no limit on the row count of tables to profile. Supported only in ",(0,n.yg)("inlineCode",{parentName:"td"},"Snowflake"),", ",(0,n.yg)("inlineCode",{parentName:"td"},"BigQuery"),". Supported for ",(0,n.yg)("inlineCode",{parentName:"td"},"Oracle")," based on gathered stats. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"5000000")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"profile_table_size_limit"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of integer, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Profile tables only if their size is less than specified GBs. If set to ",(0,n.yg)("inlineCode",{parentName:"td"},"null"),", no limit on the size of tables to profile. Supported only in ",(0,n.yg)("inlineCode",{parentName:"td"},"Snowflake"),", ",(0,n.yg)("inlineCode",{parentName:"td"},"BigQuery")," and ",(0,n.yg)("inlineCode",{parentName:"td"},"Databricks"),". Supported for ",(0,n.yg)("inlineCode",{parentName:"td"},"Oracle")," based on calculated size from gathered stats. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"5")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"query_combiner_enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("em",{parentName:"td"},"This feature is still experimental and can be disabled if it causes issues.")," Reduces the total number of queries issued and speeds up profiling by dynamically combining SQL queries where possible. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"report_dropped_profiles"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to report datasets or dataset columns which were not profiled. Set to ",(0,n.yg)("inlineCode",{parentName:"td"},"True")," for debugging purposes. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"sample_size"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of rows to be sampled from table for column level profiling.Applicable only if ",(0,n.yg)("inlineCode",{parentName:"td"},"use_sampling")," is set to True. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"10000")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"turn_off_expensive_profiling_metrics"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to turn off expensive profiling or not. This turns off profiling for quantiles, distinct_value_frequencies, histogram & sample_values. This also limits maximum number of fields being profiled to 10. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"use_sampling"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to profile column level stats on sample of table. Only BigQuery and Snowflake support this. If enabled, profiling is done on rows sampled from table. Sampling is not done for smaller tables.  ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"operation_config"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"OperationConfig"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling.operation_config."),(0,n.yg)("span",{className:"path-main"},"lower_freq_profile_enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to do profiling at lower freq or not. This does not do any scheduling just adds additional checks to when not to run profiling. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling.operation_config."),(0,n.yg)("span",{className:"path-main"},"profile_date_of_month"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of integer, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number between 1 to 31 for date of month (both inclusive). If not specified, defaults to Nothing and this field does not take affect. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling.operation_config."),(0,n.yg)("span",{className:"path-main"},"profile_day_of_week"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of integer, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number between 0 to 6 for day of week (both inclusive). 0 is Monday and 6 is Sunday. If not specified, defaults to Nothing and this field does not take affect. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling."),(0,n.yg)("span",{className:"path-main"},"tags_to_ignore_sampling"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of array, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Fixed list of tags to ignore sampling. If not specified, tables will be sampled based on ",(0,n.yg)("inlineCode",{parentName:"td"},"use_sampling"),". ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"profiling.tags_to_ignore_sampling."),(0,n.yg)("span",{className:"path-main"},"string"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"stateful_ingestion"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of StatefulStaleMetadataRemovalConfig, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"default-line "},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or ",(0,n.yg)("inlineCode",{parentName:"td"},"datahub_api")," is specified, otherwise False ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"fail_safe_threshold"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"number"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Prevents large amount of soft deletes & the state from committing from accidental changes to the source configuration if the relative change percent in entities compared to the previous state is above the 'fail_safe_threshold'. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"75.0")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"remove_stale_metadata"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))))))),(0,n.yg)(s.A,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,n.yg)("p",null,"The ",(0,n.yg)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "$defs": {\n    "AllowDenyPattern": {\n      "additionalProperties": false,\n      "description": "A class to store allow deny regexes",\n      "properties": {\n        "allow": {\n          "default": [\n            ".*"\n          ],\n          "description": "List of regex patterns to include in ingestion",\n          "items": {\n            "type": "string"\n          },\n          "title": "Allow",\n          "type": "array"\n        },\n        "deny": {\n          "default": [],\n          "description": "List of regex patterns to exclude from ingestion.",\n          "items": {\n            "type": "string"\n          },\n          "title": "Deny",\n          "type": "array"\n        },\n        "ignoreCase": {\n          "anyOf": [\n            {\n              "type": "boolean"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": true,\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "title": "Ignorecase"\n        }\n      },\n      "title": "AllowDenyPattern",\n      "type": "object"\n    },\n    "BucketDuration": {\n      "enum": [\n        "DAY",\n        "HOUR"\n      ],\n      "title": "BucketDuration",\n      "type": "string"\n    },\n    "ClassificationConfig": {\n      "additionalProperties": false,\n      "properties": {\n        "enabled": {\n          "default": false,\n          "description": "Whether classification should be used to auto-detect glossary terms",\n          "title": "Enabled",\n          "type": "boolean"\n        },\n        "sample_size": {\n          "default": 100,\n          "description": "Number of sample values used for classification.",\n          "title": "Sample Size",\n          "type": "integer"\n        },\n        "max_workers": {\n          "default": 4,\n          "description": "Number of worker processes to use for classification. Set to 1 to disable.",\n          "title": "Max Workers",\n          "type": "integer"\n        },\n        "table_pattern": {\n          "$ref": "#/$defs/AllowDenyPattern",\n          "default": {\n            "allow": [\n              ".*"\n            ],\n            "deny": [],\n            "ignoreCase": true\n          },\n          "description": "Regex patterns to filter tables for classification. This is used in combination with other patterns in parent config. Specify regex to match the entire table name in `database.schema.table` format. e.g. to match all tables starting with customer in Customer database and public schema, use the regex \'Customer.public.customer.*\'"\n        },\n        "column_pattern": {\n          "$ref": "#/$defs/AllowDenyPattern",\n          "default": {\n            "allow": [\n              ".*"\n            ],\n            "deny": [],\n            "ignoreCase": true\n          },\n          "description": "Regex patterns to filter columns for classification. This is used in combination with other patterns in parent config. Specify regex to match the column name in `database.schema.table.column` format."\n        },\n        "info_type_to_term": {\n          "additionalProperties": {\n            "type": "string"\n          },\n          "default": {},\n          "description": "Optional mapping to provide glossary term identifier for info type",\n          "title": "Info Type To Term",\n          "type": "object"\n        },\n        "classifiers": {\n          "default": [\n            {\n              "type": "datahub",\n              "config": null\n            }\n          ],\n          "description": "Classifiers to use to auto-detect glossary terms. If more than one classifier, infotype predictions from the classifier defined later in sequence take precedance.",\n          "items": {\n            "$ref": "#/$defs/DynamicTypedClassifierConfig"\n          },\n          "title": "Classifiers",\n          "type": "array"\n        }\n      },\n      "title": "ClassificationConfig",\n      "type": "object"\n    },\n    "DynamicTypedClassifierConfig": {\n      "additionalProperties": false,\n      "properties": {\n        "type": {\n          "description": "The type of the classifier to use. For DataHub,  use `datahub`",\n          "title": "Type",\n          "type": "string"\n        },\n        "config": {\n          "anyOf": [\n            {},\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "The configuration required for initializing the classifier. If not specified, uses defaults for classifer type.",\n          "title": "Config"\n        }\n      },\n      "required": [\n        "type"\n      ],\n      "title": "DynamicTypedClassifierConfig",\n      "type": "object"\n    },\n    "FolderTraversalMethod": {\n      "enum": [\n        "ALL",\n        "MIN_MAX",\n        "MAX"\n      ],\n      "title": "FolderTraversalMethod",\n      "type": "string"\n    },\n    "GEProfilingConfig": {\n      "additionalProperties": false,\n      "properties": {\n        "enabled": {\n          "default": false,\n          "description": "Whether profiling should be done.",\n          "title": "Enabled",\n          "type": "boolean"\n        },\n        "operation_config": {\n          "$ref": "#/$defs/OperationConfig",\n          "description": "Experimental feature. To specify operation configs."\n        },\n        "limit": {\n          "anyOf": [\n            {\n              "type": "integer"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Max number of documents to profile. By default, profiles all documents.",\n          "title": "Limit"\n        },\n        "offset": {\n          "anyOf": [\n            {\n              "type": "integer"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Offset in documents to profile. By default, uses no offset.",\n          "title": "Offset"\n        },\n        "profile_table_level_only": {\n          "default": false,\n          "description": "Whether to perform profiling at table-level only, or include column-level profiling as well.",\n          "title": "Profile Table Level Only",\n          "type": "boolean"\n        },\n        "include_field_null_count": {\n          "default": true,\n          "description": "Whether to profile for the number of nulls for each column.",\n          "title": "Include Field Null Count",\n          "type": "boolean"\n        },\n        "include_field_distinct_count": {\n          "default": true,\n          "description": "Whether to profile for the number of distinct values for each column.",\n          "title": "Include Field Distinct Count",\n          "type": "boolean"\n        },\n        "include_field_min_value": {\n          "default": true,\n          "description": "Whether to profile for the min value of numeric columns.",\n          "title": "Include Field Min Value",\n          "type": "boolean"\n        },\n        "include_field_max_value": {\n          "default": true,\n          "description": "Whether to profile for the max value of numeric columns.",\n          "title": "Include Field Max Value",\n          "type": "boolean"\n        },\n        "include_field_mean_value": {\n          "default": true,\n          "description": "Whether to profile for the mean value of numeric columns.",\n          "title": "Include Field Mean Value",\n          "type": "boolean"\n        },\n        "include_field_median_value": {\n          "default": true,\n          "description": "Whether to profile for the median value of numeric columns.",\n          "title": "Include Field Median Value",\n          "type": "boolean"\n        },\n        "include_field_stddev_value": {\n          "default": true,\n          "description": "Whether to profile for the standard deviation of numeric columns.",\n          "title": "Include Field Stddev Value",\n          "type": "boolean"\n        },\n        "include_field_quantiles": {\n          "default": false,\n          "description": "Whether to profile for the quantiles of numeric columns.",\n          "title": "Include Field Quantiles",\n          "type": "boolean"\n        },\n        "include_field_distinct_value_frequencies": {\n          "default": false,\n          "description": "Whether to profile for distinct value frequencies.",\n          "title": "Include Field Distinct Value Frequencies",\n          "type": "boolean"\n        },\n        "include_field_histogram": {\n          "default": false,\n          "description": "Whether to profile for the histogram for numeric fields.",\n          "title": "Include Field Histogram",\n          "type": "boolean"\n        },\n        "include_field_sample_values": {\n          "default": true,\n          "description": "Whether to profile for the sample values for all columns.",\n          "title": "Include Field Sample Values",\n          "type": "boolean"\n        },\n        "max_workers": {\n          "default": 20,\n          "description": "Number of worker threads to use for profiling. Set to 1 to disable.",\n          "title": "Max Workers",\n          "type": "integer"\n        },\n        "report_dropped_profiles": {\n          "default": false,\n          "description": "Whether to report datasets or dataset columns which were not profiled. Set to `True` for debugging purposes.",\n          "title": "Report Dropped Profiles",\n          "type": "boolean"\n        },\n        "turn_off_expensive_profiling_metrics": {\n          "default": false,\n          "description": "Whether to turn off expensive profiling or not. This turns off profiling for quantiles, distinct_value_frequencies, histogram & sample_values. This also limits maximum number of fields being profiled to 10.",\n          "title": "Turn Off Expensive Profiling Metrics",\n          "type": "boolean"\n        },\n        "field_sample_values_limit": {\n          "default": 20,\n          "description": "Upper limit for number of sample values to collect for all columns.",\n          "title": "Field Sample Values Limit",\n          "type": "integer"\n        },\n        "max_number_of_fields_to_profile": {\n          "anyOf": [\n            {\n              "exclusiveMinimum": 0,\n              "type": "integer"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "A positive integer that specifies the maximum number of columns to profile for any table. `None` implies all columns. The cost of profiling goes up significantly as the number of columns to profile goes up.",\n          "title": "Max Number Of Fields To Profile"\n        },\n        "profile_if_updated_since_days": {\n          "anyOf": [\n            {\n              "exclusiveMinimum": 0,\n              "type": "number"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Profile table only if it has been updated since these many number of days. If set to `null`, no constraint of last modified time for tables to profile. Supported only in `snowflake` and `BigQuery`.",\n          "schema_extra": {\n            "supported_sources": [\n              "snowflake",\n              "bigquery"\n            ]\n          },\n          "title": "Profile If Updated Since Days"\n        },\n        "profile_table_size_limit": {\n          "anyOf": [\n            {\n              "type": "integer"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": 5,\n          "description": "Profile tables only if their size is less than specified GBs. If set to `null`, no limit on the size of tables to profile. Supported only in `Snowflake`, `BigQuery` and `Databricks`. Supported for `Oracle` based on calculated size from gathered stats.",\n          "schema_extra": {\n            "supported_sources": [\n              "snowflake",\n              "bigquery",\n              "unity-catalog",\n              "oracle"\n            ]\n          },\n          "title": "Profile Table Size Limit"\n        },\n        "profile_table_row_limit": {\n          "anyOf": [\n            {\n              "type": "integer"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": 5000000,\n          "description": "Profile tables only if their row count is less than specified count. If set to `null`, no limit on the row count of tables to profile. Supported only in `Snowflake`, `BigQuery`. Supported for `Oracle` based on gathered stats.",\n          "schema_extra": {\n            "supported_sources": [\n              "snowflake",\n              "bigquery",\n              "oracle"\n            ]\n          },\n          "title": "Profile Table Row Limit"\n        },\n        "profile_table_row_count_estimate_only": {\n          "default": false,\n          "description": "Use an approximate query for row count. This will be much faster but slightly less accurate. Only supported for Postgres and MySQL. ",\n          "schema_extra": {\n            "supported_sources": [\n              "postgres",\n              "mysql"\n            ]\n          },\n          "title": "Profile Table Row Count Estimate Only",\n          "type": "boolean"\n        },\n        "query_combiner_enabled": {\n          "default": true,\n          "description": "*This feature is still experimental and can be disabled if it causes issues.* Reduces the total number of queries issued and speeds up profiling by dynamically combining SQL queries where possible.",\n          "title": "Query Combiner Enabled",\n          "type": "boolean"\n        },\n        "catch_exceptions": {\n          "default": true,\n          "description": "",\n          "title": "Catch Exceptions",\n          "type": "boolean"\n        },\n        "partition_profiling_enabled": {\n          "default": true,\n          "description": "Whether to profile partitioned tables. Only BigQuery and Aws Athena supports this. If enabled, latest partition data is used for profiling.",\n          "schema_extra": {\n            "supported_sources": [\n              "athena",\n              "bigquery"\n            ]\n          },\n          "title": "Partition Profiling Enabled",\n          "type": "boolean"\n        },\n        "partition_datetime": {\n          "anyOf": [\n            {\n              "format": "date-time",\n              "type": "string"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "If specified, profile only the partition which matches this datetime. If not specified, profile the latest partition. Only Bigquery supports this.",\n          "schema_extra": {\n            "supported_sources": [\n              "bigquery"\n            ]\n          },\n          "title": "Partition Datetime"\n        },\n        "use_sampling": {\n          "default": true,\n          "description": "Whether to profile column level stats on sample of table. Only BigQuery and Snowflake support this. If enabled, profiling is done on rows sampled from table. Sampling is not done for smaller tables. ",\n          "schema_extra": {\n            "supported_sources": [\n              "bigquery",\n              "snowflake"\n            ]\n          },\n          "title": "Use Sampling",\n          "type": "boolean"\n        },\n        "sample_size": {\n          "default": 10000,\n          "description": "Number of rows to be sampled from table for column level profiling.Applicable only if `use_sampling` is set to True.",\n          "schema_extra": {\n            "supported_sources": [\n              "bigquery",\n              "snowflake"\n            ]\n          },\n          "title": "Sample Size",\n          "type": "integer"\n        },\n        "profile_external_tables": {\n          "default": false,\n          "description": "Whether to profile external tables. Only Snowflake and Redshift supports this.",\n          "schema_extra": {\n            "supported_sources": [\n              "redshift",\n              "snowflake"\n            ]\n          },\n          "title": "Profile External Tables",\n          "type": "boolean"\n        },\n        "tags_to_ignore_sampling": {\n          "anyOf": [\n            {\n              "items": {\n                "type": "string"\n              },\n              "type": "array"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Fixed list of tags to ignore sampling. If not specified, tables will be sampled based on `use_sampling`.",\n          "title": "Tags To Ignore Sampling"\n        },\n        "profile_nested_fields": {\n          "default": false,\n          "description": "Whether to profile complex types like structs, arrays and maps. ",\n          "title": "Profile Nested Fields",\n          "type": "boolean"\n        }\n      },\n      "title": "GEProfilingConfig",\n      "type": "object"\n    },\n    "LineageMode": {\n      "enum": [\n        "sql_based",\n        "stl_scan_based",\n        "mixed"\n      ],\n      "title": "LineageMode",\n      "type": "string"\n    },\n    "OperationConfig": {\n      "additionalProperties": false,\n      "properties": {\n        "lower_freq_profile_enabled": {\n          "default": false,\n          "description": "Whether to do profiling at lower freq or not. This does not do any scheduling just adds additional checks to when not to run profiling.",\n          "title": "Lower Freq Profile Enabled",\n          "type": "boolean"\n        },\n        "profile_day_of_week": {\n          "anyOf": [\n            {\n              "type": "integer"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Number between 0 to 6 for day of week (both inclusive). 0 is Monday and 6 is Sunday. If not specified, defaults to Nothing and this field does not take affect.",\n          "title": "Profile Day Of Week"\n        },\n        "profile_date_of_month": {\n          "anyOf": [\n            {\n              "type": "integer"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Number between 1 to 31 for date of month (both inclusive). If not specified, defaults to Nothing and this field does not take affect.",\n          "title": "Profile Date Of Month"\n        }\n      },\n      "title": "OperationConfig",\n      "type": "object"\n    },\n    "PathSpec": {\n      "additionalProperties": false,\n      "properties": {\n        "include": {\n          "description": "Path to table. Name variable `{table}` is used to mark the folder with dataset. In absence of `{table}`, file level dataset will be created. Check below examples for more details.",\n          "title": "Include",\n          "type": "string"\n        },\n        "exclude": {\n          "anyOf": [\n            {\n              "items": {\n                "type": "string"\n              },\n              "type": "array"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": [],\n          "description": "list of paths in glob pattern which will be excluded while scanning for the datasets",\n          "title": "Exclude"\n        },\n        "file_types": {\n          "default": [\n            "csv",\n            "tsv",\n            "json",\n            "parquet",\n            "avro"\n          ],\n          "description": "Files with extenstions specified here (subset of default value) only will be scanned to create dataset. Other files will be omitted.",\n          "items": {\n            "type": "string"\n          },\n          "title": "File Types",\n          "type": "array"\n        },\n        "default_extension": {\n          "anyOf": [\n            {\n              "type": "string"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "For files without extension it will assume the specified file type. If it is not set the files without extensions will be skipped.",\n          "title": "Default Extension"\n        },\n        "table_name": {\n          "anyOf": [\n            {\n              "type": "string"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Display name of the dataset.Combination of named variables from include path and strings",\n          "title": "Table Name"\n        },\n        "enable_compression": {\n          "default": true,\n          "description": "Enable or disable processing compressed files. Currently .gz and .bz files are supported.",\n          "title": "Enable Compression",\n          "type": "boolean"\n        },\n        "sample_files": {\n          "default": true,\n          "description": "Not listing all the files but only taking a handful amount of sample file to infer the schema. File count and file size calculation will be disabled. This can affect performance significantly if enabled",\n          "title": "Sample Files",\n          "type": "boolean"\n        },\n        "allow_double_stars": {\n          "default": false,\n          "description": "Allow double stars in the include path. This can affect performance significantly if enabled",\n          "title": "Allow Double Stars",\n          "type": "boolean"\n        },\n        "autodetect_partitions": {\n          "default": true,\n          "description": "Autodetect partition(s) from the path. If set to true, it will autodetect partition key/value if the folder format is {partition_key}={partition_value} for example `year=2024`",\n          "title": "Autodetect Partitions",\n          "type": "boolean"\n        },\n        "traversal_method": {\n          "$ref": "#/$defs/FolderTraversalMethod",\n          "default": "MAX",\n          "description": "Method to traverse the folder. ALL: Traverse all the folders, MIN_MAX: Traverse the folders by finding min and max value, MAX: Traverse the folder with max value"\n        },\n        "include_hidden_folders": {\n          "default": false,\n          "description": "Include hidden folders in the traversal (folders starting with . or _",\n          "title": "Include Hidden Folders",\n          "type": "boolean"\n        },\n        "tables_filter_pattern": {\n          "$ref": "#/$defs/AllowDenyPattern",\n          "default": {\n            "allow": [\n              ".*"\n            ],\n            "deny": [],\n            "ignoreCase": true\n          },\n          "description": "The tables_filter_pattern configuration field uses regular expressions to filter the tables part of the Pathspec for ingestion, allowing fine-grained control over which tables are included or excluded based on specified patterns. The default setting allows all tables."\n        }\n      },\n      "required": [\n        "include"\n      ],\n      "title": "PathSpec",\n      "type": "object"\n    },\n    "S3LineageProviderConfig": {\n      "additionalProperties": false,\n      "description": "Any source that produces s3 lineage from/to Datasets should inherit this class.",\n      "properties": {\n        "path_specs": {\n          "default": [],\n          "description": "List of PathSpec. See below the details about PathSpec",\n          "items": {\n            "$ref": "#/$defs/PathSpec"\n          },\n          "title": "Path Specs",\n          "type": "array"\n        },\n        "strip_urls": {\n          "default": true,\n          "description": "Strip filename from s3 url. It only applies if path_specs are not specified.",\n          "title": "Strip Urls",\n          "type": "boolean"\n        },\n        "ignore_non_path_spec_path": {\n          "default": false,\n          "description": "Ignore paths that are not match in path_specs. It only applies if path_specs are specified.",\n          "title": "Ignore Non Path Spec Path",\n          "type": "boolean"\n        }\n      },\n      "title": "S3LineageProviderConfig",\n      "type": "object"\n    },\n    "StatefulStaleMetadataRemovalConfig": {\n      "additionalProperties": false,\n      "description": "Base specialized config for Stateful Ingestion with stale metadata removal capability.",\n      "properties": {\n        "enabled": {\n          "default": false,\n          "description": "Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or `datahub_api` is specified, otherwise False",\n          "title": "Enabled",\n          "type": "boolean"\n        },\n        "remove_stale_metadata": {\n          "default": true,\n          "description": "Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled.",\n          "title": "Remove Stale Metadata",\n          "type": "boolean"\n        },\n        "fail_safe_threshold": {\n          "default": 75.0,\n          "description": "Prevents large amount of soft deletes & the state from committing from accidental changes to the source configuration if the relative change percent in entities compared to the previous state is above the \'fail_safe_threshold\'.",\n          "maximum": 100.0,\n          "minimum": 0.0,\n          "title": "Fail Safe Threshold",\n          "type": "number"\n        }\n      },\n      "title": "StatefulStaleMetadataRemovalConfig",\n      "type": "object"\n    }\n  },\n  "additionalProperties": false,\n  "properties": {\n    "schema_pattern": {\n      "$ref": "#/$defs/AllowDenyPattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "description": "Regex patterns for schemas to filter in ingestion. Specify regex to only match the schema name. e.g. to match all tables in schema analytics, use the regex \'analytics\'"\n    },\n    "table_pattern": {\n      "$ref": "#/$defs/AllowDenyPattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "description": "Regex patterns for tables to filter in ingestion. Specify regex to match the entire table name in database.schema.table format. e.g. to match all tables starting with customer in Customer database and public schema, use the regex \'Customer.public.customer.*\'"\n    },\n    "view_pattern": {\n      "$ref": "#/$defs/AllowDenyPattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "description": "Regex patterns for views to filter in ingestion. Note: Defaults to table_pattern if not specified. Specify regex to match the entire view name in database.schema.view format. e.g. to match all views starting with customer in Customer database and public schema, use the regex \'Customer.public.customer.*\'"\n    },\n    "classification": {\n      "$ref": "#/$defs/ClassificationConfig",\n      "default": {\n        "enabled": false,\n        "sample_size": 100,\n        "max_workers": 4,\n        "table_pattern": {\n          "allow": [\n            ".*"\n          ],\n          "deny": [],\n          "ignoreCase": true\n        },\n        "column_pattern": {\n          "allow": [\n            ".*"\n          ],\n          "deny": [],\n          "ignoreCase": true\n        },\n        "info_type_to_term": {},\n        "classifiers": [\n          {\n            "config": null,\n            "type": "datahub"\n          }\n        ]\n      },\n      "description": "For details, refer to [Classification](../../../../metadata-ingestion/docs/dev_guides/classification.md)."\n    },\n    "enable_stateful_profiling": {\n      "default": true,\n      "description": "Enable stateful profiling. This will store profiling timestamps per dataset after successful profiling. and will not run profiling again in subsequent run if table has not been updated. ",\n      "title": "Enable Stateful Profiling",\n      "type": "boolean"\n    },\n    "enable_stateful_lineage_ingestion": {\n      "default": true,\n      "description": "Enable stateful lineage ingestion. This will store lineage window timestamps after successful lineage ingestion. and will not run lineage ingestion for same timestamps in subsequent run. NOTE: This only works with use_queries_v2=False (legacy extraction path). For queries v2, use enable_stateful_time_window instead.",\n      "title": "Enable Stateful Lineage Ingestion",\n      "type": "boolean"\n    },\n    "bucket_duration": {\n      "$ref": "#/$defs/BucketDuration",\n      "default": "DAY",\n      "description": "Size of the time window to aggregate usage stats."\n    },\n    "end_time": {\n      "description": "Latest date of lineage/usage to consider. Default: Current time in UTC",\n      "format": "date-time",\n      "title": "End Time",\n      "type": "string"\n    },\n    "start_time": {\n      "default": null,\n      "description": "Earliest date of lineage/usage to consider. Default: Last full day in UTC (or hour, depending on `bucket_duration`). You can also specify relative time with respect to end_time such as \'-7 days\' Or \'-7d\'.",\n      "format": "date-time",\n      "title": "Start Time",\n      "type": "string"\n    },\n    "enable_stateful_usage_ingestion": {\n      "default": true,\n      "description": "Enable stateful lineage ingestion. This will store usage window timestamps after successful usage ingestion. and will not run usage ingestion for same timestamps in subsequent run. NOTE: This only works with use_queries_v2=False (legacy extraction path). For queries v2, use enable_stateful_time_window instead.",\n      "title": "Enable Stateful Usage Ingestion",\n      "type": "boolean"\n    },\n    "top_n_queries": {\n      "default": 10,\n      "description": "Number of top queries to save to each table.",\n      "exclusiveMinimum": 0,\n      "title": "Top N Queries",\n      "type": "integer"\n    },\n    "user_email_pattern": {\n      "$ref": "#/$defs/AllowDenyPattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "description": "regex patterns for user emails to filter in usage."\n    },\n    "include_operational_stats": {\n      "default": true,\n      "description": "Whether to display operational stats.",\n      "title": "Include Operational Stats",\n      "type": "boolean"\n    },\n    "include_read_operational_stats": {\n      "default": false,\n      "description": "Whether to report read operational stats. Experimental.",\n      "title": "Include Read Operational Stats",\n      "type": "boolean"\n    },\n    "format_sql_queries": {\n      "default": false,\n      "description": "Whether to format sql queries",\n      "title": "Format Sql Queries",\n      "type": "boolean"\n    },\n    "include_top_n_queries": {\n      "default": true,\n      "description": "Whether to ingest the top_n_queries.",\n      "title": "Include Top N Queries",\n      "type": "boolean"\n    },\n    "email_domain": {\n      "anyOf": [\n        {\n          "type": "string"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "Email domain of your organisation so users can be displayed on UI appropriately.",\n      "title": "Email Domain"\n    },\n    "incremental_lineage": {\n      "default": false,\n      "description": "When enabled, emits lineage as incremental to existing lineage already in DataHub. When disabled, re-states lineage on each run.",\n      "title": "Incremental Lineage",\n      "type": "boolean"\n    },\n    "s3_lineage_config": {\n      "$ref": "#/$defs/S3LineageProviderConfig",\n      "default": {\n        "path_specs": [],\n        "strip_urls": true,\n        "ignore_non_path_spec_path": false\n      },\n      "description": "Common config for S3 lineage generation"\n    },\n    "convert_urns_to_lowercase": {\n      "default": false,\n      "description": "Whether to convert dataset urns to lowercase.",\n      "title": "Convert Urns To Lowercase",\n      "type": "boolean"\n    },\n    "env": {\n      "default": "PROD",\n      "description": "The environment that all assets produced by this connector belong to",\n      "title": "Env",\n      "type": "string"\n    },\n    "platform_instance_map": {\n      "anyOf": [\n        {\n          "additionalProperties": {\n            "type": "string"\n          },\n          "type": "object"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "A holder for platform -> platform_instance mappings to generate correct dataset urns",\n      "title": "Platform Instance Map"\n    },\n    "platform_instance": {\n      "anyOf": [\n        {\n          "type": "string"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See https://docs.datahub.com/docs/platform-instances/ for more details.",\n      "title": "Platform Instance"\n    },\n    "stateful_ingestion": {\n      "anyOf": [\n        {\n          "$ref": "#/$defs/StatefulStaleMetadataRemovalConfig"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null\n    },\n    "options": {\n      "additionalProperties": true,\n      "description": "Any options specified here will be passed to [SQLAlchemy.create_engine](https://docs.sqlalchemy.org/en/14/core/engines.html#sqlalchemy.create_engine) as kwargs. To set connection arguments in the URL, specify them under `connect_args`.",\n      "title": "Options",\n      "type": "object"\n    },\n    "profile_pattern": {\n      "$ref": "#/$defs/AllowDenyPattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "description": "Regex patterns to filter tables (or specific columns) for profiling during ingestion. Note that only tables allowed by the `table_pattern` will be considered."\n    },\n    "domain": {\n      "additionalProperties": {\n        "$ref": "#/$defs/AllowDenyPattern"\n      },\n      "default": {},\n      "description": "Attach domains to databases, schemas or tables during ingestion using regex patterns. Domain key can be a guid like *urn:li:domain:ec428203-ce86-4db3-985d-5a8ee6df32ba* or a string like \\"Marketing\\".) If you provide strings, then datahub will attempt to resolve this name to a guid, and will error out if this fails. There can be multiple domain keys specified.",\n      "title": "Domain",\n      "type": "object"\n    },\n    "include_views": {\n      "default": true,\n      "description": "Whether views should be ingested.",\n      "title": "Include Views",\n      "type": "boolean"\n    },\n    "include_tables": {\n      "default": true,\n      "description": "Whether tables should be ingested.",\n      "title": "Include Tables",\n      "type": "boolean"\n    },\n    "include_table_location_lineage": {\n      "default": true,\n      "description": "If the source supports it, include table lineage to the underlying storage location.",\n      "title": "Include Table Location Lineage",\n      "type": "boolean"\n    },\n    "include_view_lineage": {\n      "default": true,\n      "description": "Populates view->view and table->view lineage using DataHub\'s sql parser.",\n      "title": "Include View Lineage",\n      "type": "boolean"\n    },\n    "include_view_column_lineage": {\n      "default": true,\n      "description": "Populates column-level lineage for  view->view and table->view lineage using DataHub\'s sql parser. Requires `include_view_lineage` to be enabled.",\n      "title": "Include View Column Lineage",\n      "type": "boolean"\n    },\n    "use_file_backed_cache": {\n      "default": true,\n      "description": "Whether to use a file backed cache for the view definitions.",\n      "title": "Use File Backed Cache",\n      "type": "boolean"\n    },\n    "profiling": {\n      "$ref": "#/$defs/GEProfilingConfig",\n      "default": {\n        "enabled": false,\n        "operation_config": {\n          "lower_freq_profile_enabled": false,\n          "profile_date_of_month": null,\n          "profile_day_of_week": null\n        },\n        "limit": null,\n        "offset": null,\n        "profile_table_level_only": false,\n        "include_field_null_count": true,\n        "include_field_distinct_count": true,\n        "include_field_min_value": true,\n        "include_field_max_value": true,\n        "include_field_mean_value": true,\n        "include_field_median_value": true,\n        "include_field_stddev_value": true,\n        "include_field_quantiles": false,\n        "include_field_distinct_value_frequencies": false,\n        "include_field_histogram": false,\n        "include_field_sample_values": true,\n        "max_workers": 20,\n        "report_dropped_profiles": false,\n        "turn_off_expensive_profiling_metrics": false,\n        "field_sample_values_limit": 20,\n        "max_number_of_fields_to_profile": null,\n        "profile_if_updated_since_days": null,\n        "profile_table_size_limit": 5,\n        "profile_table_row_limit": 5000000,\n        "profile_table_row_count_estimate_only": false,\n        "query_combiner_enabled": true,\n        "catch_exceptions": true,\n        "partition_profiling_enabled": true,\n        "partition_datetime": null,\n        "use_sampling": true,\n        "sample_size": 10000,\n        "profile_external_tables": false,\n        "tags_to_ignore_sampling": null,\n        "profile_nested_fields": false\n      }\n    },\n    "username": {\n      "anyOf": [\n        {\n          "type": "string"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "username",\n      "title": "Username"\n    },\n    "password": {\n      "anyOf": [\n        {\n          "format": "password",\n          "type": "string",\n          "writeOnly": true\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "password",\n      "title": "Password"\n    },\n    "host_port": {\n      "description": "host URL",\n      "title": "Host Port",\n      "type": "string"\n    },\n    "database": {\n      "default": "dev",\n      "description": "database",\n      "title": "Database",\n      "type": "string"\n    },\n    "sqlalchemy_uri": {\n      "anyOf": [\n        {\n          "type": "string"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "URI of database to connect to. See https://docs.sqlalchemy.org/en/14/core/engines.html#database-urls. Takes precedence over other connection parameters.",\n      "title": "Sqlalchemy Uri"\n    },\n    "default_schema": {\n      "default": "public",\n      "description": "The default schema to use if the sql parser fails to parse the schema with `sql_based` lineage collector",\n      "title": "Default Schema",\n      "type": "string"\n    },\n    "is_serverless": {\n      "default": false,\n      "description": "Whether target Redshift instance is serverless (alternative is provisioned cluster)",\n      "title": "Is Serverless",\n      "type": "boolean"\n    },\n    "lineage_generate_queries": {\n      "default": true,\n      "description": "Whether to generate queries entities for the SQL-based lineage collector.",\n      "title": "Lineage Generate Queries",\n      "type": "boolean"\n    },\n    "include_table_lineage": {\n      "default": true,\n      "description": "Whether table lineage should be ingested.",\n      "title": "Include Table Lineage",\n      "type": "boolean"\n    },\n    "include_copy_lineage": {\n      "default": true,\n      "description": "Whether lineage should be collected from copy commands",\n      "title": "Include Copy Lineage",\n      "type": "boolean"\n    },\n    "include_share_lineage": {\n      "default": true,\n      "description": "Whether lineage should be collected from datashares",\n      "title": "Include Share Lineage",\n      "type": "boolean"\n    },\n    "include_usage_statistics": {\n      "default": false,\n      "description": "Generate usage statistic. email_domain config parameter needs to be set if enabled",\n      "title": "Include Usage Statistics",\n      "type": "boolean"\n    },\n    "include_unload_lineage": {\n      "default": true,\n      "description": "Whether lineage should be collected from unload commands",\n      "title": "Include Unload Lineage",\n      "type": "boolean"\n    },\n    "include_table_rename_lineage": {\n      "default": true,\n      "description": "Whether we should follow `alter table ... rename to` statements when computing lineage. ",\n      "title": "Include Table Rename Lineage",\n      "type": "boolean"\n    },\n    "table_lineage_mode": {\n      "$ref": "#/$defs/LineageMode",\n      "default": "mixed",\n      "description": "Which table lineage collector mode to use. Available modes are: [stl_scan_based, sql_based, mixed]"\n    },\n    "extra_client_options": {\n      "additionalProperties": true,\n      "default": {},\n      "title": "Extra Client Options",\n      "type": "object"\n    },\n    "match_fully_qualified_names": {\n      "default": false,\n      "description": "Whether `schema_pattern` is matched against fully qualified schema name `<database>.<schema>`.",\n      "title": "Match Fully Qualified Names",\n      "type": "boolean"\n    },\n    "extract_column_level_lineage": {\n      "default": true,\n      "description": "Whether to extract column level lineage. This config works with rest-sink only.",\n      "title": "Extract Column Level Lineage",\n      "type": "boolean"\n    },\n    "patch_custom_properties": {\n      "default": true,\n      "description": "Whether to patch custom properties on existing datasets rather than replace.",\n      "title": "Patch Custom Properties",\n      "type": "boolean"\n    },\n    "resolve_temp_table_in_lineage": {\n      "default": true,\n      "description": "Whether to resolve temp table appear in lineage to upstream permanent tables.",\n      "title": "Resolve Temp Table In Lineage",\n      "type": "boolean"\n    },\n    "skip_external_tables": {\n      "default": false,\n      "description": "Whether to skip EXTERNAL tables.",\n      "title": "Skip External Tables",\n      "type": "boolean"\n    }\n  },\n  "required": [\n    "host_port"\n  ],\n  "title": "RedshiftConfig",\n  "type": "object"\n}\n')))),(0,n.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,n.yg)("h3",{id:"schema-discovery-issues"},"Schema Discovery Issues"),(0,n.yg)("p",null,"If you're not seeing all schemas or tables after following the setup steps, check the following:"),(0,n.yg)("h4",{id:"missing-schemas"},"Missing Schemas"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"1. Check schema filtering configuration:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'# In your recipe, ensure schema patterns are correct\nschema_pattern:\n  allow:\n    - "your_schema_name"\n    - "public"\n  # Remove deny patterns that might be blocking schemas\n')),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"2. Verify permissions on specific schemas:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Test if you can see schemas\nSELECT schema_name, schema_type\nFROM svv_redshift_schemas\nWHERE database_name = 'your_database';\n\n-- Test external schemas\nSELECT schemaname, eskind, databasename\nFROM SVV_EXTERNAL_SCHEMAS;\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"3. Check for external schemas:"),"\nExternal schemas (Redshift Spectrum) require both permissions:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"GRANT SELECT ON pg_catalog.svv_external_schemas TO datahub_user;\nGRANT SELECT ON pg_catalog.svv_external_tables TO datahub_user;\nGRANT SELECT ON pg_catalog.svv_external_columns TO datahub_user;\n")),(0,n.yg)("h4",{id:"missing-tables-within-schemas"},"Missing Tables Within Schemas"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"1. Check table filtering:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'table_pattern:\n  allow:\n    - "your_schema.your_table"\n  # Ensure no overly restrictive deny patterns\n')),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"2. Test table visibility:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- For regular tables\nSELECT schemaname, tablename, tabletype\nFROM pg_tables\nWHERE schemaname = 'your_schema';\n\n-- For views\nSELECT schemaname, viewname\nFROM pg_views\nWHERE schemaname = 'your_schema';\n\n-- For external tables\nSELECT schemaname, tablename\nFROM SVV_EXTERNAL_TABLES\nWHERE schemaname = 'your_schema';\n")),(0,n.yg)("h4",{id:"configuration-issues"},"Configuration Issues"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"1. Database specification:"),"\nEnsure you're connecting to the correct database - Redshift ingestion works per database:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'database: "your_actual_database_name" # Not the cluster name\n')),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"2. Schema access permissions:"),"\nEnsure you have USAGE permissions on the schemas you want to discover:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Check if you have USAGE on schemas\nSELECT n.nspname as schema_name,\n       has_schema_privilege('datahub_user', n.nspname, 'USAGE') as has_usage\nFROM pg_catalog.pg_namespace n\nWHERE n.nspname NOT LIKE 'pg_%'\n  AND n.nspname != 'information_schema';\n\n-- Grant USAGE if missing\nGRANT USAGE ON SCHEMA your_schema_name TO datahub_user;\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"3. Shared database configuration:"),"\nIf using datashare consumers, add:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"is_shared_database: true\n")),(0,n.yg)("h4",{id:"permission-test-queries"},"Permission Test Queries"),(0,n.yg)("p",null,"Run these to verify your permissions are working:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Test core permissions\nSELECT COUNT(*) FROM svv_redshift_schemas WHERE database_name = 'your_database';\nSELECT COUNT(*) FROM svv_table_info WHERE database = 'your_database';\n\n-- Test external permissions\nSELECT COUNT(*) FROM svv_external_schemas;\nSELECT COUNT(*) FROM svv_external_tables;\n")),(0,n.yg)("h3",{id:"data-profiling-issues"},"Data Profiling Issues"),(0,n.yg)("h4",{id:"profile-data-not-appearing"},"Profile Data Not Appearing"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"1. Check data access permissions:"),"\nEnsure you have ",(0,n.yg)("inlineCode",{parentName:"p"},"USAGE")," on schemas and ",(0,n.yg)("inlineCode",{parentName:"p"},"SELECT")," on tables:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Test schema access\nSELECT has_schema_privilege('datahub_user', 'your_schema', 'USAGE');\n\n-- Test table access\nSELECT has_table_privilege('datahub_user', 'your_schema.your_table', 'SELECT');\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"2. Enable table-level profiling only:"),"\nIf you cannot grant ",(0,n.yg)("inlineCode",{parentName:"p"},"SELECT")," on tables, use table-level profiling:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"profiling:\n  profile_table_level_only: true\n")),(0,n.yg)("h3",{id:"lineage-issues"},"Lineage Issues"),(0,n.yg)("h4",{id:"missing-lineage-information"},"Missing Lineage Information"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"1. Check lineage configuration:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"table_lineage_mode: stl_scan_based # or sql_based, mixed\ninclude_usage_statistics: true\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"2. Verify SYSLOG ACCESS:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Check if user has SYSLOG ACCESS\nSELECT usename, usesyslog\nFROM pg_user\nWHERE usename = 'datahub_user';\n-- usesyslog should be 't' (true)\n")),(0,n.yg)("h4",{id:"cross-cluster-lineage-datashares"},"Cross-Cluster Lineage (Datashares)"),(0,n.yg)("p",null,"For lineage across datashares, ensure:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"DataHub user has ",(0,n.yg)("inlineCode",{parentName:"li"},"SHARE")," privileges on datashares"),(0,n.yg)("li",{parentName:"ol"},"Both producer and consumer clusters are ingested"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("inlineCode",{parentName:"li"},"include_share_lineage: true")," in configuration")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"-- Check datashare access\nSELECT * FROM svv_datashares WHERE share_name = 'your_share';\n")),(0,n.yg)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Class Name: ",(0,n.yg)("inlineCode",{parentName:"li"},"datahub.ingestion.source.redshift.redshift.RedshiftSource")),(0,n.yg)("li",{parentName:"ul"},"Browse on ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/redshift/redshift.py"},"GitHub"))),(0,n.yg)("h2",null,"Questions"),(0,n.yg)("p",null,"If you've got any questions on configuring ingestion for Redshift, feel free to ping us on ",(0,n.yg)("a",{parentName:"p",href:"https://datahub.com/slack"},"our Slack"),"."))}f.isMDXComponent=!0}}]);