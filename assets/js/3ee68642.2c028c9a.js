"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[54150],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),l=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(a),g=r,y=d["".concat(u,".").concat(g)]||d[g]||p[g]||o;return a?n.createElement(y,i(i({ref:t},c),{},{components:a})):n.createElement(y,i({ref:t},c))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},28566:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>y,frontMatter:()=>s,metadata:()=>l,toc:()=>d});a(96540);var n=a(15680);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const s={title:"Upgrading from DataHub Core to DataHub Cloud",slug:"/managed-datahub/upgrade_core_to_cloud",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/upgrade_core_to_cloud.md"},u="Upgrading from DataHub Core to DataHub Cloud",l={unversionedId:"docs/managed-datahub/upgrade_core_to_cloud",id:"docs/managed-datahub/upgrade_core_to_cloud",title:"Upgrading from DataHub Core to DataHub Cloud",description:"Looking to upgrade to DataHub Cloud, but don't have an account yet? Start here.",source:"@site/genDocs/docs/managed-datahub/upgrade_core_to_cloud.md",sourceDirName:"docs/managed-datahub",slug:"/managed-datahub/upgrade_core_to_cloud",permalink:"/docs/managed-datahub/upgrade_core_to_cloud",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/upgrade_core_to_cloud.md",tags:[],version:"current",frontMatter:{title:"Upgrading from DataHub Core to DataHub Cloud",slug:"/managed-datahub/upgrade_core_to_cloud",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/upgrade_core_to_cloud.md"},sidebar:"overviewSidebar",previous:{title:"Getting Started with DataHub Cloud",permalink:"/docs/managed-datahub/welcome-acryl"},next:{title:"Prerequisites for OIDC Authentication",permalink:"/docs/authentication/guides/sso/initialize-oidc"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Moving From Core To Cloud",id:"moving-from-core-to-cloud",level:2},{value:"Transferring Core Data",id:"transferring-core-data",level:3},{value:"Step 1: Create Your Upgrade Recipe",id:"step-1-create-your-upgrade-recipe",level:4},{value:"Step 2: Run the Upgrade",id:"step-2-run-the-upgrade",level:4},{value:"Step 3: Verify the Upgrade",id:"step-3-verify-the-upgrade",level:4},{value:"Transferring Time-Series Metadata",id:"transferring-time-series-metadata",level:3},{value:"Extended Recipe Configuration",id:"extended-recipe-configuration",level:4},{value:"Advanced Configuration: Transferring Specific Aspects",id:"advanced-configuration-transferring-specific-aspects",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Post-Upgrade Steps",id:"post-upgrade-steps",level:2},{value:"Additional Resources",id:"additional-resources",level:2}],p={toc:d},g="wrapper";function y(e){var{components:t}=e,a=i(e,["components"]);return(0,n.yg)(g,o(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){r(e,t,a[t])}))}return e}({},p,a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"upgrading-from-datahub-core-to-datahub-cloud"},"Upgrading from DataHub Core to DataHub Cloud"),(0,n.yg)("p",null,"Looking to upgrade to ",(0,n.yg)("strong",{parentName:"p"},"DataHub Cloud"),", but don't have an account yet? Start ",(0,n.yg)("a",{parentName:"p",href:"https://datahub.com/demo/"},"here"),"."),(0,n.yg)("p",null,"Once you have a ",(0,n.yg)("strong",{parentName:"p"},"DataHub Cloud")," instance, you can seamlessly transfer all metadata from your self-hosted ",(0,n.yg)("strong",{parentName:"p"},"DataHub Core")," instance\nto ",(0,n.yg)("strong",{parentName:"p"},"DataHub Cloud")," using the DataHub CLI. In this guide, we'll show you how."),(0,n.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.yg)("p",null,"Before starting the upgrade process:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"DataHub Cloud Account"),": Ensure you have an active DataHub Cloud instance with an API token"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Database Access"),": You'll need read access to your DataHub Core MySQL or PostgreSQL database"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"DataHub CLI"),": Install the DataHub CLI with ",(0,n.yg)("inlineCode",{parentName:"li"},"pip install acryl-datahub")),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Network Connectivity"),": Ensure your upgrade environment can access both your source database and DataHub Cloud"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Database Index"),": Verify that the ",(0,n.yg)("inlineCode",{parentName:"li"},"createdon")," column is indexed in your source database (should by for newer versions by default)")),(0,n.yg)("h2",{id:"moving-from-core-to-cloud"},"Moving From Core To Cloud"),(0,n.yg)("p",null,"DataHub supports lifting and shifting your instance from DataHub Core to DataHub Cloud, if you'd like to retain the information already present in your DataHub Core instance. To transfer your instance cleanly, you can follow the steps below."),(0,n.yg)("h3",{id:"transferring-core-data"},"Transferring Core Data"),(0,n.yg)("p",null,"You can easily copy core metadata from DataHub Core to DataHub Cloud using a simple CLI command."),(0,n.yg)("p",null,"By default, we'll transfer:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Data assets (datasets, dashboards, charts, etc.)"),(0,n.yg)("li",{parentName:"ul"},"Users and groups"),(0,n.yg)("li",{parentName:"ul"},"Lineage"),(0,n.yg)("li",{parentName:"ul"},"Descriptions"),(0,n.yg)("li",{parentName:"ul"},"Ownership"),(0,n.yg)("li",{parentName:"ul"},"Domains and data products"),(0,n.yg)("li",{parentName:"ul"},"Tags and glossary terms")),(0,n.yg)("p",null,"The following is NOT automatically transferred:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Ingestion Sources"),(0,n.yg)("li",{parentName:"ul"},"Ingestion Source Runs"),(0,n.yg)("li",{parentName:"ul"},"Ingestion Secrets"),(0,n.yg)("li",{parentName:"ul"},"Platform Settings")),(0,n.yg)("p",null,"Due to the different encryption scheme employed on DataHub Cloud. This method also excludes time-series metadata such as dataset profiles, column statistics, and assertion run history."),(0,n.yg)("h4",{id:"step-1-create-your-upgrade-recipe"},"Step 1: Create Your Upgrade Recipe"),(0,n.yg)("p",null,"Create a file named ",(0,n.yg)("inlineCode",{parentName:"p"},"upgrade_recipe.yml")," with the following configuration:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'pipeline_name: datahub_cloud_upgrade\nsource:\n  type: datahub\n  config:\n    # Disable version history to transfer only current state\n    include_all_versions: false\n\n    # Configure your source database connection\n    database_connection:\n      # For MySQL\n      scheme: "mysql+pymysql"\n      # For PostgreSQL, use: "postgresql+psycopg2"\n\n      host_port: "your-database-host:3306" # MySQL default port\n      username: "your-datahub-username"\n      password: "your-datahub-password"\n      database: "datahub" # Default database name\n\n    # Disable stateful ingestion for one-time transfer.\n    # If you intend to incrementally sync over time, should enable this!\n    stateful_ingestion:\n      enabled: false\n\n# Preserve system metadata during transfer\nflags:\n  set_system_metadata: true\n\n# Configure DataHub Cloud as destination\nsink:\n  type: datahub-rest\n  config:\n    server: "https://your-instance.acryl.io"\n    token: "your-datahub-cloud-api-token"\n')),(0,n.yg)("h4",{id:"step-2-run-the-upgrade"},"Step 2: Run the Upgrade"),(0,n.yg)("p",null,"Execute the upgrade using the DataHub CLI:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"datahub ingest -c upgrade_recipe.yml\n")),(0,n.yg)("p",null,"The upgrade will display progress as it transfers your metadata. Depending on the size of your catalog, this process can take anywhere from minutes to hours."),(0,n.yg)("h4",{id:"step-3-verify-the-upgrade"},"Step 3: Verify the Upgrade"),(0,n.yg)("p",null,"After completion:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Log into your DataHub Cloud instance"),(0,n.yg)("li",{parentName:"ol"},"Navigate to the Browse page to verify your assets"),(0,n.yg)("li",{parentName:"ol"},"Check a few key datasets to ensure documentation, owners, and tags transferred correctly"),(0,n.yg)("li",{parentName:"ol"},"Verify lineage relationships are intact")),(0,n.yg)("h3",{id:"transferring-time-series-metadata"},"Transferring Time-Series Metadata"),(0,n.yg)("p",null,"For a complete transfer including recent time-series metadata, you'll need to provide additional configurations to connect to your ",(0,n.yg)("strong",{parentName:"p"},"Kafka")," cluster. This will transfer:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Dataset and column profiling history"),(0,n.yg)("li",{parentName:"ul"},"Dataset update history (inserts, updates, deletes)"),(0,n.yg)("li",{parentName:"ul"},"Dataset query statistics (query counts)"),(0,n.yg)("li",{parentName:"ul"},"Assertion run results")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Important"),": The amount of historical data available depends on your Kafka retention policy (typically 30-90 days)."),(0,n.yg)("h4",{id:"extended-recipe-configuration"},"Extended Recipe Configuration"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'pipeline_name: datahub_upgrade_with_timeseries\nsource:\n  type: datahub\n  config:\n    include_all_versions: false\n\n    # Database connection (same as quickstart)\n    database_connection:\n      scheme: "mysql+pymysql"\n      host_port: "your-database-host:3306"\n      username: "your-datahub-username"\n      password: "your-datahub-password"\n      database: "datahub"\n\n    # Kafka configuration for time-series data\n    kafka_connection:\n      bootstrap: "your-kafka-broker:9092"\n      schema_registry_url: "http://your-schema-registry:8081"\n      consumer_config:\n        # Optional: Add security configuration if needed\n        # security.protocol: "SASL_SSL"\n        # sasl.mechanism: "PLAIN"\n        # sasl.username: "your-username"\n        # sasl.password: "your-password"\n\n    # Topic containing time-series data (change if doesn\'t match default name)\n    kafka_topic_name: "MetadataChangeLog_Timeseries_v1"\n\n    # Disable stateful ingestion for one-time transfer.\n    # If you intend to incrementally sync over time, should enable this!\n    stateful_ingestion:\n      enabled: false\n\nflags:\n  set_system_metadata: true\n\nsink:\n  type: datahub-rest\n  config:\n    server: "https://your-instance.acryl.io"\n    token: "your-datahub-cloud-api-token"\n')),(0,n.yg)("h3",{id:"advanced-configuration-transferring-specific-aspects"},"Advanced Configuration: Transferring Specific Aspects"),(0,n.yg)("p",null,"You can override the default aspects which are excluded from transfer during upgrade using the ",(0,n.yg)("inlineCode",{parentName:"p"},"exclude_aspects")," configuration. This is useful if you want to be more restrictive, opting to exclude certain information from being transferred to\nyour Cloud instance."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Be careful! Some aspects"),", particularly those containing encrypted secrets, will NOT transfer to DataHub Cloud due to differences in encryption schemes."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: datahub\n  config:\n    # ... other config ...\n\n    # Exclude specific aspects from transfer\n    exclude_aspects:\n      - dataHubIngestionSourceInfo\n      - datahubIngestionCheckpoint\n      - dataHubExecutionRequestInput\n      - dataHubIngestionSourceKey\n      - dataHubExecutionRequestResult\n      - globalSettingsInfo\n      - datahubIngestionRunSummary\n      - dataHubExecutionRequestSignal\n      - globalSettingsKey\n      - testResults\n      - dataHubExecutionRequestKey\n      - dataHubSecretValue\n      - dataHubSecretKey\n      # Add any other aspects you want to exclude\n")),(0,n.yg)("p",null,"To learn about all aspects in DataHub, check out the ",(0,n.yg)("a",{parentName:"p",href:"/docs/metadata-modeling/metadata-model/"},"DataHub metadata model documentation"),"."),(0,n.yg)("h2",{id:"best-practices"},"Best Practices"),(0,n.yg)("h3",{id:"performance-optimization"},"Performance Optimization"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Batch Size"),": For large transfers, adjust the batch configuration:"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: datahub\n  config:\n    database_query_batch_size: 10000 # Adjust based on your system\n    commit_state_interval: 1000 # Records before progress is saved to DataHub\n"))),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Destination Settings"),": For optimal performance on DataHub Cloud:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Ensuring batch async ingestion is enabled by setting ",(0,n.yg)("inlineCode",{parentName:"li"},"mode: ASYNC_BATCH")," in the sink section of your recipe (enabled by default)"),(0,n.yg)("li",{parentName:"ul"},"Increase thread count if needed in sink settings by adjusting the ",(0,n.yg)("inlineCode",{parentName:"li"},"max_threads")," parameter in the sink section of your recipe")))),(0,n.yg)("p",null,"Check out the ",(0,n.yg)("a",{parentName:"p",href:"/docs/metadata-ingestion/sink_docs/datahub#config-details"},"sink docs")," to learn about other configuration parameters you may want to use during the upgrade process."),(0,n.yg)("ol",{start:4},(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Stateful Ingestion"),": For very large instances, use stateful ingestion:"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"stateful_ingestion:\n  enabled: true\n  ignore_old_state: false # Set to true to restart from beginning!\n")),(0,n.yg)("p",{parentName:"li"},"This enables you to upgrade incrementally over time, only syncing changes once the initial upgrade has completed."))),(0,n.yg)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,n.yg)("p",null,"Common issues and solutions:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Authentication Errors"),": Verify your API token has write permissions"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Network Timeouts"),": Check firewall rules and consider adjusting ",(0,n.yg)("inlineCode",{parentName:"li"},"query_timeout")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Memory Issues"),": Reduce ",(0,n.yg)("inlineCode",{parentName:"li"},"database_query_batch_size")," for large transfers"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Slow Performance"),": Ensure the ",(0,n.yg)("inlineCode",{parentName:"li"},"createdon")," index exists on your source database"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parse Errors"),": Set ",(0,n.yg)("inlineCode",{parentName:"li"},"commit_with_parse_errors: true")," to continue despite errors")),(0,n.yg)("h3",{id:"error-handling"},"Error Handling"),(0,n.yg)("p",null,"By default, the upgrade job will stop committing checkpoints if errors occur, allowing you to re-run and catch missed data."),(0,n.yg)("p",null,"However, in some cases it's not possible to transfer data to DataHub Cloud, particularly if you've forked and extended the DataHub\nmetadata model."),(0,n.yg)("p",null,"To continue making progress, ignoring errors:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: datahub\n  config:\n    commit_with_parse_errors: true # Continue even with parse errors\n")),(0,n.yg)("h2",{id:"post-upgrade-steps"},"Post-Upgrade Steps"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Configure Data Sources"),": Configure your ingestion sources on DataHub Cloud"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Configure SSO"),": Set up authentication for your team"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Update API Clients"),": Update any client applications to point to your DataHub Cloud instance"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Review Policies"),": Recreate any custom policies and roles as needed")),(0,n.yg)("h2",{id:"additional-resources"},"Additional Resources"),(0,n.yg)("p",null,"For more detailed configuration options, refer to the ",(0,n.yg)("a",{parentName:"p",href:"https://datahubproject.io/docs/generated/ingestion/sources/datahub"},"DataHub source documentation"),"."),(0,n.yg)("p",null,"Need help? Contact DataHub Cloud support or visit our ",(0,n.yg)("a",{parentName:"p",href:"https://datahubproject.io/slack"},"community Slack"),"."))}y.isMDXComponent=!0}}]);