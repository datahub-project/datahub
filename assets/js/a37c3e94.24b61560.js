"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[64162],{79396:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>g,default:()=>f,frontMatter:()=>p,metadata:()=>d,toc:()=>c});t(96540);var n=t(15680),l=t(53720),i=t(5400);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){return a=null!=a?a:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):function(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})),e}function o(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}const p={sidebar_position:28,title:"Grafana",slug:"/generated/ingestion/sources/grafana",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/grafana.md"},g="Grafana",d={unversionedId:"docs/generated/ingestion/sources/grafana",id:"docs/generated/ingestion/sources/grafana",title:"Grafana",description:"Certified",source:"@site/genDocs/docs/generated/ingestion/sources/grafana.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/grafana",permalink:"/docs/generated/ingestion/sources/grafana",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/grafana.md",tags:[],version:"current",sidebarPosition:28,frontMatter:{sidebar_position:28,title:"Grafana",slug:"/generated/ingestion/sources/grafana",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/grafana.md"},sidebar:"overviewSidebar",previous:{title:"Google Cloud Storage",permalink:"/docs/generated/ingestion/sources/gcs"},next:{title:"Hex",permalink:"/docs/generated/ingestion/sources/hex"}},m={},c=[{value:"Important Capabilities",id:"important-capabilities",level:3},{value:"Concept Mapping",id:"concept-mapping",level:3},{value:"Compatibility",id:"compatibility",level:3},{value:"Prerequisites:",id:"prerequisites",level:3},{value:"Enhanced Mode (Default)",id:"enhanced-mode-default",level:4},{value:"Basic Mode (Limited Permissions)",id:"basic-mode-limited-permissions",level:4},{value:"Configuration Examples",id:"configuration-examples",level:4},{value:"Lineage Configuration",id:"lineage-configuration",level:4},{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Code Coordinates",id:"code-coordinates",level:3}],y={toc:c},u="wrapper";function f(e){var{components:a}=e,t=o(e,["components"]);return(0,n.yg)(u,s(function(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(a){r(e,a,t[a])}))}return e}({},y,t),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"grafana"},"Grafana"),(0,n.yg)("p",null,(0,n.yg)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,n.yg)("h3",{id:"important-capabilities"},"Important Capabilities"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Capability"),(0,n.yg)("th",{parentName:"tr",align:null},"Status"),(0,n.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Column-level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/metadata-ingestion/docs/dev_guides/stateful#stale-entity-removal"},"Detect Deleted Entities")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Extract Ownership"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Extract Tags"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/platform-instances"},"Platform Instance")),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Table-Level Lineage"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,n.yg)("td",{parentName:"tr",align:null},"Enabled by default.")))),(0,n.yg)("p",null,"This plugin extracts metadata from Grafana and ingests it into DataHub. It connects to Grafana's API\nto extract metadata about dashboards, charts, and data sources. The following types of metadata are extracted:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Container Entities:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Folders: Top-level organizational units in Grafana"),(0,n.yg)("li",{parentName:"ul"},"Dashboards: Collections of panels and charts"),(0,n.yg)("li",{parentName:"ul"},"The full container hierarchy is preserved (Folders -> Dashboards -> Charts/Datasets)"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Charts and Visualizations:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"All panel types (graphs, tables, stat panels, etc.)"),(0,n.yg)("li",{parentName:"ul"},"Chart configuration and properties"),(0,n.yg)("li",{parentName:"ul"},"Links to the original Grafana UI"),(0,n.yg)("li",{parentName:"ul"},"Custom properties including panel types and data source information"),(0,n.yg)("li",{parentName:"ul"},"Input fields and schema information when available"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Data Sources and Datasets:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Physical datasets representing Grafana's data sources"),(0,n.yg)("li",{parentName:"ul"},"Dataset schema information extracted from queries and panel configurations"),(0,n.yg)("li",{parentName:"ul"},"Support for various data source types (SQL, Prometheus, etc.)"),(0,n.yg)("li",{parentName:"ul"},"Custom properties including data source type and configuration"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Lineage Information:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Dataset-level lineage showing relationships between:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Source data systems and Grafana datasets"),(0,n.yg)("li",{parentName:"ul"},"Grafana datasets and charts"))),(0,n.yg)("li",{parentName:"ul"},"Column-level lineage for SQL-based data sources"),(0,n.yg)("li",{parentName:"ul"},"Support for external source systems through configurable platform mappings"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Tags and Ownership:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Dashboard and chart tags"),(0,n.yg)("li",{parentName:"ul"},"Ownership information derived from:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Dashboard creators"),(0,n.yg)("li",{parentName:"ul"},"Technical owners based on dashboard UIDs"),(0,n.yg)("li",{parentName:"ul"},"Custom ownership assignments")))))),(0,n.yg)("p",null,"The source supports the following capabilities:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Platform instance support for multi-Grafana deployments"),(0,n.yg)("li",{parentName:"ul"},"Stateful ingestion with support for soft-deletes"),(0,n.yg)("li",{parentName:"ul"},"Fine-grained lineage at both dataset and column levels"),(0,n.yg)("li",{parentName:"ul"},"Automated tag extraction"),(0,n.yg)("li",{parentName:"ul"},"Support for both HTTP and HTTPS connections with optional SSL verification")),(0,n.yg)("h3",{id:"concept-mapping"},"Concept Mapping"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Source Concept"),(0,n.yg)("th",{parentName:"tr",align:null},"DataHub Concept"),(0,n.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},'"grafana"')),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/dataplatform"},"Data Platform")),(0,n.yg)("td",{parentName:"tr",align:null})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Grafana Folder"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/container"},"Container")),(0,n.yg)("td",{parentName:"tr",align:null},"Subtype ",(0,n.yg)("inlineCode",{parentName:"td"},"Folder"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Grafana Dashboard"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/container"},"Container")),(0,n.yg)("td",{parentName:"tr",align:null},"Subtype ",(0,n.yg)("inlineCode",{parentName:"td"},"Dashboard"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Grafana Panel/Visualization"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/chart"},"Chart")),(0,n.yg)("td",{parentName:"tr",align:null},"Various types mapped based on panel type (e.g., graph \u2192 LINE, pie \u2192 PIE)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Grafana Data Source"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/dataset"},"Dataset")),(0,n.yg)("td",{parentName:"tr",align:null},"Created for each panel's data source")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dashboard Owner"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/corpuser"},"Corp User")),(0,n.yg)("td",{parentName:"tr",align:null},"Derived from dashboard UID and creator")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dashboard Tags"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/generated/metamodel/entities/tag"},"Tag")),(0,n.yg)("td",{parentName:"tr",align:null},"Supports both simple tags and key:value tags")))),(0,n.yg)("h3",{id:"compatibility"},"Compatibility"),(0,n.yg)("p",null,"The connector supports extracting metadata from any Grafana instance accessible via API. For SQL-based data sources, column-level lineage can be extracted when the queries are parseable. The connector supports various panel types and their transformations, and can work with both standalone Grafana instances and those integrated with other platforms."),(0,n.yg)("p",null,"For optimal lineage extraction from SQL-based data sources:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Database/schema information should be properly configured in the connection settings"),(0,n.yg)("li",{parentName:"ul"},"The platform mapping (",(0,n.yg)("inlineCode",{parentName:"li"},"connection_to_platform_map"),") should be configured to match your data sources")),(0,n.yg)("h3",{id:"prerequisites"},"Prerequisites:"),(0,n.yg)("p",null,"The Grafana source supports two extraction modes based on your permission level:"),(0,n.yg)("h4",{id:"enhanced-mode-default"},"Enhanced Mode (Default)"),(0,n.yg)("p",null,"For full metadata extraction including lineage, containers, and detailed panel information:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"A running Grafana instance"),(0,n.yg)("li",{parentName:"ol"},"A service account token with ",(0,n.yg)("strong",{parentName:"li"},"Admin permissions")," to:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Read dashboards and folders"),(0,n.yg)("li",{parentName:"ul"},"Access data source configurations"),(0,n.yg)("li",{parentName:"ul"},"View user information"),(0,n.yg)("li",{parentName:"ul"},"Access detailed dashboard metadata"),(0,n.yg)("li",{parentName:"ul"},"Read panel configurations and transformations")))),(0,n.yg)("h4",{id:"basic-mode-limited-permissions"},"Basic Mode (Limited Permissions)"),(0,n.yg)("p",null,"For users with limited permissions who only need basic dashboard metadata:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"A running Grafana instance"),(0,n.yg)("li",{parentName:"ol"},"A service account token with ",(0,n.yg)("strong",{parentName:"li"},"Viewer permissions")," to:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Read dashboards (via ",(0,n.yg)("inlineCode",{parentName:"li"},"/api/search")," endpoint)"),(0,n.yg)("li",{parentName:"ul"},"Basic dashboard metadata access")))),(0,n.yg)("p",null,"To enable basic mode, set ",(0,n.yg)("inlineCode",{parentName:"p"},"basic_mode: true")," in your configuration. This provides backwards compatibility with the original simple connector behavior."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Note:")," Basic mode extracts only dashboard entities without folder hierarchy, panel details, lineage information, or schema metadata. It's recommended to use enhanced mode when possible for complete metadata extraction."),(0,n.yg)("h4",{id:"configuration-examples"},"Configuration Examples"),(0,n.yg)("p",null,"Enhanced Mode (Default):"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: grafana\n  config:\n    url: "https://grafana.company.com"\n    service_account_token: "your_admin_token"\n    # basic_mode: false  # Default - full extraction\n')),(0,n.yg)("p",null,"Basic Mode (Limited Permissions):"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: grafana\n  config:\n    url: "https://grafana.company.com"\n    service_account_token: "your_viewer_token"\n    basic_mode: true # Enable basic mode for limited permissions\n')),(0,n.yg)("h4",{id:"lineage-configuration"},"Lineage Configuration"),(0,n.yg)("p",null,"The Grafana source can extract lineage information between charts and their data sources. You can control lineage extraction using these configuration options:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: grafana\n  config:\n    url: "https://grafana.company.com"\n    service_account_token: "your_token"\n\n    # Lineage extraction (default: true)\n    include_lineage: true\n\n    # Column-level lineage from SQL queries (default: true)\n    # Only applicable when include_lineage is true\n    include_column_lineage: true\n\n    # Platform mappings for lineage extraction\n    connection_to_platform_map:\n      postgres_datasource_uid:\n        platform: postgres\n        platform_instance: my_postgres\n        env: PROD\n        database: analytics\n        database_schema: public\n')),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Lineage Features:")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Dataset-level lineage"),": Links charts to their underlying data sources"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Column-level lineage"),": Extracts field-to-field relationships from SQL queries"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Platform mapping"),": Maps Grafana data sources to their actual platforms for accurate lineage"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"SQL parsing"),": Supports parsing of SQL queries for detailed lineage extraction")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Performance Note:")," Lineage extraction can be disabled (",(0,n.yg)("inlineCode",{parentName:"p"},"include_lineage: false"),") to improve ingestion performance when lineage information is not needed."),(0,n.yg)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,n.yg)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,n.yg)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,n.yg)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,n.yg)("p",null,"For general pointers on writing and running a recipe, see our ",(0,n.yg)("a",{parentName:"p",href:"/docs/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: grafana\n  config:\n    # Coordinates\n    platform_instance: production # optional\n    env: PROD # optional\n    url: https://grafana.company.com\n    service_account_token: ${GRAFANA_SERVICE_ACCOUNT_TOKEN}\n\n    # SSL verification for HTTPS connections\n    verify_ssl: true # optional, default is true\n\n    # Source type mapping for lineage\n    connection_to_platform_map:\n      postgres:\n        platform: postgres\n        database: grafana # optional\n        database_schema: grafana # optional\n        platform_instance: database_2 # optional\n        env: PROD # optional\n      mysql_uid_1: # Grafana datasource UID\n        platform: mysql\n        platform_instance: database_1 # optional\n        database: my_database # optional\nsink:\n  # sink configs\n\n")),(0,n.yg)("h3",{id:"config-details"},"Config Details"),(0,n.yg)(l.A,{mdxType:"Tabs"},(0,n.yg)(i.A,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,n.yg)("p",null,"Note that a ",(0,n.yg)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,n.yg)("div",{className:"config-table"},(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:"left"},"Field"),(0,n.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"service_account_token"),"\xa0",(0,n.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string(password)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Service account token for Grafana")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"url"),"\xa0",(0,n.yg)("abbr",{title:"Required"},"\u2705"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Grafana URL in the format http://your-grafana-instance with no trailing slash")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"basic_mode"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Enable basic extraction mode for users with limited permissions. In basic mode, only dashboard metadata is extracted without detailed panel information, lineage, or folder hierarchy. This requires only basic dashboard read permissions. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_column_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to extract column-level lineage from SQL queries. Only applicable when include_lineage is enabled. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"include_lineage"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to extract lineage between charts and data sources. When enabled, the source will parse SQL queries and datasource configurations to build lineage relationships. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"ingest_owners"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ingest dashboard ownership information ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"ingest_tags"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ingest dashboard and chart tags ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"page_size"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"integer"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Number of items to fetch per API call when paginating through folders and dashboards ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"100")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"platform_instance"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See ",(0,n.yg)("a",{parentName:"td",href:"https://docs.datahub.com/docs/platform-instances/"},"https://docs.datahub.com/docs/platform-instances/")," for more details. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"platform_instance_map"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A holder for platform -> platform_instance mappings to generate correct dataset urns ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"verify_ssl"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to verify SSL certificates when connecting to Grafana ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"env"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"PROD")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"connection_to_platform_map"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"map(str,PlatformConnectionConfig)"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Platform connection configuration for mapping Grafana datasources to their actual platforms.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"platform_instance"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See ",(0,n.yg)("a",{parentName:"td",href:"https://docs.datahub.com/docs/platform-instances/"},"https://docs.datahub.com/docs/platform-instances/")," for more details. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"platform"),"\xa0",(0,n.yg)("abbr",{title:"Required if connection_to_platform_map is set"},"\u2753"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The platform name (e.g., 'postgres', 'mysql', 'snowflake')")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"database"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Default database name ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"database_schema"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of string, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Default schema name ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"connection_to_platform_map.",(0,n.yg)("inlineCode",{parentName:"td"},"key"),"."),(0,n.yg)("span",{className:"path-main"},"env"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"string"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"PROD")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"dashboard_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"dashboard_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"folder_pattern"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"folder_pattern."),(0,n.yg)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of boolean, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"True")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-main"},"stateful_ingestion"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"One of StatefulIngestionConfig, null"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Stateful Ingestion Config ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"None")))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:"left"},(0,n.yg)("div",{className:"path-line"},(0,n.yg)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.yg)("span",{className:"path-main"},"enabled"))," ",(0,n.yg)("div",{className:"type-name-line"},(0,n.yg)("span",{className:"type-name"},"boolean"))),(0,n.yg)("td",{parentName:"tr",align:"left"},"Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or ",(0,n.yg)("inlineCode",{parentName:"td"},"datahub_api")," is specified, otherwise False ",(0,n.yg)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.yg)("span",{className:"default-value"},"False")))))))),(0,n.yg)(i.A,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,n.yg)("p",null,"The ",(0,n.yg)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "$defs": {\n    "AllowDenyPattern": {\n      "additionalProperties": false,\n      "description": "A class to store allow deny regexes",\n      "properties": {\n        "allow": {\n          "default": [\n            ".*"\n          ],\n          "description": "List of regex patterns to include in ingestion",\n          "items": {\n            "type": "string"\n          },\n          "title": "Allow",\n          "type": "array"\n        },\n        "deny": {\n          "default": [],\n          "description": "List of regex patterns to exclude from ingestion.",\n          "items": {\n            "type": "string"\n          },\n          "title": "Deny",\n          "type": "array"\n        },\n        "ignoreCase": {\n          "anyOf": [\n            {\n              "type": "boolean"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": true,\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "title": "Ignorecase"\n        }\n      },\n      "title": "AllowDenyPattern",\n      "type": "object"\n    },\n    "PlatformConnectionConfig": {\n      "additionalProperties": false,\n      "description": "Platform connection configuration for mapping Grafana datasources to their actual platforms.",\n      "properties": {\n        "platform_instance": {\n          "anyOf": [\n            {\n              "type": "string"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See https://docs.datahub.com/docs/platform-instances/ for more details.",\n          "title": "Platform Instance"\n        },\n        "env": {\n          "default": "PROD",\n          "description": "The environment that all assets produced by this connector belong to",\n          "title": "Env",\n          "type": "string"\n        },\n        "platform": {\n          "description": "The platform name (e.g., \'postgres\', \'mysql\', \'snowflake\')",\n          "title": "Platform",\n          "type": "string"\n        },\n        "database": {\n          "anyOf": [\n            {\n              "type": "string"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Default database name",\n          "title": "Database"\n        },\n        "database_schema": {\n          "anyOf": [\n            {\n              "type": "string"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "description": "Default schema name",\n          "title": "Database Schema"\n        }\n      },\n      "required": [\n        "platform"\n      ],\n      "title": "PlatformConnectionConfig",\n      "type": "object"\n    },\n    "StatefulIngestionConfig": {\n      "additionalProperties": false,\n      "description": "Basic Stateful Ingestion Specific Configuration for any source.",\n      "properties": {\n        "enabled": {\n          "default": false,\n          "description": "Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or `datahub_api` is specified, otherwise False",\n          "title": "Enabled",\n          "type": "boolean"\n        }\n      },\n      "title": "StatefulIngestionConfig",\n      "type": "object"\n    }\n  },\n  "additionalProperties": false,\n  "description": "Configuration for Grafana source",\n  "properties": {\n    "env": {\n      "default": "PROD",\n      "description": "The environment that all assets produced by this connector belong to",\n      "title": "Env",\n      "type": "string"\n    },\n    "platform_instance": {\n      "anyOf": [\n        {\n          "type": "string"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "The instance of the platform that all assets produced by this recipe belong to. This should be unique within the platform. See https://docs.datahub.com/docs/platform-instances/ for more details.",\n      "title": "Platform Instance"\n    },\n    "stateful_ingestion": {\n      "anyOf": [\n        {\n          "$ref": "#/$defs/StatefulIngestionConfig"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "Stateful Ingestion Config"\n    },\n    "platform_instance_map": {\n      "anyOf": [\n        {\n          "additionalProperties": {\n            "type": "string"\n          },\n          "type": "object"\n        },\n        {\n          "type": "null"\n        }\n      ],\n      "default": null,\n      "description": "A holder for platform -> platform_instance mappings to generate correct dataset urns",\n      "title": "Platform Instance Map"\n    },\n    "url": {\n      "description": "Grafana URL in the format http://your-grafana-instance with no trailing slash",\n      "title": "Url",\n      "type": "string"\n    },\n    "service_account_token": {\n      "description": "Service account token for Grafana",\n      "format": "password",\n      "title": "Service Account Token",\n      "type": "string",\n      "writeOnly": true\n    },\n    "verify_ssl": {\n      "default": true,\n      "description": "Whether to verify SSL certificates when connecting to Grafana",\n      "title": "Verify Ssl",\n      "type": "boolean"\n    },\n    "page_size": {\n      "default": 100,\n      "description": "Number of items to fetch per API call when paginating through folders and dashboards",\n      "title": "Page Size",\n      "type": "integer"\n    },\n    "basic_mode": {\n      "default": false,\n      "description": "Enable basic extraction mode for users with limited permissions. In basic mode, only dashboard metadata is extracted without detailed panel information, lineage, or folder hierarchy. This requires only basic dashboard read permissions.",\n      "title": "Basic Mode",\n      "type": "boolean"\n    },\n    "dashboard_pattern": {\n      "$ref": "#/$defs/AllowDenyPattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "description": "Regex pattern to filter dashboards for ingestion"\n    },\n    "folder_pattern": {\n      "$ref": "#/$defs/AllowDenyPattern",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "description": "Regex pattern to filter folders for ingestion"\n    },\n    "ingest_tags": {\n      "default": true,\n      "description": "Whether to ingest dashboard and chart tags",\n      "title": "Ingest Tags",\n      "type": "boolean"\n    },\n    "ingest_owners": {\n      "default": true,\n      "description": "Whether to ingest dashboard ownership information",\n      "title": "Ingest Owners",\n      "type": "boolean"\n    },\n    "include_lineage": {\n      "default": true,\n      "description": "Whether to extract lineage between charts and data sources. When enabled, the source will parse SQL queries and datasource configurations to build lineage relationships.",\n      "title": "Include Lineage",\n      "type": "boolean"\n    },\n    "include_column_lineage": {\n      "default": true,\n      "description": "Whether to extract column-level lineage from SQL queries. Only applicable when include_lineage is enabled.",\n      "title": "Include Column Lineage",\n      "type": "boolean"\n    },\n    "connection_to_platform_map": {\n      "additionalProperties": {\n        "$ref": "#/$defs/PlatformConnectionConfig"\n      },\n      "description": "Map of Grafana datasource types/UIDs to platform connection configs for lineage extraction",\n      "title": "Connection To Platform Map",\n      "type": "object"\n    }\n  },\n  "required": [\n    "url",\n    "service_account_token"\n  ],\n  "title": "GrafanaSourceConfig",\n  "type": "object"\n}\n')))),(0,n.yg)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Class Name: ",(0,n.yg)("inlineCode",{parentName:"li"},"datahub.ingestion.source.grafana.grafana_source.GrafanaSource")),(0,n.yg)("li",{parentName:"ul"},"Browse on ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/grafana/grafana_source.py"},"GitHub"))),(0,n.yg)("h2",null,"Questions"),(0,n.yg)("p",null,"If you've got any questions on configuring ingestion for Grafana, feel free to ping us on ",(0,n.yg)("a",{parentName:"p",href:"https://datahub.com/slack"},"our Slack"),"."))}f.isMDXComponent=!0}}]);