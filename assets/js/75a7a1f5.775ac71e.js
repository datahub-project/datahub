"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[89118],{89766:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>h,frontMatter:()=>d,metadata:()=>m,toc:()=>g});t(96540);var a=t(15680),i=t(53720),r=t(5400);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}const d={sidebar_position:2,title:"DataJob",slug:"/generated/metamodel/entities/datajob",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataJob.md"},p="DataJob",m={unversionedId:"docs/generated/metamodel/entities/dataJob",id:"docs/generated/metamodel/entities/dataJob",title:"DataJob",description:"Data jobs represent individual units of data processing work within a data pipeline or workflow. They are the tasks, steps, or operations that transform, move, or process data as part of a larger data flow. Examples include Airflow tasks, dbt models, Spark jobs, Databricks notebooks, and similar processing units in orchestration systems.",source:"@site/genDocs/docs/generated/metamodel/entities/dataJob.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/datajob",permalink:"/docs/generated/metamodel/entities/datajob",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataJob.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"DataJob",slug:"/generated/metamodel/entities/datajob",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dataJob.md"},sidebar:"overviewSidebar",previous:{title:"Dataset",permalink:"/docs/generated/metamodel/entities/dataset"},next:{title:"DataFlow",permalink:"/docs/generated/metamodel/entities/dataflow"}},u={},g=[{value:"Identity",id:"identity",level:2},{value:"Examples",id:"examples",level:3},{value:"Important Capabilities",id:"important-capabilities",level:2},{value:"Job Information (dataJobInfo)",id:"job-information-datajobinfo",level:3},{value:"Input/Output Lineage (dataJobInputOutput)",id:"inputoutput-lineage-datajobinputoutput",level:3},{value:"Editable Properties (editableDataJobProperties)",id:"editable-properties-editabledatajobproperties",level:3},{value:"Ownership",id:"ownership",level:3},{value:"Tags and Glossary Terms",id:"tags-and-glossary-terms",level:3},{value:"Domains and Applications",id:"domains-and-applications",level:3},{value:"Structured Properties and Forms",id:"structured-properties-and-forms",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"Creating a Data Job",id:"creating-a-data-job",level:3},{value:"Adding Tags, Terms, and Ownership",id:"adding-tags-terms-and-ownership",level:3},{value:"Updating Job Properties",id:"updating-job-properties",level:3},{value:"Querying Data Job Information",id:"querying-data-job-information",level:3},{value:"Adding Lineage to Data Jobs",id:"adding-lineage-to-data-jobs",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Relationship with DataFlow",id:"relationship-with-dataflow",level:3},{value:"Relationship with Datasets",id:"relationship-with-datasets",level:3},{value:"Relationship with DataProcessInstance",id:"relationship-with-dataprocessinstance",level:3},{value:"GraphQL Resolvers",id:"graphql-resolvers",level:3},{value:"Ingestion Sources",id:"ingestion-sources",level:3},{value:"Notable Exceptions",id:"notable-exceptions",level:2},{value:"DataHub Ingestion Jobs",id:"datahub-ingestion-jobs",level:3},{value:"Job Status Deprecation",id:"job-status-deprecation",level:3},{value:"Subtype Usage",id:"subtype-usage",level:3},{value:"Technical Reference Guide",id:"technical-reference-guide",level:2},{value:"Reading the Field Tables",id:"reading-the-field-tables",level:3},{value:"Aspects",id:"aspects",level:3},{value:"dataJobKey",id:"datajobkey",level:4},{value:"dataJobInfo",id:"datajobinfo",level:4},{value:"dataJobInputOutput",id:"datajobinputoutput",level:4},{value:"editableDataJobProperties",id:"editabledatajobproperties",level:4},{value:"ownership",id:"ownership-1",level:4},{value:"status",id:"status",level:4},{value:"globalTags",id:"globaltags",level:4},{value:"browsePaths",id:"browsepaths",level:4},{value:"glossaryTerms",id:"glossaryterms",level:4},{value:"institutionalMemory",id:"institutionalmemory",level:4},{value:"dataPlatformInstance",id:"dataplatforminstance",level:4},{value:"browsePathsV2",id:"browsepathsv2",level:4},{value:"domains",id:"domains",level:4},{value:"applications",id:"applications",level:4},{value:"deprecation",id:"deprecation",level:4},{value:"versionInfo",id:"versioninfo",level:4},{value:"container",id:"container",level:4},{value:"structuredProperties",id:"structuredproperties",level:4},{value:"forms",id:"forms",level:4},{value:"subTypes",id:"subtypes",level:4},{value:"incidentsSummary",id:"incidentssummary",level:4},{value:"testResults",id:"testresults",level:4},{value:"dataTransformLogic",id:"datatransformlogic",level:4},{value:"datahubIngestionRunSummary (Timeseries)",id:"datahubingestionrunsummary-timeseries",level:4},{value:"datahubIngestionCheckpoint (Timeseries)",id:"datahubingestioncheckpoint-timeseries",level:4},{value:"Common Types",id:"common-types",level:3},{value:"AuditStamp",id:"auditstamp",level:4},{value:"Edge",id:"edge",level:4},{value:"FormAssociation",id:"formassociation",level:4},{value:"IncidentSummaryDetails",id:"incidentsummarydetails",level:4},{value:"PartitionSpec",id:"partitionspec",level:4},{value:"TestResult",id:"testresult",level:4},{value:"TimeStamp",id:"timestamp",level:4},{value:"TimeWindowSize",id:"timewindowsize",level:4},{value:"Relationships",id:"relationships",level:3},{value:"Self",id:"self",level:4},{value:"Outgoing",id:"outgoing",level:4},{value:"Global Metadata Model",id:"global-metadata-model",level:3}],c={toc:g},y="wrapper";function h(e){var{components:n}=e,t=s(e,["components"]);return(0,a.yg)(y,o(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){l(e,n,t[n])}))}return e}({},c,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"datajob"},"DataJob"),(0,a.yg)("p",null,"Data jobs represent individual units of data processing work within a data pipeline or workflow. They are the tasks, steps, or operations that transform, move, or process data as part of a larger data flow. Examples include Airflow tasks, dbt models, Spark jobs, Databricks notebooks, and similar processing units in orchestration systems."),(0,a.yg)("h2",{id:"identity"},"Identity"),(0,a.yg)("p",null,"Data jobs are identified by two pieces of information:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The data flow (pipeline/workflow) that they belong to: this is represented as a URN pointing to the parent ",(0,a.yg)("inlineCode",{parentName:"li"},"dataFlow")," entity. The data flow defines the orchestrator (e.g., ",(0,a.yg)("inlineCode",{parentName:"li"},"airflow"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"spark"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"dbt"),"), the flow ID (e.g., the DAG name or pipeline name), and the cluster where it runs."),(0,a.yg)("li",{parentName:"ul"},"The unique job identifier within that flow: this is a string that uniquely identifies the task within its parent flow (e.g., task name, step name, model name).")),(0,a.yg)("p",null,"The URN structure for a data job is: ",(0,a.yg)("inlineCode",{parentName:"p"},"urn:li:dataJob:(urn:li:dataFlow:(<orchestrator>,<flow_id>,<cluster>),<job_id>)")),(0,a.yg)("h3",{id:"examples"},"Examples"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Airflow task:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"urn:li:dataJob:(urn:li:dataFlow:(airflow,daily_etl_dag,prod),transform_customer_data)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"dbt model:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"urn:li:dataJob:(urn:li:dataFlow:(dbt,analytics_project,prod),staging.stg_customers)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Spark job:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"urn:li:dataJob:(urn:li:dataFlow:(spark,data_processing_pipeline,PROD),aggregate_sales_task)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Databricks notebook:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"urn:li:dataJob:(urn:li:dataFlow:(databricks,etl_workflow,production),process_events_notebook)\n")),(0,a.yg)("h2",{id:"important-capabilities"},"Important Capabilities"),(0,a.yg)("h3",{id:"job-information-datajobinfo"},"Job Information (dataJobInfo)"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"dataJobInfo")," aspect captures the core properties of a data job:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Name"),": Human-readable name of the job (searchable with autocomplete)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Description"),": Detailed description of what the job does"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Type"),": The type of job (e.g., SQL, Python, Spark, etc.)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Flow URN"),": Reference to the parent data flow"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Created/Modified timestamps"),": When the job was created or last modified in the source system"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Environment"),": The fabric/environment where the job runs (PROD, DEV, QA, etc.)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Custom properties"),": Additional key-value properties specific to the source system"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"External references"),": Links to external documentation or definitions (e.g., GitHub links)")),(0,a.yg)("h3",{id:"inputoutput-lineage-datajobinputoutput"},"Input/Output Lineage (dataJobInputOutput)"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"dataJobInputOutput")," aspect defines the data lineage relationships for the job:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Input datasets"),": Datasets consumed by the job during processing (via ",(0,a.yg)("inlineCode",{parentName:"li"},"inputDatasetEdges"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Output datasets"),": Datasets produced by the job (via ",(0,a.yg)("inlineCode",{parentName:"li"},"outputDatasetEdges"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Input data jobs"),": Other data jobs that this job depends on (via ",(0,a.yg)("inlineCode",{parentName:"li"},"inputDatajobEdges"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Input dataset fields"),": Specific schema fields consumed from input datasets"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Output dataset fields"),": Specific schema fields produced in output datasets"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Fine-grained lineage"),": Column-level lineage mappings showing which upstream fields contribute to downstream fields")),(0,a.yg)("p",null,"This aspect establishes the critical relationships that enable DataHub to build and visualize data lineage graphs across your entire data ecosystem."),(0,a.yg)("h3",{id:"editable-properties-editabledatajobproperties"},"Editable Properties (editableDataJobProperties)"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"editableDataJobProperties")," aspect stores documentation edits made through the DataHub UI:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Description"),": User-edited documentation that complements or overrides the ingested description"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Change audit stamps"),": Tracks who made edits and when")),(0,a.yg)("p",null,"This separation ensures that manual edits in the UI are preserved and not overwritten by ingestion pipelines."),(0,a.yg)("h3",{id:"ownership"},"Ownership"),(0,a.yg)("p",null,"Like other entities, data jobs support ownership through the ",(0,a.yg)("inlineCode",{parentName:"p"},"ownership")," aspect. Owners can be users or groups with various ownership types (DATAOWNER, PRODUCER, DEVELOPER, etc.). This helps identify who is responsible for maintaining and troubleshooting the job."),(0,a.yg)("h3",{id:"tags-and-glossary-terms"},"Tags and Glossary Terms"),(0,a.yg)("p",null,"Data jobs can be tagged and associated with glossary terms:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Tags")," (",(0,a.yg)("inlineCode",{parentName:"li"},"globalTags")," aspect): Used for categorization, classification, or operational purposes (e.g., PII, critical, deprecated)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Glossary terms")," (",(0,a.yg)("inlineCode",{parentName:"li"},"glossaryTerms")," aspect): Link jobs to business terminology and concepts from your glossary")),(0,a.yg)("h3",{id:"domains-and-applications"},"Domains and Applications"),(0,a.yg)("p",null,"Data jobs can be organized into:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Domains")," (",(0,a.yg)("inlineCode",{parentName:"li"},"domains")," aspect): Business domains or data domains for organizational structure"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Applications")," (",(0,a.yg)("inlineCode",{parentName:"li"},"applications")," aspect): Associated with specific applications or systems")),(0,a.yg)("h3",{id:"structured-properties-and-forms"},"Structured Properties and Forms"),(0,a.yg)("p",null,"Data jobs support:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Structured properties"),": Custom typed properties defined by your organization"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Forms"),": Structured documentation forms for consistency")),(0,a.yg)("h2",{id:"code-examples"},"Code Examples"),(0,a.yg)("h3",{id:"creating-a-data-job"},"Creating a Data Job"),(0,a.yg)("p",null,"The simplest way to create a data job is using the Python SDK v2:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Create a basic data job"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/datajob_create_basic.py\n# metadata-ingestion/examples/library/datajob_create_basic.py\nfrom datahub.metadata.urns import DataFlowUrn, DatasetUrn\nfrom datahub.sdk import DataHubClient, DataJob\n\nclient = DataHubClient.from_env()\n\ndatajob = DataJob(\n    name="transform_customer_data",\n    flow_urn=DataFlowUrn(\n        orchestrator="airflow",\n        flow_id="daily_etl_pipeline",\n        cluster="prod",\n    ),\n    description="Transforms raw customer data into analytics-ready format",\n    inlets=[\n        DatasetUrn(platform="postgres", name="raw.customers", env="PROD"),\n        DatasetUrn(platform="postgres", name="raw.addresses", env="PROD"),\n    ],\n    outlets=[\n        DatasetUrn(platform="snowflake", name="analytics.dim_customers", env="PROD"),\n    ],\n)\n\nclient.entities.upsert(datajob)\nprint(f"Created data job: {datajob.urn}")\n\n'))),(0,a.yg)("h3",{id:"adding-tags-terms-and-ownership"},"Adding Tags, Terms, and Ownership"),(0,a.yg)("p",null,"Common metadata can be added to data jobs to enhance discoverability and governance:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Add tags, terms, and ownership to a data job"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/datajob_add_tags_terms_ownership.py\n# metadata-ingestion/examples/library/datajob_add_tags_terms_ownership.py\nfrom datahub.metadata.urns import (\n    CorpUserUrn,\n    DataFlowUrn,\n    DataJobUrn,\n    GlossaryTermUrn,\n    TagUrn,\n)\nfrom datahub.sdk import DataHubClient\n\nclient = DataHubClient.from_env()\n\ndatajob_urn = DataJobUrn(\n    job_id="transform_customer_data",\n    flow=DataFlowUrn(\n        orchestrator="airflow", flow_id="daily_etl_pipeline", cluster="prod"\n    ),\n)\n\ndatajob = client.entities.get(datajob_urn)\n\ndatajob.add_tag(TagUrn("Critical"))\ndatajob.add_tag(TagUrn("ETL"))\n\ndatajob.add_term(GlossaryTermUrn("CustomerData"))\ndatajob.add_term(GlossaryTermUrn("DataTransformation"))\n\ndatajob.add_owner(CorpUserUrn("data_engineering_team"))\ndatajob.add_owner(CorpUserUrn("john.doe"))\n\nclient.entities.update(datajob)\n\nprint(f"Added tags, terms, and ownership to {datajob_urn}")\n\n'))),(0,a.yg)("h3",{id:"updating-job-properties"},"Updating Job Properties"),(0,a.yg)("p",null,"You can update job properties like descriptions using the low-level APIs:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Update data job description"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/datajob_update_description.py\n# metadata-ingestion/examples/library/datajob_update_description.py\nfrom datahub.sdk import DataFlowUrn, DataHubClient, DataJobUrn\n\nclient = DataHubClient.from_env()\n\ndataflow_urn = DataFlowUrn(\n    orchestrator="airflow", flow_id="daily_etl_pipeline", cluster="prod"\n)\ndatajob_urn = DataJobUrn(flow=dataflow_urn, job_id="transform_customer_data")\n\ndatajob = client.entities.get(datajob_urn)\ndatajob.set_description(\n    "This job performs critical customer data transformation. "\n    "It joins raw customer records with address information and applies "\n    "data quality rules before loading into the analytics warehouse."\n)\n\nclient.entities.update(datajob)\n\nprint(f"Updated description for {datajob_urn}")\n\n'))),(0,a.yg)("h3",{id:"querying-data-job-information"},"Querying Data Job Information"),(0,a.yg)("p",null,"Retrieve data job information via the REST API:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"REST API: Query a data job"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/datajob_query_rest.py\n# metadata-ingestion/examples/library/datajob_query_rest.py\nimport json\nfrom urllib.parse import quote\n\nimport requests\n\ndatajob_urn = "urn:li:dataJob:(urn:li:dataFlow:(airflow,daily_etl_pipeline,prod),transform_customer_data)"\n\ngms_server = "http://localhost:8080"\nurl = f"{gms_server}/entities/{quote(datajob_urn, safe=\'\')}"\n\nresponse = requests.get(url)\n\nif response.status_code == 200:\n    data = response.json()\n    print(json.dumps(data, indent=2))\n\n    if "aspects" in data:\n        aspects = data["aspects"]\n\n        if "dataJobInfo" in aspects:\n            job_info = aspects["dataJobInfo"]["value"]\n            print(f"\\nJob Name: {job_info.get(\'name\')}")\n            print(f"Description: {job_info.get(\'description\')}")\n            print(f"Type: {job_info.get(\'type\')}")\n\n        if "dataJobInputOutput" in aspects:\n            lineage = aspects["dataJobInputOutput"]["value"]\n            print(f"\\nInput Datasets: {len(lineage.get(\'inputDatasetEdges\', []))}")\n            print(f"Output Datasets: {len(lineage.get(\'outputDatasetEdges\', []))}")\n\n        if "ownership" in aspects:\n            ownership = aspects["ownership"]["value"]\n            print(f"\\nOwners: {len(ownership.get(\'owners\', []))}")\n            for owner in ownership.get("owners", []):\n                print(f"  - {owner.get(\'owner\')} ({owner.get(\'type\')})")\n\n        if "globalTags" in aspects:\n            tags = aspects["globalTags"]["value"]\n            print("\\nTags:")\n            for tag in tags.get("tags", []):\n                print(f"  - {tag.get(\'tag\')}")\nelse:\n    print(f"Failed to retrieve data job: {response.status_code}")\n    print(response.text)\n\n'))),(0,a.yg)("h3",{id:"adding-lineage-to-data-jobs"},"Adding Lineage to Data Jobs"),(0,a.yg)("p",null,"Data jobs are often used to define lineage relationships. See the existing lineage examples:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Add lineage using DataJobPatchBuilder"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/datajob_add_lineage_patch.py\nfrom datahub.emitter.mce_builder import (\n    make_data_job_urn,\n    make_dataset_urn,\n    make_schema_field_urn,\n)\nfrom datahub.ingestion.graph.client import DataHubGraph, DataHubGraphConfig\nfrom datahub.metadata.schema_classes import (\n    FineGrainedLineageClass as FineGrainedLineage,\n    FineGrainedLineageDownstreamTypeClass as FineGrainedLineageDownstreamType,\n    FineGrainedLineageUpstreamTypeClass as FineGrainedLineageUpstreamType,\n)\nfrom datahub.specific.datajob import DataJobPatchBuilder\n\n# Create DataHub Client\ndatahub_client = DataHubGraph(DataHubGraphConfig(server="http://localhost:8080"))\n\n# Create DataJob URN\ndatajob_urn = make_data_job_urn(\n    orchestrator="airflow", flow_id="dag_abc", job_id="task_456"\n)\n\n# Create DataJob Patch to Add Lineage\npatch_builder = DataJobPatchBuilder(datajob_urn)\npatch_builder.add_input_dataset(\n    make_dataset_urn(platform="kafka", name="SampleKafkaDataset", env="PROD")\n)\npatch_builder.add_output_dataset(\n    make_dataset_urn(platform="hive", name="SampleHiveDataset", env="PROD")\n)\npatch_builder.add_input_datajob(\n    make_data_job_urn(orchestrator="airflow", flow_id="dag_abc", job_id="task_123")\n)\npatch_builder.add_input_dataset_field(\n    make_schema_field_urn(\n        parent_urn=make_dataset_urn(\n            platform="hive", name="fct_users_deleted", env="PROD"\n        ),\n        field_path="user_id",\n    )\n)\npatch_builder.add_output_dataset_field(\n    make_schema_field_urn(\n        parent_urn=make_dataset_urn(\n            platform="hive", name="fct_users_created", env="PROD"\n        ),\n        field_path="user_id",\n    )\n)\n\n# Update column-level lineage through the Data Job\nlineage1 = FineGrainedLineage(\n    upstreamType=FineGrainedLineageUpstreamType.FIELD_SET,\n    upstreams=[\n        make_schema_field_urn(make_dataset_urn("postgres", "raw_data.users"), "user_id")\n    ],\n    downstreamType=FineGrainedLineageDownstreamType.FIELD,\n    downstreams=[\n        make_schema_field_urn(\n            make_dataset_urn("postgres", "analytics.user_metrics"),\n            "user_id",\n        )\n    ],\n    transformOperation="IDENTITY",\n    confidenceScore=1.0,\n)\npatch_builder.add_fine_grained_lineage(lineage1)\npatch_builder.remove_fine_grained_lineage(lineage1)\n# Replaces all existing fine-grained lineages\npatch_builder.set_fine_grained_lineages([lineage1])\n\npatch_mcps = patch_builder.build()\n\n# Emit DataJob Patch\nfor patch_mcp in patch_mcps:\n    datahub_client.emit(patch_mcp)\n\n'))),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Define fine-grained lineage through a data job"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/lineage_emitter_datajob_finegrained.py\nimport datahub.emitter.mce_builder as builder\nfrom datahub.emitter.mcp import MetadataChangeProposalWrapper\nfrom datahub.emitter.rest_emitter import DatahubRestEmitter\nfrom datahub.metadata.com.linkedin.pegasus2avro.dataset import (\n    FineGrainedLineage,\n    FineGrainedLineageDownstreamType,\n    FineGrainedLineageUpstreamType,\n)\nfrom datahub.metadata.schema_classes import DataJobInputOutputClass\n\n\ndef datasetUrn(tbl):\n    return builder.make_dataset_urn("postgres", tbl)\n\n\ndef fldUrn(tbl, fld):\n    return builder.make_schema_field_urn(datasetUrn(tbl), fld)\n\n\n# Lineage of fields output by a job\n# bar.c1          <-- unknownFunc(bar2.c1, bar4.c1)\n# bar.c2          <-- myfunc(bar3.c2)\n# {bar.c3,bar.c4} <-- unknownFunc(bar2.c2, bar2.c3, bar3.c1)\n# bar.c5          <-- unknownFunc(bar3)\n# {bar.c6,bar.c7} <-- unknownFunc(bar4)\n# bar2.c9 has no upstream i.e. its values are somehow created independently within this job.\n\n# Note that the semantic of the "transformOperation" value is contextual.\n# In above example, it is regarded as some kind of UDF; but it could also be an expression etc.\n\nfineGrainedLineages = [\n    FineGrainedLineage(\n        upstreamType=FineGrainedLineageUpstreamType.FIELD_SET,\n        upstreams=[fldUrn("bar2", "c1"), fldUrn("bar4", "c1")],\n        downstreamType=FineGrainedLineageDownstreamType.FIELD,\n        downstreams=[fldUrn("bar", "c1")],\n    ),\n    FineGrainedLineage(\n        upstreamType=FineGrainedLineageUpstreamType.FIELD_SET,\n        upstreams=[fldUrn("bar3", "c2")],\n        downstreamType=FineGrainedLineageDownstreamType.FIELD,\n        downstreams=[fldUrn("bar", "c2")],\n        confidenceScore=0.8,\n        transformOperation="myfunc",\n    ),\n    FineGrainedLineage(\n        upstreamType=FineGrainedLineageUpstreamType.FIELD_SET,\n        upstreams=[fldUrn("bar2", "c2"), fldUrn("bar2", "c3"), fldUrn("bar3", "c1")],\n        downstreamType=FineGrainedLineageDownstreamType.FIELD_SET,\n        downstreams=[fldUrn("bar", "c3"), fldUrn("bar", "c4")],\n        confidenceScore=0.7,\n    ),\n    FineGrainedLineage(\n        upstreamType=FineGrainedLineageUpstreamType.DATASET,\n        upstreams=[datasetUrn("bar3")],\n        downstreamType=FineGrainedLineageDownstreamType.FIELD,\n        downstreams=[fldUrn("bar", "c5")],\n    ),\n    FineGrainedLineage(\n        upstreamType=FineGrainedLineageUpstreamType.DATASET,\n        upstreams=[datasetUrn("bar4")],\n        downstreamType=FineGrainedLineageDownstreamType.FIELD_SET,\n        downstreams=[fldUrn("bar", "c6"), fldUrn("bar", "c7")],\n    ),\n    FineGrainedLineage(\n        upstreamType=FineGrainedLineageUpstreamType.NONE,\n        upstreams=[],\n        downstreamType=FineGrainedLineageDownstreamType.FIELD,\n        downstreams=[fldUrn("bar2", "c9")],\n    ),\n]\n\n# The lineage of output col bar.c9 is unknown. So there is no lineage for it above.\n# Note that bar2 is an input as well as an output dataset, but some fields are inputs while other fields are outputs.\n\ndataJobInputOutput = DataJobInputOutputClass(\n    inputDatasets=[datasetUrn("bar2"), datasetUrn("bar3"), datasetUrn("bar4")],\n    outputDatasets=[datasetUrn("bar"), datasetUrn("bar2")],\n    inputDatajobs=None,\n    inputDatasetFields=[\n        fldUrn("bar2", "c1"),\n        fldUrn("bar2", "c2"),\n        fldUrn("bar2", "c3"),\n        fldUrn("bar3", "c1"),\n        fldUrn("bar3", "c2"),\n        fldUrn("bar4", "c1"),\n    ],\n    outputDatasetFields=[\n        fldUrn("bar", "c1"),\n        fldUrn("bar", "c2"),\n        fldUrn("bar", "c3"),\n        fldUrn("bar", "c4"),\n        fldUrn("bar", "c5"),\n        fldUrn("bar", "c6"),\n        fldUrn("bar", "c7"),\n        fldUrn("bar", "c9"),\n        fldUrn("bar2", "c9"),\n    ],\n    fineGrainedLineages=fineGrainedLineages,\n)\n\ndataJobLineageMcp = MetadataChangeProposalWrapper(\n    entityUrn=builder.make_data_job_urn("spark", "Flow1", "Task1"),\n    aspect=dataJobInputOutput,\n)\n\n# Create an emitter to the GMS REST API.\nemitter = DatahubRestEmitter("http://localhost:8080")\n\n# Emit metadata!\nemitter.emit_mcp(dataJobLineageMcp)\n\n'))),(0,a.yg)("h2",{id:"integration-points"},"Integration Points"),(0,a.yg)("h3",{id:"relationship-with-dataflow"},"Relationship with DataFlow"),(0,a.yg)("p",null,"Every data job belongs to exactly one ",(0,a.yg)("inlineCode",{parentName:"p"},"dataFlow")," entity, which represents the parent pipeline or workflow. The data flow captures:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The orchestrator/platform (Airflow, Spark, dbt, etc.)"),(0,a.yg)("li",{parentName:"ul"},"The flow/pipeline/DAG identifier"),(0,a.yg)("li",{parentName:"ul"},"The cluster or environment where it executes")),(0,a.yg)("p",null,"This hierarchical relationship allows DataHub to organize jobs within their workflows and understand the execution context."),(0,a.yg)("h3",{id:"relationship-with-datasets"},"Relationship with Datasets"),(0,a.yg)("p",null,"Data jobs establish lineage by defining:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Consumes")," relationships with input datasets"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Produces")," relationships with output datasets")),(0,a.yg)("p",null,"These relationships are the foundation of DataHub's lineage graph. When a job processes data, it creates a connection between upstream sources and downstream outputs, enabling impact analysis and data discovery."),(0,a.yg)("h3",{id:"relationship-with-dataprocessinstance"},"Relationship with DataProcessInstance"),(0,a.yg)("p",null,"While ",(0,a.yg)("inlineCode",{parentName:"p"},"dataJob")," represents the definition of a processing task, ",(0,a.yg)("inlineCode",{parentName:"p"},"dataProcessInstance")," represents a specific execution or run of that job. Process instances capture:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Runtime information (start time, end time, duration)"),(0,a.yg)("li",{parentName:"ul"},"Status (success, failure, running)"),(0,a.yg)("li",{parentName:"ul"},"Input/output datasets for that specific run"),(0,a.yg)("li",{parentName:"ul"},"Error messages and logs")),(0,a.yg)("p",null,"This separation allows you to track both the static definition of a job and its dynamic runtime behavior."),(0,a.yg)("h3",{id:"graphql-resolvers"},"GraphQL Resolvers"),(0,a.yg)("p",null,"The DataHub GraphQL API provides rich query capabilities for data jobs:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"DataJobType"),": Main type for querying data job information"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"DataJobRunsResolver"),": Resolves execution history and run information"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"DataFlowDataJobsRelationshipsMapper"),": Maps relationships between flows and jobs"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"UpdateLineageResolver"),": Handles lineage updates for jobs")),(0,a.yg)("h3",{id:"ingestion-sources"},"Ingestion Sources"),(0,a.yg)("p",null,"Data jobs are commonly ingested from:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Airflow"),": Tasks and DAGs with lineage extraction"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"dbt"),": Models as data jobs with SQL-based lineage"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Spark"),": Job definitions with dataset dependencies"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Databricks"),": Notebooks and workflows"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Dagster"),": Ops and assets as processing units"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Prefect"),": Tasks and flows"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"AWS Glue"),": ETL jobs"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Azure Data Factory"),": Pipeline activities"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Looker"),": LookML models and derived tables")),(0,a.yg)("p",null,"These connectors automatically extract job definitions, lineage, and metadata from the source systems."),(0,a.yg)("h2",{id:"notable-exceptions"},"Notable Exceptions"),(0,a.yg)("h3",{id:"datahub-ingestion-jobs"},"DataHub Ingestion Jobs"),(0,a.yg)("p",null,"DataHub's own ingestion pipelines are represented as data jobs with special aspects:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"datahubIngestionRunSummary"),": Tracks ingestion run statistics, entities processed, warnings, and errors"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"datahubIngestionCheckpoint"),": Maintains state for incremental ingestion")),(0,a.yg)("p",null,"These aspects are specific to DataHub's internal ingestion framework and are not used for general-purpose data jobs."),(0,a.yg)("h3",{id:"job-status-deprecation"},"Job Status Deprecation"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"status")," field in ",(0,a.yg)("inlineCode",{parentName:"p"},"dataJobInfo")," is deprecated in favor of the ",(0,a.yg)("inlineCode",{parentName:"p"},"dataProcessInstance")," model. Instead of storing job status on the job definition itself, create separate process instance entities for each execution with their own status information. This provides a cleaner separation between job definitions and runtime execution history."),(0,a.yg)("h3",{id:"subtype-usage"},"Subtype Usage"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"subTypes")," aspect allows you to classify jobs into categories:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"SQL jobs"),(0,a.yg)("li",{parentName:"ul"},"Python jobs"),(0,a.yg)("li",{parentName:"ul"},"Notebook jobs"),(0,a.yg)("li",{parentName:"ul"},"Container jobs"),(0,a.yg)("li",{parentName:"ul"},"Custom job types")),(0,a.yg)("p",null,"This helps with filtering and organizing jobs in the UI and API queries."),(0,a.yg)("h2",{id:"technical-reference-guide"},"Technical Reference Guide"),(0,a.yg)("p",null,"The sections above provide an overview of how to use this entity. The following sections provide detailed technical information about how metadata is stored and represented in DataHub."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Aspects")," are the individual pieces of metadata that can be attached to an entity. Each aspect contains specific information (like ownership, tags, or properties) and is stored as a separate record, allowing for flexible and incremental metadata updates."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Relationships")," show how this entity connects to other entities in the metadata graph. These connections are derived from the fields within each aspect and form the foundation of DataHub's knowledge graph."),(0,a.yg)("h3",{id:"reading-the-field-tables"},"Reading the Field Tables"),(0,a.yg)("p",null,"Each aspect's field table includes an ",(0,a.yg)("strong",{parentName:"p"},"Annotations")," column that provides additional metadata about how fields are used:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"\u26a0\ufe0f Deprecated"),": This field is deprecated and may be removed in a future version. Check the description for the recommended alternative"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Searchable"),": This field is indexed and can be searched in DataHub's search interface"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Searchable (fieldname)"),": When the field name in parentheses is shown, it indicates the field is indexed under a different name in the search index. For example, ",(0,a.yg)("inlineCode",{parentName:"li"},"dashboardTool")," is indexed as ",(0,a.yg)("inlineCode",{parentName:"li"},"tool")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"\u2192 RelationshipName"),": This field creates a relationship to another entity. The arrow indicates this field contains a reference (URN) to another entity, and the name indicates the type of relationship (e.g., ",(0,a.yg)("inlineCode",{parentName:"li"},"\u2192 Contains"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"\u2192 OwnedBy"),")")),(0,a.yg)("p",null,"Fields with complex types (like ",(0,a.yg)("inlineCode",{parentName:"p"},"Edge"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"AuditStamp"),") link to their definitions in the ",(0,a.yg)("a",{parentName:"p",href:"#common-types"},"Common Types")," section below."),(0,a.yg)("h3",{id:"aspects"},"Aspects"),(0,a.yg)("h4",{id:"datajobkey"},"dataJobKey"),(0,a.yg)("p",null,"Key for a Data Job"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"flow"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Standardized data processing flow urn representing the flow for the job"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable (dataFlow), \u2192 IsPartOf")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"jobId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Unique Identifier of the data job"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataJobKey"\n  },\n  "name": "DataJobKey",\n  "namespace": "com.linkedin.metadata.key",\n  "fields": [\n    {\n      "Relationship": {\n        "entityTypes": [\n          "dataFlow"\n        ],\n        "name": "IsPartOf"\n      },\n      "Searchable": {\n        "fieldName": "dataFlow",\n        "fieldType": "URN_PARTIAL",\n        "queryByDefault": false\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "flow",\n      "doc": "Standardized data processing flow urn representing the flow for the job"\n    },\n    {\n      "Searchable": {\n        "enableAutocomplete": true,\n        "fieldType": "WORD_GRAM"\n      },\n      "type": "string",\n      "name": "jobId",\n      "doc": "Unique Identifier of the data job"\n    }\n  ],\n  "doc": "Key for a Data Job"\n}\n')))),(0,a.yg)("h4",{id:"datajobinfo"},"dataJobInfo"),(0,a.yg)("p",null,"Information about a Data processing job"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"customProperties"),(0,a.yg)("td",{parentName:"tr",align:null},"map"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"externalUrl"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"URL where the reference exist"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"name"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Job name"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"description"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Job description"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"type"),(0,a.yg)("td",{parentName:"tr",align:null},"union"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Datajob type *NOTE**: AzkabanJobType is deprecated. Please use strings instead."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"flowUrn"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"DataFlow urn that this job is part of"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"created"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#timestamp"},"TimeStamp")),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"A timestamp documenting when the asset was created in the source Data Platform (not on DataHub)"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#timestamp"},"TimeStamp")),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"A timestamp documenting when the asset was last modified in the source Data Platform (not on Data..."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"status"),(0,a.yg)("td",{parentName:"tr",align:null},"JobStatus"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Status of the job - Deprecated for Data Process Instance model."),(0,a.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"env"),(0,a.yg)("td",{parentName:"tr",align:null},"FabricType"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Environment for this job"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataJobInfo"\n  },\n  "name": "DataJobInfo",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "TEXT",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "map",\n        "values": "string"\n      },\n      "name": "customProperties",\n      "default": {},\n      "doc": "Custom property bag."\n    },\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD"\n      },\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "externalUrl",\n      "default": null,\n      "doc": "URL where the reference exist"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldNameAliases": [\n          "_entityName"\n        ],\n        "fieldType": "WORD_GRAM"\n      },\n      "type": "string",\n      "name": "name",\n      "doc": "Job name"\n    },\n    {\n      "Searchable": {\n        "fieldType": "TEXT",\n        "hasValuesFieldName": "hasDescription"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "description",\n      "default": null,\n      "doc": "Job description"\n    },\n    {\n      "type": [\n        {\n          "type": "enum",\n          "symbolDocs": {\n            "COMMAND": "The command job type is one of the basic built-in types. It runs multiple UNIX commands using java processbuilder.\\nUpon execution, Azkaban spawns off a process to run the command.",\n            "GLUE": "Glue type is for running AWS Glue job transforms.",\n            "HADOOP_JAVA": "Runs a java program with ability to access Hadoop cluster.\\nhttps://azkaban.readthedocs.io/en/latest/jobTypes.html#java-job-type",\n            "HADOOP_SHELL": "In large part, this is the same Command type. The difference is its ability to talk to a Hadoop cluster\\nsecurely, via Hadoop tokens.",\n            "HIVE": "Hive type is for running Hive jobs.",\n            "PIG": "Pig type is for running Pig jobs.",\n            "SQL": "SQL is for running Presto, mysql queries etc"\n          },\n          "name": "AzkabanJobType",\n          "namespace": "com.linkedin.datajob.azkaban",\n          "symbols": [\n            "COMMAND",\n            "HADOOP_JAVA",\n            "HADOOP_SHELL",\n            "HIVE",\n            "PIG",\n            "SQL",\n            "GLUE"\n          ],\n          "doc": "The various types of support azkaban jobs"\n        },\n        "string"\n      ],\n      "name": "type",\n      "doc": "Datajob type\\n*NOTE**: AzkabanJobType is deprecated. Please use strings instead."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.DataFlowUrn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "flowUrn",\n      "default": null,\n      "doc": "DataFlow urn that this job is part of"\n    },\n    {\n      "Searchable": {\n        "/time": {\n          "fieldName": "createdAt",\n          "fieldType": "DATETIME"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeStamp",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": "long",\n              "name": "time",\n              "doc": "When did the event occur"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "actor",\n              "default": null,\n              "doc": "Optional: The actor urn involved in the event."\n            }\n          ],\n          "doc": "A standard event timestamp"\n        }\n      ],\n      "name": "created",\n      "default": null,\n      "doc": "A timestamp documenting when the asset was created in the source Data Platform (not on DataHub)"\n    },\n    {\n      "Searchable": {\n        "/time": {\n          "fieldName": "lastModifiedAt",\n          "fieldType": "DATETIME"\n        }\n      },\n      "type": [\n        "null",\n        "com.linkedin.common.TimeStamp"\n      ],\n      "name": "lastModified",\n      "default": null,\n      "doc": "A timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)"\n    },\n    {\n      "deprecated": "Use Data Process Instance model, instead",\n      "type": [\n        "null",\n        {\n          "type": "enum",\n          "symbolDocs": {\n            "COMPLETED": "Jobs with successful completion.",\n            "FAILED": "Jobs that have failed.",\n            "IN_PROGRESS": "Jobs currently running.",\n            "SKIPPED": "Jobs that have been skipped.",\n            "STARTING": "Jobs being initialized.",\n            "STOPPED": "Jobs that have stopped.",\n            "STOPPING": "Jobs being stopped.",\n            "UNKNOWN": "Jobs with unknown status (either unmappable or unavailable)"\n          },\n          "name": "JobStatus",\n          "namespace": "com.linkedin.datajob",\n          "symbols": [\n            "STARTING",\n            "IN_PROGRESS",\n            "STOPPING",\n            "STOPPED",\n            "COMPLETED",\n            "FAILED",\n            "UNKNOWN",\n            "SKIPPED"\n          ],\n          "doc": "Job statuses"\n        }\n      ],\n      "name": "status",\n      "default": null,\n      "doc": "Status of the job - Deprecated for Data Process Instance model."\n    },\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "KEYWORD",\n        "filterNameOverride": "Environment",\n        "queryByDefault": false\n      },\n      "type": [\n        "null",\n        {\n          "type": "enum",\n          "symbolDocs": {\n            "CORP": "Designates corporation fabrics",\n            "DEV": "Designates development fabrics",\n            "EI": "Designates early-integration fabrics",\n            "NON_PROD": "Designates non-production fabrics",\n            "PRD": "Alternative Prod spelling",\n            "PRE": "Designates pre-production fabrics",\n            "PROD": "Designates production fabrics",\n            "QA": "Designates quality assurance fabrics",\n            "RVW": "Designates review fabrics",\n            "SANDBOX": "Designates sandbox fabrics",\n            "SBX": "Alternative spelling for sandbox",\n            "SIT": "System Integration Testing",\n            "STG": "Designates staging fabrics",\n            "TEST": "Designates testing fabrics",\n            "TST": "Alternative Test spelling",\n            "UAT": "Designates user acceptance testing fabrics"\n          },\n          "name": "FabricType",\n          "namespace": "com.linkedin.common",\n          "symbols": [\n            "DEV",\n            "TEST",\n            "QA",\n            "UAT",\n            "EI",\n            "PRE",\n            "STG",\n            "NON_PROD",\n            "PROD",\n            "CORP",\n            "RVW",\n            "PRD",\n            "TST",\n            "SIT",\n            "SBX",\n            "SANDBOX"\n          ],\n          "doc": "Fabric group type"\n        }\n      ],\n      "name": "env",\n      "default": null,\n      "doc": "Environment for this job"\n    }\n  ],\n  "doc": "Information about a Data processing job"\n}\n')))),(0,a.yg)("h4",{id:"datajobinputoutput"},"dataJobInputOutput"),(0,a.yg)("p",null,"Information about the inputs and outputs of a Data processing job"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"inputDatasets"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Input datasets consumed by the data job during processing Deprecated! Use inputDatasetEdges instead."),(0,a.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated, Searchable, \u2192 Consumes")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"inputDatasetEdges"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#edge"},"Edge"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Input datasets consumed by the data job during processing"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 Consumes")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"outputDatasets"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Output datasets produced by the data job during processing Deprecated! Use outputDatasetEdges ins..."),(0,a.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated, Searchable, \u2192 Produces")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"outputDatasetEdges"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#edge"},"Edge"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Output datasets produced by the data job during processing"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 Produces")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"inputDatajobs"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Input datajobs that this data job depends on Deprecated! Use inputDatajobEdges instead."),(0,a.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated, \u2192 DownstreamOf")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"inputDatajobEdges"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#edge"},"Edge"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Input datajobs that this data job depends on"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2192 DownstreamOf")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"inputDatasetFields"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Fields of the input datasets used by this job"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 Consumes")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"outputDatasetFields"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Fields of the output datasets this job writes to"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 Produces")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"fineGrainedLineages"),(0,a.yg)("td",{parentName:"tr",align:null},"FineGrainedLineage[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Fine-grained column-level lineages Not currently supported in the UI Use UpstreamLineage aspect f..."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataJobInputOutput"\n  },\n  "name": "DataJobInputOutput",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "name": "Consumes"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "inputs",\n          "fieldType": "URN",\n          "numValuesFieldName": "numInputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "inputDatasets",\n      "doc": "Input datasets consumed by the data job during processing\\nDeprecated! Use inputDatasetEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "inputDatasetEdges/*/created/actor",\n          "createdOn": "inputDatasetEdges/*/created/time",\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "name": "Consumes",\n          "properties": "inputDatasetEdges/*/properties",\n          "updatedActor": "inputDatasetEdges/*/lastModified/actor",\n          "updatedOn": "inputDatasetEdges/*/lastModified/time"\n        }\n      },\n      "Searchable": {\n        "/*/destinationUrn": {\n          "fieldName": "inputDatasetEdges",\n          "fieldType": "URN",\n          "numValuesFieldName": "numInputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "name": "Edge",\n            "namespace": "com.linkedin.common",\n            "fields": [\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "sourceUrn",\n                "default": null,\n                "doc": "Urn of the source of this relationship edge.\\nIf not specified, assumed to be the entity that this aspect belongs to."\n              },\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": "string",\n                "name": "destinationUrn",\n                "doc": "Urn of the destination of this relationship edge."\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "record",\n                    "name": "AuditStamp",\n                    "namespace": "com.linkedin.common",\n                    "fields": [\n                      {\n                        "type": "long",\n                        "name": "time",\n                        "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                      },\n                      {\n                        "java": {\n                          "class": "com.linkedin.common.urn.Urn"\n                        },\n                        "type": "string",\n                        "name": "actor",\n                        "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                      },\n                      {\n                        "java": {\n                          "class": "com.linkedin.common.urn.Urn"\n                        },\n                        "type": [\n                          "null",\n                          "string"\n                        ],\n                        "name": "impersonator",\n                        "default": null,\n                        "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                      },\n                      {\n                        "type": [\n                          "null",\n                          "string"\n                        ],\n                        "name": "message",\n                        "default": null,\n                        "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                      }\n                    ],\n                    "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                  }\n                ],\n                "name": "created",\n                "default": null,\n                "doc": "Audit stamp containing who created this relationship edge and when"\n              },\n              {\n                "type": [\n                  "null",\n                  "com.linkedin.common.AuditStamp"\n                ],\n                "name": "lastModified",\n                "default": null,\n                "doc": "Audit stamp containing who last modified this relationship edge and when"\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "map",\n                    "values": "string"\n                  }\n                ],\n                "name": "properties",\n                "default": null,\n                "doc": "A generic properties bag that allows us to store specific information on this graph edge."\n              }\n            ],\n            "doc": "A common structure to represent all edges to entities when used inside aspects as collections\\nThis ensures that all edges have common structure around audit-stamps and will support PATCH, time-travel automatically."\n          }\n        }\n      ],\n      "name": "inputDatasetEdges",\n      "default": null,\n      "doc": "Input datasets consumed by the data job during processing"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "isUpstream": false,\n          "name": "Produces"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "outputs",\n          "fieldType": "URN",\n          "numValuesFieldName": "numOutputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "outputDatasets",\n      "doc": "Output datasets produced by the data job during processing\\nDeprecated! Use outputDatasetEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "outputDatasetEdges/*/created/actor",\n          "createdOn": "outputDatasetEdges/*/created/time",\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "isUpstream": false,\n          "name": "Produces",\n          "properties": "outputDatasetEdges/*/properties",\n          "updatedActor": "outputDatasetEdges/*/lastModified/actor",\n          "updatedOn": "outputDatasetEdges/*/lastModified/time"\n        }\n      },\n      "Searchable": {\n        "/*/destinationUrn": {\n          "fieldName": "outputDatasetEdges",\n          "fieldType": "URN",\n          "numValuesFieldName": "numOutputDatasets",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "com.linkedin.common.Edge"\n        }\n      ],\n      "name": "outputDatasetEdges",\n      "default": null,\n      "doc": "Output datasets produced by the data job during processing"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataJob"\n          ],\n          "isLineage": true,\n          "name": "DownstreamOf"\n        }\n      },\n      "deprecated": true,\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "inputDatajobs",\n      "default": null,\n      "doc": "Input datajobs that this data job depends on\\nDeprecated! Use inputDatajobEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "inputDatajobEdges/*/created/actor",\n          "createdOn": "inputDatajobEdges/*/created/time",\n          "entityTypes": [\n            "dataJob"\n          ],\n          "isLineage": true,\n          "name": "DownstreamOf",\n          "properties": "inputDatajobEdges/*/properties",\n          "updatedActor": "inputDatajobEdges/*/lastModified/actor",\n          "updatedOn": "inputDatajobEdges/*/lastModified/time"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "com.linkedin.common.Edge"\n        }\n      ],\n      "name": "inputDatajobEdges",\n      "default": null,\n      "doc": "Input datajobs that this data job depends on"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "schemaField"\n          ],\n          "name": "Consumes"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "inputFields",\n          "fieldType": "URN",\n          "numValuesFieldName": "numInputFields",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "inputDatasetFields",\n      "default": null,\n      "doc": "Fields of the input datasets used by this job"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "schemaField"\n          ],\n          "name": "Produces"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "fieldName": "outputFields",\n          "fieldType": "URN",\n          "numValuesFieldName": "numOutputFields",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "outputDatasetFields",\n      "default": null,\n      "doc": "Fields of the output datasets this job writes to"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "name": "FineGrainedLineage",\n            "namespace": "com.linkedin.dataset",\n            "fields": [\n              {\n                "type": {\n                  "type": "enum",\n                  "symbolDocs": {\n                    "DATASET": " Indicates that this lineage is originating from upstream dataset(s)",\n                    "FIELD_SET": " Indicates that this lineage is originating from upstream field(s)",\n                    "NONE": " Indicates that there is no upstream lineage i.e. the downstream field is not a derived field"\n                  },\n                  "name": "FineGrainedLineageUpstreamType",\n                  "namespace": "com.linkedin.dataset",\n                  "symbols": [\n                    "FIELD_SET",\n                    "DATASET",\n                    "NONE"\n                  ],\n                  "doc": "The type of upstream entity in a fine-grained lineage"\n                },\n                "name": "upstreamType",\n                "doc": "The type of upstream entity"\n              },\n              {\n                "Searchable": {\n                  "/*": {\n                    "fieldName": "fineGrainedUpstreams",\n                    "fieldType": "URN",\n                    "hasValuesFieldName": "hasFineGrainedUpstreams",\n                    "queryByDefault": false\n                  }\n                },\n                "type": [\n                  "null",\n                  {\n                    "type": "array",\n                    "items": "string"\n                  }\n                ],\n                "name": "upstreams",\n                "default": null,\n                "doc": "Upstream entities in the lineage"\n              },\n              {\n                "type": {\n                  "type": "enum",\n                  "symbolDocs": {\n                    "FIELD": " Indicates that the lineage is for a single, specific, downstream field",\n                    "FIELD_SET": " Indicates that the lineage is for a set of downstream fields"\n                  },\n                  "name": "FineGrainedLineageDownstreamType",\n                  "namespace": "com.linkedin.dataset",\n                  "symbols": [\n                    "FIELD",\n                    "FIELD_SET"\n                  ],\n                  "doc": "The type of downstream field(s) in a fine-grained lineage"\n                },\n                "name": "downstreamType",\n                "doc": "The type of downstream field(s)"\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "array",\n                    "items": "string"\n                  }\n                ],\n                "name": "downstreams",\n                "default": null,\n                "doc": "Downstream fields in the lineage"\n              },\n              {\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "transformOperation",\n                "default": null,\n                "doc": "The transform operation applied to the upstream entities to produce the downstream field(s)"\n              },\n              {\n                "type": "float",\n                "name": "confidenceScore",\n                "default": 1.0,\n                "doc": "The confidence in this lineage between 0 (low confidence) and 1 (high confidence)"\n              },\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "query",\n                "default": null,\n                "doc": "The query that was used to generate this lineage. \\nPresent only if the lineage was generated from a detected query."\n              }\n            ],\n            "doc": "A fine-grained lineage from upstream fields/datasets to downstream field(s)"\n          }\n        }\n      ],\n      "name": "fineGrainedLineages",\n      "default": null,\n      "doc": "Fine-grained column-level lineages\\nNot currently supported in the UI\\nUse UpstreamLineage aspect for datasets to express Column Level Lineage for the UI"\n    }\n  ],\n  "doc": "Information about the inputs and outputs of a Data processing job"\n}\n')))),(0,a.yg)("h4",{id:"editabledatajobproperties"},"editableDataJobProperties"),(0,a.yg)("p",null,"Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"created"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"An AuditStamp corresponding to the last modification of this resource/association/sub-resource. I..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"deleted"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically,..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"description"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Edited documentation of the data job"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable (editedDescription)"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "editableDataJobProperties"\n  },\n  "name": "EditableDataJobProperties",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "created",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."\n    },\n    {\n      "type": "com.linkedin.common.AuditStamp",\n      "name": "lastModified",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."\n    },\n    {\n      "type": [\n        "null",\n        "com.linkedin.common.AuditStamp"\n      ],\n      "name": "deleted",\n      "default": null,\n      "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."\n    },\n    {\n      "Searchable": {\n        "fieldName": "editedDescription",\n        "fieldType": "TEXT"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "description",\n      "default": null,\n      "doc": "Edited documentation of the data job "\n    }\n  ],\n  "doc": "Stores editable changes made to properties. This separates changes made from\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"\n}\n')))),(0,a.yg)("h4",{id:"ownership-1"},"ownership"),(0,a.yg)("p",null,"Ownership information of an entity."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"owners"),(0,a.yg)("td",{parentName:"tr",align:null},"Owner[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"List of owners of the entity."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"ownerTypes"),(0,a.yg)("td",{parentName:"tr",align:null},"map"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Ownership type to Owners map, populated via mutation hook."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who last modified the record and when. A value of 0 in the time field indi..."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "ownership"\n  },\n  "name": "Ownership",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "Owner",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "corpuser",\n                  "corpGroup"\n                ],\n                "name": "OwnedBy"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "owners",\n                "fieldType": "URN",\n                "filterNameOverride": "Owned By",\n                "hasValuesFieldName": "hasOwners",\n                "queryByDefault": false\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "owner",\n              "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\\n(Caveat: only corpuser is currently supported in the frontend.)"\n            },\n            {\n              "deprecated": true,\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "BUSINESS_OWNER": "A person or group who is responsible for logical, or business related, aspects of the asset.",\n                  "CONSUMER": "A person, group, or service that consumes the data\\nDeprecated! Use TECHNICAL_OWNER or BUSINESS_OWNER instead.",\n                  "CUSTOM": "Set when ownership type is unknown or a when new one is specified as an ownership type entity for which we have no\\nenum value for. This is used for backwards compatibility",\n                  "DATAOWNER": "A person or group that is owning the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DATA_STEWARD": "A steward, expert, or delegate responsible for the asset.",\n                  "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DEVELOPER": "A person or group that is in charge of developing the code\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "NONE": "No specific type associated to the owner.",\n                  "PRODUCER": "A person, group, or service that produces/generates the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "STAKEHOLDER": "A person or a group that has direct business interest\\nDeprecated! Use TECHNICAL_OWNER, BUSINESS_OWNER, or STEWARD instead.",\n                  "TECHNICAL_OWNER": "person or group who is responsible for technical aspects of the asset."\n                },\n                "deprecatedSymbols": {\n                  "CONSUMER": true,\n                  "DATAOWNER": true,\n                  "DELEGATE": true,\n                  "DEVELOPER": true,\n                  "PRODUCER": true,\n                  "STAKEHOLDER": true\n                },\n                "name": "OwnershipType",\n                "namespace": "com.linkedin.common",\n                "symbols": [\n                  "CUSTOM",\n                  "TECHNICAL_OWNER",\n                  "BUSINESS_OWNER",\n                  "DATA_STEWARD",\n                  "NONE",\n                  "DEVELOPER",\n                  "DATAOWNER",\n                  "DELEGATE",\n                  "PRODUCER",\n                  "CONSUMER",\n                  "STAKEHOLDER"\n                ],\n                "doc": "Asset owner types"\n              },\n              "name": "type",\n              "doc": "The type of the ownership"\n            },\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "ownershipType"\n                ],\n                "name": "ownershipType"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "typeUrn",\n              "default": null,\n              "doc": "The type of the ownership\\nUrn of type O"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "OwnershipSource",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": {\n                        "type": "enum",\n                        "symbolDocs": {\n                          "AUDIT": "Auditing system or audit logs",\n                          "DATABASE": "Database, e.g. GRANTS table",\n                          "FILE_SYSTEM": "File system, e.g. file/directory owner",\n                          "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",\n                          "MANUAL": "Manually provided by a user",\n                          "OTHER": "Other sources",\n                          "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",\n                          "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"\n                        },\n                        "name": "OwnershipSourceType",\n                        "namespace": "com.linkedin.common",\n                        "symbols": [\n                          "AUDIT",\n                          "DATABASE",\n                          "FILE_SYSTEM",\n                          "ISSUE_TRACKING_SYSTEM",\n                          "MANUAL",\n                          "SERVICE",\n                          "SOURCE_CONTROL",\n                          "OTHER"\n                        ]\n                      },\n                      "name": "type",\n                      "doc": "The type of the source"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "url",\n                      "default": null,\n                      "doc": "A reference URL for the source"\n                    }\n                  ],\n                  "doc": "Source/provider of the ownership information"\n                }\n              ],\n              "name": "source",\n              "default": null,\n              "doc": "Source information for the ownership"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "ownerAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "ownerAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "ownerAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Ownership information"\n        }\n      },\n      "name": "owners",\n      "doc": "List of owners of the entity."\n    },\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "MAP_ARRAY",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        {\n          "type": "map",\n          "values": {\n            "type": "array",\n            "items": "string"\n          }\n        },\n        "null"\n      ],\n      "name": "ownerTypes",\n      "default": {},\n      "doc": "Ownership type to Owners map, populated via mutation hook."\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "lastModified",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data."\n    }\n  ],\n  "doc": "Ownership information of an entity."\n}\n')))),(0,a.yg)("h4",{id:"status"},"status"),(0,a.yg)("p",null,"The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"removed"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the entity has been removed (soft-deleted)."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "status"\n  },\n  "name": "Status",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN"\n      },\n      "type": "boolean",\n      "name": "removed",\n      "default": false,\n      "doc": "Whether the entity has been removed (soft-deleted)."\n    }\n  ],\n  "doc": "The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\\nThis aspect is used to represent soft deletes conventionally."\n}\n')))),(0,a.yg)("h4",{id:"globaltags"},"globalTags"),(0,a.yg)("p",null,"Tag aspect used for applying tags to an entity"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"tags"),(0,a.yg)("td",{parentName:"tr",align:null},"TagAssociation[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Tags associated with a given entity"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 TaggedWith"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "globalTags"\n  },\n  "name": "GlobalTags",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/tag": {\n          "entityTypes": [\n            "tag"\n          ],\n          "name": "TaggedWith"\n        }\n      },\n      "Searchable": {\n        "/*/tag": {\n          "addToFilters": true,\n          "boostScore": 0.5,\n          "fieldName": "tags",\n          "fieldType": "URN",\n          "filterNameOverride": "Tag",\n          "hasValuesFieldName": "hasTags",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TagAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.TagUrn"\n              },\n              "type": "string",\n              "name": "tag",\n              "doc": "Urn of the applied tag"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "tagAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "tagAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "tagAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters."\n        }\n      },\n      "name": "tags",\n      "doc": "Tags associated with a given entity"\n    }\n  ],\n  "doc": "Tag aspect used for applying tags to an entity"\n}\n')))),(0,a.yg)("h4",{id:"browsepaths"},"browsePaths"),(0,a.yg)("p",null,"Shared aspect containing Browse Paths to be indexed for an entity."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"paths"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"A list of valid browse paths for the entity.  Browse paths are expected to be forward slash-separ..."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "browsePaths"\n  },\n  "name": "BrowsePaths",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldName": "browsePaths",\n          "fieldType": "BROWSE_PATH"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "paths",\n      "doc": "A list of valid browse paths for the entity.\\n\\nBrowse paths are expected to be forward slash-separated strings. For example: \'prod/snowflake/datasetName\'"\n    }\n  ],\n  "doc": "Shared aspect containing Browse Paths to be indexed for an entity."\n}\n')))),(0,a.yg)("h4",{id:"glossaryterms"},"glossaryTerms"),(0,a.yg)("p",null,"Related business terms information"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"terms"),(0,a.yg)("td",{parentName:"tr",align:null},"GlossaryTermAssociation[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The related business terms"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"auditStamp"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who reported the related business term"),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "glossaryTerms"\n  },\n  "name": "GlossaryTerms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "GlossaryTermAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "glossaryTerm"\n                ],\n                "name": "TermedWith"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "glossaryTerms",\n                "fieldType": "URN",\n                "filterNameOverride": "Glossary Term",\n                "hasValuesFieldName": "hasGlossaryTerms",\n                "includeSystemModifiedAt": true,\n                "systemModifiedAtFieldName": "termsModifiedAt"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.GlossaryTermUrn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied glossary term"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "actor",\n              "default": null,\n              "doc": "The user URN which will be credited for adding associating this term to the entity"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "termAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "termAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "termAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Properties of an applied glossary term."\n        }\n      },\n      "name": "terms",\n      "doc": "The related business terms"\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "auditStamp",\n      "doc": "Audit stamp containing who reported the related business term"\n    }\n  ],\n  "doc": "Related business terms information"\n}\n')))),(0,a.yg)("h4",{id:"institutionalmemory"},"institutionalMemory"),(0,a.yg)("p",null,"Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"elements"),(0,a.yg)("td",{parentName:"tr",align:null},"InstitutionalMemoryMetadata[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"List of records that represent institutional memory of an entity. Each record consists of a link,..."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "institutionalMemory"\n  },\n  "name": "InstitutionalMemory",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "InstitutionalMemoryMetadata",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.url.Url",\n                "coercerClass": "com.linkedin.common.url.UrlCoercer"\n              },\n              "type": "string",\n              "name": "url",\n              "doc": "Link to an engineering design document or a wiki page."\n            },\n            {\n              "type": "string",\n              "name": "description",\n              "doc": "Description of the link."\n            },\n            {\n              "type": {\n                "type": "record",\n                "name": "AuditStamp",\n                "namespace": "com.linkedin.common",\n                "fields": [\n                  {\n                    "type": "long",\n                    "name": "time",\n                    "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": "string",\n                    "name": "actor",\n                    "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "impersonator",\n                    "default": null,\n                    "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                  },\n                  {\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "message",\n                    "default": null,\n                    "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                  }\n                ],\n                "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n              },\n              "name": "createStamp",\n              "doc": "Audit stamp associated with creation of this record"\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "updateStamp",\n              "default": null,\n              "doc": "Audit stamp associated with updation of this record"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "InstitutionalMemoryMetadataSettings",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "boolean",\n                      "name": "showInAssetPreview",\n                      "default": false,\n                      "doc": "Show record in asset preview like on entity header and search previews"\n                    }\n                  ],\n                  "doc": "Settings related to a record of InstitutionalMemoryMetadata"\n                }\n              ],\n              "name": "settings",\n              "default": null,\n              "doc": "Settings for this record"\n            }\n          ],\n          "doc": "Metadata corresponding to a record of institutional memory."\n        }\n      },\n      "name": "elements",\n      "doc": "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."\n    }\n  ],\n  "doc": "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."\n}\n')))),(0,a.yg)("h4",{id:"dataplatforminstance"},"dataPlatformInstance"),(0,a.yg)("p",null,"The specific instance of the data platform that this entity belongs to"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"platform"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Data Platform"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"instance"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Instance of the data platform (e.g. db instance)"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable (platformInstance)"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataPlatformInstance"\n  },\n  "name": "DataPlatformInstance",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "URN",\n        "filterNameOverride": "Platform"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "platform",\n      "doc": "Data Platform"\n    },\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldName": "platformInstance",\n        "fieldType": "URN",\n        "filterNameOverride": "Platform Instance"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "instance",\n      "default": null,\n      "doc": "Instance of the data platform (e.g. db instance)"\n    }\n  ],\n  "doc": "The specific instance of the data platform that this entity belongs to"\n}\n')))),(0,a.yg)("h4",{id:"browsepathsv2"},"browsePathsV2"),(0,a.yg)("p",null,"Shared aspect containing a Browse Path to be indexed for an entity."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"path"),(0,a.yg)("td",{parentName:"tr",align:null},"BrowsePathEntry[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"A valid browse path for the entity. This field is provided by DataHub by default. This aspect is ..."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "browsePathsV2"\n  },\n  "name": "BrowsePathsV2",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/id": {\n          "fieldName": "browsePathV2",\n          "fieldType": "BROWSE_PATH_V2"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "BrowsePathEntry",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": "string",\n              "name": "id",\n              "doc": "The ID of the browse path entry. This is what gets stored in the index.\\nIf there\'s an urn associated with this entry, id and urn will be the same"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "urn",\n              "default": null,\n              "doc": "Optional urn pointing to some entity in DataHub"\n            }\n          ],\n          "doc": "Represents a single level in an entity\'s browsePathV2"\n        }\n      },\n      "name": "path",\n      "doc": "A valid browse path for the entity. This field is provided by DataHub by default.\\nThis aspect is a newer version of browsePaths where we can encode more information in the path.\\nThis path is also based on containers for a given entity if it has containers.\\n\\nThis is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.\\nThese paths should not include high level info captured elsewhere ie. Platform and Environment."\n    }\n  ],\n  "doc": "Shared aspect containing a Browse Path to be indexed for an entity."\n}\n')))),(0,a.yg)("h4",{id:"domains"},"domains"),(0,a.yg)("p",null,"Links from an Asset to its Domains"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"domains"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The Domains attached to an Asset"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 AssociatedWith"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "domains"\n  },\n  "name": "Domains",\n  "namespace": "com.linkedin.domain",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "domain"\n          ],\n          "name": "AssociatedWith"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldName": "domains",\n          "fieldType": "URN",\n          "filterNameOverride": "Domain",\n          "hasValuesFieldName": "hasDomain"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "domains",\n      "doc": "The Domains attached to an Asset"\n    }\n  ],\n  "doc": "Links from an Asset to its Domains"\n}\n')))),(0,a.yg)("h4",{id:"applications"},"applications"),(0,a.yg)("p",null,"Links from an Asset to its Applications"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"applications"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The Applications attached to an Asset"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 AssociatedWith"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "applications"\n  },\n  "name": "Applications",\n  "namespace": "com.linkedin.application",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "application"\n          ],\n          "name": "AssociatedWith"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldName": "applications",\n          "fieldType": "URN",\n          "filterNameOverride": "Application",\n          "hasValuesFieldName": "hasApplication"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "applications",\n      "doc": "The Applications attached to an Asset"\n    }\n  ],\n  "doc": "Links from an Asset to its Applications"\n}\n')))),(0,a.yg)("h4",{id:"deprecation"},"deprecation"),(0,a.yg)("p",null,"Deprecation status of an entity"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"deprecated"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the entity is deprecated."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"decommissionTime"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The time user plan to decommission this entity."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"note"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Additional information about the entity deprecation plan, such as the wiki, doc, RB."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"actor"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The user URN which will be credited for modifying this deprecation content."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"replacement"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "deprecation"\n  },\n  "name": "Deprecation",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "BOOLEAN",\n        "filterNameOverride": "Deprecated",\n        "weightsPerFieldValue": {\n          "true": 0.5\n        }\n      },\n      "type": "boolean",\n      "name": "deprecated",\n      "doc": "Whether the entity is deprecated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "decommissionTime",\n      "default": null,\n      "doc": "The time user plan to decommission this entity."\n    },\n    {\n      "type": "string",\n      "name": "note",\n      "doc": "Additional information about the entity deprecation plan, such as the wiki, doc, RB."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "actor",\n      "doc": "The user URN which will be credited for modifying this deprecation content."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "replacement",\n      "default": null\n    }\n  ],\n  "doc": "Deprecation status of an entity"\n}\n')))),(0,a.yg)("h4",{id:"versioninfo"},"versionInfo"),(0,a.yg)("p",null,"Information about a Data processing job"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"customProperties"),(0,a.yg)("td",{parentName:"tr",align:null},"map"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"externalUrl"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"URL where the reference exist"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"version"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The version which can indentify a job version like a commit hash or md5 hash"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"versionType"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The type of the version like git hash or md5 hash"),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "versionInfo"\n  },\n  "name": "VersionInfo",\n  "namespace": "com.linkedin.datajob",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "TEXT",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "map",\n        "values": "string"\n      },\n      "name": "customProperties",\n      "default": {},\n      "doc": "Custom property bag."\n    },\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD"\n      },\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "externalUrl",\n      "default": null,\n      "doc": "URL where the reference exist"\n    },\n    {\n      "type": "string",\n      "name": "version",\n      "doc": "The version which can indentify a job version like a commit hash or md5 hash"\n    },\n    {\n      "type": "string",\n      "name": "versionType",\n      "doc": "The type of the version like git hash or md5 hash"\n    }\n  ],\n  "doc": "Information about a Data processing job"\n}\n')))),(0,a.yg)("h4",{id:"container"},"container"),(0,a.yg)("p",null,"Link from an asset to its parent container"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"container"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The parent container of an asset"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsPartOf"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "container"\n  },\n  "name": "Container",\n  "namespace": "com.linkedin.container",\n  "fields": [\n    {\n      "Relationship": {\n        "entityTypes": [\n          "container"\n        ],\n        "name": "IsPartOf"\n      },\n      "Searchable": {\n        "addToFilters": true,\n        "fieldName": "container",\n        "fieldType": "URN",\n        "filterNameOverride": "Container",\n        "hasValuesFieldName": "hasContainer"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "container",\n      "doc": "The parent container of an asset"\n    }\n  ],\n  "doc": "Link from an asset to its parent container"\n}\n')))),(0,a.yg)("h4",{id:"structuredproperties"},"structuredProperties"),(0,a.yg)("p",null,"Properties about an entity governed by StructuredPropertyDefinition"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"properties"),(0,a.yg)("td",{parentName:"tr",align:null},"StructuredPropertyValueAssignment[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "structuredProperties"\n  },\n  "name": "StructuredProperties",\n  "namespace": "com.linkedin.structured",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "StructuredPropertyValueAssignment",\n          "namespace": "com.linkedin.structured",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "propertyUrn",\n              "doc": "The property that is being assigned a value."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": [\n                  "string",\n                  "double"\n                ]\n              },\n              "name": "values",\n              "doc": "The value assigned to the property."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "created",\n              "default": null,\n              "doc": "Audit stamp containing who created this relationship edge and when"\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "Audit stamp containing who last modified this relationship edge and when"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "structuredPropertyAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "structuredPropertyAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "structuredPropertyAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ]\n        }\n      },\n      "name": "properties",\n      "doc": "Custom property bag."\n    }\n  ],\n  "doc": "Properties about an entity governed by StructuredPropertyDefinition"\n}\n')))),(0,a.yg)("h4",{id:"forms"},"forms"),(0,a.yg)("p",null,"Forms that are assigned to this entity to be filled out"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"incompleteForms"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"All incomplete forms assigned to the entity."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"completedForms"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"All complete forms assigned to the entity."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"verifications"),(0,a.yg)("td",{parentName:"tr",align:null},"FormVerificationAssociation[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Verifications that have been applied to the entity via completed forms."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "forms"\n  },\n  "name": "Forms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "incompleteFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "incompleteFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "incompleteFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "incompleteForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied form"\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": {\n                  "type": "record",\n                  "name": "FormPromptAssociation",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "string",\n                      "name": "id",\n                      "doc": "The id for the prompt. This must be GLOBALLY UNIQUE."\n                    },\n                    {\n                      "type": {\n                        "type": "record",\n                        "name": "AuditStamp",\n                        "namespace": "com.linkedin.common",\n                        "fields": [\n                          {\n                            "type": "long",\n                            "name": "time",\n                            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": "string",\n                            "name": "actor",\n                            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "impersonator",\n                            "default": null,\n                            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                          },\n                          {\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "message",\n                            "default": null,\n                            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                          }\n                        ],\n                        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                      },\n                      "name": "lastModified",\n                      "doc": "The last time this prompt was touched for the entity (set, unset)"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        {\n                          "type": "record",\n                          "name": "FormPromptFieldAssociations",\n                          "namespace": "com.linkedin.common",\n                          "fields": [\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": {\n                                    "type": "record",\n                                    "name": "FieldFormPromptAssociation",\n                                    "namespace": "com.linkedin.common",\n                                    "fields": [\n                                      {\n                                        "type": "string",\n                                        "name": "fieldPath",\n                                        "doc": "The field path on a schema field."\n                                      },\n                                      {\n                                        "type": "com.linkedin.common.AuditStamp",\n                                        "name": "lastModified",\n                                        "doc": "The last time this prompt was touched for the field on the entity (set, unset)"\n                                      }\n                                    ],\n                                    "doc": "Information about the status of a particular prompt for a specific schema field\\non an entity."\n                                  }\n                                }\n                              ],\n                              "name": "completedFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are not yet complete for this form."\n                            },\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": "com.linkedin.common.FieldFormPromptAssociation"\n                                }\n                              ],\n                              "name": "incompleteFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are complete for this form."\n                            }\n                          ],\n                          "doc": "Information about the field-level prompt associations on a top-level prompt association."\n                        }\n                      ],\n                      "name": "fieldAssociations",\n                      "default": null,\n                      "doc": "Optional information about the field-level prompt associations."\n                    }\n                  ],\n                  "doc": "Information about the status of a particular prompt.\\nNote that this is where we can add additional information about individual responses:\\nactor, timestamp, and the response itself."\n                }\n              },\n              "name": "incompletePrompts",\n              "default": [],\n              "doc": "A list of prompts that are not yet complete for this form."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": "com.linkedin.common.FormPromptAssociation"\n              },\n              "name": "completedPrompts",\n              "default": [],\n              "doc": "A list of prompts that have been completed for this form."\n            }\n          ],\n          "doc": "Properties of an applied form."\n        }\n      },\n      "name": "incompleteForms",\n      "doc": "All incomplete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "completedFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "completedFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "completedFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "completedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.FormAssociation"\n      },\n      "name": "completedForms",\n      "doc": "All complete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/form": {\n          "fieldName": "verifiedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormVerificationAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "form",\n              "doc": "The urn of the form that granted this verification."\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "An audit stamp capturing who and when verification was applied for this form."\n            }\n          ],\n          "doc": "An association between a verification and an entity that has been granted\\nvia completion of one or more forms of type \'VERIFICATION\'."\n        }\n      },\n      "name": "verifications",\n      "default": [],\n      "doc": "Verifications that have been applied to the entity via completed forms."\n    }\n  ],\n  "doc": "Forms that are assigned to this entity to be filled out"\n}\n')))),(0,a.yg)("h4",{id:"subtypes"},"subTypes"),(0,a.yg)("p",null,"Sub Types. Use this aspect to specialize a generic Entity\ne.g. Making a Dataset also be a View or also be a LookerExplore"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"typeNames"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The names of the specific types."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "subTypes"\n  },\n  "name": "SubTypes",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldType": "KEYWORD",\n          "filterNameOverride": "Sub Type",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "typeNames",\n      "doc": "The names of the specific types."\n    }\n  ],\n  "doc": "Sub Types. Use this aspect to specialize a generic Entity\\ne.g. Making a Dataset also be a View or also be a LookerExplore"\n}\n')))),(0,a.yg)("h4",{id:"incidentssummary"},"incidentsSummary"),(0,a.yg)("p",null,"Summary related incidents on an entity."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"resolvedIncidents"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Resolved incidents for an asset Deprecated! Use the richer resolvedIncidentsDetails instead."),(0,a.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"activeIncidents"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Active incidents for an asset Deprecated! Use the richer activeIncidentsDetails instead."),(0,a.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"resolvedIncidentDetails"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#incidentsummarydetails"},"IncidentSummaryDetails"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Summary details about the set of resolved incidents"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 ResolvedIncidents")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"activeIncidentDetails"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#incidentsummarydetails"},"IncidentSummaryDetails"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Summary details about the set of active incidents"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 ActiveIncidents"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "incidentsSummary"\n  },\n  "name": "IncidentsSummary",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "resolvedIncidents",\n      "default": [],\n      "doc": "Resolved incidents for an asset\\nDeprecated! Use the richer resolvedIncidentsDetails instead."\n    },\n    {\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "activeIncidents",\n      "default": [],\n      "doc": "Active incidents for an asset\\nDeprecated! Use the richer activeIncidentsDetails instead."\n    },\n    {\n      "Relationship": {\n        "/*/urn": {\n          "entityTypes": [\n            "incident"\n          ],\n          "name": "ResolvedIncidents"\n        }\n      },\n      "Searchable": {\n        "/*/createdAt": {\n          "fieldName": "resolvedIncidentCreatedTimes",\n          "fieldType": "DATETIME"\n        },\n        "/*/priority": {\n          "fieldName": "resolvedIncidentPriorities",\n          "fieldType": "COUNT"\n        },\n        "/*/resolvedAt": {\n          "fieldName": "resolvedIncidentResolvedTimes",\n          "fieldType": "DATETIME"\n        },\n        "/*/type": {\n          "fieldName": "resolvedIncidentTypes",\n          "fieldType": "KEYWORD"\n        },\n        "/*/urn": {\n          "fieldName": "resolvedIncidents",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasResolvedIncidents",\n          "numValuesFieldName": "numResolvedIncidents",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "IncidentSummaryDetails",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "The urn of the incident"\n            },\n            {\n              "type": "string",\n              "name": "type",\n              "doc": "The type of an incident"\n            },\n            {\n              "type": "long",\n              "name": "createdAt",\n              "doc": "The time at which the incident was raised in milliseconds since epoch."\n            },\n            {\n              "type": [\n                "null",\n                "long"\n              ],\n              "name": "resolvedAt",\n              "default": null,\n              "doc": "The time at which the incident was marked as resolved in milliseconds since epoch. Null if the incident is still active."\n            },\n            {\n              "type": [\n                "null",\n                "int"\n              ],\n              "name": "priority",\n              "default": null,\n              "doc": "The priority of the incident"\n            }\n          ],\n          "doc": "Summary statistics about incidents on an entity."\n        }\n      },\n      "name": "resolvedIncidentDetails",\n      "default": [],\n      "doc": "Summary details about the set of resolved incidents"\n    },\n    {\n      "Relationship": {\n        "/*/urn": {\n          "entityTypes": [\n            "incident"\n          ],\n          "name": "ActiveIncidents"\n        }\n      },\n      "Searchable": {\n        "/*/createdAt": {\n          "fieldName": "activeIncidentCreatedTimes",\n          "fieldType": "DATETIME"\n        },\n        "/*/priority": {\n          "fieldName": "activeIncidentPriorities",\n          "fieldType": "COUNT"\n        },\n        "/*/type": {\n          "fieldName": "activeIncidentTypes",\n          "fieldType": "KEYWORD"\n        },\n        "/*/urn": {\n          "addHasValuesToFilters": true,\n          "fieldName": "activeIncidents",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasActiveIncidents",\n          "numValuesFieldName": "numActiveIncidents",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.IncidentSummaryDetails"\n      },\n      "name": "activeIncidentDetails",\n      "default": [],\n      "doc": "Summary details about the set of active incidents"\n    }\n  ],\n  "doc": "Summary related incidents on an entity."\n}\n')))),(0,a.yg)("h4",{id:"testresults"},"testResults"),(0,a.yg)("p",null,"Information about a Test Result"),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"failing"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Results that are failing"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsFailing")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"passing"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Results that are passing"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsPassing"))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "testResults"\n  },\n  "name": "TestResults",\n  "namespace": "com.linkedin.test",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsFailing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "failingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasFailingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TestResult",\n          "namespace": "com.linkedin.test",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "test",\n              "doc": "The urn of the test"\n            },\n            {\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "FAILURE": " The Test Failed",\n                  "SUCCESS": " The Test Succeeded"\n                },\n                "name": "TestResultType",\n                "namespace": "com.linkedin.test",\n                "symbols": [\n                  "SUCCESS",\n                  "FAILURE"\n                ]\n              },\n              "name": "type",\n              "doc": "The type of the result"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "testDefinitionMd5",\n              "default": null,\n              "doc": "The md5 of the test definition that was used to compute this result.\\nSee TestInfo.testDefinition.md5 for more information."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "lastComputed",\n              "default": null,\n              "doc": "The audit stamp of when the result was computed, including the actor who computed it."\n            }\n          ],\n          "doc": "Information about a Test Result"\n        }\n      },\n      "name": "failing",\n      "doc": "Results that are failing"\n    },\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsPassing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "passingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasPassingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.test.TestResult"\n      },\n      "name": "passing",\n      "doc": "Results that are passing"\n    }\n  ],\n  "doc": "Information about a Test Result"\n}\n')))),(0,a.yg)("h4",{id:"datatransformlogic"},"dataTransformLogic"),(0,a.yg)("p",null,"Information about a Query against one or more data assets (e.g. Tables or Views)."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"transforms"),(0,a.yg)("td",{parentName:"tr",align:null},"DataTransform[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"List of transformations applied"),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataTransformLogic"\n  },\n  "name": "DataTransformLogic",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "DataTransform",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "QueryStatement",\n                  "namespace": "com.linkedin.query",\n                  "fields": [\n                    {\n                      "type": "string",\n                      "name": "value",\n                      "doc": "The query text"\n                    },\n                    {\n                      "type": {\n                        "type": "enum",\n                        "symbolDocs": {\n                          "SQL": "A SQL Query",\n                          "UNKNOWN": "Unknown query language"\n                        },\n                        "name": "QueryLanguage",\n                        "namespace": "com.linkedin.query",\n                        "symbols": [\n                          "SQL",\n                          "UNKNOWN"\n                        ]\n                      },\n                      "name": "language",\n                      "default": "SQL",\n                      "doc": "The language of the Query, e.g. SQL."\n                    }\n                  ],\n                  "doc": "A query statement against one or more data assets."\n                }\n              ],\n              "name": "queryStatement",\n              "default": null,\n              "doc": "The data transform may be defined by a query statement"\n            }\n          ],\n          "doc": "Information about a transformation. It may be a query,"\n        }\n      },\n      "name": "transforms",\n      "doc": "List of transformations applied"\n    }\n  ],\n  "doc": "Information about a Query against one or more data assets (e.g. Tables or Views)."\n}\n')))),(0,a.yg)("h4",{id:"datahubingestionrunsummary-timeseries"},"datahubIngestionRunSummary (Timeseries)"),(0,a.yg)("p",null,"Summary of a datahub ingestion run for a given platform."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"timestampMillis"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The event timestamp field as epoch at UTC in milli seconds."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"eventGranularity"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#timewindowsize"},"TimeWindowSize")),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Granularity of the event if applicable"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"partitionSpec"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#partitionspec"},"PartitionSpec")),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The optional partition specification."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"messageId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The optional messageId, if provided serves as a custom user-defined unique identifier for an aspe..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"pipelineName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The name of the pipeline that ran ingestion, a stable unique user provided identifier.  e.g. my_s..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"platformInstanceId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The id of the instance against which the ingestion pipeline ran. e.g.: Bigquery project ids, MySQ..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"runId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The runId for this pipeline instance."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"runStatus"),(0,a.yg)("td",{parentName:"tr",align:null},"JobStatus"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Run Status - Succeeded/Skipped/Failed etc."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numWorkUnitsCommitted"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The number of workunits written to sink."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numWorkUnitsCreated"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The number of workunits that are produced."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numEvents"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The number of events produced (MCE + MCP)."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numEntities"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The total number of entities produced (unique entity urns)."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numAspects"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The total number of aspects produced across all entities."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numSourceAPICalls"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Total number of source API calls."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"totalLatencySourceAPICalls"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Total latency across all source API calls."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numSinkAPICalls"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Total number of sink API calls."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"totalLatencySinkAPICalls"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Total latency across all sink API calls."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numWarnings"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Number of warnings generated."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numErrors"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Number of errors generated."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numEntitiesSkipped"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Number of entities skipped."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"config"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The non-sensitive key-value pairs of the yaml config used as json string."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"custom_summary"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Custom value."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"softwareVersion"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The software version of this ingestion."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"systemHostName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The hostname the ingestion pipeline ran on."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"operatingSystemName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The os the ingestion pipeline ran on."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"numProcessors"),(0,a.yg)("td",{parentName:"tr",align:null},"int"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The number of processors on the host the ingestion pipeline ran on."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"totalMemory"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The total amount of memory on the host the ingestion pipeline ran on."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"availableMemory"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The available memory on the host the ingestion pipeline ran on."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "datahubIngestionRunSummary",\n    "type": "timeseries"\n  },\n  "name": "DatahubIngestionRunSummary",\n  "namespace": "com.linkedin.datajob.datahub",\n  "fields": [\n    {\n      "type": "long",\n      "name": "timestampMillis",\n      "doc": "The event timestamp field as epoch at UTC in milli seconds."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeWindowSize",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "CalendarInterval",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "SECOND",\n                  "MINUTE",\n                  "HOUR",\n                  "DAY",\n                  "WEEK",\n                  "MONTH",\n                  "QUARTER",\n                  "YEAR"\n                ]\n              },\n              "name": "unit",\n              "doc": "Interval unit such as minute/hour/day etc."\n            },\n            {\n              "type": "int",\n              "name": "multiple",\n              "default": 1,\n              "doc": "How many units. Defaults to 1."\n            }\n          ],\n          "doc": "Defines the size of a time window."\n        }\n      ],\n      "name": "eventGranularity",\n      "default": null,\n      "doc": "Granularity of the event if applicable"\n    },\n    {\n      "type": [\n        {\n          "type": "record",\n          "name": "PartitionSpec",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "TimeseriesField": {},\n              "type": "string",\n              "name": "partition",\n              "doc": "A unique id / value for the partition for which statistics were collected,\\ngenerated by applying the key definition to a given row."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "TimeWindow",\n                  "namespace": "com.linkedin.timeseries",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "startTimeMillis",\n                      "doc": "Start time as epoch at UTC."\n                    },\n                    {\n                      "type": "com.linkedin.timeseries.TimeWindowSize",\n                      "name": "length",\n                      "doc": "The length of the window."\n                    }\n                  ]\n                }\n              ],\n              "name": "timePartition",\n              "default": null,\n              "doc": "Time window of the partition, if we are able to extract it from the partition key."\n            },\n            {\n              "deprecated": true,\n              "type": {\n                "type": "enum",\n                "name": "PartitionType",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "FULL_TABLE",\n                  "QUERY",\n                  "PARTITION"\n                ]\n              },\n              "name": "type",\n              "default": "PARTITION",\n              "doc": "Unused!"\n            }\n          ],\n          "doc": "A reference to a specific partition in a dataset."\n        },\n        "null"\n      ],\n      "name": "partitionSpec",\n      "default": {\n        "partition": "FULL_TABLE_SNAPSHOT",\n        "type": "FULL_TABLE",\n        "timePartition": null\n      },\n      "doc": "The optional partition specification."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "messageId",\n      "default": null,\n      "doc": "The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "pipelineName",\n      "doc": "The name of the pipeline that ran ingestion, a stable unique user provided identifier.\\n e.g. my_snowflake1-to-datahub."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "platformInstanceId",\n      "doc": "The id of the instance against which the ingestion pipeline ran.\\ne.g.: Bigquery project ids, MySQL hostnames etc."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "runId",\n      "doc": "The runId for this pipeline instance."\n    },\n    {\n      "TimeseriesField": {},\n      "type": {\n        "type": "enum",\n        "symbolDocs": {\n          "COMPLETED": "Jobs with successful completion.",\n          "FAILED": "Jobs that have failed.",\n          "IN_PROGRESS": "Jobs currently running.",\n          "SKIPPED": "Jobs that have been skipped.",\n          "STARTING": "Jobs being initialized.",\n          "STOPPED": "Jobs that have stopped.",\n          "STOPPING": "Jobs being stopped.",\n          "UNKNOWN": "Jobs with unknown status (either unmappable or unavailable)"\n        },\n        "name": "JobStatus",\n        "namespace": "com.linkedin.datajob",\n        "symbols": [\n          "STARTING",\n          "IN_PROGRESS",\n          "STOPPING",\n          "STOPPED",\n          "COMPLETED",\n          "FAILED",\n          "UNKNOWN",\n          "SKIPPED"\n        ],\n        "doc": "Job statuses"\n      },\n      "name": "runStatus",\n      "doc": "Run Status - Succeeded/Skipped/Failed etc."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numWorkUnitsCommitted",\n      "default": null,\n      "doc": "The number of workunits written to sink."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numWorkUnitsCreated",\n      "default": null,\n      "doc": "The number of workunits that are produced."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numEvents",\n      "default": null,\n      "doc": "The number of events produced (MCE + MCP)."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numEntities",\n      "default": null,\n      "doc": "The total number of entities produced (unique entity urns)."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numAspects",\n      "default": null,\n      "doc": "The total number of aspects produced across all entities."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numSourceAPICalls",\n      "default": null,\n      "doc": "Total number of source API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "totalLatencySourceAPICalls",\n      "default": null,\n      "doc": "Total latency across all source API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numSinkAPICalls",\n      "default": null,\n      "doc": "Total number of sink API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "totalLatencySinkAPICalls",\n      "default": null,\n      "doc": "Total latency across all sink API calls."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numWarnings",\n      "default": null,\n      "doc": "Number of warnings generated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numErrors",\n      "default": null,\n      "doc": "Number of errors generated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "numEntitiesSkipped",\n      "default": null,\n      "doc": "Number of entities skipped."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "config",\n      "default": null,\n      "doc": "The non-sensitive key-value pairs of the yaml config used as json string."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "custom_summary",\n      "default": null,\n      "doc": "Custom value."\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "softwareVersion",\n      "default": null,\n      "doc": "The software version of this ingestion."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "systemHostName",\n      "default": null,\n      "doc": "The hostname the ingestion pipeline ran on."\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "operatingSystemName",\n      "default": null,\n      "doc": "The os the ingestion pipeline ran on."\n    },\n    {\n      "type": [\n        "null",\n        "int"\n      ],\n      "name": "numProcessors",\n      "default": null,\n      "doc": "The number of processors on the host the ingestion pipeline ran on."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "totalMemory",\n      "default": null,\n      "doc": "The total amount of memory on the host the ingestion pipeline ran on."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "availableMemory",\n      "default": null,\n      "doc": "The available memory on the host the ingestion pipeline ran on."\n    }\n  ],\n  "doc": "Summary of a datahub ingestion run for a given platform."\n}\n')))),(0,a.yg)("h4",{id:"datahubingestioncheckpoint-timeseries"},"datahubIngestionCheckpoint (Timeseries)"),(0,a.yg)("p",null,"Checkpoint of a datahub ingestion run for a given job."),(0,a.yg)(i.A,{mdxType:"Tabs"},(0,a.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"timestampMillis"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The event timestamp field as epoch at UTC in milli seconds."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"eventGranularity"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#timewindowsize"},"TimeWindowSize")),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Granularity of the event if applicable"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"partitionSpec"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#partitionspec"},"PartitionSpec")),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The optional partition specification."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"messageId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The optional messageId, if provided serves as a custom user-defined unique identifier for an aspe..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"pipelineName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The name of the pipeline that ran ingestion, a stable unique user provided identifier.  e.g. my_s..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"platformInstanceId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The id of the instance against which the ingestion pipeline ran. e.g.: Bigquery project ids, MySQ..."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"config"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Json-encoded string representation of the non-secret members of the config ."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"state"),(0,a.yg)("td",{parentName:"tr",align:null},"IngestionCheckpointState"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Opaque blob of the state representation."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"runId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The run identifier of this job."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "datahubIngestionCheckpoint",\n    "type": "timeseries"\n  },\n  "name": "DatahubIngestionCheckpoint",\n  "namespace": "com.linkedin.datajob.datahub",\n  "fields": [\n    {\n      "type": "long",\n      "name": "timestampMillis",\n      "doc": "The event timestamp field as epoch at UTC in milli seconds."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeWindowSize",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "CalendarInterval",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "SECOND",\n                  "MINUTE",\n                  "HOUR",\n                  "DAY",\n                  "WEEK",\n                  "MONTH",\n                  "QUARTER",\n                  "YEAR"\n                ]\n              },\n              "name": "unit",\n              "doc": "Interval unit such as minute/hour/day etc."\n            },\n            {\n              "type": "int",\n              "name": "multiple",\n              "default": 1,\n              "doc": "How many units. Defaults to 1."\n            }\n          ],\n          "doc": "Defines the size of a time window."\n        }\n      ],\n      "name": "eventGranularity",\n      "default": null,\n      "doc": "Granularity of the event if applicable"\n    },\n    {\n      "type": [\n        {\n          "type": "record",\n          "name": "PartitionSpec",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "TimeseriesField": {},\n              "type": "string",\n              "name": "partition",\n              "doc": "A unique id / value for the partition for which statistics were collected,\\ngenerated by applying the key definition to a given row."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "TimeWindow",\n                  "namespace": "com.linkedin.timeseries",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "startTimeMillis",\n                      "doc": "Start time as epoch at UTC."\n                    },\n                    {\n                      "type": "com.linkedin.timeseries.TimeWindowSize",\n                      "name": "length",\n                      "doc": "The length of the window."\n                    }\n                  ]\n                }\n              ],\n              "name": "timePartition",\n              "default": null,\n              "doc": "Time window of the partition, if we are able to extract it from the partition key."\n            },\n            {\n              "deprecated": true,\n              "type": {\n                "type": "enum",\n                "name": "PartitionType",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "FULL_TABLE",\n                  "QUERY",\n                  "PARTITION"\n                ]\n              },\n              "name": "type",\n              "default": "PARTITION",\n              "doc": "Unused!"\n            }\n          ],\n          "doc": "A reference to a specific partition in a dataset."\n        },\n        "null"\n      ],\n      "name": "partitionSpec",\n      "default": {\n        "partition": "FULL_TABLE_SNAPSHOT",\n        "type": "FULL_TABLE",\n        "timePartition": null\n      },\n      "doc": "The optional partition specification."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "messageId",\n      "default": null,\n      "doc": "The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "pipelineName",\n      "doc": "The name of the pipeline that ran ingestion, a stable unique user provided identifier.\\n e.g. my_snowflake1-to-datahub."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "platformInstanceId",\n      "doc": "The id of the instance against which the ingestion pipeline ran.\\ne.g.: Bigquery project ids, MySQL hostnames etc."\n    },\n    {\n      "type": "string",\n      "name": "config",\n      "doc": "Json-encoded string representation of the non-secret members of the config ."\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "IngestionCheckpointState",\n        "namespace": "com.linkedin.datajob.datahub",\n        "fields": [\n          {\n            "type": "string",\n            "name": "formatVersion",\n            "doc": "The version of the state format."\n          },\n          {\n            "type": "string",\n            "name": "serde",\n            "doc": "The serialization/deserialization protocol."\n          },\n          {\n            "type": [\n              "null",\n              "bytes"\n            ],\n            "name": "payload",\n            "default": null,\n            "doc": "Opaque blob of the state representation."\n          }\n        ],\n        "doc": "The checkpoint state object of a datahub ingestion run for a given job."\n      },\n      "name": "state",\n      "doc": "Opaque blob of the state representation."\n    },\n    {\n      "TimeseriesField": {},\n      "type": "string",\n      "name": "runId",\n      "doc": "The run identifier of this job."\n    }\n  ],\n  "doc": "Checkpoint of a datahub ingestion run for a given job."\n}\n')))),(0,a.yg)("h3",{id:"common-types"},"Common Types"),(0,a.yg)("p",null,"These types are used across multiple aspects in this entity."),(0,a.yg)("h4",{id:"auditstamp"},"AuditStamp"),(0,a.yg)("p",null,"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"time")," (long): When did the resource/association/sub-resource move into the specific lifecyc..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"actor")," (string): The entity (e.g. a member URN) which will be credited for moving the resource..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"impersonator")," (string?): The entity (e.g. a service URN) which performs the change on behalf of the Ac..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"message")," (string?): Additional context around how DataHub was informed of the particular change. ...")),(0,a.yg)("h4",{id:"edge"},"Edge"),(0,a.yg)("p",null,"A common structure to represent all edges to entities when used inside aspects as collections\nThis ensures that all edges have common structure around audit-stamps and will support PATCH, time-travel automatically."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"sourceUrn")," (string?): Urn of the source of this relationship edge. If not specified, assumed to be ..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"destinationUrn")," (string): Urn of the destination of this relationship edge."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"created")," (AuditStamp?): Audit stamp containing who created this relationship edge and when"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"lastModified")," (AuditStamp?): Audit stamp containing who last modified this relationship edge and when"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"properties")," (map?): A generic properties bag that allows us to store specific information on this...")),(0,a.yg)("h4",{id:"formassociation"},"FormAssociation"),(0,a.yg)("p",null,"Properties of an applied form."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"urn")," (string): Urn of the applied form"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"incompletePrompts")," (FormPromptAssociation[]): A list of prompts that are not yet complete for this form."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"completedPrompts")," (FormPromptAssociation[]): A list of prompts that have been completed for this form.")),(0,a.yg)("h4",{id:"incidentsummarydetails"},"IncidentSummaryDetails"),(0,a.yg)("p",null,"Summary statistics about incidents on an entity."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"urn")," (string): The urn of the incident"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"type")," (string): The type of an incident"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"createdAt")," (long): The time at which the incident was raised in milliseconds since epoch."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"resolvedAt")," (long?): The time at which the incident was marked as resolved in milliseconds since e..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"priority")," (int?): The priority of the incident")),(0,a.yg)("h4",{id:"partitionspec"},"PartitionSpec"),(0,a.yg)("p",null,"A reference to a specific partition in a dataset."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"partition")," (string): A unique id / value for the partition for which statistics were collected, ge..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"timePartition")," (TimeWindow?): Time window of the partition, if we are able to extract it from the partition..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"type")," (PartitionType): Unused!")),(0,a.yg)("h4",{id:"testresult"},"TestResult"),(0,a.yg)("p",null,"Information about a Test Result"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"test")," (string): The urn of the test"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"type")," (TestResultType): The type of the result"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"testDefinitionMd5")," (string?): The md5 of the test definition that was used to compute this result. See Test..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"lastComputed")," (AuditStamp?): The audit stamp of when the result was computed, including the actor who comp...")),(0,a.yg)("h4",{id:"timestamp"},"TimeStamp"),(0,a.yg)("p",null,"A standard event timestamp"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"time")," (long): When did the event occur"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"actor")," (string?): Optional: The actor urn involved in the event.")),(0,a.yg)("h4",{id:"timewindowsize"},"TimeWindowSize"),(0,a.yg)("p",null,"Defines the size of a time window."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"unit")," (CalendarInterval): Interval unit such as minute/hour/day etc."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"multiple")," (int): How many units. Defaults to 1.")),(0,a.yg)("h3",{id:"relationships"},"Relationships"),(0,a.yg)("h4",{id:"self"},"Self"),(0,a.yg)("p",null,"These are the relationships to itself, stored in this entity's aspects"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"DownstreamOf (via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatajobs"),")"),(0,a.yg)("li",{parentName:"ul"},"DownstreamOf (via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatajobEdges"),")")),(0,a.yg)("h4",{id:"outgoing"},"Outgoing"),(0,a.yg)("p",null,"These are the relationships stored in this entity's aspects"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsPartOf"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"DataFlow via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobKey.flow")),(0,a.yg)("li",{parentName:"ul"},"Container via ",(0,a.yg)("inlineCode",{parentName:"li"},"container.container")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Consumes"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Dataset via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatasets")),(0,a.yg)("li",{parentName:"ul"},"Dataset via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatasetEdges")),(0,a.yg)("li",{parentName:"ul"},"SchemaField via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.inputDatasetFields")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Produces"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Dataset via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.outputDatasets")),(0,a.yg)("li",{parentName:"ul"},"Dataset via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.outputDatasetEdges")),(0,a.yg)("li",{parentName:"ul"},"SchemaField via ",(0,a.yg)("inlineCode",{parentName:"li"},"dataJobInputOutput.outputDatasetFields")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"OwnedBy"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Corpuser via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,a.yg)("li",{parentName:"ul"},"CorpGroup via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"ownershipType"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"OwnershipType via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.typeUrn")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"TaggedWith"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Tag via ",(0,a.yg)("inlineCode",{parentName:"li"},"globalTags.tags")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"TermedWith"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"GlossaryTerm via ",(0,a.yg)("inlineCode",{parentName:"li"},"glossaryTerms.terms.urn")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"AssociatedWith"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Domain via ",(0,a.yg)("inlineCode",{parentName:"li"},"domains.domains")),(0,a.yg)("li",{parentName:"ul"},"Application via ",(0,a.yg)("inlineCode",{parentName:"li"},"applications.applications")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"ResolvedIncidents"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Incident via ",(0,a.yg)("inlineCode",{parentName:"li"},"incidentsSummary.resolvedIncidentDetails")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"ActiveIncidents"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Incident via ",(0,a.yg)("inlineCode",{parentName:"li"},"incidentsSummary.activeIncidentDetails")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsFailing"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Test via ",(0,a.yg)("inlineCode",{parentName:"li"},"testResults.failing")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsPassing"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Test via ",(0,a.yg)("inlineCode",{parentName:"li"},"testResults.passing"))))),(0,a.yg)("h3",{id:"global-metadata-model"},(0,a.yg)("a",{parentName:"h3",href:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}h.isMDXComponent=!0}}]);