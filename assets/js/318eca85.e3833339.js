"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[54839],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>m});var a=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(t),g=o,m=c["".concat(s,".").concat(g)]||c[g]||p[g]||l;return t?a.createElement(m,r(r({ref:n},d),{},{components:t})):a.createElement(m,r({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=g;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:o,r[1]=i;for(var u=2;u<l;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},98715:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>c});t(96540);var a=t(15680);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const i={sidebar_position:52,title:"GlobalSettings",slug:"/generated/metamodel/entities/globalsettings",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/globalSettings.md"},s="GlobalSettings",u={unversionedId:"docs/generated/metamodel/entities/globalSettings",id:"version-1.1.0/docs/generated/metamodel/entities/globalSettings",title:"GlobalSettings",description:"Global settings for an the platform",source:"@site/versioned_docs/version-1.1.0/docs/generated/metamodel/entities/globalSettings.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/globalsettings",permalink:"/docs/1.1.0/generated/metamodel/entities/globalsettings",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/globalSettings.md",tags:[],version:"1.1.0",sidebarPosition:52,frontMatter:{sidebar_position:52,title:"GlobalSettings",slug:"/generated/metamodel/entities/globalsettings",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/globalSettings.md"},sidebar:"overviewSidebar",previous:{title:"InviteToken",permalink:"/docs/1.1.0/generated/metamodel/entities/invitetoken"},next:{title:"DataHubStepState",permalink:"/docs/1.1.0/generated/metamodel/entities/datahubstepstate"}},d={},c=[{value:"Aspects",id:"aspects",level:2},{value:"globalSettingsInfo",id:"globalsettingsinfo",level:3},{value:"Relationships",id:"relationships",level:2},{value:"Outgoing",id:"outgoing",level:3},{value:"Global Metadata Model",id:"global-metadata-model",level:2}],p={toc:c},g="wrapper";function m(e){var{components:n}=e,t=r(e,["components"]);return(0,a.yg)(g,l(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){o(e,n,t[n])}))}return e}({},p,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"globalsettings"},"GlobalSettings"),(0,a.yg)("p",null,"Global settings for an the platform"),(0,a.yg)("h2",{id:"aspects"},"Aspects"),(0,a.yg)("h3",{id:"globalsettingsinfo"},"globalSettingsInfo"),(0,a.yg)("p",null,"DataHub Global platform settings. Careful - these should not be modified by the outside world!"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Schema"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "globalSettingsInfo"\n  },\n  "name": "GlobalSettingsInfo",\n  "namespace": "com.linkedin.settings.global",\n  "fields": [\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "SsoSettings",\n          "namespace": "com.linkedin.settings.global",\n          "fields": [\n            {\n              "type": "string",\n              "name": "baseUrl",\n              "doc": "Auth base URL."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "OidcSettings",\n                  "namespace": "com.linkedin.settings.global",\n                  "fields": [\n                    {\n                      "type": "boolean",\n                      "name": "enabled",\n                      "doc": "Whether OIDC SSO is enabled."\n                    },\n                    {\n                      "type": "string",\n                      "name": "clientId",\n                      "doc": "Unique client id issued by the identity provider."\n                    },\n                    {\n                      "type": "string",\n                      "name": "clientSecret",\n                      "doc": "Unique client secret issued by the identity provider."\n                    },\n                    {\n                      "type": "string",\n                      "name": "discoveryUri",\n                      "doc": "The IdP OIDC discovery url."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "userNameClaim",\n                      "default": null,\n                      "doc": "ADVANCED. The attribute / claim used to derive the DataHub username. Defaults to \\"preferred_username\\"."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "userNameClaimRegex",\n                      "default": null,\n                      "doc": "ADVANCED. TThe regex used to parse the DataHub username from the user name claim. Defaults to (.*) (all)."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "scope",\n                      "default": null,\n                      "doc": "ADVANCED. String representing the requested scope from the IdP. Defaults to \\"oidc email profile\\"."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "clientAuthenticationMethod",\n                      "default": null,\n                      "doc": "ADVANCED. Which authentication method to use to pass credentials (clientId and clientSecret) to the token endpoint: Defaults to \\"client_secret_basic\\"."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "boolean"\n                      ],\n                      "name": "jitProvisioningEnabled",\n                      "default": null,\n                      "doc": "ADVANCED. Whether DataHub users should be provisioned on login if they do not exist. Defaults to true."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "boolean"\n                      ],\n                      "name": "preProvisioningRequired",\n                      "default": null,\n                      "doc": "ADVANCED. Whether the user should already exist in DataHub on login, failing login if they are not. Defaults to false."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "boolean"\n                      ],\n                      "name": "extractGroupsEnabled",\n                      "default": null,\n                      "doc": "ADVANCED. Whether groups should be extracted from a claim in the OIDC profile. Only applies if JIT provisioning is enabled. Groups will be created if they do not exist. Defaults to true."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "groupsClaim",\n                      "default": null,\n                      "doc": "ADVANCED. The OIDC claim to extract groups information from. Defaults to \'groups\'."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "responseType",\n                      "default": null,\n                      "doc": "ADVANCED. Response type."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "responseMode",\n                      "default": null,\n                      "doc": "ADVANCED. Response mode."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "boolean"\n                      ],\n                      "name": "useNonce",\n                      "default": null,\n                      "doc": "ADVANCED. Use Nonce."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "long"\n                      ],\n                      "name": "readTimeout",\n                      "default": null,\n                      "doc": "ADVANCED. Read timeout."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "boolean"\n                      ],\n                      "name": "extractJwtAccessTokenClaims",\n                      "default": null,\n                      "doc": "ADVANCED. Whether to extract claims from JWT access token.  Defaults to false."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "preferredJwsAlgorithm",\n                      "default": null,\n                      "doc": " ADVANCED. Which jws algorithm to use. Unused."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "preferredJwsAlgorithm2",\n                      "default": null,\n                      "doc": " ADVANCED. Which jws algorithm to use."\n                    }\n                  ],\n                  "doc": "Settings for OIDC SSO integration."\n                }\n              ],\n              "name": "oidcSettings",\n              "default": null,\n              "doc": "Optional OIDC SSO settings."\n            }\n          ],\n          "doc": "SSO Integrations, supported on the UI."\n        }\n      ],\n      "name": "sso",\n      "default": null,\n      "doc": "SSO integrations between DataHub and identity providers"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "GlobalViewsSettings",\n          "namespace": "com.linkedin.settings.global",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "dataHubView"\n                ],\n                "name": "viewedWith"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "defaultView",\n              "default": null,\n              "doc": "The default View for the instance, or organization."\n            }\n          ],\n          "doc": "Settings for DataHub Views feature."\n        }\n      ],\n      "name": "views",\n      "default": null,\n      "doc": "Settings related to the Views Feature"\n    },\n    {\n      "type": [\n        {\n          "type": "record",\n          "name": "DocPropagationFeatureSettings",\n          "namespace": "com.linkedin.settings.global",\n          "fields": [\n            {\n              "type": "boolean",\n              "name": "enabled"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "config",\n              "default": null,\n              "doc": "The configuration for the feature, in JSON format."\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "configVersion",\n              "default": null,\n              "doc": "The version of the configuration schema that has been used to serialize\\n       the config.\\nIf not provided, the version is assumed to be the latest version."\n            },\n            {\n              "type": "boolean",\n              "name": "columnPropagationEnabled",\n              "default": true\n            }\n          ]\n        },\n        "null"\n      ],\n      "name": "docPropagation",\n      "default": {\n        "configVersion": null,\n        "config": null,\n        "enabled": true,\n        "columnPropagationEnabled": true\n      },\n      "doc": "Settings related to the documentation propagation feature"\n    }\n  ],\n  "doc": "DataHub Global platform settings. Careful - these should not be modified by the outside world!"\n}\n'))),(0,a.yg)("h2",{id:"relationships"},"Relationships"),(0,a.yg)("h3",{id:"outgoing"},"Outgoing"),(0,a.yg)("p",null,"These are the relationships stored in this entity's aspects"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"viewedWith"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"DataHubView via ",(0,a.yg)("inlineCode",{parentName:"li"},"globalSettingsInfo.views.defaultView"))))),(0,a.yg)("h2",{id:"global-metadata-model"},(0,a.yg)("a",{parentName:"h2",href:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}m.isMDXComponent=!0}}]);