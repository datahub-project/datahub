"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[73607],{15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>f});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(i,".").concat(m)]||u[m]||h[m]||o;return n?r.createElement(f,p(p({ref:t},l),{},{components:n})):r.createElement(f,p({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,p[1]=s;for(var c=2;c<o;c++)p[c]=n[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75885:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>u});n(96540);var r=n(15680);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={title:"What is a snapshot?",slug:"/what/snapshot",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/what/snapshot.md"},i="What is a snapshot?",c={unversionedId:"docs/what/snapshot",id:"docs/what/snapshot",title:"What is a snapshot?",description:"A metadata snapshot models the current state of one or multiple metadata aspects associated with a particular entity.",source:"@site/genDocs/docs/what/snapshot.md",sourceDirName:"docs/what",slug:"/what/snapshot",permalink:"/docs/what/snapshot",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/what/snapshot.md",tags:[],version:"current",frontMatter:{title:"What is a snapshot?",slug:"/what/snapshot",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/what/snapshot.md"}},l={},u=[],h={toc:u},m="wrapper";function f(e){var{components:t}=e,n=p(e,["components"]);return(0,r.yg)(m,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},h,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"what-is-a-snapshot"},"What is a snapshot?"),(0,r.yg)("p",null,"A metadata snapshot models the current state of one or multiple metadata ",(0,r.yg)("a",{parentName:"p",href:"/docs/what/aspect"},"aspects")," associated with a particular ",(0,r.yg)("a",{parentName:"p",href:"/docs/what/entity"},"entity"),".\nEach entity type is expected to have:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"An entity-specific aspect (e.g. ",(0,r.yg)("inlineCode",{parentName:"li"},"CorpGroupAspect")," from below), which is a ",(0,r.yg)("inlineCode",{parentName:"li"},"typeref")," containing a union of all possible metadata aspects for the entity."),(0,r.yg)("li",{parentName:"ol"},"An entity-specific snapshot (e.g. ",(0,r.yg)("inlineCode",{parentName:"li"},"CorpGroupSnapshot")," from below), which contains an array (aspects) of entity-specific aspects.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"namespace com.linkedin.metadata.aspect\n\nimport com.linkedin.group.Membership\nimport com.linkedin.group.SomeOtherMetadata\n\n/**\n * A union of all supported metadata aspects for a group\n */\ntyperef CorpGroupAspect = union[Membership, SomeOtherMetadata]\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"namespace com.linkedin.metadata.snapshot\n\nimport com.linkedin.common.CorpGroupUrn\nimport com.linkedin.metadata.aspect.CorpGroupAspect\n\n/**\n * A metadata snapshot for a specific Group entity.\n */\nrecord CorpGroupSnapshot {\n\n  /** URN for the entity the metadata snapshot is associated with */\n  urn: CorpGroupUrn\n\n  /** The list of metadata aspects associated with the group */\n  aspects: array[CorpGroupAspect]\n}\n")),(0,r.yg)("p",null,"The generic ",(0,r.yg)("inlineCode",{parentName:"p"},"Snapshot")," typeref contains a union of all entity-specific snapshots and can therefore be used to represent the state of any metadata aspect for all supported entity types."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"namespace com.linkedin.metadata.snapshot\n\n/**\n * A union of all supported metadata snapshot types.\n */\ntyperef Snapshot = union[DatasetSnapshot, CorpGroupSnapshot, CorpUserSnapshot]\n")))}f.isMDXComponent=!0}}]);