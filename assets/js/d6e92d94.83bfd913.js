"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[93674],{29606:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>m,default:()=>h,frontMatter:()=>p,metadata:()=>g,toc:()=>d});t(96540);var a=t(15680),r=t(53720),l=t(5400);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const p={sidebar_position:9,title:"CorpUser",slug:"/generated/metamodel/entities/corpuser",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/corpuser.md"},m="CorpUser",g={unversionedId:"docs/generated/metamodel/entities/corpuser",id:"docs/generated/metamodel/entities/corpuser",title:"CorpUser",description:"CorpUser represents an individual user (or account) in the enterprise. These entities serve as the identity layer within DataHub, representing people who interact with data assets, own resources, belong to groups, and have roles and permissions within the organization. CorpUsers can represent LDAP users, Active Directory accounts, SSO identities, or native DataHub users.",source:"@site/genDocs/docs/generated/metamodel/entities/corpuser.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/corpuser",permalink:"/docs/generated/metamodel/entities/corpuser",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/corpuser.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"CorpUser",slug:"/generated/metamodel/entities/corpuser",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/corpuser.md"},sidebar:"overviewSidebar",previous:{title:"Notebook",permalink:"/docs/generated/metamodel/entities/notebook"},next:{title:"CorpGroup",permalink:"/docs/generated/metamodel/entities/corpgroup"}},u={},d=[{value:"Identity",id:"identity",level:2},{value:"Examples",id:"examples",level:3},{value:"Username Conventions",id:"username-conventions",level:3},{value:"Important Capabilities",id:"important-capabilities",level:2},{value:"Profile Information",id:"profile-information",level:3},{value:"Editable User Information",id:"editable-user-information",level:3},{value:"User Status",id:"user-status",level:3},{value:"Group Membership",id:"group-membership",level:3},{value:"Role Membership",id:"role-membership",level:3},{value:"Authentication Credentials",id:"authentication-credentials",level:3},{value:"User Settings",id:"user-settings",level:3},{value:"Origin",id:"origin",level:3},{value:"Slack Integration",id:"slack-integration",level:3},{value:"Tags, Structured Properties, and Forms",id:"tags-structured-properties-and-forms",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"Creating a CorpUser",id:"creating-a-corpuser",level:3},{value:"Creating a CorpUser with Group Memberships",id:"creating-a-corpuser-with-group-memberships",level:3},{value:"Updating User Profile Information",id:"updating-user-profile-information",level:3},{value:"Adding Tags to a User",id:"adding-tags-to-a-user",level:3},{value:"Querying Users via REST API",id:"querying-users-via-rest-api",level:3},{value:"Searching for Users",id:"searching-for-users",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Relationships with Other Entities",id:"relationships-with-other-entities",level:3},{value:"Identity Provider Integration",id:"identity-provider-integration",level:3},{value:"Authentication and Authorization",id:"authentication-and-authorization",level:3},{value:"Notable Exceptions",id:"notable-exceptions",level:2},{value:"System Users",id:"system-users",level:3},{value:"Deprecated Active Field",id:"deprecated-active-field",level:3},{value:"Username Immutability",id:"username-immutability",level:3},{value:"Display Name Precedence",id:"display-name-precedence",level:3},{value:"Technical Reference Guide",id:"technical-reference-guide",level:2},{value:"Reading the Field Tables",id:"reading-the-field-tables",level:3},{value:"Aspects",id:"aspects",level:3},{value:"corpUserKey",id:"corpuserkey",level:4},{value:"corpUserInfo",id:"corpuserinfo",level:4},{value:"corpUserEditableInfo",id:"corpusereditableinfo",level:4},{value:"corpUserStatus",id:"corpuserstatus",level:4},{value:"groupMembership",id:"groupmembership",level:4},{value:"globalTags",id:"globaltags",level:4},{value:"status",id:"status",level:4},{value:"corpUserCredentials",id:"corpusercredentials",level:4},{value:"nativeGroupMembership",id:"nativegroupmembership",level:4},{value:"corpUserSettings",id:"corpusersettings",level:4},{value:"origin",id:"origin-1",level:4},{value:"roleMembership",id:"rolemembership",level:4},{value:"structuredProperties",id:"structuredproperties",level:4},{value:"forms",id:"forms",level:4},{value:"testResults",id:"testresults",level:4},{value:"subTypes",id:"subtypes",level:4},{value:"slackUserInfo",id:"slackuserinfo",level:4},{value:"Common Types",id:"common-types",level:3},{value:"AuditStamp",id:"auditstamp",level:4},{value:"FormAssociation",id:"formassociation",level:4},{value:"TestResult",id:"testresult",level:4},{value:"Relationships",id:"relationships",level:3},{value:"Self",id:"self",level:4},{value:"Outgoing",id:"outgoing",level:4},{value:"Incoming",id:"incoming",level:4},{value:"Global Metadata Model",id:"global-metadata-model",level:3}],y={toc:d},c="wrapper";function h(e){var{components:n}=e,t=o(e,["components"]);return(0,a.yg)(c,s(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){i(e,n,t[n])}))}return e}({},y,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"corpuser"},"CorpUser"),(0,a.yg)("p",null,"CorpUser represents an individual user (or account) in the enterprise. These entities serve as the identity layer within DataHub, representing people who interact with data assets, own resources, belong to groups, and have roles and permissions within the organization. CorpUsers can represent LDAP users, Active Directory accounts, SSO identities, or native DataHub users."),(0,a.yg)("h2",{id:"identity"},"Identity"),(0,a.yg)("p",null,"CorpUsers are uniquely identified by a single piece of information:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Username"),": A unique identifier for the user within the organization. This is typically sourced from the corporate identity provider (LDAP, Active Directory, etc.) or can be an email address for native DataHub users.")),(0,a.yg)("p",null,"The URN structure for CorpUser is:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"urn:li:corpuser:<username>\n")),(0,a.yg)("h3",{id:"examples"},"Examples"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"urn:li:corpuser:jdoe\nurn:li:corpuser:john.doe@company.com\nurn:li:corpuser:jdoe@company.com\n")),(0,a.yg)("p",null,"The username is stored in the ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserKey")," aspect, which is the identity aspect for this entity. The username field is marked as searchable and enables autocomplete functionality in the DataHub UI."),(0,a.yg)("h3",{id:"username-conventions"},"Username Conventions"),(0,a.yg)("p",null,"The username can follow various conventions depending on your organization's identity provider:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"LDAP/Active Directory usernames"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"jdoe"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"john.doe"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"john_doe")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Email addresses"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"jdoe@company.com"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"john.doe@company.com")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"SSO identities"),": Depends on your SSO provider's username format"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Native DataHub users"),": Typically email addresses")),(0,a.yg)("p",null,"It's important to maintain consistency in username formats across your DataHub deployment to ensure proper identity resolution and relationship tracking."),(0,a.yg)("h2",{id:"important-capabilities"},"Important Capabilities"),(0,a.yg)("h3",{id:"profile-information"},"Profile Information"),(0,a.yg)("p",null,"The core profile information about a user is stored in the ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserInfo")," aspect. This is typically populated automatically by ingestion connectors from identity providers like LDAP, Active Directory, Azure AD, Okta, or other SSO systems."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"displayName"),": The user's name as it should appear in the UI"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"email"),": Email address for contacting the user"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"title"),': Job title (e.g., "Senior Data Engineer")'),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"firstName")," and ",(0,a.yg)("strong",{parentName:"li"},"lastName"),": Components of the user's name"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"fullName"),': Full name typically formatted as "firstName lastName"'),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"managerUrn"),": URN reference to the user's direct manager (another CorpUser)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"departmentId")," and ",(0,a.yg)("strong",{parentName:"li"},"departmentName"),": Organizational department information"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"countryCode"),': Two-letter country code (e.g., "US", "UK")'),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"active"),": Whether the user account is active (deprecated in favor of ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserStatus"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"system"),": Whether this is a system/service account rather than a human user")),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"managerUrn")," field creates a relationship between users, enabling organizational hierarchy visualization in DataHub."),(0,a.yg)("h3",{id:"editable-user-information"},"Editable User Information"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserEditableInfo")," aspect contains information that users can modify through the DataHub UI, allowing users to enrich their profiles beyond what's provided by the identity provider."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"aboutMe"),": A personal description or bio"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"displayName"),": User-specified display name (overrides the one from corpUserInfo)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"title"),": User-specified title (overrides the one from corpUserInfo)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"teams"),": List of team names the user belongs to (e.g., ",'["Data Platform", "Analytics"]',")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"skills"),": List of skills the user possesses (e.g., ",'["Python", "SQL", "Machine Learning"]',")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"pictureLink"),": URL to a profile picture"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"slack"),": Slack handle for communication"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"phone"),": Contact phone number"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"email"),": Contact email (can differ from the system email)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"platforms"),": URNs of data platforms the user commonly works with"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"persona"),': URN of the user\'s DataHub persona (role-based persona like "Data Analyst")')),(0,a.yg)("h3",{id:"user-status"},"User Status"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserStatus")," aspect tracks the current status of the user account, replacing the deprecated ",(0,a.yg)("inlineCode",{parentName:"p"},"active")," field in ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserInfo"),"."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"status"),': Current status of the user (e.g., "ACTIVE", "SUSPENDED", "PROVISIONED")'),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"lastModified"),": Audit stamp with information about who last modified the status and when")),(0,a.yg)("p",null,"This aspect provides more granular control over user account states compared to the simple boolean ",(0,a.yg)("inlineCode",{parentName:"p"},"active")," field."),(0,a.yg)("h3",{id:"group-membership"},"Group Membership"),(0,a.yg)("p",null,"Users can be members of groups through two different aspects:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"groupMembership"),": Represents membership in CorpGroups that may be managed within DataHub or synchronized from external systems. This creates ",(0,a.yg)("inlineCode",{parentName:"p"},"IsMemberOfGroup")," relationships."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"nativeGroupMembership"),": Represents membership in groups that are native to an external identity provider (like Active Directory groups). This creates ",(0,a.yg)("inlineCode",{parentName:"p"},"IsMemberOfNativeGroup")," relationships."),(0,a.yg)("p",null,"Both aspects store arrays of group URNs, allowing users to belong to multiple groups simultaneously."),(0,a.yg)("h3",{id:"role-membership"},"Role Membership"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"roleMembership")," aspect associates users with DataHub roles, which define their permissions and access within the platform."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"roles"),": Array of DataHubRole URNs that the user is assigned to")),(0,a.yg)("p",null,"This creates ",(0,a.yg)("inlineCode",{parentName:"p"},"IsMemberOfRole")," relationships and is fundamental to DataHub's role-based access control (RBAC) system."),(0,a.yg)("h3",{id:"authentication-credentials"},"Authentication Credentials"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserCredentials")," aspect stores authentication information for native DataHub users (users created directly in DataHub rather than synchronized from an external identity provider)."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"salt"),": Salt used for password hashing"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"hashedPassword"),": The hashed password"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"passwordResetToken"),": Optional token for password reset operations"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"passwordResetTokenExpirationTimeMillis"),": When the reset token expires")),(0,a.yg)("p",null,"This aspect is only used for native authentication and is not populated for users authenticated through SSO or LDAP."),(0,a.yg)("h3",{id:"user-settings"},"User Settings"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserSettings")," aspect stores user-specific preferences for the DataHub UI and features."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"appearance"),": Settings controlling the look and feel of the DataHub UI",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"showSimplifiedHomepage"),": Whether to show a simplified homepage with only datasets, charts, and dashboards"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"showThemeV2"),": Whether to use the V2 theme"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"views"),": Settings for the Views feature",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"defaultView"),": The user's default DataHub view"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"notificationSettings"),": Preferences for notifications"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"homePage"),": Settings for the home page experience",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"pageTemplate"),": The user's default page template"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"dismissedAnnouncementUrns"),": List of announcements the user has dismissed")))),(0,a.yg)("h3",{id:"origin"},"Origin"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"origin")," aspect tracks where the user entity originated from, distinguishing between native DataHub users and those synchronized from external systems."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"type"),': Either "NATIVE" or "EXTERNAL"'),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"externalType"),': Name of the external identity provider (e.g., "AzureAD", "Okta", "LDAP")')),(0,a.yg)("p",null,"This information is useful for understanding the source of truth for user data and managing synchronization processes."),(0,a.yg)("h3",{id:"slack-integration"},"Slack Integration"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"slackUserInfo")," aspect contains detailed information about a user's Slack identity, enabling rich Slack integration features within DataHub."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Key Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"slackInstance"),": URN of the Slack workspace"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"id"),": Unique Slack member ID"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"name"),": Slack username"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"realName"),": Real name in Slack"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"displayName"),": Display name in Slack"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"email"),": Email associated with the Slack account"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"teamId"),": Slack team/workspace ID"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"isDeleted"),", ",(0,a.yg)("strong",{parentName:"li"},"isAdmin"),", ",(0,a.yg)("strong",{parentName:"li"},"isOwner"),", ",(0,a.yg)("strong",{parentName:"li"},"isPrimaryOwner"),", ",(0,a.yg)("strong",{parentName:"li"},"isBot"),": Account status flags"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"timezone")," and ",(0,a.yg)("strong",{parentName:"li"},"timezoneOffset"),": User's timezone information"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"title"),": Job title from Slack"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"phone"),": Phone number from Slack"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"profilePictureUrl"),": URL to Slack profile picture"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"statusText")," and ",(0,a.yg)("strong",{parentName:"li"},"statusEmoji"),": Current Slack status")),(0,a.yg)("h3",{id:"tags-structured-properties-and-forms"},"Tags, Structured Properties, and Forms"),(0,a.yg)("p",null,"Like other DataHub entities, CorpUsers support:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"globalTags"),": Tags attached to the user entity for categorization"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"structuredProperties"),": Custom properties defined by your organization's data model"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"forms"),": Forms that can be attached to users for collecting structured information"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"status"),": Generic status aspect for soft-deletion")),(0,a.yg)("p",null,"These common aspects enable flexible metadata management and integration with DataHub's broader metadata framework."),(0,a.yg)("h2",{id:"code-examples"},"Code Examples"),(0,a.yg)("h3",{id:"creating-a-corpuser"},"Creating a CorpUser"),(0,a.yg)("p",null,"The simplest way to create a CorpUser is using the high-level Python SDK:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Create a basic user"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/corpuser_create_basic.py\n# metadata-ingestion/examples/library/corpuser_create_basic.py\nimport logging\nimport os\n\nfrom datahub.api.entities.corpuser.corpuser import CorpUser\nfrom datahub.ingestion.graph.client import DataHubGraph, DataHubGraphConfig\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\n# Create a basic user with essential information\nuser = CorpUser(\n    id="jdoe",\n    display_name="John Doe",\n    email="jdoe@company.com",\n    title="Senior Data Engineer",\n    first_name="John",\n    last_name="Doe",\n    full_name="John Doe",\n    department_name="Data Engineering",\n    country_code="US",\n)\n\n# Create graph client\ngms_server = os.getenv("DATAHUB_GMS_URL", "http://localhost:8080")\ntoken = os.getenv("DATAHUB_GMS_TOKEN")\ndatahub_graph = DataHubGraph(DataHubGraphConfig(server=gms_server, token=token))\n\n# Emit the user entity\nfor event in user.generate_mcp():\n    datahub_graph.emit(event)\n\nlog.info(f"Created user {user.urn}")\n\n'))),(0,a.yg)("h3",{id:"creating-a-corpuser-with-group-memberships"},"Creating a CorpUser with Group Memberships"),(0,a.yg)("p",null,"Users are often members of groups. Here's how to create a user and assign them to groups:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Create user with group memberships"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/corpuser_create_with_groups.py\n# metadata-ingestion/examples/library/corpuser_create_with_groups.py\nimport logging\n\nfrom datahub.api.entities.corpuser.corpuser import CorpUser\nfrom datahub.ingestion.graph.client import DataHubGraph, DataHubGraphConfig\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\n# Create a user with group memberships\nuser = CorpUser(\n    id="jsmith",\n    display_name="Jane Smith",\n    email="jsmith@company.com",\n    title="Data Analyst",\n    first_name="Jane",\n    last_name="Smith",\n    full_name="Jane Smith",\n    department_name="Analytics",\n    country_code="US",\n    groups=["data-engineering", "analytics-team"],\n)\n\n# Create graph client\ndatahub_graph = DataHubGraph(DataHubGraphConfig(server="http://localhost:8080"))\n\n# Emit the user entity with group memberships\nfor event in user.generate_mcp():\n    datahub_graph.emit(event)\n\nlog.info(f"Created user {user.urn} with group memberships")\n\n'))),(0,a.yg)("h3",{id:"updating-user-profile-information"},"Updating User Profile Information"),(0,a.yg)("p",null,"To update editable profile information for an existing user:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Update user profile"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/corpuser_update_profile.py\n# metadata-ingestion/examples/library/corpuser_update_profile.py\nimport logging\n\nfrom datahub.api.entities.corpuser.corpuser import CorpUser, CorpUserGenerationConfig\nfrom datahub.ingestion.graph.client import DataHubGraph, DataHubGraphConfig\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\n# Update a user\'s editable profile information\nuser = CorpUser(\n    id="jdoe",\n    email="jdoe@company.com",\n    description="Passionate about data quality and building reliable data pipelines. "\n    "10+ years of experience in data engineering.",\n    slack="@jdoe",\n    phone="+1-555-0123",\n    picture_link="https://company.com/photos/jdoe.jpg",\n)\n\n# Create graph client\ndatahub_graph = DataHubGraph(DataHubGraphConfig(server="http://localhost:8080"))\n\n# Emit with override_editable=True to update editable fields\nfor event in user.generate_mcp(\n    generation_config=CorpUserGenerationConfig(override_editable=True)\n):\n    datahub_graph.emit(event)\n\nlog.info(f"Updated profile for user {user.urn}")\n\n'))),(0,a.yg)("h3",{id:"adding-tags-to-a-user"},"Adding Tags to a User"),(0,a.yg)("p",null,"Users can be tagged for categorization and discovery:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Add tags to a user"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/corpuser_add_tag.py\n# metadata-ingestion/examples/library/corpuser_add_tag.py\nimport logging\n\nfrom datahub.emitter.mce_builder import make_tag_urn, make_user_urn\nfrom datahub.emitter.mcp import MetadataChangeProposalWrapper\nfrom datahub.ingestion.graph.client import DataHubGraph, DataHubGraphConfig\nfrom datahub.metadata.schema_classes import GlobalTagsClass, TagAssociationClass\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\n# User to add tag to\nuser_urn = make_user_urn("jdoe")\n\n# Tag to add\ntag_urn = make_tag_urn("DataEngineering")\n\n# Create graph client\ndatahub_graph = DataHubGraph(DataHubGraphConfig(server="http://localhost:8080"))\n\n# Read current tags\ncurrent_tags = datahub_graph.get_aspect(\n    entity_urn=user_urn, aspect_type=GlobalTagsClass\n)\n\n# Initialize tags if they don\'t exist\nif current_tags is None:\n    current_tags = GlobalTagsClass(tags=[])\n\n# Check if tag already exists\ntag_exists = any(tag.tag == tag_urn for tag in current_tags.tags)\n\nif not tag_exists:\n    # Add the new tag\n    new_tag = TagAssociationClass(tag=tag_urn)\n    current_tags.tags.append(new_tag)\n\n    # Create MCP to update the tags\n    mcp = MetadataChangeProposalWrapper(\n        entityUrn=user_urn,\n        aspect=current_tags,\n    )\n\n    # Emit the change\n    datahub_graph.emit(mcp)\n    log.info(f"Added tag {tag_urn} to user {user_urn}")\nelse:\n    log.info(f"Tag {tag_urn} already exists on user {user_urn}")\n\n'))),(0,a.yg)("h3",{id:"querying-users-via-rest-api"},"Querying Users via REST API"),(0,a.yg)("p",null,"You can fetch user information using the REST API:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"REST API: Get user information"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'# Get a user by URN\ncurl -X GET "http://localhost:8080/entities/urn%3Ali%3Acorpuser%3Ajdoe" \\\n  -H "Authorization: Bearer <your-access-token>"\n\n# Get specific aspects of a user\ncurl -X GET "http://localhost:8080/aspects/urn%3Ali%3Acorpuser%3Ajdoe?aspect=corpUserInfo&aspect=corpUserEditableInfo&aspect=groupMembership" \\\n  -H "Authorization: Bearer <your-access-token>"\n'))),(0,a.yg)("h3",{id:"searching-for-users"},"Searching for Users"),(0,a.yg)("p",null,"You can search for users using the GraphQL API or search API:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"GraphQL: Search for users"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-graphql"},'query searchUsers {\n  search(input: { type: CORP_USER, query: "john", start: 0, count: 10 }) {\n    start\n    count\n    total\n    searchResults {\n      entity {\n        ... on CorpUser {\n          urn\n          username\n          properties {\n            displayName\n            email\n            title\n            fullName\n          }\n          editableProperties {\n            aboutMe\n            teams\n            skills\n            slack\n          }\n        }\n      }\n    }\n  }\n}\n'))),(0,a.yg)("h2",{id:"integration-points"},"Integration Points"),(0,a.yg)("h3",{id:"relationships-with-other-entities"},"Relationships with Other Entities"),(0,a.yg)("p",null,"CorpUsers have several important relationships with other DataHub entities:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Ownership Relationships:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"CorpUsers can be owners of datasets, dashboards, charts, data flows, and virtually any other entity in DataHub"),(0,a.yg)("li",{parentName:"ul"},"The ownership relationship includes the owner type (e.g., DATAOWNER, TECHNICAL_OWNER, BUSINESS_OWNER)")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Group Relationships:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Users belong to CorpGroups through ",(0,a.yg)("inlineCode",{parentName:"li"},"IsMemberOfGroup")," relationships"),(0,a.yg)("li",{parentName:"ul"},"Groups can also be owners of assets, providing inherited ownership")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Role Relationships:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Users are assigned to DataHub roles through ",(0,a.yg)("inlineCode",{parentName:"li"},"IsMemberOfRole")," relationships"),(0,a.yg)("li",{parentName:"ul"},"Roles define permissions and access levels within DataHub")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Organizational Hierarchy:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("inlineCode",{parentName:"li"},"managerUrn")," field in ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserInfo")," creates ",(0,a.yg)("inlineCode",{parentName:"li"},"ReportsTo")," relationships"),(0,a.yg)("li",{parentName:"ul"},"This enables visualization of organizational structure and reporting chains")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Platform Usage:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("inlineCode",{parentName:"li"},"platforms")," field in ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserEditableInfo")," creates ",(0,a.yg)("inlineCode",{parentName:"li"},"IsUserOf")," relationships"),(0,a.yg)("li",{parentName:"ul"},"This helps identify which platforms users commonly work with")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Persona Assignment:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Users can be assigned to DataHub personas through the ",(0,a.yg)("inlineCode",{parentName:"li"},"persona")," field"),(0,a.yg)("li",{parentName:"ul"},"This helps categorize users by their role and customize their experience")),(0,a.yg)("h3",{id:"identity-provider-integration"},"Identity Provider Integration"),(0,a.yg)("p",null,"CorpUsers are typically synchronized from external identity providers:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"LDAP/Active Directory:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Most organizations use LDAP connectors to automatically synchronize user information"),(0,a.yg)("li",{parentName:"ul"},"The username typically corresponds to the LDAP ",(0,a.yg)("inlineCode",{parentName:"li"},"uid")," or ",(0,a.yg)("inlineCode",{parentName:"li"},"sAMAccountName")),(0,a.yg)("li",{parentName:"ul"},"Profile information is populated from LDAP attributes")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"SSO Providers (Okta, Azure AD, etc.):")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"SSO integrations can provision users automatically on first login"),(0,a.yg)("li",{parentName:"ul"},"User attributes from the SSO provider populate the ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserInfo")," aspect"),(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("inlineCode",{parentName:"li"},"origin")," aspect tracks the SSO provider as the source")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Native DataHub Users:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Users can be created directly in DataHub for testing or small deployments"),(0,a.yg)("li",{parentName:"ul"},"These users have credentials stored in the ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserCredentials")," aspect"),(0,a.yg)("li",{parentName:"ul"},"They are marked with ",(0,a.yg)("inlineCode",{parentName:"li"},"origin.type = NATIVE"))),(0,a.yg)("h3",{id:"authentication-and-authorization"},"Authentication and Authorization"),(0,a.yg)("p",null,"CorpUsers are central to DataHub's security model:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Authentication:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Native users authenticate with username/password"),(0,a.yg)("li",{parentName:"ul"},"SSO users authenticate through their identity provider"),(0,a.yg)("li",{parentName:"ul"},"API tokens can be associated with users for programmatic access")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Authorization (RBAC):")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Users are assigned to roles through the ",(0,a.yg)("inlineCode",{parentName:"li"},"roleMembership")," aspect"),(0,a.yg)("li",{parentName:"ul"},"Roles define what actions users can perform"),(0,a.yg)("li",{parentName:"ul"},"Policies can reference users or groups to grant/restrict access")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Metadata Access:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Users can only see metadata they have permission to view"),(0,a.yg)("li",{parentName:"ul"},"Ownership and group membership influence what users can edit"),(0,a.yg)("li",{parentName:"ul"},"Policies can be user-specific or group-based")),(0,a.yg)("h2",{id:"notable-exceptions"},"Notable Exceptions"),(0,a.yg)("h3",{id:"system-users"},"System Users"),(0,a.yg)("p",null,"CorpUsers can represent both human users and system/service accounts. The ",(0,a.yg)("inlineCode",{parentName:"p"},"system")," field in ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserInfo")," distinguishes between these:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Human Users")," (",(0,a.yg)("inlineCode",{parentName:"li"},"system: false"),"): Actual people who interact with DataHub"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"System Accounts")," (",(0,a.yg)("inlineCode",{parentName:"li"},"system: true"),"): Service accounts, automated processes, or system-level operations")),(0,a.yg)("p",null,"System users should be marked appropriately to distinguish them in reports, ownership lists, and access reviews."),(0,a.yg)("h3",{id:"deprecated-active-field"},"Deprecated Active Field"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"active")," field in ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserInfo")," is deprecated. Use the ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserStatus")," aspect instead, which provides:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"More granular status options beyond just active/inactive"),(0,a.yg)("li",{parentName:"ul"},"Audit information about status changes"),(0,a.yg)("li",{parentName:"ul"},"Better support for provisioning workflows")),(0,a.yg)("p",null,"When working with users, prefer checking ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserStatus.status")," over ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserInfo.active"),"."),(0,a.yg)("h3",{id:"username-immutability"},"Username Immutability"),(0,a.yg)("p",null,"The username (in ",(0,a.yg)("inlineCode",{parentName:"p"},"corpUserKey"),") is immutable once a user is created. If a user's username changes in the source system:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"A new CorpUser entity must be created with the new username"),(0,a.yg)("li",{parentName:"ul"},"Ownership and other relationships need to be migrated to the new entity"),(0,a.yg)("li",{parentName:"ul"},"The old user can be soft-deleted using the ",(0,a.yg)("inlineCode",{parentName:"li"},"status")," aspect")),(0,a.yg)("p",null,"Plan your username strategy carefully to avoid frequent username changes."),(0,a.yg)("h3",{id:"display-name-precedence"},"Display Name Precedence"),(0,a.yg)("p",null,"Display names can appear in multiple aspects with this precedence:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"corpUserEditableInfo.displayName")," (user-specified, highest priority)"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"corpUserInfo.displayName")," (from identity provider)"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"corpUserInfo.fullName")," (fallback if no display name is set)")),(0,a.yg)("p",null,"The DataHub UI resolves these in order, showing the most specific value available."),(0,a.yg)("h2",{id:"technical-reference-guide"},"Technical Reference Guide"),(0,a.yg)("p",null,"The sections above provide an overview of how to use this entity. The following sections provide detailed technical information about how metadata is stored and represented in DataHub."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Aspects")," are the individual pieces of metadata that can be attached to an entity. Each aspect contains specific information (like ownership, tags, or properties) and is stored as a separate record, allowing for flexible and incremental metadata updates."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Relationships")," show how this entity connects to other entities in the metadata graph. These connections are derived from the fields within each aspect and form the foundation of DataHub's knowledge graph."),(0,a.yg)("h3",{id:"reading-the-field-tables"},"Reading the Field Tables"),(0,a.yg)("p",null,"Each aspect's field table includes an ",(0,a.yg)("strong",{parentName:"p"},"Annotations")," column that provides additional metadata about how fields are used:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"\u26a0\ufe0f Deprecated"),": This field is deprecated and may be removed in a future version. Check the description for the recommended alternative"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Searchable"),": This field is indexed and can be searched in DataHub's search interface"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Searchable (fieldname)"),": When the field name in parentheses is shown, it indicates the field is indexed under a different name in the search index. For example, ",(0,a.yg)("inlineCode",{parentName:"li"},"dashboardTool")," is indexed as ",(0,a.yg)("inlineCode",{parentName:"li"},"tool")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"\u2192 RelationshipName"),": This field creates a relationship to another entity. The arrow indicates this field contains a reference (URN) to another entity, and the name indicates the type of relationship (e.g., ",(0,a.yg)("inlineCode",{parentName:"li"},"\u2192 Contains"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"\u2192 OwnedBy"),")")),(0,a.yg)("p",null,"Fields with complex types (like ",(0,a.yg)("inlineCode",{parentName:"p"},"Edge"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"AuditStamp"),") link to their definitions in the ",(0,a.yg)("a",{parentName:"p",href:"#common-types"},"Common Types")," section below."),(0,a.yg)("h3",{id:"aspects"},"Aspects"),(0,a.yg)("h4",{id:"corpuserkey"},"corpUserKey"),(0,a.yg)("p",null,"Key for a CorpUser"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"username"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The name of the AD/LDAP user."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable (ldap)"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "corpUserKey"\n  },\n  "name": "CorpUserKey",\n  "namespace": "com.linkedin.metadata.key",\n  "fields": [\n    {\n      "Searchable": {\n        "boostScore": 2.0,\n        "enableAutocomplete": true,\n        "fieldName": "ldap",\n        "fieldType": "WORD_GRAM"\n      },\n      "type": "string",\n      "name": "username",\n      "doc": "The name of the AD/LDAP user."\n    }\n  ],\n  "doc": "Key for a CorpUser"\n}\n')))),(0,a.yg)("h4",{id:"corpuserinfo"},"corpUserInfo"),(0,a.yg)("p",null,"Linkedin corp user information"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"customProperties"),(0,a.yg)("td",{parentName:"tr",align:null},"map"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"active"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Deprecated! Use CorpUserStatus instead. Whether the corpUser is active, ref: ",(0,a.yg)("a",{parentName:"td",href:"https://iwww.corp.li"},"https://iwww.corp.li"),"..."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"displayName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"displayName of this user ,  e.g.  Hang Zhang(DataHQ)"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"email"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"email address of this user"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"title"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"title of this user"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"managerUrn"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"direct manager of this user"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable (managerLdap), \u2192 ReportsTo")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"departmentId"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"department id this user belong to"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"departmentName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"department name this user belong to"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"firstName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"first name of this user"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"lastName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"last name of this user"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"fullName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Common name of this user, format is firstName + lastName (split by a whitespace)"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"countryCode"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"two uppercase letters country code. e.g.  US"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"system"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the corpUser is a system user."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "EntityUrns": [\n      "com.linkedin.common.CorpuserUrn"\n    ],\n    "name": "corpUserInfo"\n  },\n  "name": "CorpUserInfo",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "TEXT",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "map",\n        "values": "string"\n      },\n      "name": "customProperties",\n      "default": {},\n      "doc": "Custom property bag."\n    },\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN",\n        "weightsPerFieldValue": {\n          "true": 2.0\n        }\n      },\n      "type": "boolean",\n      "name": "active",\n      "doc": "Deprecated! Use CorpUserStatus instead. Whether the corpUser is active, ref: https://iwww.corp.linkedin.com/wiki/cf/display/GTSD/Accessing+Active+Directory+via+LDAP+tools"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldNameAliases": [\n          "_entityName"\n        ],\n        "fieldType": "WORD_GRAM",\n        "queryByDefault": true\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "displayName",\n      "default": null,\n      "doc": "displayName of this user ,  e.g.  Hang Zhang(DataHQ)"\n    },\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD",\n        "queryByDefault": true\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "email",\n      "default": null,\n      "doc": "email address of this user"\n    },\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD",\n        "queryByDefault": true\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "title",\n      "default": null,\n      "doc": "title of this user"\n    },\n    {\n      "Relationship": {\n        "entityTypes": [\n          "corpuser"\n        ],\n        "name": "ReportsTo"\n      },\n      "Searchable": {\n        "fieldName": "managerLdap",\n        "fieldType": "URN",\n        "queryByDefault": false\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.CorpuserUrn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "managerUrn",\n      "default": null,\n      "doc": "direct manager of this user"\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "departmentId",\n      "default": null,\n      "doc": "department id this user belong to"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "departmentName",\n      "default": null,\n      "doc": "department name this user belong to"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "firstName",\n      "default": null,\n      "doc": "first name of this user"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "lastName",\n      "default": null,\n      "doc": "last name of this user"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldType": "WORD_GRAM",\n        "queryByDefault": true\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "fullName",\n      "default": null,\n      "doc": "Common name of this user, format is firstName + lastName (split by a whitespace)"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "countryCode",\n      "default": null,\n      "doc": "two uppercase letters country code. e.g.  US"\n    },\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN",\n        "queryByDefault": false\n      },\n      "type": [\n        "boolean",\n        "null"\n      ],\n      "name": "system",\n      "default": false,\n      "doc": "Whether the corpUser is a system user."\n    }\n  ],\n  "doc": "Linkedin corp user information"\n}\n')))),(0,a.yg)("h4",{id:"corpusereditableinfo"},"corpUserEditableInfo"),(0,a.yg)("p",null,"Linkedin corp user information that can be edited from UI"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"aboutMe"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"About me section of the user"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"teams"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Teams that the user belongs to e.g. Metadata"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"skills"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Skills that the user possesses e.g. Machine Learning"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"pictureLink"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"A URL which points to a picture which user wants to set as a profile photo"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"displayName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"DataHub-native display name"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"title"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"DataHub-native Title, e.g. 'Software Engineer'"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"platforms"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The platforms that the user commonly works with"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2192 IsUserOf")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"persona"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The user's persona type, based on their role"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2192 IsPersona")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"slack"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Slack handle for the user"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"phone"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Phone number to contact the user"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"email"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Email address to contact the user"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"informationSources"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Information sources that have been used to populate this CorpUserEditableInfo. These include plat..."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "EntityUrns": [\n      "com.linkedin.common.CorpuserUrn"\n    ],\n    "name": "corpUserEditableInfo"\n  },\n  "name": "CorpUserEditableInfo",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "aboutMe",\n      "default": null,\n      "doc": "About me section of the user"\n    },\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "TEXT"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "teams",\n      "default": [],\n      "doc": "Teams that the user belongs to e.g. Metadata"\n    },\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "TEXT"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "skills",\n      "default": [],\n      "doc": "Skills that the user possesses e.g. Machine Learning"\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": "string",\n      "name": "pictureLink",\n      "default": "assets/platforms/default_avatar.png",\n      "doc": "A URL which points to a picture which user wants to set as a profile photo"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "fieldType": "WORD_GRAM",\n        "queryByDefault": true\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "displayName",\n      "default": null,\n      "doc": "DataHub-native display name"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "title",\n      "default": null,\n      "doc": "DataHub-native Title, e.g. \'Software Engineer\'"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataPlatform"\n          ],\n          "name": "IsUserOf"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "platforms",\n      "default": null,\n      "doc": "The platforms that the user commonly works with"\n    },\n    {\n      "Relationship": {\n        "entityTypes": [\n          "dataHubPersona"\n        ],\n        "name": "IsPersona"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "persona",\n      "default": null,\n      "doc": "The user\'s persona type, based on their role"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "slack",\n      "default": null,\n      "doc": "Slack handle for the user"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "phone",\n      "default": null,\n      "doc": "Phone number to contact the user"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "email",\n      "default": null,\n      "doc": "Email address to contact the user"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "informationSources",\n      "default": null,\n      "doc": "Information sources that have been used to populate this CorpUserEditableInfo.\\nThese include platform resources, such as Slack members or Looker users.\\nThey can also refer to other semantic urns in the future."\n    }\n  ],\n  "doc": "Linkedin corp user information that can be edited from UI"\n}\n')))),(0,a.yg)("h4",{id:"corpuserstatus"},"corpUserStatus"),(0,a.yg)("p",null,"The status of the user, e.g. provisioned, active, suspended, etc."),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"status"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Status of the user, e.g. PROVISIONED / ACTIVE / SUSPENDED"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who last modified the status and when."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "corpUserStatus"\n  },\n  "name": "CorpUserStatus",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD"\n      },\n      "type": "string",\n      "name": "status",\n      "doc": "Status of the user, e.g. PROVISIONED / ACTIVE / SUSPENDED"\n    },\n    {\n      "Searchable": {\n        "/time": {\n          "fieldName": "statusLastModifiedAt",\n          "fieldType": "COUNT"\n        }\n      },\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "lastModified",\n      "doc": "Audit stamp containing who last modified the status and when."\n    }\n  ],\n  "doc": "The status of the user, e.g. provisioned, active, suspended, etc."\n}\n')))),(0,a.yg)("h4",{id:"groupmembership"},"groupMembership"),(0,a.yg)("p",null,"Carries information about the CorpGroups a user is in."),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"groups"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"\u2192 IsMemberOfGroup"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "groupMembership"\n  },\n  "name": "GroupMembership",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "corpGroup"\n          ],\n          "name": "IsMemberOfGroup"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "groups"\n    }\n  ],\n  "doc": "Carries information about the CorpGroups a user is in."\n}\n')))),(0,a.yg)("h4",{id:"globaltags"},"globalTags"),(0,a.yg)("p",null,"Tag aspect used for applying tags to an entity"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"tags"),(0,a.yg)("td",{parentName:"tr",align:null},"TagAssociation[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Tags associated with a given entity"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 TaggedWith"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "globalTags"\n  },\n  "name": "GlobalTags",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/tag": {\n          "entityTypes": [\n            "tag"\n          ],\n          "name": "TaggedWith"\n        }\n      },\n      "Searchable": {\n        "/*/tag": {\n          "addToFilters": true,\n          "boostScore": 0.5,\n          "fieldName": "tags",\n          "fieldType": "URN",\n          "filterNameOverride": "Tag",\n          "hasValuesFieldName": "hasTags",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TagAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.TagUrn"\n              },\n              "type": "string",\n              "name": "tag",\n              "doc": "Urn of the applied tag"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "tagAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "tagAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "tagAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters."\n        }\n      },\n      "name": "tags",\n      "doc": "Tags associated with a given entity"\n    }\n  ],\n  "doc": "Tag aspect used for applying tags to an entity"\n}\n')))),(0,a.yg)("h4",{id:"status"},"status"),(0,a.yg)("p",null,"The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally."),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"removed"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the entity has been removed (soft-deleted)."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "status"\n  },\n  "name": "Status",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN"\n      },\n      "type": "boolean",\n      "name": "removed",\n      "default": false,\n      "doc": "Whether the entity has been removed (soft-deleted)."\n    }\n  ],\n  "doc": "The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\\nThis aspect is used to represent soft deletes conventionally."\n}\n')))),(0,a.yg)("h4",{id:"corpusercredentials"},"corpUserCredentials"),(0,a.yg)("p",null,"Corp user credentials"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"salt"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Salt used to hash password"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"hashedPassword"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Hashed password generated by concatenating salt and password, then hashing"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"passwordResetToken"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Optional token needed to reset a user's password. Can only be set by the admin."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"passwordResetTokenExpirationTimeMillis"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"When the password reset token expires."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "EntityUrns": [\n      "com.linkedin.common.CorpuserUrn"\n    ],\n    "name": "corpUserCredentials"\n  },\n  "name": "CorpUserCredentials",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "type": "string",\n      "name": "salt",\n      "doc": "Salt used to hash password"\n    },\n    {\n      "type": "string",\n      "name": "hashedPassword",\n      "doc": "Hashed password generated by concatenating salt and password, then hashing"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "passwordResetToken",\n      "default": null,\n      "doc": "Optional token needed to reset a user\'s password. Can only be set by the admin."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "passwordResetTokenExpirationTimeMillis",\n      "default": null,\n      "doc": "When the password reset token expires."\n    }\n  ],\n  "doc": "Corp user credentials"\n}\n')))),(0,a.yg)("h4",{id:"nativegroupmembership"},"nativeGroupMembership"),(0,a.yg)("p",null,"Carries information about the native CorpGroups a user is in."),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"nativeGroups"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"\u2192 IsMemberOfNativeGroup"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "nativeGroupMembership"\n  },\n  "name": "NativeGroupMembership",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "corpGroup"\n          ],\n          "name": "IsMemberOfNativeGroup"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "nativeGroups"\n    }\n  ],\n  "doc": "Carries information about the native CorpGroups a user is in."\n}\n')))),(0,a.yg)("h4",{id:"corpusersettings"},"corpUserSettings"),(0,a.yg)("p",null,"Settings that a user can customize through the datahub ui"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"appearance"),(0,a.yg)("td",{parentName:"tr",align:null},"CorpUserAppearanceSettings"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Settings for a user around the appearance of their DataHub U"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"views"),(0,a.yg)("td",{parentName:"tr",align:null},"CorpUserViewsSettings"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"User preferences for the Views feature."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"notificationSettings"),(0,a.yg)("td",{parentName:"tr",align:null},"NotificationSettings"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Notification settings for a user"),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"homePage"),(0,a.yg)("td",{parentName:"tr",align:null},"CorpUserHomePageSettings"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Settings related to the home page for a user"),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "corpUserSettings"\n  },\n  "name": "CorpUserSettings",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "type": {\n        "type": "record",\n        "name": "CorpUserAppearanceSettings",\n        "namespace": "com.linkedin.identity",\n        "fields": [\n          {\n            "type": [\n              "null",\n              "boolean"\n            ],\n            "name": "showSimplifiedHomepage",\n            "default": null,\n            "doc": "Flag whether the user should see a homepage with only datasets, charts and dashboards. Intended for users\\nwho have less operational use cases for the datahub tool."\n          },\n          {\n            "type": [\n              "null",\n              "boolean"\n            ],\n            "name": "showThemeV2",\n            "default": null,\n            "doc": "Flag controlling whether the V2 UI for DataHub is shown."\n          }\n        ],\n        "doc": "Settings for a user around the appearance of their DataHub UI"\n      },\n      "name": "appearance",\n      "doc": "Settings for a user around the appearance of their DataHub U"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "CorpUserViewsSettings",\n          "namespace": "com.linkedin.identity",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "defaultView",\n              "default": null,\n              "doc": "The default View which is selected for the user.\\nIf none is chosen, then this value will be left blank."\n            }\n          ],\n          "doc": "Settings related to the \'Views\' feature."\n        }\n      ],\n      "name": "views",\n      "default": null,\n      "doc": "User preferences for the Views feature."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "NotificationSettings",\n          "namespace": "com.linkedin.event.notification.settings",\n          "fields": [\n            {\n              "type": {\n                "type": "array",\n                "items": {\n                  "type": "enum",\n                  "symbolDocs": {\n                    "EMAIL": "Email target type.",\n                    "SLACK": "Slack target type."\n                  },\n                  "name": "NotificationSinkType",\n                  "namespace": "com.linkedin.event.notification",\n                  "symbols": [\n                    "SLACK",\n                    "EMAIL"\n                  ],\n                  "doc": "A type of sink / platform to send a notification to."\n                }\n              },\n              "name": "sinkTypes",\n              "doc": "Sink types that notifications are sent to."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "SlackNotificationSettings",\n                  "namespace": "com.linkedin.event.notification.settings",\n                  "fields": [\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "userHandle",\n                      "default": null,\n                      "doc": "Optional user handle"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        {\n                          "type": "array",\n                          "items": "string"\n                        }\n                      ],\n                      "name": "channels",\n                      "default": null,\n                      "doc": "Optional list of channels to send notifications to"\n                    }\n                  ],\n                  "doc": "Slack Notification settings for an actor."\n                }\n              ],\n              "name": "slackSettings",\n              "default": null,\n              "doc": "Slack Notification Settings"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "EmailNotificationSettings",\n                  "namespace": "com.linkedin.event.notification.settings",\n                  "fields": [\n                    {\n                      "type": "string",\n                      "name": "email",\n                      "doc": "Optional user or group email address"\n                    }\n                  ],\n                  "doc": "Email Notification settings for an actor."\n                }\n              ],\n              "name": "emailSettings",\n              "default": null,\n              "doc": "Email Notification Settings"\n            }\n          ],\n          "doc": "Notification settings for an actor or subscription."\n        }\n      ],\n      "name": "notificationSettings",\n      "default": null,\n      "doc": "Notification settings for a user"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "CorpUserHomePageSettings",\n          "namespace": "com.linkedin.identity",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "dataHubPageTemplate"\n                ],\n                "name": "HasPersonalPageTemplate"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "pageTemplate",\n              "default": null,\n              "doc": "The page template that will be rendered in the UI by default for this user"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "array",\n                  "items": "string"\n                }\n              ],\n              "name": "dismissedAnnouncements",\n              "default": null,\n              "doc": "The list of announcement urns that have been dismissed by the user"\n            }\n          ],\n          "doc": "Settings related to the home page for a user"\n        }\n      ],\n      "name": "homePage",\n      "default": null,\n      "doc": "Settings related to the home page for a user"\n    }\n  ],\n  "doc": "Settings that a user can customize through the datahub ui"\n}\n')))),(0,a.yg)("h4",{id:"origin-1"},"origin"),(0,a.yg)("p",null,"Carries information about where an entity originated from."),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"type"),(0,a.yg)("td",{parentName:"tr",align:null},"OriginType"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Where an entity originated from. Either NATIVE or EXTERNAL."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"externalType"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Only populated if type is EXTERNAL. The externalType of the entity, such as the name of the ident..."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "origin"\n  },\n  "name": "Origin",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "enum",\n        "symbolDocs": {\n          "EXTERNAL": "The entity is external to DataHub.",\n          "NATIVE": "The entity is native to DataHub."\n        },\n        "name": "OriginType",\n        "namespace": "com.linkedin.common",\n        "symbols": [\n          "NATIVE",\n          "EXTERNAL"\n        ],\n        "doc": "Enum to define where an entity originated from."\n      },\n      "name": "type",\n      "doc": "Where an entity originated from. Either NATIVE or EXTERNAL."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "externalType",\n      "default": null,\n      "doc": "Only populated if type is EXTERNAL. The externalType of the entity, such as the name of the identity provider."\n    }\n  ],\n  "doc": "Carries information about where an entity originated from."\n}\n')))),(0,a.yg)("h4",{id:"rolemembership"},"roleMembership"),(0,a.yg)("p",null,"Carries information about which roles a user or group is assigned to."),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"roles"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"\u2192 IsMemberOfRole"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "roleMembership"\n  },\n  "name": "RoleMembership",\n  "namespace": "com.linkedin.identity",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataHubRole"\n          ],\n          "name": "IsMemberOfRole"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "roles"\n    }\n  ],\n  "doc": "Carries information about which roles a user or group is assigned to."\n}\n')))),(0,a.yg)("h4",{id:"structuredproperties"},"structuredProperties"),(0,a.yg)("p",null,"Properties about an entity governed by StructuredPropertyDefinition"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"properties"),(0,a.yg)("td",{parentName:"tr",align:null},"StructuredPropertyValueAssignment[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "structuredProperties"\n  },\n  "name": "StructuredProperties",\n  "namespace": "com.linkedin.structured",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "StructuredPropertyValueAssignment",\n          "namespace": "com.linkedin.structured",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "propertyUrn",\n              "doc": "The property that is being assigned a value."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": [\n                  "string",\n                  "double"\n                ]\n              },\n              "name": "values",\n              "doc": "The value assigned to the property."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "created",\n              "default": null,\n              "doc": "Audit stamp containing who created this relationship edge and when"\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "Audit stamp containing who last modified this relationship edge and when"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "structuredPropertyAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "structuredPropertyAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "structuredPropertyAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ]\n        }\n      },\n      "name": "properties",\n      "doc": "Custom property bag."\n    }\n  ],\n  "doc": "Properties about an entity governed by StructuredPropertyDefinition"\n}\n')))),(0,a.yg)("h4",{id:"forms"},"forms"),(0,a.yg)("p",null,"Forms that are assigned to this entity to be filled out"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"incompleteForms"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"All incomplete forms assigned to the entity."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"completedForms"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"All complete forms assigned to the entity."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"verifications"),(0,a.yg)("td",{parentName:"tr",align:null},"FormVerificationAssociation[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Verifications that have been applied to the entity via completed forms."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "forms"\n  },\n  "name": "Forms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "incompleteFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "incompleteFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "incompleteFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "incompleteForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied form"\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": {\n                  "type": "record",\n                  "name": "FormPromptAssociation",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "string",\n                      "name": "id",\n                      "doc": "The id for the prompt. This must be GLOBALLY UNIQUE."\n                    },\n                    {\n                      "type": {\n                        "type": "record",\n                        "name": "AuditStamp",\n                        "namespace": "com.linkedin.common",\n                        "fields": [\n                          {\n                            "type": "long",\n                            "name": "time",\n                            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": "string",\n                            "name": "actor",\n                            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "impersonator",\n                            "default": null,\n                            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                          },\n                          {\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "message",\n                            "default": null,\n                            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                          }\n                        ],\n                        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                      },\n                      "name": "lastModified",\n                      "doc": "The last time this prompt was touched for the entity (set, unset)"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        {\n                          "type": "record",\n                          "name": "FormPromptFieldAssociations",\n                          "namespace": "com.linkedin.common",\n                          "fields": [\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": {\n                                    "type": "record",\n                                    "name": "FieldFormPromptAssociation",\n                                    "namespace": "com.linkedin.common",\n                                    "fields": [\n                                      {\n                                        "type": "string",\n                                        "name": "fieldPath",\n                                        "doc": "The field path on a schema field."\n                                      },\n                                      {\n                                        "type": "com.linkedin.common.AuditStamp",\n                                        "name": "lastModified",\n                                        "doc": "The last time this prompt was touched for the field on the entity (set, unset)"\n                                      }\n                                    ],\n                                    "doc": "Information about the status of a particular prompt for a specific schema field\\non an entity."\n                                  }\n                                }\n                              ],\n                              "name": "completedFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are not yet complete for this form."\n                            },\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": "com.linkedin.common.FieldFormPromptAssociation"\n                                }\n                              ],\n                              "name": "incompleteFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are complete for this form."\n                            }\n                          ],\n                          "doc": "Information about the field-level prompt associations on a top-level prompt association."\n                        }\n                      ],\n                      "name": "fieldAssociations",\n                      "default": null,\n                      "doc": "Optional information about the field-level prompt associations."\n                    }\n                  ],\n                  "doc": "Information about the status of a particular prompt.\\nNote that this is where we can add additional information about individual responses:\\nactor, timestamp, and the response itself."\n                }\n              },\n              "name": "incompletePrompts",\n              "default": [],\n              "doc": "A list of prompts that are not yet complete for this form."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": "com.linkedin.common.FormPromptAssociation"\n              },\n              "name": "completedPrompts",\n              "default": [],\n              "doc": "A list of prompts that have been completed for this form."\n            }\n          ],\n          "doc": "Properties of an applied form."\n        }\n      },\n      "name": "incompleteForms",\n      "doc": "All incomplete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "completedFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "completedFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "completedFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "completedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.FormAssociation"\n      },\n      "name": "completedForms",\n      "doc": "All complete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/form": {\n          "fieldName": "verifiedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormVerificationAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "form",\n              "doc": "The urn of the form that granted this verification."\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "An audit stamp capturing who and when verification was applied for this form."\n            }\n          ],\n          "doc": "An association between a verification and an entity that has been granted\\nvia completion of one or more forms of type \'VERIFICATION\'."\n        }\n      },\n      "name": "verifications",\n      "default": [],\n      "doc": "Verifications that have been applied to the entity via completed forms."\n    }\n  ],\n  "doc": "Forms that are assigned to this entity to be filled out"\n}\n')))),(0,a.yg)("h4",{id:"testresults"},"testResults"),(0,a.yg)("p",null,"Information about a Test Result"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"failing"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Results that are failing"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsFailing")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"passing"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Results that are passing"),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsPassing"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "testResults"\n  },\n  "name": "TestResults",\n  "namespace": "com.linkedin.test",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsFailing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "failingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasFailingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TestResult",\n          "namespace": "com.linkedin.test",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "test",\n              "doc": "The urn of the test"\n            },\n            {\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "FAILURE": " The Test Failed",\n                  "SUCCESS": " The Test Succeeded"\n                },\n                "name": "TestResultType",\n                "namespace": "com.linkedin.test",\n                "symbols": [\n                  "SUCCESS",\n                  "FAILURE"\n                ]\n              },\n              "name": "type",\n              "doc": "The type of the result"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "testDefinitionMd5",\n              "default": null,\n              "doc": "The md5 of the test definition that was used to compute this result.\\nSee TestInfo.testDefinition.md5 for more information."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "lastComputed",\n              "default": null,\n              "doc": "The audit stamp of when the result was computed, including the actor who computed it."\n            }\n          ],\n          "doc": "Information about a Test Result"\n        }\n      },\n      "name": "failing",\n      "doc": "Results that are failing"\n    },\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsPassing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "passingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasPassingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.test.TestResult"\n      },\n      "name": "passing",\n      "doc": "Results that are passing"\n    }\n  ],\n  "doc": "Information about a Test Result"\n}\n')))),(0,a.yg)("h4",{id:"subtypes"},"subTypes"),(0,a.yg)("p",null,"Sub Types. Use this aspect to specialize a generic Entity\ne.g. Making a Dataset also be a View or also be a LookerExplore"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"typeNames"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The names of the specific types."),(0,a.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "subTypes"\n  },\n  "name": "SubTypes",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldType": "KEYWORD",\n          "filterNameOverride": "Sub Type",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "typeNames",\n      "doc": "The names of the specific types."\n    }\n  ],\n  "doc": "Sub Types. Use this aspect to specialize a generic Entity\\ne.g. Making a Dataset also be a View or also be a LookerExplore"\n}\n')))),(0,a.yg)("h4",{id:"slackuserinfo"},"slackUserInfo"),(0,a.yg)("p",null,"Information about a Slack user."),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(l.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"slackInstance"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The dataplatform instance that this Slack member belongs to."),(0,a.yg)("td",{parentName:"tr",align:null},"\u2192 PartOfSlackWorkspace")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"id"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The unique identifier for the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"name"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The username of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"realName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The real name of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"displayName"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The display name of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"email"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The email associated with the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"teamId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"The ID associated with the Slack team."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"isDeleted"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the member is deleted or not."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"isAdmin"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the member is an admin."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"isOwner"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the member is an owner."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"isPrimaryOwner"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the member is a primary owner."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"isBot"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether the member is a bot."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"timezone"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The timezone of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"timezoneOffset"),(0,a.yg)("td",{parentName:"tr",align:null},"int"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The timezone offset of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"title"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The title of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"phone"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The phone number of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"profilePictureUrl"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The URL of the member's profile picture."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"statusText"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The status text of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"statusEmoji"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The status emoji of the Slack member."),(0,a.yg)("td",{parentName:"tr",align:null})),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"lastUpdatedSeconds"),(0,a.yg)("td",{parentName:"tr",align:null},"long"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"The timestamp of when the member was last updated. (in seconds)"),(0,a.yg)("td",{parentName:"tr",align:null}))))),(0,a.yg)(l.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "slackUserInfo"\n  },\n  "name": "SlackUserInfo",\n  "namespace": "com.linkedin.dataplatform.slack",\n  "fields": [\n    {\n      "Relationship": {\n        "entityTypes": [\n          "dataPlatformInstance"\n        ],\n        "name": "PartOfSlackWorkspace"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "slackInstance",\n      "doc": "The dataplatform instance that this Slack member belongs to."\n    },\n    {\n      "type": "string",\n      "name": "id",\n      "doc": "The unique identifier for the Slack member."\n    },\n    {\n      "type": "string",\n      "name": "name",\n      "doc": "The username of the Slack member."\n    },\n    {\n      "type": "string",\n      "name": "realName",\n      "doc": "The real name of the Slack member."\n    },\n    {\n      "type": "string",\n      "name": "displayName",\n      "doc": "The display name of the Slack member."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "email",\n      "default": null,\n      "doc": "The email associated with the Slack member."\n    },\n    {\n      "type": "string",\n      "name": "teamId",\n      "doc": "The ID associated with the Slack team."\n    },\n    {\n      "type": "boolean",\n      "name": "isDeleted",\n      "doc": "Whether the member is deleted or not."\n    },\n    {\n      "type": "boolean",\n      "name": "isAdmin",\n      "doc": "Whether the member is an admin."\n    },\n    {\n      "type": "boolean",\n      "name": "isOwner",\n      "doc": "Whether the member is an owner."\n    },\n    {\n      "type": "boolean",\n      "name": "isPrimaryOwner",\n      "doc": "Whether the member is a primary owner."\n    },\n    {\n      "type": "boolean",\n      "name": "isBot",\n      "doc": "Whether the member is a bot."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "timezone",\n      "default": null,\n      "doc": "The timezone of the Slack member."\n    },\n    {\n      "type": [\n        "null",\n        "int"\n      ],\n      "name": "timezoneOffset",\n      "default": null,\n      "doc": "The timezone offset of the Slack member."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "title",\n      "default": null,\n      "doc": "The title of the Slack member."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "phone",\n      "default": null,\n      "doc": "The phone number of the Slack member."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "profilePictureUrl",\n      "default": null,\n      "doc": "The URL of the member\'s profile picture."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "statusText",\n      "default": null,\n      "doc": "The status text of the Slack member."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "statusEmoji",\n      "default": null,\n      "doc": "The status emoji of the Slack member."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "lastUpdatedSeconds",\n      "default": null,\n      "doc": "The timestamp of when the member was last updated. (in seconds)"\n    }\n  ],\n  "doc": "Information about a Slack user."\n}\n')))),(0,a.yg)("h3",{id:"common-types"},"Common Types"),(0,a.yg)("p",null,"These types are used across multiple aspects in this entity."),(0,a.yg)("h4",{id:"auditstamp"},"AuditStamp"),(0,a.yg)("p",null,"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"time")," (long): When did the resource/association/sub-resource move into the specific lifecyc..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"actor")," (string): The entity (e.g. a member URN) which will be credited for moving the resource..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"impersonator")," (string?): The entity (e.g. a service URN) which performs the change on behalf of the Ac..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"message")," (string?): Additional context around how DataHub was informed of the particular change. ...")),(0,a.yg)("h4",{id:"formassociation"},"FormAssociation"),(0,a.yg)("p",null,"Properties of an applied form."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"urn")," (string): Urn of the applied form"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"incompletePrompts")," (FormPromptAssociation[]): A list of prompts that are not yet complete for this form."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"completedPrompts")," (FormPromptAssociation[]): A list of prompts that have been completed for this form.")),(0,a.yg)("h4",{id:"testresult"},"TestResult"),(0,a.yg)("p",null,"Information about a Test Result"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"test")," (string): The urn of the test"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"type")," (TestResultType): The type of the result"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"testDefinitionMd5")," (string?): The md5 of the test definition that was used to compute this result. See Test..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"lastComputed")," (AuditStamp?): The audit stamp of when the result was computed, including the actor who comp...")),(0,a.yg)("h3",{id:"relationships"},"Relationships"),(0,a.yg)("h4",{id:"self"},"Self"),(0,a.yg)("p",null,"These are the relationships to itself, stored in this entity's aspects"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"ReportsTo (via ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserInfo.managerUrn"),")")),(0,a.yg)("h4",{id:"outgoing"},"Outgoing"),(0,a.yg)("p",null,"These are the relationships stored in this entity's aspects"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsUserOf"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"DataPlatform via ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserEditableInfo.platforms")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsPersona"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"DataHubPersona via ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserEditableInfo.persona")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsMemberOfGroup"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"CorpGroup via ",(0,a.yg)("inlineCode",{parentName:"li"},"groupMembership.groups")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"TaggedWith"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Tag via ",(0,a.yg)("inlineCode",{parentName:"li"},"globalTags.tags")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsMemberOfNativeGroup"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"CorpGroup via ",(0,a.yg)("inlineCode",{parentName:"li"},"nativeGroupMembership.nativeGroups")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"HasPersonalPageTemplate"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"DataHubPageTemplate via ",(0,a.yg)("inlineCode",{parentName:"li"},"corpUserSettings.homePage.pageTemplate")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsMemberOfRole"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"DataHubRole via ",(0,a.yg)("inlineCode",{parentName:"li"},"roleMembership.roles")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsFailing"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Test via ",(0,a.yg)("inlineCode",{parentName:"li"},"testResults.failing")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"IsPassing"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Test via ",(0,a.yg)("inlineCode",{parentName:"li"},"testResults.passing")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"PartOfSlackWorkspace"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"DataPlatformInstance via ",(0,a.yg)("inlineCode",{parentName:"li"},"slackUserInfo.slackInstance"))))),(0,a.yg)("h4",{id:"incoming"},"Incoming"),(0,a.yg)("p",null,"These are the relationships stored in other entity's aspects"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Has"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Role via ",(0,a.yg)("inlineCode",{parentName:"li"},"actors.users.user")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"OwnedBy"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Dataset via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,a.yg)("li",{parentName:"ul"},"DataJob via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,a.yg)("li",{parentName:"ul"},"DataFlow via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,a.yg)("li",{parentName:"ul"},"DataProcess via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,a.yg)("li",{parentName:"ul"},"Chart via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,a.yg)("li",{parentName:"ul"},"Dashboard via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,a.yg)("li",{parentName:"ul"},"Notebook via ",(0,a.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner"))))),(0,a.yg)("h3",{id:"global-metadata-model"},(0,a.yg)("a",{parentName:"h3",href:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}h.isMDXComponent=!0}}]);