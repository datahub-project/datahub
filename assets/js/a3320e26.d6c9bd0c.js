"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[11505],{93398:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>y,frontMatter:()=>l,metadata:()=>u,toc:()=>m});a(96540);var n=a(15680),i=a(53720),s=a(5400);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function d(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}const l={title:"Description",slug:"/api/tutorials/descriptions",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/descriptions.md"},p="Description",u={unversionedId:"docs/api/tutorials/descriptions",id:"docs/api/tutorials/descriptions",title:"Description",description:"Why Would You Use Description on Dataset?",source:"@site/genDocs/docs/api/tutorials/descriptions.md",sourceDirName:"docs/api/tutorials",slug:"/api/tutorials/descriptions",permalink:"/docs/api/tutorials/descriptions",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/descriptions.md",tags:[],version:"current",frontMatter:{title:"Description",slug:"/api/tutorials/descriptions",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/descriptions.md"},sidebar:"overviewSidebar",previous:{title:"Deprecation",permalink:"/docs/api/tutorials/deprecation"},next:{title:"Custom Properties",permalink:"/docs/api/tutorials/custom-properties"}},c={},m=[{value:"Why Would You Use Description on Dataset?",id:"why-would-you-use-description-on-dataset",level:2},{value:"Goal Of This Guide",id:"goal-of-this-guide",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Read Description on Dataset",id:"read-description-on-dataset",level:2},{value:"Read Description on Columns",id:"read-description-on-columns",level:2},{value:"Add Description on Dataset",id:"add-description-on-dataset",level:2},{value:"Expected Outcomes of Adding Description on Dataset",id:"expected-outcomes-of-adding-description-on-dataset",level:3},{value:"Add Description on Column",id:"add-description-on-column",level:2},{value:"Expected Outcomes of Adding Description on Column",id:"expected-outcomes-of-adding-description-on-column",level:3}],h={toc:m},g="wrapper";function y(e){var{components:t}=e,a=d(e,["components"]);return(0,n.yg)(g,o(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){r(e,t,a[t])}))}return e}({},h,a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"description"},"Description"),(0,n.yg)("h2",{id:"why-would-you-use-description-on-dataset"},"Why Would You Use Description on Dataset?"),(0,n.yg)("p",null,"Adding a description and related link to a dataset can provide important information about the data, such as its source, collection methods, and potential uses. This can help others understand the context of the data and how it may be relevant to their own work or research. Including a related link can also provide access to additional resources or related datasets, further enriching the information available to users."),(0,n.yg)("h3",{id:"goal-of-this-guide"},"Goal Of This Guide"),(0,n.yg)("p",null,"This guide will show you how to"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Read dataset description: read a description of a dataset."),(0,n.yg)("li",{parentName:"ul"},"Read column description: read a description of columns of a dataset`."),(0,n.yg)("li",{parentName:"ul"},"Add dataset description: add a description and a link to dataset."),(0,n.yg)("li",{parentName:"ul"},"Add column description: add a description to a column of a dataset.")),(0,n.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.yg)("p",null,"For this tutorial, you need to deploy DataHub Quickstart and ingest sample data.\nFor detailed steps, please refer to ",(0,n.yg)("a",{parentName:"p",href:"/docs/quickstart"},"Datahub Quickstart Guide"),"."),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"Before adding a description, you need to ensure the targeted dataset is already present in your datahub.\nIf you attempt to manipulate entities that do not exist, your operation will fail.\nIn this guide, we will be using data from sample ingestion.")),(0,n.yg)("p",null,"In this example, we will add a description to ",(0,n.yg)("inlineCode",{parentName:"p"},"user_name "),"column of a dataset ",(0,n.yg)("inlineCode",{parentName:"p"},"fct_users_deleted"),"."),(0,n.yg)("h2",{id:"read-description-on-dataset"},"Read Description on Dataset"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(s.A,{value:"graphql",label:"GraphQL",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'query {\n  dataset(urn: "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)") {\n    properties {\n      description\n    }\n  }\n}\n')),(0,n.yg)("p",null,"If you see the following response, the operation was successful:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "dataset": {\n      "properties": {\n        "description": "table containing all the users deleted on a single day"\n      }\n    }\n  },\n  "extensions": {}\n}\n'))),(0,n.yg)(s.A,{value:"curl",label:"Curl",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8080/api/graphql' \\\n--header 'Authorization: Bearer <my-access-token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"query\": \"query { dataset(urn: \\\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)\\\") { properties { description } } }\", \"variables\":{}}'\n")),(0,n.yg)("p",null,"Expected Response:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "dataset": {\n      "properties": {\n        "description": "table containing all the users deleted on a single day"\n      }\n    }\n  },\n  "extensions": {}\n}\n'))),(0,n.yg)(s.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dataset_query_description.py\nfrom datahub.sdk import DataHubClient, DatasetUrn\n\nclient = DataHubClient.from_env()\n\ndataset = client.entities.get(\n    DatasetUrn(platform="hive", name="fct_users_created", env="PROD")\n)\n\n# Print the dataset description\nprint(dataset.description)\n\n')))),(0,n.yg)("h2",{id:"read-description-on-columns"},"Read Description on Columns"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(s.A,{value:"graphql",label:"GraphQL",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'query {\n  dataset(urn: "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)") {\n    schemaMetadata {\n      fields {\n        fieldPath\n        description\n      }\n    }\n  }\n}\n')),(0,n.yg)("p",null,"If you see the following response, the operation was successful:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "dataset": {\n      "schemaMetadata": {\n        "fields": [\n          {\n            "fieldPath": "user_name",\n            "description": "Name of the user who was deleted"\n          },\n          ...\n          {\n            "fieldPath": "deletion_reason",\n            "description": "Why the user chose to deactivate"\n          }\n        ]\n      }\n    }\n  },\n  "extensions": {}\n}\n'))),(0,n.yg)(s.A,{value:"curl",label:"Curl",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8080/api/graphql' \\\n--header 'Authorization: Bearer <my-access-token>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{ \"query\": \"query { dataset(urn: \\\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)\\\") { schemaMetadata { fields { fieldPath description } } } }\", \"variables\":{}}'\n")),(0,n.yg)("p",null,"Expected Response:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "dataset": {\n      "schemaMetadata": {\n        "fields": [\n          {\n            "fieldPath": "user_name",\n            "description": "Name of the user who was deleted"\n          },\n          {\n            "fieldPath": "timestamp",\n            "description": "Timestamp user was deleted at"\n          },\n          { "fieldPath": "user_id", "description": "Id of the user deleted" },\n          {\n            "fieldPath": "browser_id",\n            "description": "Cookie attached to identify the browser"\n          },\n          {\n            "fieldPath": "session_id",\n            "description": "Cookie attached to identify the session"\n          },\n          {\n            "fieldPath": "deletion_reason",\n            "description": "Why the user chose to deactivate"\n          }\n        ]\n      }\n    }\n  },\n  "extensions": {}\n}\n'))),(0,n.yg)(s.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dataset_query_description_on_columns.py\nfrom datahub.sdk import DataHubClient, DatasetUrn\n\nclient = DataHubClient.from_env()\n\ndataset = client.entities.get(\n    DatasetUrn(platform="hive", name="fct_users_created", env="PROD")\n)\n\n# Print descriptions for each column\ncolumn_descriptions = {}\nfor field in dataset.schema:\n    column_descriptions[field.field_path] = field.description\n\nprint(column_descriptions)\n\n')))),(0,n.yg)("h2",{id:"add-description-on-dataset"},"Add Description on Dataset"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(s.A,{value:"graphQL",label:"GraphQL",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-graphql"},'mutation updateDataset {\n  updateDataset(\n    urn: "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)"\n    input: {\n      editableProperties: {\n        description: "## The Real Estate Sales Dataset\\nThis is a really important Dataset that contains all the relevant information about sales that have happened organized by address.\\n"\n      }\n      institutionalMemory: {\n        elements: {\n          author: "urn:li:corpuser:jdoe"\n          url: "https://wikipedia.com/real_estate"\n          description: "This is the definition of what real estate means"\n        }\n      }\n    }\n  ) {\n    urn\n  }\n}\n')),(0,n.yg)("p",null,"Expected Response:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateDataset": {\n      "urn": "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)"\n    }\n  },\n  "extensions": {}\n}\n'))),(0,n.yg)(s.A,{value:"curl",label:"Curl",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8080/api/graphql\' \\\n--header \'Authorization: Bearer <my-access-token>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "query": "mutation updateDataset { updateDataset( urn:\\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)\\", input: { editableProperties: { description: \\"## The Real Estate Sales Dataset\\nThis is a really important Dataset that contains all the relevant information about sales that have happened organized by address.\\n\\" } institutionalMemory: { elements: { author: \\"urn:li:corpuser:jdoe\\", url: \\"https://wikipedia.com/real_estate\\", description: \\"This is the definition of what real estate means\\" } } } ) { urn } }",\n  "variables": {}\n}\'\n')),(0,n.yg)("p",null,"Expected Response:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateDataset": {\n      "urn": "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)"\n    }\n  },\n  "extensions": {}\n}\n'))),(0,n.yg)(s.A,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dataset_add_documentation.py\nfrom datahub.sdk import DataHubClient, DatasetUrn\n\nclient = DataHubClient.from_env()\n\ndataset = client.entities.get(DatasetUrn(platform="hive", name="realestate_db.sales"))\n\n# Add dataset documentation\ndocumentation = """## The Real Estate Sales Dataset\nThis is a really important Dataset that contains all the relevant information about sales that have happened organized by address.\n"""\ndataset.set_description(documentation)\n\n# Add link to institutional memory\ndataset.add_link(\n    (\n        "https://wikipedia.com/real_estate",\n        "This is the definition of what real estate means",  # link description\n    )\n)\n\nclient.entities.update(dataset)\n\n')))),(0,n.yg)("h3",{id:"expected-outcomes-of-adding-description-on-dataset"},"Expected Outcomes of Adding Description on Dataset"),(0,n.yg)("p",null,"You can now see the description is added to ",(0,n.yg)("inlineCode",{parentName:"p"},"fct_users_deleted"),"."),(0,n.yg)("p",{align:"center"},(0,n.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/apis/tutorials/dataset-description-added.png"})),(0,n.yg)("h2",{id:"add-description-on-column"},"Add Description on Column"),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(s.A,{value:"graphql",label:"GraphQL",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'mutation updateDescription {\n  updateDescription(\n    input: {\n      description: "Name of the user who was deleted. This description is updated via GrpahQL.",\n      resourceUrn:"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)",\n      subResource: "user_name",\n      subResourceType:DATASET_FIELD\n    }\n  )\n}\n')),(0,n.yg)("p",null,"Note that you can use general markdown in ",(0,n.yg)("inlineCode",{parentName:"p"},"description"),". For example, you can do the following."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'mutation updateDescription {\n  updateDescription(\n    input: {\n      description: """\n      ### User Name\n      The `user_name` column is a primary key column that contains the name of the user who was deleted.\n      """,\n      resourceUrn:"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)",\n      subResource: "user_name",\n      subResourceType:DATASET_FIELD\n    }\n  )\n}\n')),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"updateDescription")," currently only supports Dataset Schema Fields, Containers.\nFor more information about the ",(0,n.yg)("inlineCode",{parentName:"p"},"updateDescription")," mutation, please refer to ",(0,n.yg)("a",{parentName:"p",href:"/docs/graphql/mutations/#updateDescription"},"updateLineage"),"."),(0,n.yg)("p",null,"If you see the following response, the operation was successful:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateDescription": true\n  },\n  "extensions": {}\n}\n'))),(0,n.yg)(s.A,{value:"curl",label:"Curl",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8080/api/graphql\' \\\n--header \'Authorization: Bearer <my-access-token>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{ "query": "mutation updateDescription { updateDescription ( input: { description: \\"Name of the user who was deleted. This description is updated via GrpahQL.\\", resourceUrn: \\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)\\", subResource: \\"user_name\\", subResourceType:DATASET_FIELD }) }", "variables":{}}\'\n')),(0,n.yg)("p",null,"Expected Response:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-json"},'{ "data": { "updateDescription": true }, "extensions": {} }\n'))),(0,n.yg)(s.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dataset_add_column_documentation.py\nfrom datahub.sdk import DataHubClient, Dataset, DatasetUrn\n\nclient = DataHubClient.from_env()\n\ndataset: Dataset = client.entities.get(\n    DatasetUrn.from_string(\n        "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)"\n    )\n)\n\ndataset["user_name"].set_description(\n    "Name of the user who was deleted. This description was updated via the Python SDK."\n)\n\nclient.entities.update(dataset)\n\n')))),(0,n.yg)("h3",{id:"expected-outcomes-of-adding-description-on-column"},"Expected Outcomes of Adding Description on Column"),(0,n.yg)("p",null,"You can now see column description is added to ",(0,n.yg)("inlineCode",{parentName:"p"},"user_name")," column of ",(0,n.yg)("inlineCode",{parentName:"p"},"fct_users_deleted"),"."),(0,n.yg)("p",{align:"center"},(0,n.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/apis/tutorials/column-description-added.png"})))}y.isMDXComponent=!0}}]);