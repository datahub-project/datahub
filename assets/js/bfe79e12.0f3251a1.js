"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[34024],{15680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>h});var n=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(a),p=i,h=u["".concat(c,".").concat(p)]||u[p]||g[p]||r;return a?n.createElement(h,l(l({ref:t},m),{},{components:a})):n.createElement(h,l({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},72661:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>u});a(96540);var n=a(15680);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}const o={title:"DataHub Search Client Shim",sidebar_label:"Search Client Shim",slug:"/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim/README.md"},c="DataHub Search Client Shim",s={unversionedId:"metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim/README",id:"metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim/README",title:"DataHub Search Client Shim",description:"This package provides a shim layer that abstracts different Elasticsearch and OpenSearch client implementations, allowing DataHub to support multiple search engine versions through a common interface.",source:"@site/genDocs/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim/README.md",sourceDirName:"metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim",slug:"/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim",permalink:"/docs/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim/README.md",tags:[],version:"current",frontMatter:{title:"DataHub Search Client Shim",sidebar_label:"Search Client Shim",slug:"/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-io/src/main/java/com/linkedin/metadata/search/elasticsearch/client/shim/README.md"}},m={},u=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Core Components",id:"core-components",level:3},{value:"Key Features",id:"key-features",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"application.yaml Configuration",id:"applicationyaml-configuration",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Using the Shim Directly",id:"using-the-shim-directly",level:3},{value:"Creating a Shim Programmatically",id:"creating-a-shim-programmatically",level:3},{value:"Auto-Detection",id:"auto-detection",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"Implementation Status",id:"implementation-status",level:2},{value:"Extending the Shim",id:"extending-the-shim",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Connection Issues",id:"connection-issues",level:3},{value:"Auto-Detection Failures",id:"auto-detection-failures",level:3}],g={toc:u},p="wrapper";function h(e){var{components:t}=e,a=l(e,["components"]);return(0,n.yg)(p,r(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){i(e,t,a[t])}))}return e}({},g,a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"datahub-search-client-shim"},"DataHub Search Client Shim"),(0,n.yg)("p",null,"This package provides a shim layer that abstracts different Elasticsearch and OpenSearch client implementations, allowing DataHub to support multiple search engine versions through a common interface."),(0,n.yg)("h2",{id:"overview"},"Overview"),(0,n.yg)("p",null,"The shim supports the following search engines:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Elasticsearch 7.17")," - Using REST High Level Client"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Elasticsearch 8.x")," - Using new Elasticsearch Java Client, 8.17+ is supported"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"OpenSearch 2.x")," - Using OpenSearch REST High Level Client")),(0,n.yg)("h2",{id:"architecture"},"Architecture"),(0,n.yg)("h3",{id:"core-components"},"Core Components"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"strong"},"SearchClientShim"))," - Main interface that abstracts all search operations"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"strong"},"SearchClientShimFactory"))," - Factory for creating appropriate shim implementations"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Implementation classes")," - Concrete implementations for each search engine type:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"Es7CompatibilitySearchClientShim")," - ES 7.17"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"Es8SearchClientShim")," - ES 8.17"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"OpenSearch2SearchClientShim")," - OpenSearch 2.x")))),(0,n.yg)("h3",{id:"key-features"},"Key Features"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Auto-detection"),": Automatically detect the search engine type by connecting to the cluster"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Configuration-driven"),": Select specific client implementations via configuration"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Backward compatibility"),": Existing DataHub code can continue using RestHighLevelClient"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Feature detection"),": Query support for engine-specific features")),(0,n.yg)("h2",{id:"configuration"},"Configuration"),(0,n.yg)("h3",{id:"environment-variables"},"Environment Variables"),(0,n.yg)("p",null,"Set these environment variables to configure the shim:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"# Enable the shim (default: false - uses legacy client)\nELASTICSEARCH_SHIM_ENABLED=true\n\n# Specify engine type or use auto-detection\nELASTICSEARCH_SHIM_ENGINE_TYPE=AUTO_DETECT  # or ELASTICSEARCH_7, ELASTICSEARCH_8, OPENSEARCH_2, etc.\n\n# Auto-detect engine type (default: true)\nELASTICSEARCH_SHIM_AUTO_DETECT=true\n")),(0,n.yg)("h3",{id:"applicationyaml-configuration"},"application.yaml Configuration"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"elasticsearch:\n  host: localhost\n  port: 9200\n  # ... other standard config ...\n  shim:\n    enabled: true\n    engineType: AUTO_DETECT\n    apiCompatibilityMode: false\n    autoDetectEngine: true\n")),(0,n.yg)("h2",{id:"usage-examples"},"Usage Examples"),(0,n.yg)("h3",{id:"using-the-shim-directly"},"Using the Shim Directly"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-java"},'@Autowired\nprivate SearchClientShim searchClientShim;\n\npublic void searchExample() throws IOException {\n    SearchRequest request = new SearchRequest("my-index");\n    SearchResponse response = searchClientShim.search(request, RequestOptions.DEFAULT);\n\n    // Handle response...\n}\n')),(0,n.yg)("h3",{id:"creating-a-shim-programmatically"},"Creating a Shim Programmatically"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-java"},'SearchClientShim.ShimConfiguration config = new ShimConfigurationBuilder()\n    .withEngineType(SearchEngineType.ELASTICSEARCH_7)\n    .withHost("localhost")\n    .withPort(9200)\n    .withCredentials("user", "pass")\n    .withApiCompatibilityMode(true)\n    .build();\n\ntry (SearchClientShim shim = SearchClientShimFactory.createShim(config)) {\n    // Use shim...\n}\n')),(0,n.yg)("h3",{id:"auto-detection"},"Auto-Detection"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-java"},'SearchClientShim.ShimConfiguration config = new ShimConfigurationBuilder()\n    .withHost("localhost")\n    .withPort(9200)\n    .build();\n\n// This will auto-detect the engine type\ntry (SearchClientShim shim = SearchClientShimFactory.createShimWithAutoDetection(config)) {\n    SearchEngineType detectedType = shim.getEngineType();\n    String version = shim.getEngineVersion();\n    System.out.println("Detected: " + detectedType + " version " + version);\n}\n')),(0,n.yg)("h2",{id:"migration-guide"},"Migration Guide"),(0,n.yg)("h2",{id:"implementation-status"},"Implementation Status"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Engine Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Status"),(0,n.yg)("th",{parentName:"tr",align:null},"Client Library"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Elasticsearch 7.17"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705 Complete"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"org.elasticsearch.client:elasticsearch-rest-high-level-client"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Elasticsearch 8.x"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705 Complete"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"co.elastic.clients:elasticsearch-java"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"OpenSearch 2.x"),(0,n.yg)("td",{parentName:"tr",align:null},"\u2705 Complete"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"org.opensearch.client:opensearch-rest-high-level-client"))))),(0,n.yg)("h2",{id:"extending-the-shim"},"Extending the Shim"),(0,n.yg)("p",null,"To add support for additional search engines:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Implement ",(0,n.yg)("inlineCode",{parentName:"strong"},"SearchClientShim"))," for your target client"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Add engine type")," to ",(0,n.yg)("inlineCode",{parentName:"li"},"SearchEngineType")," enum"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Update factory")," to create your implementation"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Add dependencies")," to build.gradle"),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("strong",{parentName:"li"},"Update configuration")," to support your engine type")),(0,n.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,n.yg)("h3",{id:"connection-issues"},"Connection Issues"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Verify host/port configuration"),(0,n.yg)("li",{parentName:"ul"},"Check SSL settings"),(0,n.yg)("li",{parentName:"ul"},"Ensure credentials are correct"),(0,n.yg)("li",{parentName:"ul"},"Look for authentication errors in logs")),(0,n.yg)("h3",{id:"auto-detection-failures"},"Auto-Detection Failures"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Manually specify engine type as fallback"),(0,n.yg)("li",{parentName:"ul"},"Check network connectivity to cluster"),(0,n.yg)("li",{parentName:"ul"},"Verify cluster is accessible and running"),(0,n.yg)("li",{parentName:"ul"},"Review error logs for specific connection issues")))}h.isMDXComponent=!0}}]);