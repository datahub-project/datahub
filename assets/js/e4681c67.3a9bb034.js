"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[67751],{15680:(s,a,e)=>{e.d(a,{xA:()=>i,yg:()=>y});var n=e(96540);function l(s,a,e){return a in s?Object.defineProperty(s,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):s[a]=e,s}function p(s,a){var e=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(s,a).enumerable}))),e.push.apply(e,n)}return e}function t(s){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?p(Object(e),!0).forEach((function(a){l(s,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(e)):p(Object(e)).forEach((function(a){Object.defineProperty(s,a,Object.getOwnPropertyDescriptor(e,a))}))}return s}function c(s,a){if(null==s)return{};var e,n,l=function(s,a){if(null==s)return{};var e,n,l={},p=Object.keys(s);for(n=0;n<p.length;n++)e=p[n],a.indexOf(e)>=0||(l[e]=s[e]);return l}(s,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(s);for(n=0;n<p.length;n++)e=p[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(s,e)&&(l[e]=s[e])}return l}var r=n.createContext({}),d=function(s){var a=n.useContext(r),e=a;return s&&(e="function"==typeof s?s(a):t(t({},a),s)),e},i=function(s){var a=d(s.components);return n.createElement(r.Provider,{value:a},s.children)},o="mdxType",m={inlineCode:"code",wrapper:function(s){var a=s.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(s,a){var e=s.components,l=s.mdxType,p=s.originalType,r=s.parentName,i=c(s,["components","mdxType","originalType","parentName"]),o=d(e),u=l,y=o["".concat(r,".").concat(u)]||o[u]||m[u]||p;return e?n.createElement(y,t(t({ref:a},i),{},{components:e})):n.createElement(y,t({ref:a},i))}));function y(s,a){var e=arguments,l=a&&a.mdxType;if("string"==typeof s||l){var p=e.length,t=new Array(p);t[0]=u;var c={};for(var r in a)hasOwnProperty.call(a,r)&&(c[r]=a[r]);c.originalType=s,c[o]="string"==typeof s?s:l,t[1]=c;for(var d=2;d<p;d++)t[d]=e[d];return n.createElement.apply(null,t)}return n.createElement.apply(null,e)}u.displayName="MDXCreateElement"},83334:(s,a,e)=>{e.r(a),e.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>y,frontMatter:()=>c,metadata:()=>d,toc:()=>o});e(96540);var n=e(15680);function l(s,a,e){return a in s?Object.defineProperty(s,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):s[a]=e,s}function p(s,a){return a=null!=a?a:{},Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(a)):function(s,a){var e=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(s,a).enumerable}))),e.push.apply(e,n)}return e}(Object(a)).forEach((function(e){Object.defineProperty(s,e,Object.getOwnPropertyDescriptor(a,e))})),s}function t(s,a){if(null==s)return{};var e,n,l=function(s,a){if(null==s)return{};var e,n,l={},p=Object.keys(s);for(n=0;n<p.length;n++)e=p[n],a.indexOf(e)>=0||(l[e]=s[e]);return l}(s,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(s);for(n=0;n<p.length;n++)e=p[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(s,e)&&(l[e]=s[e])}return l}const c={title:"Client"},r=void 0,d={unversionedId:"python-sdk/clients",id:"version-1.1.0/python-sdk/clients",title:"Client",description:"\\n\\n\\nThe Kafka emitter or Rest emitter can be used to push metadata to DataHub.\\nThe DataHub graph client extends the Rest emitter with additional functionality.\\n\\n\\nclass datahub.emitter.restemitter.EmitMode(value)\\nBases ConfigEnum\\nAn enumeration.\\n\\n\\nRESTLI = 'RESTLI'\\n\\n\\n\\nOPENAPI = 'OPENAPI'\\n\\n\\n\\n\\nclass datahub.emitter.restemitter.RequestsSessionConfig(**data)\\nBases\\n\\ndata (Any)\\ntimeout (float | Tuplefloat, float] | None)\\nretrystatuscodes (List[int])\\nretrymethods (List[str])\\nretrymaxtimes (int)\\nextraheaders (Dict[str, str])\\ncacertificatepath (str | None)\\nclientcertificatepath (str | None)\\ndisablesslverification (bool)\\nclientmode (ClientMode | None)\\ndatahubcomponent (str | None)\\n\\n\\n\\n\\n\\ntimeout List[int]\\n\\n\\n\\nretrymethods int\\n\\n\\n\\nextraheaders Optional[str]\\n\\n\\n\\nclientcertificatepath bool\\n\\n\\n\\nclientmode Optional[str]\\n\\n\\n\\nbuildsession()\\n\\nReturn type\\nsession (Session) \\u2013 The requests.Session object to check\\n\\nReturn type\\nThe corresponding ClientMode enum value if found, None otherwise\\n\\n\\n\\n\\n\\nmodelconfig &lt;function ConfigModel.Config.schemaextra&gt;, 'extra' (&lt;class 'cachedproperty.cachedproperty'&gt;,), 'jsonschemaextra' Closeable, Emitter\\n\\nParameters RestServiceConfig\\n\\n\\n\\nfetchserverconfig()\\nFetch configuration from the server if not already loaded.\\n\\nReturn type\\nThe configuration dictionary\\n\\nRaises\\nNone\\n\\n\\n\\n\\n\\ngetserverconfig()\\n\\nReturn type\\nDataHubGraph\\n\\n\\n\\n\\n\\nemit(item, callback=None, emitmode=EmitMode.SYNCPRIMARY)\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nemitmce(mce)\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nemitmcp(mcp, asyncflag=None, emitmode=EmitMode.SYNCPRIMARY, waittimeout=datetime.timedelta(seconds=3600))\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nemitmcps(mcps, emitmode=EmitMode.SYNCPRIMARY, waittimeout=datetime.timedelta(seconds=3600))\\n\\nParameters\\nint\\n\\n\\n\\n\\n\\nemitusage(usageStats)\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nflush()\\n\\nReturn type\\nNone\\n\\n\\n\\n\\n\\n\\ndatahub.emitter.restemitter.DatahubRestEmitter\\nalias of DataHubRestEmitter\\n\\n\\n\\nclass datahub.emitter.kafkaemitter.KafkaEmitterConfig(**data)\\nBases\\n\\ndata (Any)\\nconnection (KafkaProducerConnectionConfig)\\ntopicroutes (Dict[str, str])\\n\\n\\n\\n\\n\\nconnection Dict[str, str]\\n\\n\\n\\nclassmethod validatetopicroutes(v)\\n\\nParameters\\nDict[str, str]\\n\\n\\n\\n\\n\\nmodelconfig &lt;function ConfigModel.Config.schemaextra&gt;, 'extra' (&lt;class 'cachedproperty.cachedproperty'&gt;,), 'jsonschemaextra' Closeable, Emitter\\n\\nParameters\\n\\nitem (Union[MetadataChangeEventClass, MetadataChangeProposalClass, MetadataChangeProposalWrapper])\\ncallback (Optional[Callable[[Exception, str], None]])\\n\\n\\nReturn type\\n\\nmce (MetadataChangeEventClass)\\ncallback (Callable[[Exception, str], None])\\n\\n\\nReturn type\\n\\nmcp (Union[MetadataChangeProposalClass, MetadataChangeProposalWrapper])\\ncallback (Callable[[Exception, str], None])\\n\\n\\nReturn type\\nNone\\n\\n\\n\\n\\n\\nclose()\\n\\nReturn type object\\n\\nParameters str\\n\\n\\n\\nrelationshiptype Optional[str] = None\\n\\n\\n\\n\\ndatahub.ingestion.graph.client.entitytypetographql(entitytype)\\nConvert the entity types into GraphQL \\u201cEntityType\\u201d enum values.\\n\\nParameters\\nstr\\n\\n\\n\\n\\n\\ndatahub.ingestion.graph.client.flexibleentitytypetographql(entitytype)\\n\\nParameters\\nstr\\n\\n\\n\\n\\n\\nclass datahub.ingestion.graph.client.DataHubGraph(config)\\nBases\\nconfig (DatahubClientConfig)\\n\\n\\n\\n\\ntestconnection()\\n\\nReturn type str\\nGet the public-facing base url of the frontend\\nThis url can be used to construct links to the frontend. The url will not include a trailing slash.\\nNote Only supported with DataHub Cloud.\\n\\nParameters\\nstr\\n\\nReturns\\nemitter (DataHubRestEmitter)\\n\\nReturn type\\n\\nrun_id (str)\\nextra_sink_config (Optional[Dict])\\n\\n\\nReturn type\\n\\nitems (Iterable[Union[MetadataChangeEventClass, MetadataChangeProposalClass, MetadataChangeProposalWrapper]])\\nrunid (str)\\n\\n\\nReturn type\\n\\nentityurn (str) \\u2013 The urn of the entity\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)]) \\u2013 The type class of the aspect being requested (e.g. datahub.metadata.schemaclasses.DatasetProperties)\\nversion (int) \\u2013 The version of the aspect to retrieve. The default of 0 means latest. Versions &gt; 0 go from oldest to newest, so 1 is the oldest.\\n\\n\\nReturn type\\nthe Aspect as a dictionary if present, None if no aspect was found (HTTP status 404)\\n\\nRaises\\n\\nentityurn (str)\\naspecttype (Type[TypeVar(Aspect, bound= Aspect)])\\naspect (str)\\naspecttypename (Optional[str])\\nversion (int)\\n\\n\\nReturn type\\nDict[str, Any]\\n\\n\\n\\n\\n\\ngetownership(entityurn)\\n\\nParameters\\nOptional[OwnershipClass]\\n\\n\\n\\n\\n\\ngetschemametadata(entityurn)\\n\\nParameters\\nOptional[SchemaMetadataClass]\\n\\n\\n\\n\\n\\ngetdomainproperties(entityurn)\\n\\nParameters\\nOptional[DomainPropertiesClass]\\n\\n\\n\\n\\n\\ngetdatasetproperties(entityurn)\\n\\nParameters\\nOptional[DatasetPropertiesClass]\\n\\n\\n\\n\\n\\ngettags(entityurn)\\n\\nParameters\\nOptional[GlobalTagsClass]\\n\\n\\n\\n\\n\\ngetglossaryterms(entityurn)\\n\\nParameters\\nOptional[GlossaryTermsClass]\\n\\n\\n\\n\\n\\ngetdomain(entityurn)\\n\\nParameters\\nOptional[DomainsClass]\\n\\n\\n\\n\\n\\ngetbrowsepath(entityurn)\\n\\nParameters\\nOptional[BrowsePathsClass]\\n\\n\\n\\n\\n\\ngetusageaspectsfromurn(entityurn, starttimestamp, endtimestamp)\\n\\nParameters\\nOptional[List[DatasetUsageStatisticsClass]]\\n\\n\\n\\n\\n\\nlistallentityurns(entitytype, start, count)\\n\\nParameters\\nOptional[List[str]]\\n\\n\\n\\n\\n\\ngetlatesttimeseriesvalue(entityurn, aspecttype, filtercriteriamap)\\n\\nParameters\\nOptional[TypeVar(Aspect, bound= Aspect)]\\n\\n\\n\\n\\n\\ngettimeseriesvalues(entityurn, aspecttype, filter, limit=10)\\n\\nParameters\\nList[TypeVar(Aspect, bound= Aspect)]\\n\\n\\n\\n\\n\\ngetentityraw(entityurn, aspects=None)\\n\\nParameters\\nDict\\n\\n\\n\\n\\n\\ngetaspectsforentity(entityurn, aspects, aspecttypes)\\nGet multiple aspects for an entity.\\nDeprecated in favor of getaspect (single aspect) or getentitysemityped (full\\nentity without manually specifying a list of aspects).\\nWarning\\n\\nentityurn (str) \\u2013 The urn of the entity\\naspects (List[str]) \\u2013 List of aspect names being requested (e.g. [schemaMetadata, datasetProperties])\\naspecttypes (List[Type[TypeVar(Aspect, bound= Aspect)]]) \\u2013 List of aspect type classes being requested (e.g. [datahub.metadata.schemaclasses.DatasetProperties])\\nentityurn\\n\\n\\nReturn type\\nOptionally, a map of aspectname to aspectvalue as a dictionary if present, aspectvalue will be set to None if that aspect was not found. Returns None on HTTP status 404.\\n\\nRaises Do not use this method to determine if an entity exists! This method will always return\\nsomething, even if the entity doesn\\u2019t actually exist in DataHub.\\n\\nParameters\\nList[MetadataChangeProposalWrapper]\\n\\nReturns Do not use this method to determine if an entity exists! This method will always return\\nsomething, even if the entity doesn\\u2019t actually exist in DataHub.\\n\\nParameters\\nAspectBag\\n\\nReturns\\ndomainname (str)\\n\\nReturn type\\nurn (str) \\u2013 The urn of the connection.\\n\\nReturn type\\nThe connection config as a dictionary, or None if the connection was not found.\\n\\n\\n\\n\\n\\nsetconnectionjson(urn, *, platformurn, config, name=None)\\nSet a connection config.\\nThis is only supported with DataHub Cloud.\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\ngetcontainerurnsbyfilter(env=None, searchquery='')\\nReturn container urns that match based on query\\n\\nParameters\\nIterable[str]\\n\\n\\n\\n\\n\\nget_urns_by_filter(, entitytypes=None, platform=None, platforminstance=None, env=None, query=None, container=None, status=RemovedStatusFilter.NOTSOFTDELETED, batchsize=10000, extraFilters=None, extraorfilters=None)\\nFetch all urns that match all of the given filters.\\nFilters are combined conjunctively. If multiple filters are specified, the results will match all of them.\\nNote that specifying a platform filter will automatically exclude all entity types that do not have a platform.\\nThe same goes for the env filter.\\n\\nParameters\\nIterable[str]\\n\\nReturns Only supported with DataHub Cloud.\\nFilters are combined conjunctively. If multiple filters are specified, the results will match all of them.\\nNote that specifying a platform filter will automatically exclude all entity types that do not have a platform.\\nThe same goes for the env filter.\\n\\nParameters\\nIterable[dict]\\n\\nReturns\\n\\npipelinename (str)\\nplatform (str)\\n\\n\\nReturn type\\n\\nstart (int)\\ncount (int)\\nentity (str)\\n\\n\\nReturn type\\n\\naspect (str)\\nurnlike (Optional[str])\\n\\n\\nReturn type\\n\\nquery (str)\\nvariables (Optional[Dict])\\noperationname (Optional[str])\\nformatexception (bool)\\n\\n\\nReturn type StrEnum\\nAn enumeration.\\n\\n\\nINCOMING = 'INCOMING'\\n\\n\\n\\nOUTGOING = 'OUTGOING'\\n\\n\\n\\n\\ngetrelatedentities(entityurn, relationshiptypes, direction)\\n\\nParameters\\nIterable[RelatedEntity]\\n\\n\\n\\n\\n\\nexists(entityurn)\\n\\nParameters\\nbool\\n\\n\\n\\n\\n\\nsoftdeleteentity(urn, runid='datahub-graph-client', deletion_timestamp=None)\\nSoft-delete an entity by urn.\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nset_soft_delete_status(urn, delete, run_id='datahub-graph-client', deletiontimestamp=None)\\nChange status of soft-delete an entity by urn.\\n\\nParameters\\nNone\\n\\n\\n\\n\\n\\nharddeleteentity(urn)\\nHard delete an entity by urn.\\n\\nParameters\\nTuple[int, int]\\n\\nReturns\\n\\nurn (str) \\u2013 The urn of the entity to delete.\\nhard (bool) \\u2013 Whether to hard delete the entity. If False (default), the entity will be soft deleted.\\n\\n\\nReturn type\\n\\nurn (str) \\u2013 The urn of the entity.\\naspectname (str) \\u2013 The name of the timeseries aspect to delete.\\nstarttime (Optional[datetime]) \\u2013 The start time of the timeseries data to delete. If not specified, defaults to the beginning of time.\\nendtime (Optional[datetime]) \\u2013 The end time of the timeseries data to delete. If not specified, defaults to the end of time.\\n\\n\\nReturn type\\nThe number of timeseries rows affected.\\n\\n\\n\\n\\n\\ndeletereferencestourn(urn, dryrun=False)\\nDelete references to a given entity.\\nThis is useful for cleaning up references to an entity that is about to be deleted.\\nFor example, when deleting a tag, you might use this to remove that tag from all other\\nentities that reference it.\\nThis does not delete the entity itself.\\n\\nParameters\\nTuple[int, List[Dict]]\\n\\nReturns\\n\\nplatform (str)\\nplatforminstance (Optional[str])\\nenv (str)\\nbatchsize (int)\\n\\n\\nReturn type\\n\\nsql (str)\\nplatform (str)\\nplatforminstance (Optional[str])\\nenv (str)\\ndefaultdb (Optional[str])\\ndefaultschema (Optional[str])\\ndefaultdialect (Optional[str])\\n\\n\\nReturn type\\ntagname (str)\\n\\nReturn type\\n\\ntagurn (str)\\nresourceurn (str)\\n\\n\\nReturn type\\n\\nurn (str)\\nsaveresult (bool)\\nparameters (Optional[Dict[str, str]])\\nasyncflag (bool)\\n\\n\\nReturn type\\n\\nurns (List[str])\\nsaveresult (bool)\\nparameters (Optional[Dict[str, str]])\\nasyncflag (bool)\\n\\n\\nReturn type\\n\\nurn (str)\\ntagurns (Optional[List[str]])\\nparameters (Optional[Dict[str, str]])\\nasyncflag (bool)\\n\\n\\nReturn type\\n\\nentityname (str)\\nurns (List[str])\\naspects (Optional[List[str]])\\nwithsystemmetadata (bool)\\n\\n\\nReturn type\\n\\nentityname (str) \\u2013 The entity type name\\nurns (List[str]) \\u2013 List of entity URNs to fetch\\naspects (Optional[List[str]]) \\u2013 Optional list of aspect names to fetch. If None, all aspects will be fetched.\\nwithsystemmetadata (bool) \\u2013 If True, return system metadata along with each aspect.\\n\\n\\nReturn type\\nA dictionary mapping URNs to a dictionary of aspect name to tuples of\\n(typed aspect object, system metadata). If withsystemmetadata is False,\\nthe system metadata in the tuple will be None.\\n\\n\\n\\n\\n\\nupsertcustomassertion(urn, entityurn, type, description, platformname=None, platformurn=None, fieldpath=None, externalurl=None, logic=None)\\n\\nParameters\\nDict\\n\\n\\n\\n\\n\\nreportassertionresult(urn, timestampmillis, type, properties=None, externalurl=None, errortype=None, errormessage=None)\\n\\nParameters\\nbool\\n\\n\\n\\n\\n\\nclose()\\n\\nReturn type\\n\\nclientmode (Optional[ClientMode])\\ndatahubcomponent (Optional[str])\\n\\n\\nReturn type:\\nDataHubGraph\\n\\n\\n\\n\\n\"}}>",source:"@site/versioned_docs/version-1.1.0/python-sdk/clients.md",sourceDirName:"python-sdk",slug:"/python-sdk/clients",permalink:"/docs/1.1.0/python-sdk/clients",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/versioned_docs/version-1.1.0/python-sdk/clients.md",tags:[],version:"1.1.0",frontMatter:{title:"Client"},sidebar:"overviewSidebar",previous:{title:"Builder",permalink:"/docs/1.1.0/python-sdk/builder"},next:{title:"Models",permalink:"/docs/1.1.0/python-sdk/models"}},i={},o=[],m={toc:o},u="wrapper";function y(s){var{components:a}=s,e=t(s,["components"]);return(0,n.yg)(u,p(function(s){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{},n=Object.keys(e);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(e).filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable})))),n.forEach((function(a){l(s,a,e[a])}))}return s}({},m,e),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("div",{dangerouslySetInnerHTML:{__html:'<article class="bd-article" role="main">\n<section id="client">\n\n<p>The Kafka emitter or Rest emitter can be used to push metadata to DataHub.\nThe DataHub graph client extends the Rest emitter with additional functionality.</p>\n<span class="target" id="module-datahub.emitter.rest_emitter"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.EmitMode">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.rest_emitter.</span></span><span class="sig-name descname"><span class="pre">EmitMode</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">ConfigEnum</span></code></p>\n<p>An enumeration.</p>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.EmitMode.SYNC_WAIT">\n<span class="sig-name descname"><span class="pre">SYNC_WAIT</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'SYNC_WAIT\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.EmitMode.SYNC_PRIMARY">\n<span class="sig-name descname"><span class="pre">SYNC_PRIMARY</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'SYNC_PRIMARY\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.EmitMode.ASYNC">\n<span class="sig-name descname"><span class="pre">ASYNC</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'ASYNC\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.EmitMode.ASYNC_WAIT">\n<span class="sig-name descname"><span class="pre">ASYNC_WAIT</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'ASYNC_WAIT\'</span></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RestSinkEndpoint">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.rest_emitter.</span></span><span class="sig-name descname"><span class="pre">RestSinkEndpoint</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">ConfigEnum</span></code></p>\n<p>An enumeration.</p>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RestSinkEndpoint.RESTLI">\n<span class="sig-name descname"><span class="pre">RESTLI</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'RESTLI\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RestSinkEndpoint.OPENAPI">\n<span class="sig-name descname"><span class="pre">OPENAPI</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'OPENAPI\'</span></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.rest_emitter.</span></span><span class="sig-name descname"><span class="pre">RequestsSessionConfig</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">ConfigModel</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>timeout</strong> (<em>float</em><em> | </em><em>Tuple</em><em>[</em><em>float</em><em>, </em><em>float</em><em>] </em><em>| </em><em>None</em>)</p></li>\n<li><p><strong>retry_status_codes</strong> (<em>List</em><em>[</em><em>int</em><em>]</em>)</p></li>\n<li><p><strong>retry_methods</strong> (<em>List</em><em>[</em><em>str</em><em>]</em>)</p></li>\n<li><p><strong>retry_max_times</strong> (<em>int</em>)</p></li>\n<li><p><strong>extra_headers</strong> (<em>Dict</em><em>[</em><em>str</em><em>, </em><em>str</em><em>]</em>)</p></li>\n<li><p><strong>ca_certificate_path</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>client_certificate_path</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>disable_ssl_verification</strong> (<em>bool</em>)</p></li>\n<li><p><strong>client_mode</strong> (<em>ClientMode</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>datahub_component</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.timeout">\n<span class="sig-name descname"><span class="pre">timeout</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">Union[float,</span> <span class="pre">Tuple[float,</span> <span class="pre">float],</span> <span class="pre">None]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.retry_status_codes">\n<span class="sig-name descname"><span class="pre">retry_status_codes</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">List[int]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.retry_methods">\n<span class="sig-name descname"><span class="pre">retry_methods</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">List[str]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.retry_max_times">\n<span class="sig-name descname"><span class="pre">retry_max_times</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">int</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.extra_headers">\n<span class="sig-name descname"><span class="pre">extra_headers</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">Dict[str,</span> <span class="pre">str]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.ca_certificate_path">\n<span class="sig-name descname"><span class="pre">ca_certificate_path</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">Optional[str]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.client_certificate_path">\n<span class="sig-name descname"><span class="pre">client_certificate_path</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">Optional[str]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.disable_ssl_verification">\n<span class="sig-name descname"><span class="pre">disable_ssl_verification</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">bool</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.client_mode">\n<span class="sig-name descname"><span class="pre">client_mode</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">Optional[ClientMode]</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.datahub_component">\n<span class="sig-name descname"><span class="pre">datahub_component</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">Optional[str]</span></em></dt>\n<dd></dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.build_session">\n<span class="sig-name descname"><span class="pre">build_session</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Session</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.get_client_mode_from_session">\n<em class="property"><span class="pre">classmethod</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">get_client_mode_from_session</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">session</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Extract the ClientMode enum from a requests Session by checking the headers.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>session</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Session</span></code>) \u2013 The requests.Session object to check</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">ClientMode</span></code>]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>The corresponding ClientMode enum value if found, None otherwise</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.RequestsSessionConfig.model_config">\n<span class="sig-name descname"><span class="pre">model_config</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">ClassVar[ConfigDict]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">{\'_schema_extra\':</span> <span class="pre">&lt;function</span> <span class="pre">ConfigModel.Config._schema_extra&gt;,</span> <span class="pre">\'extra\':</span> <span class="pre">\'forbid\',</span> <span class="pre">\'ignored_types\':</span> <span class="pre">(&lt;class</span> <span class="pre">\'cached_property.cached_property\'&gt;,),</span> <span class="pre">\'json_schema_extra\':</span> <span class="pre">&lt;function</span> <span class="pre">ConfigModel.Config._schema_extra&gt;}</span></em></dt>\n<dd><p>Configuration for the model, should be a dictionary conforming to [<cite>ConfigDict</cite>][pydantic.config.ConfigDict].</p>\n</dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.rest_emitter.</span></span><span class="sig-name descname"><span class="pre">DataHubRestEmitter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">gms_server</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">token</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">timeout_sec</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">connect_timeout_sec</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">read_timeout_sec</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">retry_status_codes</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">retry_methods</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">retry_max_times</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_headers</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">ca_certificate_path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">client_certificate_path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">disable_ssl_verification</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">openapi_ingestion</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">client_mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">datahub_component</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">Closeable</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">Emitter</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>gms_server</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>token</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>timeout_sec</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">float</span></code>])</p></li>\n<li><p><strong>connect_timeout_sec</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">float</span></code>])</p></li>\n<li><p><strong>read_timeout_sec</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">float</span></code>])</p></li>\n<li><p><strong>retry_status_codes</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>]])</p></li>\n<li><p><strong>retry_methods</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>retry_max_times</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>])</p></li>\n<li><p><strong>extra_headers</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>ca_certificate_path</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>client_certificate_path</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>disable_ssl_verification</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n<li><p><strong>openapi_ingestion</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>])</p></li>\n<li><p><strong>client_mode</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">ClientMode</span></code>])</p></li>\n<li><p><strong>datahub_component</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py property">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.server_config">\n<em class="property"><span class="pre">property</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">server_config</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">RestServiceConfig</span></em></dt>\n<dd></dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.fetch_server_config">\n<span class="sig-name descname"><span class="pre">fetch_server_config</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><p>Fetch configuration from the server if not already loaded.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">RestServiceConfig</span></code></p>\n</dd>\n<dt class="field-even">Returns<span class="colon">:</span></dt>\n<dd class="field-even"><p>The configuration dictionary</p>\n</dd>\n<dt class="field-odd">Raises<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>ConfigurationError</strong> \u2013 If there\u2019s an error fetching or validating the configuration</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.test_connection">\n<span class="sig-name descname"><span class="pre">test_connection</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.get_server_config">\n<span class="sig-name descname"><span class="pre">get_server_config</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.to_graph">\n<span class="sig-name descname"><span class="pre">to_graph</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><a class="reference internal" href="#datahub.ingestion.graph.client.DataHubGraph" title="datahub.ingestion.graph.client.DataHubGraph"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubGraph</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit">\n<span class="sig-name descname"><span class="pre">emit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">item</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">emit_mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">EmitMode.SYNC_PRIMARY</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>item</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.UsageAggregationClass" title="datahub.metadata.schema_classes.UsageAggregationClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">UsageAggregationClass</span></code></a>])</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>]])</p></li>\n<li><p><strong>emit_mode</strong> (<a class="reference internal" href="#datahub.emitter.rest_emitter.EmitMode" title="datahub.emitter.rest_emitter.EmitMode"><code class="xref py py-class docutils literal notranslate"><span class="pre">EmitMode</span></code></a>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit_mce">\n<span class="sig-name descname"><span class="pre">emit_mce</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit_mcp">\n<span class="sig-name descname"><span class="pre">emit_mcp</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mcp</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">async_flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">emit_mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">EmitMode.SYNC_PRIMARY</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">wait_timeout</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">datetime.timedelta(seconds=3600)</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mcp</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>])</p></li>\n<li><p><strong>async_flag</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>])</p></li>\n<li><p><strong>emit_mode</strong> (<a class="reference internal" href="#datahub.emitter.rest_emitter.EmitMode" title="datahub.emitter.rest_emitter.EmitMode"><code class="xref py py-class docutils literal notranslate"><span class="pre">EmitMode</span></code></a>)</p></li>\n<li><p><strong>wait_timeout</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">timedelta</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit_mcps">\n<span class="sig-name descname"><span class="pre">emit_mcps</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mcps</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">emit_mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">EmitMode.SYNC_PRIMARY</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">wait_timeout</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">datetime.timedelta(seconds=3600)</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mcps</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Sequence</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>]])</p></li>\n<li><p><strong>emit_mode</strong> (<a class="reference internal" href="#datahub.emitter.rest_emitter.EmitMode" title="datahub.emitter.rest_emitter.EmitMode"><code class="xref py py-class docutils literal notranslate"><span class="pre">EmitMode</span></code></a>)</p></li>\n<li><p><strong>wait_timeout</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">timedelta</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.emit_usage">\n<span class="sig-name descname"><span class="pre">emit_usage</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">usageStats</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>usageStats</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.UsageAggregationClass" title="datahub.metadata.schema_classes.UsageAggregationClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">UsageAggregationClass</span></code></a>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.flush">\n<span class="sig-name descname"><span class="pre">flush</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DataHubRestEmitter.close">\n<span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.rest_emitter.DatahubRestEmitter">\n<span class="sig-prename descclassname"><span class="pre">datahub.emitter.rest_emitter.</span></span><span class="sig-name descname"><span class="pre">DatahubRestEmitter</span></span></dt>\n<dd><p>alias of <a class="reference internal" href="#datahub.emitter.rest_emitter.DataHubRestEmitter" title="datahub.emitter.rest_emitter.DataHubRestEmitter"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubRestEmitter</span></code></a></p>\n</dd></dl>\n<span class="target" id="module-datahub.emitter.kafka_emitter"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.kafka_emitter.</span></span><span class="sig-name descname"><span class="pre">KafkaEmitterConfig</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">ConfigModel</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>data</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>)</p></li>\n<li><p><strong>connection</strong> (<em>KafkaProducerConnectionConfig</em>)</p></li>\n<li><p><strong>topic_routes</strong> (<em>Dict</em><em>[</em><em>str</em><em>, </em><em>str</em><em>]</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig.connection">\n<span class="sig-name descname"><span class="pre">connection</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">KafkaProducerConnectionConfig</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig.topic_routes">\n<span class="sig-name descname"><span class="pre">topic_routes</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">,</span> <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em></dt>\n<dd></dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig.validate_topic_routes">\n<em class="property"><span class="pre">classmethod</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">validate_topic_routes</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">v</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>v</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.KafkaEmitterConfig.model_config">\n<span class="sig-name descname"><span class="pre">model_config</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">ClassVar[ConfigDict]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">{\'_schema_extra\':</span> <span class="pre">&lt;function</span> <span class="pre">ConfigModel.Config._schema_extra&gt;,</span> <span class="pre">\'extra\':</span> <span class="pre">\'forbid\',</span> <span class="pre">\'ignored_types\':</span> <span class="pre">(&lt;class</span> <span class="pre">\'cached_property.cached_property\'&gt;,),</span> <span class="pre">\'json_schema_extra\':</span> <span class="pre">&lt;function</span> <span class="pre">ConfigModel.Config._schema_extra&gt;}</span></em></dt>\n<dd><p>Configuration for the model, should be a dictionary conforming to [<cite>ConfigDict</cite>][pydantic.config.ConfigDict].</p>\n</dd></dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.emitter.kafka_emitter.</span></span><span class="sig-name descname"><span class="pre">DatahubKafkaEmitter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">config</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">Closeable</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">Emitter</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>config</strong> (<a class="reference internal" href="#datahub.emitter.kafka_emitter.KafkaEmitterConfig" title="datahub.emitter.kafka_emitter.KafkaEmitterConfig"><code class="xref py py-class docutils literal notranslate"><span class="pre">KafkaEmitterConfig</span></code></a>)</p>\n</dd>\n</dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.emit">\n<span class="sig-name descname"><span class="pre">emit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">item</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>item</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>])</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>]])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.emit_mce_async">\n<span class="sig-name descname"><span class="pre">emit_mce_async</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mce</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mce</strong> (<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>)</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.emit_mcp_async">\n<span class="sig-name descname"><span class="pre">emit_mcp_async</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">mcp</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">callback</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>mcp</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>])</p></li>\n<li><p><strong>callback</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Callable</span></code>[[<code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>], <code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.flush">\n<span class="sig-name descname"><span class="pre">flush</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.emitter.kafka_emitter.DatahubKafkaEmitter.close">\n<span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<span class="target" id="module-datahub.ingestion.graph.client"></span><dl class="py class">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.RelatedEntity">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">RelatedEntity</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">via</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">object</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>relationship_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>via</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n</dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.RelatedEntity.urn">\n<span class="sig-name descname"><span class="pre">urn</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.RelatedEntity.relationship_type">\n<span class="sig-name descname"><span class="pre">relationship_type</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.RelatedEntity.via">\n<span class="sig-name descname"><span class="pre">via</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code><span class="pre">[</span><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code><span class="pre">]</span></em><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">None</span></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.entity_type_to_graphql">\n<span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">entity_type_to_graphql</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Convert the entity types into GraphQL \u201cEntityType\u201d enum values.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.flexible_entity_type_to_graphql">\n<span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">flexible_entity_type_to_graphql</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_type</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">DataHubGraph</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">config</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <a class="reference internal" href="#datahub.emitter.rest_emitter.DataHubRestEmitter" title="datahub.emitter.rest_emitter.DataHubRestEmitter"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubRestEmitter</span></code></a>, <code class="xref py py-class docutils literal notranslate"><span class="pre">EntityVersioningAPI</span></code></p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>config</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">DatahubClientConfig</span></code>)</p>\n</dd>\n</dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.test_connection">\n<span class="sig-name descname"><span class="pre">test_connection</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py property">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.frontend_base_url">\n<em class="property"><span class="pre">property</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">frontend_base_url</span></span><em class="property"><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="pre">str</span></em></dt>\n<dd><p>Get the public-facing base url of the frontend</p>\n<p>This url can be used to construct links to the frontend. The url will not include a trailing slash.</p>\n<p>Note: Only supported with DataHub Cloud.</p>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.url_for">\n<span class="sig-name descname"><span class="pre">url_for</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get the UI url for an entity.</p>\n<p>Note: Only supported with DataHub Cloud.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <a class="reference internal" href="urns.html#datahub.metadata.urns.Urn" title="datahub.metadata.urns.Urn"><code class="xref py py-class docutils literal notranslate"><span class="pre">Urn</span></code></a>]) \u2013 The urn of the entity to get the url for.</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>The public-facing url for the entity.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.from_emitter">\n<em class="property"><span class="pre">classmethod</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">from_emitter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">emitter</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>emitter</strong> (<a class="reference internal" href="#datahub.emitter.rest_emitter.DataHubRestEmitter" title="datahub.emitter.rest_emitter.DataHubRestEmitter"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubRestEmitter</span></code></a>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="#datahub.ingestion.graph.client.DataHubGraph" title="datahub.ingestion.graph.client.DataHubGraph"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubGraph</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.make_rest_sink">\n<span class="sig-name descname"><span class="pre">make_rest_sink</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">run_id</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'__datahub-graph-client\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_sink_config</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>run_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>extra_sink_config</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterator</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">DatahubRestSink</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.emit_all">\n<span class="sig-name descname"><span class="pre">emit_all</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">items</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">run_id</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'__datahub-graph-client\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Emit all items in the iterable using multiple threads.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>items</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeEventClass" title="datahub.metadata.schema_classes.MetadataChangeEventClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeEventClass</span></code></a>, <a class="reference internal" href="models.html#datahub.metadata.schema_classes.MetadataChangeProposalClass" title="datahub.metadata.schema_classes.MetadataChangeProposalClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalClass</span></code></a>, <a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>]])</p></li>\n<li><p><strong>run_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspect">\n<span class="sig-name descname"><span class="pre">get_aspect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get an aspect for an entity.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]) \u2013 The type class of the aspect being requested (e.g. datahub.metadata.schema_classes.DatasetProperties)</p></li>\n<li><p><strong>version</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>) \u2013 The version of the aspect to retrieve. The default of 0 means latest. Versions &gt; 0 go from oldest to newest, so 1 is the oldest.</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>the Aspect as a dictionary if present, None if no aspect was found (HTTP status 404)</p>\n</dd>\n<dt class="field-even">Raises<span class="colon">:</span></dt>\n<dd class="field-even"><ul class="simple">\n<li><p><strong>TypeError</strong> \u2013 if the aspect type is a timeseries aspect</p></li>\n<li><p><strong>HttpError</strong> \u2013 if the HTTP response is not a 200 or a 404</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspect_v2">\n<span class="sig-name descname"><span class="pre">get_aspect_v2</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type_name</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n<li><p><strong>aspect</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect_type_name</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>version</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_config">\n<span class="sig-name descname"><span class="pre">get_config</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_ownership">\n<span class="sig-name descname"><span class="pre">get_ownership</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.OwnershipClass" title="datahub.metadata.schema_classes.OwnershipClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">OwnershipClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_schema_metadata">\n<span class="sig-name descname"><span class="pre">get_schema_metadata</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.SchemaMetadataClass" title="datahub.metadata.schema_classes.SchemaMetadataClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">SchemaMetadataClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_domain_properties">\n<span class="sig-name descname"><span class="pre">get_domain_properties</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DomainPropertiesClass" title="datahub.metadata.schema_classes.DomainPropertiesClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DomainPropertiesClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_dataset_properties">\n<span class="sig-name descname"><span class="pre">get_dataset_properties</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DatasetPropertiesClass" title="datahub.metadata.schema_classes.DatasetPropertiesClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatasetPropertiesClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_tags">\n<span class="sig-name descname"><span class="pre">get_tags</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.GlobalTagsClass" title="datahub.metadata.schema_classes.GlobalTagsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">GlobalTagsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_glossary_terms">\n<span class="sig-name descname"><span class="pre">get_glossary_terms</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.GlossaryTermsClass" title="datahub.metadata.schema_classes.GlossaryTermsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">GlossaryTermsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_domain">\n<span class="sig-name descname"><span class="pre">get_domain</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DomainsClass" title="datahub.metadata.schema_classes.DomainsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DomainsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_browse_path">\n<span class="sig-name descname"><span class="pre">get_browse_path</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.BrowsePathsClass" title="datahub.metadata.schema_classes.BrowsePathsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">BrowsePathsClass</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_usage_aspects_from_urn">\n<span class="sig-name descname"><span class="pre">get_usage_aspects_from_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start_timestamp</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">end_timestamp</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>start_timestamp</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>end_timestamp</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.DatasetUsageStatisticsClass" title="datahub.metadata.schema_classes.DatasetUsageStatisticsClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">DatasetUsageStatisticsClass</span></code></a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.list_all_entity_urns">\n<span class="sig-name descname"><span class="pre">list_all_entity_urns</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">count</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>start</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>count</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_latest_timeseries_value">\n<span class="sig-name descname"><span class="pre">get_latest_timeseries_value</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">filter_criteria_map</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n<li><p><strong>filter_criteria_map</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_timeseries_values">\n<span class="sig-name descname"><span class="pre">get_timeseries_values</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">filter</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">limit</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">10</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspect_type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)])</p></li>\n<li><p><strong>filter</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>])</p></li>\n<li><p><strong>limit</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_entity_raw">\n<span class="sig-name descname"><span class="pre">get_entity_raw</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspects_for_entity">\n<span class="sig-name descname"><span class="pre">get_aspects_for_entity</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_types</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get multiple aspects for an entity.</p>\n<p>Deprecated in favor of <cite>get_aspect</cite> (single aspect) or <cite>get_entity_semityped</cite> (full\nentity without manually specifying a list of aspects).</p>\n<p>Warning: Do not use this method to determine if an entity exists!\nThis method will always return an entity, even if it doesn\u2019t exist. This is an issue with how DataHub server\nresponds to these calls, and will be fixed automatically when the server-side issue is fixed.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity</p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 List of aspect names being requested (e.g. [schemaMetadata, datasetProperties])</p></li>\n<li><p><strong>aspect_types</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Type</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]]) \u2013 List of aspect type classes being requested (e.g. [datahub.metadata.schema_classes.DatasetProperties])</p></li>\n<li><p><strong>entity_urn</strong></p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code>(<code class="docutils literal notranslate"><span class="pre">Aspect</span></code>, bound= <code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>)]]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>Optionally, a map of aspect_name to aspect_value as a dictionary if present, aspect_value will be set to None if that aspect was not found. Returns None on HTTP status 404.</p>\n</dd>\n<dt class="field-even">Raises<span class="colon">:</span></dt>\n<dd class="field-even"><p><strong>HttpError</strong> \u2013 if the HTTP response is not a 200</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_entity_as_mcps">\n<span class="sig-name descname"><span class="pre">get_entity_as_mcps</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get all non-timeseries aspects for an entity.</p>\n<p>By formatting the entity\u2019s aspects as MCPWs, we can also include SystemMetadata.</p>\n<p>Warning: Do not use this method to determine if an entity exists! This method will always return\nsomething, even if the entity doesn\u2019t actually exist in DataHub.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity</p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]) \u2013 Optional list of aspect names being requested (e.g. [\u201cschemaMetadata\u201d, \u201cdatasetProperties\u201d])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<a class="reference internal" href="builder.html#datahub.emitter.mcp.MetadataChangeProposalWrapper" title="datahub.emitter.mcp.MetadataChangeProposalWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">MetadataChangeProposalWrapper</span></code></a>]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>A list of MCPWs.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_entity_semityped">\n<span class="sig-name descname"><span class="pre">get_entity_semityped</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get (all) non-timeseries aspects for an entity.</p>\n<p>This method is called \u201csemityped\u201d because it returns aspects as a dictionary of\nproperly typed objects. While the returned dictionary is constrained using a TypedDict,\nthe return type is still fairly loose.</p>\n<p>Warning: Do not use this method to determine if an entity exists! This method will always return\nsomething, even if the entity doesn\u2019t actually exist in DataHub.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity</p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]) \u2013 Optional list of aspect names being requested (e.g. [\u201cschemaMetadata\u201d, \u201cdatasetProperties\u201d])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="models.html#datahub.metadata.schema_classes.AspectBag" title="datahub.metadata.schema_classes.AspectBag"><code class="xref py py-class docutils literal notranslate"><span class="pre">AspectBag</span></code></a></p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>A dictionary of aspect name to aspect value. If an aspect is not found, it will\nnot be present in the dictionary. The entity\u2019s key aspect will always be present.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_domain_urn_by_name">\n<span class="sig-name descname"><span class="pre">get_domain_urn_by_name</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">domain_name</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Retrieve a domain urn based on its name. Returns None if there is no match found</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>domain_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_connection_json">\n<span class="sig-name descname"><span class="pre">get_connection_json</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Retrieve a connection config.</p>\n<p>This is only supported with DataHub Cloud.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the connection.</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code>]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>The connection config as a dictionary, or None if the connection was not found.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.set_connection_json">\n<span class="sig-name descname"><span class="pre">set_connection_json</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">config</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Set a connection config.</p>\n<p>This is only supported with DataHub Cloud.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the connection.</p></li>\n<li><p><strong>platform_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the platform.</p></li>\n<li><p><strong>config</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">ConfigModel</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">BaseModel</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code>]) \u2013 The connection config as a dictionary or a ConfigModel.</p></li>\n<li><p><strong>name</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 The name of the connection.</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_container_urns_by_filter">\n<span class="sig-name descname"><span class="pre">get_container_urns_by_filter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">env</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">search_query</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'*\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Return container urns that match based on query</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>env</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>search_query</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_urns_by_filter">\n<span class="sig-name descname"><span class="pre">get_urns_by_filter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity_types</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">query</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">container</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">status</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">RemovedStatusFilter.NOT_SOFT_DELETED</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">batch_size</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">10000</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extraFilters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_or_filters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Fetch all urns that match all of the given filters.</p>\n<p>Filters are combined conjunctively. If multiple filters are specified, the results will match all of them.\nNote that specifying a platform filter will automatically exclude all entity types that do not have a platform.\nThe same goes for the env filter.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_types</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Sequence</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]) \u2013 List of entity types to include. If None, all entity types will be returned.</p></li>\n<li><p><strong>platform</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Platform to filter on. If None, all platforms will be returned.</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Platform instance to filter on. If None, all platform instances will be returned.</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Environment (e.g. PROD, DEV) to filter on. If None, all environments will be returned.</p></li>\n<li><p><strong>query</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Query string to filter on. If None, all entities will be returned.</p></li>\n<li><p><strong>container</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 A container urn that entities must be within.\nThis works recursively, so it will include entities within sub-containers as well.\nIf None, all entities will be returned.\nNote that this requires browsePathV2 aspects (added in 0.10.4+).</p></li>\n<li><p><strong>status</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">RemovedStatusFilter</span></code>]) \u2013 Filter on the deletion status of the entity. The default is only return non-soft-deleted entities.</p></li>\n<li><p><strong>extraFilters</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]]]]) \u2013 Additional filters to apply. If specified, the results will match all of the filters.</p></li>\n<li><p><strong>batch_size</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>extra_or_filters</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Literal</span></code>[<code class="docutils literal notranslate"><span class="pre">\'and\'</span></code>], <code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]]]]]])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>An iterable of urns that match the filters.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_results_by_filter">\n<span class="sig-name descname"><span class="pre">get_results_by_filter</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity_types</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">query</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">container</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">status</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">RemovedStatusFilter.NOT_SOFT_DELETED</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">batch_size</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">10000</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_and_filters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_or_filters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">extra_source_fields</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">skip_cache</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Fetch all results that match all of the given filters.</p>\n<p>Note: Only supported with DataHub Cloud.</p>\n<p>Filters are combined conjunctively. If multiple filters are specified, the results will match all of them.\nNote that specifying a platform filter will automatically exclude all entity types that do not have a platform.\nThe same goes for the env filter.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_types</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]) \u2013 List of entity types to include. If None, all entity types will be returned.</p></li>\n<li><p><strong>platform</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Platform to filter on. If None, all platforms will be returned.</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Platform instance to filter on. If None, all platform instances will be returned.</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Environment (e.g. PROD, DEV) to filter on. If None, all environments will be returned.</p></li>\n<li><p><strong>query</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 Query string to filter on. If None, all entities will be returned.</p></li>\n<li><p><strong>container</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 A container urn that entities must be within.\nThis works recursively, so it will include entities within sub-containers as well.\nIf None, all entities will be returned.\nNote that this requires browsePathV2 aspects (added in 0.10.4+).</p></li>\n<li><p><strong>status</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">RemovedStatusFilter</span></code>) \u2013 Filter on the deletion status of the entity. The default is only return non-soft-deleted entities.</p></li>\n<li><p><strong>extra_and_filters</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]]]]) \u2013 Additional filters to apply. If specified, the\nresults will match all of the filters.</p></li>\n<li><p><strong>extra_or_filters</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-data docutils literal notranslate"><span class="pre">Literal</span></code>[<code class="docutils literal notranslate"><span class="pre">\'and\'</span></code>], <code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Union</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]]]]]]) \u2013 Additional filters to apply. If specified, the\nresults will match any of the filters.</p></li>\n<li><p><strong>batch_size</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>extra_source_fields</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>skip_cache</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code>]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>An iterable of urns that match the filters.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_latest_pipeline_checkpoint">\n<span class="sig-name descname"><span class="pre">get_latest_pipeline_checkpoint</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">pipeline_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>pipeline_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Checkpoint</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">GenericCheckpointState</span></code>]]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_search_results">\n<span class="sig-name descname"><span class="pre">get_search_results</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">start</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">count</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'dataset\'</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>start</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>count</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>entity</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_aspect_counts">\n<span class="sig-name descname"><span class="pre">get_aspect_counts</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">aspect</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">urn_like</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>aspect</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>urn_like</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.execute_graphql">\n<span class="sig-name descname"><span class="pre">execute_graphql</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">query</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">variables</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">operation_name</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">format_exception</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>query</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>variables</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>])</p></li>\n<li><p><strong>operation_name</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>format_exception</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py class">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection">\n<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">RelationshipDirection</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">value</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">StrEnum</span></code></p>\n<p>An enumeration.</p>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection.INCOMING">\n<span class="sig-name descname"><span class="pre">INCOMING</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'INCOMING\'</span></em></dt>\n<dd></dd></dl>\n<dl class="py attribute">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection.OUTGOING">\n<span class="sig-name descname"><span class="pre">OUTGOING</span></span><em class="property"><span class="w"> </span><span class="p"><span class="pre">=</span></span><span class="w"> </span><span class="pre">\'OUTGOING\'</span></em></dt>\n<dd></dd></dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_related_entities">\n<span class="sig-name descname"><span class="pre">get_related_entities</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">relationship_types</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">direction</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>relationship_types</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>direction</strong> (<a class="reference internal" href="#datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection" title="datahub.ingestion.graph.client.DataHubGraph.RelationshipDirection"><code class="xref py py-class docutils literal notranslate"><span class="pre">RelationshipDirection</span></code></a>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Iterable</span></code>[<a class="reference internal" href="#datahub.ingestion.graph.client.RelatedEntity" title="datahub.ingestion.graph.client.RelatedEntity"><code class="xref py py-class docutils literal notranslate"><span class="pre">RelatedEntity</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.exists">\n<span class="sig-name descname"><span class="pre">exists</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.soft_delete_entity">\n<span class="sig-name descname"><span class="pre">soft_delete_entity</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">run_id</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'__datahub-graph-client\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">deletion_timestamp</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Soft-delete an entity by urn.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity to soft-delete.</p></li>\n<li><p><strong>run_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>deletion_timestamp</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.set_soft_delete_status">\n<span class="sig-name descname"><span class="pre">set_soft_delete_status</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delete</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">run_id</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'__datahub-graph-client\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">deletion_timestamp</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Change status of soft-delete an entity by urn.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity to soft-delete.</p></li>\n<li><p><strong>delete</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n<li><p><strong>run_id</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>deletion_timestamp</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.hard_delete_entity">\n<span class="sig-name descname"><span class="pre">hard_delete_entity</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Hard delete an entity by urn.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity to hard delete.</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Tuple</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>A tuple of (rows_affected, timeseries_rows_affected).</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.delete_entity">\n<span class="sig-name descname"><span class="pre">delete_entity</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">hard</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Delete an entity by urn.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity to delete.</p></li>\n<li><p><strong>hard</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>) \u2013 Whether to hard delete the entity. If False (default), the entity will be soft deleted.</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.hard_delete_timeseries_aspect">\n<span class="sig-name descname"><span class="pre">hard_delete_timeseries_aspect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspect_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start_time</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">end_time</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Hard delete timeseries aspects of an entity.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity.</p></li>\n<li><p><strong>aspect_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The name of the timeseries aspect to delete.</p></li>\n<li><p><strong>start_time</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">datetime</span></code>]) \u2013 The start time of the timeseries data to delete. If not specified, defaults to the beginning of time.</p></li>\n<li><p><strong>end_time</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">datetime</span></code>]) \u2013 The end time of the timeseries data to delete. If not specified, defaults to the end of time.</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>The number of timeseries rows affected.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.delete_references_to_urn">\n<span class="sig-name descname"><span class="pre">delete_references_to_urn</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">dry_run</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Delete references to a given entity.</p>\n<p>This is useful for cleaning up references to an entity that is about to be deleted.\nFor example, when deleting a tag, you might use this to remove that tag from all other\nentities that reference it.</p>\n<p>This does not delete the entity itself.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The urn of the entity to delete references to.</p></li>\n<li><p><strong>dry_run</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>) \u2013 If True, do not actually delete the references, just return the count of\nreferences and the list of related aspects.</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-data docutils literal notranslate"><span class="pre">Tuple</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>]]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>A tuple of (reference_count, sample of related_aspects).</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.initialize_schema_resolver_from_datahub">\n<span class="sig-name descname"><span class="pre">initialize_schema_resolver_from_datahub</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">batch_size</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">100</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>batch_size</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">SchemaResolver</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.parse_sql_lineage">\n<span class="sig-name descname"><span class="pre">parse_sql_lineage</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">sql</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">env</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">\'PROD\'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">default_db</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">default_schema</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">default_dialect</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>sql</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_instance</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>env</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>default_db</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>default_schema</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>default_dialect</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">SqlParsingResult</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.create_tag">\n<span class="sig-name descname"><span class="pre">create_tag</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tag_name</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><p><strong>tag_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.remove_tag">\n<span class="sig-name descname"><span class="pre">remove_tag</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tag_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">resource_urn</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>tag_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>resource_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.run_assertion">\n<span class="sig-name descname"><span class="pre">run_assertion</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">save_result</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parameters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">async_flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>save_result</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n<li><p><strong>parameters</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>async_flag</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.run_assertions">\n<span class="sig-name descname"><span class="pre">run_assertions</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urns</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">save_result</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parameters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">async_flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urns</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>save_result</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n<li><p><strong>parameters</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>async_flag</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.run_assertions_for_asset">\n<span class="sig-name descname"><span class="pre">run_assertions_for_asset</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">tag_urns</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parameters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">async_flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>tag_urns</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>parameters</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>async_flag</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_entities_v2">\n<span class="sig-name descname"><span class="pre">get_entities_v2</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">urns</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">with_system_metadata</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>urns</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]])</p></li>\n<li><p><strong>with_system_metadata</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>)</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Any</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.get_entities">\n<span class="sig-name descname"><span class="pre">get_entities</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">entity_name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">urns</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">aspects</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">with_system_metadata</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>\n<dd><p>Get entities using the OpenAPI v3 endpoint, deserializing aspects into typed objects.</p>\n<dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>entity_name</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>) \u2013 The entity type name</p></li>\n<li><p><strong>urns</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]) \u2013 List of entity URNs to fetch</p></li>\n<li><p><strong>aspects</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]) \u2013 Optional list of aspect names to fetch. If None, all aspects will be fetched.</p></li>\n<li><p><strong>with_system_metadata</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code>) \u2013 If True, return system metadata along with each aspect.</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Tuple</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">_Aspect</span></code>, <code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<a class="reference internal" href="models.html#datahub.metadata.schema_classes.SystemMetadataClass" title="datahub.metadata.schema_classes.SystemMetadataClass"><code class="xref py py-class docutils literal notranslate"><span class="pre">SystemMetadataClass</span></code></a>]]]]</p>\n</dd>\n<dt class="field-odd">Returns<span class="colon">:</span></dt>\n<dd class="field-odd"><p>A dictionary mapping URNs to a dictionary of aspect name to tuples of\n(typed aspect object, system metadata). If with_system_metadata is False,\nthe system metadata in the tuple will be None.</p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.upsert_custom_assertion">\n<span class="sig-name descname"><span class="pre">upsert_custom_assertion</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">entity_urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">description</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_name</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">platform_urn</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">field_path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">external_url</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">logic</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>entity_urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>type</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>description</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>platform_name</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>platform_urn</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>field_path</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>external_url</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>logic</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.report_assertion_result">\n<span class="sig-name descname"><span class="pre">report_assertion_result</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">urn</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">timestamp_millis</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">properties</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">external_url</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">error_type</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">error_message</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>urn</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>)</p></li>\n<li><p><strong>timestamp_millis</strong> (<code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code>)</p></li>\n<li><p><strong>type</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Literal</span></code>[<code class="docutils literal notranslate"><span class="pre">\'SUCCESS\'</span></code>, <code class="docutils literal notranslate"><span class="pre">\'FAILURE\'</span></code>, <code class="docutils literal notranslate"><span class="pre">\'ERROR\'</span></code>, <code class="docutils literal notranslate"><span class="pre">\'INIT\'</span></code>])</p></li>\n<li><p><strong>properties</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">List</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">Dict</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>, <code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>]]])</p></li>\n<li><p><strong>external_url</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>error_type</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n<li><p><strong>error_message</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n<dl class="py method">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.DataHubGraph.close">\n<span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Return type<span class="colon">:</span></dt>\n<dd class="field-odd"><p><code class="xref py py-obj docutils literal notranslate"><span class="pre">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n</dd></dl>\n<dl class="py function">\n<dt class="sig sig-object py" id="datahub.ingestion.graph.client.get_default_graph">\n<span class="sig-prename descclassname"><span class="pre">datahub.ingestion.graph.client.</span></span><span class="sig-name descname"><span class="pre">get_default_graph</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">client_mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">datahub_component</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>\n<dd><dl class="field-list simple">\n<dt class="field-odd">Parameters<span class="colon">:</span></dt>\n<dd class="field-odd"><ul class="simple">\n<li><p><strong>client_mode</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">ClientMode</span></code>])</p></li>\n<li><p><strong>datahub_component</strong> (<code class="xref py py-data docutils literal notranslate"><span class="pre">Optional</span></code>[<code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code>])</p></li>\n</ul>\n</dd>\n<dt class="field-even">Return type<span class="colon">:</span></dt>\n<dd class="field-even"><p><a class="reference internal" href="#datahub.ingestion.graph.client.DataHubGraph" title="datahub.ingestion.graph.client.DataHubGraph"><code class="xref py py-class docutils literal notranslate"><span class="pre">DataHubGraph</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n</section>\n</article>'}}))}y.isMDXComponent=!0}}]);