"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[10831],{7653:(e,t,r)=>{r.d(t,{A:()=>a});const a={icon:{tag:"svg",attrs:{"fill-rule":"evenodd",viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z"}}]},name:"close-circle",theme:"filled"}},4732:(e,t,r)=>{r.d(t,{A:()=>c});var a=r(89379),n=r(96540),o=r(7653),i=r(89990),l=function(e,t){return n.createElement(i.A,(0,a.A)((0,a.A)({},e),{},{ref:t,icon:o.A}))};const c=n.forwardRef(l)},15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>p});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),g=n,p=m["".concat(c,".").concat(g)]||m[g]||d[g]||o;return r?a.createElement(p,i(i({ref:t},u),{},{components:r})):a.createElement(p,i({ref:t},u))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},43655:(e,t,r)=>{r.d(t,{A:()=>f});var a=r(96540),n=r(20053);const o="availabilityCard_P5od",i="managedIcon_AxXO",l="platform_wqXv",c="platformAvailable_Y8lN";var s=r(4732),u=r(89379);const m={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z"}}]},name:"check-circle",theme:"filled"};var d=r(89990),g=function(e,t){return a.createElement(d.A,(0,u.A)((0,u.A)({},e),{},{ref:t,icon:m}))};const p=a.forwardRef(g);const h={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M811.4 418.7C765.6 297.9 648.9 212 512.2 212S258.8 297.8 213 418.6C127.3 441.1 64 519.1 64 612c0 110.5 89.5 200 199.9 200h496.2C870.5 812 960 722.5 960 612c0-92.7-63.1-170.7-148.6-193.3zm36.3 281a123.07 123.07 0 01-87.6 36.3H263.9c-33.1 0-64.2-12.9-87.6-36.3A123.3 123.3 0 01140 612c0-28 9.1-54.3 26.2-76.3a125.7 125.7 0 0166.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10c54.3 14.5 92.1 63.8 92.1 120 0 33.1-12.9 64.3-36.3 87.7z"}}]},name:"cloud",theme:"outlined"};var y=function(e,t){return a.createElement(d.A,(0,u.A)((0,u.A)({},e),{},{ref:t,icon:h}))};const b=a.forwardRef(y),f=({saasOnly:e,ossOnly:t})=>a.createElement("div",{className:(0,n.A)(o,"card")},a.createElement("strong",null,"Feature Availability"),a.createElement("div",null,a.createElement("span",{className:(0,n.A)(l,!e&&c)},"Self-Hosted DataHub ",e?a.createElement(s.A,null):a.createElement(p,null))),a.createElement("div",null,a.createElement(b,{className:i}),a.createElement("span",{className:(0,n.A)(l,!t&&c)},"DataHub Cloud ",t?a.createElement(s.A,null):a.createElement(p,null))))},73827:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>u,toc:()=>d});r(96540);var a=r(15680),n=r(43655);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const c={title:"Monitoring Remote Executor",description:"Learn how to monitor and observe Remote Executor health and performance",sidebar_label:"Monitoring Remote Executor",slug:"/managed-datahub/remote-executor/monitoring",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/remote-executor/monitoring.md"},s="Monitoring Remote Executor",u={unversionedId:"docs/managed-datahub/remote-executor/monitoring",id:"docs/managed-datahub/remote-executor/monitoring",title:"Monitoring Remote Executor",description:"Learn how to monitor and observe Remote Executor health and performance",source:"@site/genDocs/docs/managed-datahub/remote-executor/monitoring.md",sourceDirName:"docs/managed-datahub/remote-executor",slug:"/managed-datahub/remote-executor/monitoring",permalink:"/docs/managed-datahub/remote-executor/monitoring",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/remote-executor/monitoring.md",tags:[],version:"current",frontMatter:{title:"Monitoring Remote Executor",description:"Learn how to monitor and observe Remote Executor health and performance",sidebar_label:"Monitoring Remote Executor",slug:"/managed-datahub/remote-executor/monitoring",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/managed-datahub/remote-executor/monitoring.md"},sidebar:"overviewSidebar",previous:{title:"Configuring Remote Executor",permalink:"/docs/managed-datahub/operator-guide/setting-up-remote-ingestion-executor"},next:{title:"Entity Events API",permalink:"/docs/managed-datahub/datahub-api/entity-events-api"}},m={},d=[{value:"Overview",id:"overview",level:2},{value:"Health Checks",id:"health-checks",level:2},{value:"File-Based Health Checks",id:"file-based-health-checks",level:3},{value:"UI-Based Health Monitoring",id:"ui-based-health-monitoring",level:3},{value:"Advanced: Prometheus Metrics",id:"advanced-prometheus-metrics",level:2},{value:"Metric Categories",id:"metric-categories",level:3},{value:"Prometheus Configuration",id:"prometheus-configuration",level:3},{value:"Discovering Available Metrics",id:"discovering-available-metrics",level:3}],g={toc:d},p="wrapper";function h(e){var{components:t}=e,r=l(e,["components"]);return(0,a.yg)(p,i(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),a.forEach((function(t){o(e,t,r[t])}))}return e}({},g,r),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"monitoring-remote-executor"},"Monitoring Remote Executor"),(0,a.yg)(n.A,{saasOnly:!0,mdxType:"FeatureAvailability"}),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"This guide covers all aspects of monitoring your Remote Executor deployment:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"File-based health checks"),(0,a.yg)("li",{parentName:"ol"},"UI-based health monitoring"),(0,a.yg)("li",{parentName:"ol"},"Advanced Prometheus metrics configuration")),(0,a.yg)("h2",{id:"health-checks"},"Health Checks"),(0,a.yg)("h3",{id:"file-based-health-checks"},"File-Based Health Checks"),(0,a.yg)("p",null,"The Remote Executor uses file-based health checks that can be monitored by your container platform:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Liveness: ",(0,a.yg)("inlineCode",{parentName:"li"},"/tmp/worker_liveness_heartbeat")),(0,a.yg)("li",{parentName:"ul"},"Readiness: ",(0,a.yg)("inlineCode",{parentName:"li"},"/tmp/worker_readiness_heartbeat"))),(0,a.yg)("p",null,"These files are automatically managed by the Remote Executor and can be used by Kubernetes liveness/readiness probes or ECS health checks."),(0,a.yg)("h3",{id:"ui-based-health-monitoring"},"UI-Based Health Monitoring"),(0,a.yg)("p",null,"Monitor Remote Executor health directly in the DataHub UI:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Navigate to ",(0,a.yg)("strong",{parentName:"li"},"Data Sources > Executors")),(0,a.yg)("li",{parentName:"ol"},"View health information for each Pool:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Active Remote Executor instances"),(0,a.yg)("li",{parentName:"ul"},"Last reported time for each executor"),(0,a.yg)("li",{parentName:"ul"},"Status (Active/Stale)"),(0,a.yg)("li",{parentName:"ul"},"Currently running Ingestion tasks and their details")))),(0,a.yg)("p",{align:"center"},(0,a.yg)("img",{width:"90%",src:"https://github.com/datahub-project/static-assets/blob/main/imgs/remote-executor/remote-executor-view-running-tasks.png?raw=true"})),(0,a.yg)("h2",{id:"advanced-prometheus-metrics"},"Advanced: Prometheus Metrics"),(0,a.yg)("p",null,"The Remote Executor exposes metrics on port ",(0,a.yg)("inlineCode",{parentName:"p"},"9087/tcp")," in Prometheus/OpenMetrics format. Metrics can be collected by Prometheus stack or compatible agents, such as DataDog."),(0,a.yg)("h3",{id:"metric-categories"},"Metric Categories"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Ingestion Metrics")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"datahub_executor_worker_ingestion_requests")," - Total jobs received"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"datahub_executor_worker_ingestion_errors")," - Failed jobs (v0.3.9+)"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Resource Metrics")," (v0.3.9+)"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Memory: ",(0,a.yg)("inlineCode",{parentName:"li"},"datahub_executor_memory_*")),(0,a.yg)("li",{parentName:"ul"},"CPU: ",(0,a.yg)("inlineCode",{parentName:"li"},"datahub_executor_cpu_*")),(0,a.yg)("li",{parentName:"ul"},"Disk: ",(0,a.yg)("inlineCode",{parentName:"li"},"datahub_executor_disk_*")),(0,a.yg)("li",{parentName:"ul"},"Network: ",(0,a.yg)("inlineCode",{parentName:"li"},"datahub_executor_net_*"))))),(0,a.yg)("h3",{id:"prometheus-configuration"},"Prometheus Configuration"),(0,a.yg)("p",null,"Example ServiceMonitor resource to allow scraping Remote Executor metrics in Prometheus:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n  name: datahub-remote-executor\nspec:\n  endpoints:\n    - port: metrics\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: datahub-remote-executor\n")),(0,a.yg)("h3",{id:"discovering-available-metrics"},"Discovering Available Metrics"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"View metrics endpoint directly:"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"curl http://your-executor:9087/metrics\n"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Read annotations in Prometheus UI")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Search ",(0,a.yg)("inlineCode",{parentName:"p"},"datahub_executor_*")," in your monitoring system"))),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Platform-specific metrics (e.g., container restarts) should be monitored through native tooling (CloudWatch for ECS, Kubernetes metrics for K8s).")))}h.isMDXComponent=!0}}]);