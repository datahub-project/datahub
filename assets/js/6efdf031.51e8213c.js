"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[95096],{15680:(l,t,n)=>{n.d(t,{xA:()=>i,yg:()=>h});var e=n(96540);function u(l,t,n){return t in l?Object.defineProperty(l,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):l[t]=n,l}function y(l,t){var n=Object.keys(l);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(l);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(l,t).enumerable}))),n.push.apply(n,e)}return n}function g(l){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(Object(n),!0).forEach((function(t){u(l,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(l,t,Object.getOwnPropertyDescriptor(n,t))}))}return l}function r(l,t){if(null==l)return{};var n,e,u=function(l,t){if(null==l)return{};var n,e,u={},y=Object.keys(l);for(e=0;e<y.length;e++)n=y[e],t.indexOf(n)>=0||(u[n]=l[n]);return u}(l,t);if(Object.getOwnPropertySymbols){var y=Object.getOwnPropertySymbols(l);for(e=0;e<y.length;e++)n=y[e],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(l,n)&&(u[n]=l[n])}return u}var a=e.createContext({}),o=function(l){var t=e.useContext(a),n=t;return l&&(n="function"==typeof l?l(t):g(g({},t),l)),n},i=function(l){var t=o(l.components);return e.createElement(a.Provider,{value:t},l.children)},s="mdxType",d={inlineCode:"code",wrapper:function(l){var t=l.children;return e.createElement(e.Fragment,{},t)}},p=e.forwardRef((function(l,t){var n=l.components,u=l.mdxType,y=l.originalType,a=l.parentName,i=r(l,["components","mdxType","originalType","parentName"]),s=o(n),p=u,h=s["".concat(a,".").concat(p)]||s[p]||d[p]||y;return n?e.createElement(h,g(g({ref:t},i),{},{components:n})):e.createElement(h,g({ref:t},i))}));function h(l,t){var n=arguments,u=t&&t.mdxType;if("string"==typeof l||u){var y=n.length,g=new Array(y);g[0]=p;var r={};for(var a in t)hasOwnProperty.call(t,a)&&(r[a]=t[a]);r.originalType=l,r[s]="string"==typeof l?l:u,g[1]=r;for(var o=2;o<y;o++)g[o]=n[o];return e.createElement.apply(null,g)}return e.createElement.apply(null,n)}p.displayName="MDXCreateElement"},81044:(l,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>s});n(96540);var e=n(15680);function u(l,t,n){return t in l?Object.defineProperty(l,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):l[t]=n,l}function y(l,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(t)):function(l,t){var n=Object.keys(l);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(l);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(l,t).enumerable}))),n.push.apply(n,e)}return n}(Object(t)).forEach((function(n){Object.defineProperty(l,n,Object.getOwnPropertyDescriptor(t,n))})),l}function g(l,t){if(null==l)return{};var n,e,u=function(l,t){if(null==l)return{};var n,e,u={},y=Object.keys(l);for(e=0;e<y.length;e++)n=y[e],t.indexOf(n)>=0||(u[n]=l[n]);return u}(l,t);if(Object.getOwnPropertySymbols){var y=Object.getOwnPropertySymbols(l);for(e=0;e<y.length;e++)n=y[e],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(l,n)&&(u[n]=l[n])}return u}const r={id:"enums",title:"Enums",slug:"enums",sidebar_position:5},a=void 0,o={unversionedId:"graphql/enums",id:"version-1.1.0/graphql/enums",title:"Enums",description:"AccessLevel",source:"@site/versioned_docs/version-1.1.0/graphql/enums.md",sourceDirName:"graphql",slug:"/graphql/enums",permalink:"/docs/1.1.0/graphql/enums",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/versioned_docs/version-1.1.0/graphql/enums.md",tags:[],version:"1.1.0",sidebarPosition:5,frontMatter:{id:"enums",title:"Enums",slug:"enums",sidebar_position:5},sidebar:"overviewSidebar",previous:{title:"Unions",permalink:"/docs/1.1.0/graphql/unions"},next:{title:"Scalars",permalink:"/docs/1.1.0/graphql/scalars"}},i={},s=[{value:"AccessLevel",id:"accesslevel",level:2},{value:"AccessTokenDuration",id:"accesstokenduration",level:2},{value:"AccessTokenType",id:"accesstokentype",level:2},{value:"AssertionActionType",id:"assertionactiontype",level:2},{value:"AssertionResultErrorType",id:"assertionresulterrortype",level:2},{value:"AssertionResultType",id:"assertionresulttype",level:2},{value:"AssertionRunStatus",id:"assertionrunstatus",level:2},{value:"AssertionSourceType",id:"assertionsourcetype",level:2},{value:"AssertionStdAggregation",id:"assertionstdaggregation",level:2},{value:"AssertionStdOperator",id:"assertionstdoperator",level:2},{value:"AssertionStdParameterType",id:"assertionstdparametertype",level:2},{value:"AssertionType",id:"assertiontype",level:2},{value:"AssertionValueChangeType",id:"assertionvaluechangetype",level:2},{value:"ChangeCategoryType",id:"changecategorytype",level:2},{value:"ChangeOperationType",id:"changeoperationtype",level:2},{value:"ChartQueryType",id:"chartquerytype",level:2},{value:"ChartType",id:"charttype",level:2},{value:"CorpUserStatus",id:"corpuserstatus",level:2},{value:"CostType",id:"costtype",level:2},{value:"DataContractState",id:"datacontractstate",level:2},{value:"DataHubConnectionDetailsType",id:"datahubconnectiondetailstype",level:2},{value:"DataHubViewType",id:"datahubviewtype",level:2},{value:"DataProcessInstanceRunResultType",id:"dataprocessinstancerunresulttype",level:2},{value:"DataProcessRunStatus",id:"dataprocessrunstatus",level:2},{value:"DatasetAssertionScope",id:"datasetassertionscope",level:2},{value:"DatasetFilterType",id:"datasetfiltertype",level:2},{value:"DatasetLineageType",id:"datasetlineagetype",level:2},{value:"DateInterval",id:"dateinterval",level:2},{value:"EntityType",id:"entitytype",level:2},{value:"FabricType",id:"fabrictype",level:2},{value:"FieldAssertionType",id:"fieldassertiontype",level:2},{value:"FieldMetricType",id:"fieldmetrictype",level:2},{value:"FieldTransformType",id:"fieldtransformtype",level:2},{value:"FieldValuesFailThresholdType",id:"fieldvaluesfailthresholdtype",level:2},{value:"FilterOperator",id:"filteroperator",level:2},{value:"FormPromptType",id:"formprompttype",level:2},{value:"FormType",id:"formtype",level:2},{value:"FreshnessAssertionScheduleType",id:"freshnessassertionscheduletype",level:2},{value:"FreshnessAssertionType",id:"freshnessassertiontype",level:2},{value:"HealthStatus",id:"healthstatus",level:2},{value:"HealthStatusType",id:"healthstatustype",level:2},{value:"IconLibrary",id:"iconlibrary",level:2},{value:"IncidentPriority",id:"incidentpriority",level:2},{value:"IncidentSourceType",id:"incidentsourcetype",level:2},{value:"IncidentStage",id:"incidentstage",level:2},{value:"IncidentState",id:"incidentstate",level:2},{value:"IncidentType",id:"incidenttype",level:2},{value:"IncrementingSegmentFieldTransformerType",id:"incrementingsegmentfieldtransformertype",level:2},{value:"IntendedUserType",id:"intendedusertype",level:2},{value:"LineageDirection",id:"lineagedirection",level:2},{value:"LineageSearchPath",id:"lineagesearchpath",level:2},{value:"LogicalOperator",id:"logicaloperator",level:2},{value:"MediaType",id:"mediatype",level:2},{value:"MLFeatureDataType",id:"mlfeaturedatatype",level:2},{value:"NotebookCellType",id:"notebookcelltype",level:2},{value:"OperationSourceType",id:"operationsourcetype",level:2},{value:"OperationType",id:"operationtype",level:2},{value:"OriginType",id:"origintype",level:2},{value:"OwnerEntityType",id:"ownerentitytype",level:2},{value:"OwnershipSourceType",id:"ownershipsourcetype",level:2},{value:"OwnershipType",id:"ownershiptype",level:2},{value:"PartitionType",id:"partitiontype",level:2},{value:"PersonalSidebarSection",id:"personalsidebarsection",level:2},{value:"PlatformNativeType",id:"platformnativetype",level:2},{value:"PlatformType",id:"platformtype",level:2},{value:"PolicyMatchCondition",id:"policymatchcondition",level:2},{value:"PolicyState",id:"policystate",level:2},{value:"PolicyType",id:"policytype",level:2},{value:"PostContentType",id:"postcontenttype",level:2},{value:"PostType",id:"posttype",level:2},{value:"PropertyCardinality",id:"propertycardinality",level:2},{value:"QueryLanguage",id:"querylanguage",level:2},{value:"QuerySource",id:"querysource",level:2},{value:"RecommendationRenderType",id:"recommendationrendertype",level:2},{value:"RelationshipDirection",id:"relationshipdirection",level:2},{value:"ScenarioType",id:"scenariotype",level:2},{value:"SchemaAssertionCompatibility",id:"schemaassertioncompatibility",level:2},{value:"SchemaFieldDataType",id:"schemafielddatatype",level:2},{value:"SearchBarAPI",id:"searchbarapi",level:2},{value:"SortOrder",id:"sortorder",level:2},{value:"SourceCodeUrlType",id:"sourcecodeurltype",level:2},{value:"SqlAssertionType",id:"sqlassertiontype",level:2},{value:"StdDataType",id:"stddatatype",level:2},{value:"SubResourceType",id:"subresourcetype",level:2},{value:"TermRelationshipType",id:"termrelationshiptype",level:2},{value:"TestResultType",id:"testresulttype",level:2},{value:"TimeRange",id:"timerange",level:2},{value:"UserSetting",id:"usersetting",level:2},{value:"VolumeAssertionType",id:"volumeassertiontype",level:2},{value:"WindowDuration",id:"windowduration",level:2}],d={toc:s},p="wrapper";function h(l){var{components:t}=l,n=g(l,["components"]);return(0,e.yg)(p,y(function(l){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},e=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(n).filter((function(l){return Object.getOwnPropertyDescriptor(n,l).enumerable})))),e.forEach((function(t){u(l,t,n[t])}))}return l}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,e.yg)("h2",{id:"accesslevel"},"AccessLevel"),(0,e.yg)("p",null,"The access level for a Metadata Entity, either public or private"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"PUBLIC"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Publicly available"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PRIVATE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Restricted to a subset of viewers"))))),(0,e.yg)("h2",{id:"accesstokenduration"},"AccessTokenDuration"),(0,e.yg)("p",null,"The duration for which an Access Token is valid."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ONE_HOUR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"1 hour"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ONE_DAY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"1 day"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ONE_WEEK"),(0,e.yg)("td",null,(0,e.yg)("p",null,"1 week"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ONE_MONTH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"1 month"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"THREE_MONTHS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"3 months"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SIX_MONTHS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"6 months"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ONE_YEAR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"1 year"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NO_EXPIRY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"No expiry"))))),(0,e.yg)("h2",{id:"accesstokentype"},"AccessTokenType"),(0,e.yg)("p",null,"A type of DataHub Access Token."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"PERSONAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Generates a personal access token"))))),(0,e.yg)("h2",{id:"assertionactiontype"},"AssertionActionType"),(0,e.yg)("p",null,"The type of the Action"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"RAISE_INCIDENT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Raise an incident."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"RESOLVE_INCIDENT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Resolve open incidents related to the assertion."))))),(0,e.yg)("h2",{id:"assertionresulterrortype"},"AssertionResultErrorType"),(0,e.yg)("p",null,"The type of error encountered when evaluating an AssertionResult"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SOURCE_CONNECTION_ERROR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Source is unreachable"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SOURCE_QUERY_FAILED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Source query failed to execute"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INVALID_PARAMETERS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Invalid parameters were detected"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INSUFFICIENT_DATA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Insufficient data to evaluate assertion"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INVALID_SOURCE_TYPE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Event type not supported by the specified source"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNSUPPORTED_PLATFORM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Platform not supported"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CUSTOM_SQL_ERROR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Error while executing a custom SQL assertion"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIELD_ASSERTION_ERROR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Error while executing a field assertion"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNKNOWN_ERROR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Unknown error"))))),(0,e.yg)("h2",{id:"assertionresulttype"},"AssertionResultType"),(0,e.yg)("p",null,"The result type of an assertion, success or failure."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"INIT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The assertion has not yet been fully evaluated."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SUCCESS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The assertion succeeded."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FAILURE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The assertion failed."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ERROR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The assertion errored."))))),(0,e.yg)("h2",{id:"assertionrunstatus"},"AssertionRunStatus"),(0,e.yg)("p",null,"The state of an assertion run, as defined within an Assertion Run Event."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"COMPLETE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion run has completed."))))),(0,e.yg)("h2",{id:"assertionsourcetype"},"AssertionSourceType"),(0,e.yg)("p",null,"The source of an assertion"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"NATIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The assertion was defined natively on DataHub by a user."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EXTERNAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The assertion was defined and managed externally of DataHub."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INFERRED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The assertion was inferred, e.g. from offline AI / ML models."))))),(0,e.yg)("h2",{id:"assertionstdaggregation"},"AssertionStdAggregation"),(0,e.yg)("p",null,'An "aggregation" function that can be applied to column values of a Dataset to create the input to an Assertion Operator.'),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"IDENTITY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on individual column value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MEAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on column mean"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MEDIAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on column median"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNIQUE_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on number of distinct values in column"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNIQUE_PROPOTION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on proportion of distinct values in column"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NULL_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on number of null values in column"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NULL_PROPORTION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on proportion of null values in column"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STDDEV"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on column std deviation"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MIN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on column min"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MAX"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on column std deviation"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SUM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on column sum"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"COLUMNS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on all columns"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"COLUMN_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on number of columns"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ROW_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion is applied on number of rows"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"_NATIVE_"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Other"))))),(0,e.yg)("h2",{id:"assertionstdoperator"},"AssertionStdOperator"),(0,e.yg)("p",null,"A standard operator or condition that constitutes an assertion definition"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"BETWEEN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is between min_value and max_value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LESS_THAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is less than max_value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LESS_THAN_OR_EQUAL_TO"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is less than or equal to max_value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GREATER_THAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is greater than min_value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GREATER_THAN_OR_EQUAL_TO"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is greater than or equal to min_value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EQUAL_TO"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is equal to value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NOT_EQUAL_TO"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is not equal to value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NULL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is null"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NOT_NULL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is not null"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CONTAIN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted contains value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"END_WITH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted ends with value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"START_WITH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted starts with value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"REGEX_MATCH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted matches the regex value."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"IN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is one of the array values"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NOT_IN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is not in one of the array values."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"IS_TRUE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is true"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"IS_FALSE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value being asserted is false"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"_NATIVE_"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Other"))))),(0,e.yg)("h2",{id:"assertionstdparametertype"},"AssertionStdParameterType"),(0,e.yg)("p",null,"The type of an AssertionStdParameter"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"STRING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A string value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NUMBER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A numeric value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LIST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A list of values. When used, the value should be formatted as a serialized JSON array."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SET"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A set of values. When used, the value should be formatted as a serialized JSON array."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNKNOWN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A value of unknown type"))))),(0,e.yg)("h2",{id:"assertiontype"},"AssertionType"),(0,e.yg)("p",null,"The top-level assertion type."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATASET"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A single-dataset assertion."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FRESHNESS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion which indicates when a particular operation should occur to an asset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"VOLUME"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion which indicates how much data should be available for a particular asset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SQL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A raw SQL-statement based assertion."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIELD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A structured assertion targeting a specific column or field of the Dataset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_SCHEMA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A schema or structural assertion."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CUSTOM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A custom assertion."))))),(0,e.yg)("h2",{id:"assertionvaluechangetype"},"AssertionValueChangeType"),(0,e.yg)("p",null,"An enum to represent a type of change in an assertion value, metric, or measurement."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ABSOLUTE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A change that is defined in absolute terms."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PERCENTAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A change that is defined in relative terms using percentage change from the original value."))))),(0,e.yg)("h2",{id:"changecategorytype"},"ChangeCategoryType"),(0,e.yg)("p",null,"Enum of CategoryTypes"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DOCUMENTATION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When documentation has been edited"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GLOSSARY_TERM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When glossary terms have been added or removed"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OWNERSHIP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When ownership has been modified"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TECHNICAL_SCHEMA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When technical schemas have been added or removed"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TAG"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When tags have been added or removed"))))),(0,e.yg)("h2",{id:"changeoperationtype"},"ChangeOperationType"),(0,e.yg)("p",null,"Enum of types of changes"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ADD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When an element is added"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MODIFY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When an element is modified"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"REMOVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When an element is removed"))))),(0,e.yg)("h2",{id:"chartquerytype"},"ChartQueryType"),(0,e.yg)("p",null,"The type of the Chart Query"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SQL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Standard ANSI SQL"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LOOKML"),(0,e.yg)("td",null,(0,e.yg)("p",null,"LookML"))))),(0,e.yg)("h2",{id:"charttype"},"ChartType"),(0,e.yg)("p",null,"The type of a Chart Entity"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"BAR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Bar graph"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PIE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Pie chart"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SCATTER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Scatter plot"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TABLE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Table"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TEXT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Markdown formatted text"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LINE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A line chart"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"AREA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An area chart"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"HISTOGRAM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A histogram chart"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"BOX_PLOT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A box plot chart"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"WORD_CLOUD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A word cloud chart"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"COHORT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Cohort Analysis chart"))))),(0,e.yg)("h2",{id:"corpuserstatus"},"CorpUserStatus"),(0,e.yg)("p",null,"The state of a CorpUser"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ACTIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A User that has been provisioned and logged in"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SUSPENDED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A user that has been suspended"))))),(0,e.yg)("h2",{id:"costtype"},"CostType"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ORG_COST_TYPE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Org Cost Type to which the Cost of this entity should be attributed to"))))),(0,e.yg)("h2",{id:"datacontractstate"},"DataContractState"),(0,e.yg)("p",null,"The state of the data contract"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ACTIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The data contract is active."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PENDING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The data contract is pending. Note that this symbol is currently experimental."))))),(0,e.yg)("h2",{id:"datahubconnectiondetailstype"},"DataHubConnectionDetailsType"),(0,e.yg)("p",null,"The type of a DataHub connection"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"JSON"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A json-encoded set of connection details."))))),(0,e.yg)("h2",{id:"datahubviewtype"},"DataHubViewType"),(0,e.yg)("p",null,"The type of a DataHub View"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"PERSONAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A personal view - e.g. saved filters"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GLOBAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A global view, e.g. role view"))))),(0,e.yg)("h2",{id:"dataprocessinstancerunresulttype"},"DataProcessInstanceRunResultType"),(0,e.yg)("p",null,"The result of the data process run"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SUCCESS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The run finished successfully"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FAILURE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The run finished in failure"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SKIPPED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The run was skipped"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UP_FOR_RETRY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The run failed and is up for retry"))))),(0,e.yg)("h2",{id:"dataprocessrunstatus"},"DataProcessRunStatus"),(0,e.yg)("p",null,"The status of the data process instance"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"STARTED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The data process instance has started but not completed"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"COMPLETE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The data process instance has completed"))))),(0,e.yg)("h2",{id:"datasetassertionscope"},"DatasetAssertionScope"),(0,e.yg)("p",null,"The scope that a Dataset-level assertion applies to."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATASET_COLUMN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion applies to columns of a dataset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATASET_ROWS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion applies to rows of a dataset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATASET_SCHEMA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertion applies to schema of a dataset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNKNOWN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The scope of an assertion is unknown."))))),(0,e.yg)("h2",{id:"datasetfiltertype"},"DatasetFilterType"),(0,e.yg)("p",null,"Type of partition"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SQL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Use a SQL string to apply the filter"))))),(0,e.yg)("h2",{id:"datasetlineagetype"},"DatasetLineageType"),(0,e.yg)("p",null,"Deprecated\nThe type of an edge between two Datasets"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"COPY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Direct copy without modification"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TRANSFORMED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Transformed dataset"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"VIEW"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represents a view defined on the sources"))))),(0,e.yg)("h2",{id:"dateinterval"},"DateInterval"),(0,e.yg)("p",null,"For consumption by UI only"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SECOND"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MINUTE"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"HOUR"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DAY"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"WEEK"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MONTH"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"YEAR"),(0,e.yg)("td",null)))),(0,e.yg)("h2",{id:"entitytype"},"EntityType"),(0,e.yg)("p",null,"A top level Metadata Entity Type"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DOMAIN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Domain containing Metadata Entities"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATASET"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Dataset Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CORP_USER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The CorpUser Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CORP_GROUP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The CorpGroup Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_PLATFORM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The DataPlatform Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ER_MODEL_RELATIONSHIP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The ERModelRelationship Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DASHBOARD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Dashboard Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NOTEBOOK"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Notebook Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CHART"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Chart Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_FLOW"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Data Flow (or Data Pipeline) Entity,"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_JOB"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Data Job (or Data Task) Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TAG"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Tag Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GLOSSARY_TERM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Glossary Term Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GLOSSARY_NODE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Glossary Node Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CONTAINER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A container of Metadata Entities"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MLMODEL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The ML Model Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MLMODEL_GROUP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The MLModelGroup Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MLFEATURE_TABLE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"ML Feature Table Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MLFEATURE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The ML Feature Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MLPRIMARY_KEY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The ML Primary Key Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INGESTION_SOURCE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub Managed Ingestion Source"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EXECUTION_REQUEST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub ExecutionRequest"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ASSERTION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub Assertion"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_PROCESS_INSTANCE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An instance of an individual run of a data job or data flow"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_PLATFORM_INSTANCE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Data Platform Instance Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ACCESS_TOKEN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub Access Token"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TEST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub Test"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATAHUB_POLICY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub Policy"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATAHUB_ROLE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub Role"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"POST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub Post"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SCHEMA_FIELD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Schema Field"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATAHUB_VIEW"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub View"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"QUERY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A dataset query"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_PRODUCT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Data Product"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CUSTOM_OWNERSHIP_TYPE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Custom Ownership Type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATAHUB_CONNECTION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A connection to an external source."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INCIDENT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A DataHub incident - SaaS only"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ROLE"),(0,e.yg)("td",null,(0,e.yg)("p",null,'" A Role from an organisation'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_CONTRACT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A data contract"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STRUCTURED_PROPERTY"),(0,e.yg)("td",null,(0,e.yg)("p",null,'" An structured property on entities'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FORM"),(0,e.yg)("td",null,(0,e.yg)("p",null,'" A form entity on entities'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_TYPE"),(0,e.yg)("td",null,(0,e.yg)("p",null,'" A data type registered to DataHub'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ENTITY_TYPE"),(0,e.yg)("td",null,(0,e.yg)("p",null,'" A type of entity registered to DataHub'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"RESTRICTED"),(0,e.yg)("td",null,(0,e.yg)("p",null,'" A type of entity that is restricted to the user'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OTHER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Another entity type - refer to a provided entity type urn."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"BUSINESS_ATTRIBUTE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Business Attribute"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"VERSION_SET"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A set of versioned entities, representing a single source / logical entity over time"))))),(0,e.yg)("h2",{id:"fabrictype"},"FabricType"),(0,e.yg)("p",null,"An environment identifier for a particular Entity, ie staging or production\nNote that this model will soon be deprecated in favor of a more general purpose of notion\nof data environment"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DEV"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates development fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TEST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates testing fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"QA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates quality assurance fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UAT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates user acceptance testing fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EI"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates early integration fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PRE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates pre-production fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STG"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates staging fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NON_PROD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates non-production fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PROD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates production fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CORP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates corporation fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"RVW"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates review fabrics"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SANDBOX"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates sandbox fabrics"))))),(0,e.yg)("h2",{id:"fieldassertiontype"},"FieldAssertionType"),(0,e.yg)("p",null,"The type of a Field assertion"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIELD_VALUES"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion used to validate the values contained with a field / column given a set of rows."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIELD_METRIC"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion used to validate the value of a common field / column metric (e.g. aggregation) such as null count + percentage, min, max, median, and more."))))),(0,e.yg)("h2",{id:"fieldmetrictype"},"FieldMetricType"),(0,e.yg)("p",null,"A standard metric that can be derived from the set of values\nfor a specific field / column of a dataset / table."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNIQUE_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The number of unique values found in the column value set"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNIQUE_PERCENTAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The percentage of unique values to total rows for the dataset"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NULL_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The number of null values found in the column value set"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NULL_PERCENTAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The percentage of null values to total rows for the dataset"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MIN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The minimum value in the column set (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MAX"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The maximum value in the column set (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MEAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The mean length found in the column set (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MEDIAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The median length found in the column set (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STDDEV"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The stddev length found in the column set (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NEGATIVE_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The number of negative values found in the value set (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NEGATIVE_PERCENTAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The percentage of negative values to total rows for the dataset (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ZERO_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The number of zero values found in the value set (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ZERO_PERCENTAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The percentage of zero values to total rows for the dataset (applies to numeric columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MIN_LENGTH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The minimum length found in the column set (applies to string columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MAX_LENGTH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The maximum length found in the column set (applies to string columns)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EMPTY_COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The number of empty string values found in the value set (applies to string columns). Note: This is a completely different metric different from NULL_COUNT!"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EMPTY_PERCENTAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The percentage of empty string values to total rows for the dataset (applies to string columns). Note: This is a completely different metric different from NULL_PERCENTAGE!"))))),(0,e.yg)("h2",{id:"fieldtransformtype"},"FieldTransformType"),(0,e.yg)("p",null,"The type of the Field Transform"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"LENGTH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Obtain the length of a string field / column (applicable to string types)"))))),(0,e.yg)("h2",{id:"fieldvaluesfailthresholdtype"},"FieldValuesFailThresholdType"),(0,e.yg)("p",null,"The type of failure threshold."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"COUNT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The maximum number of column values (i.e. rows) that are allowed to fail the defined expectations before the assertion officially fails."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PERCENTAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The maximum percentage of rows that are allowed to fail the defined column expectations before the assertion officially fails."))))),(0,e.yg)("h2",{id:"filteroperator"},"FilterOperator"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"CONTAIN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: String field contains value, e.g. name contains Profile"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EQUAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: field = value, e.g. platform = hdfs"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"IEQUAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: field = value (case-insensitive), e.g. platform = HDFS"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"IN"),(0,e.yg)("td",null,(0,e.yg)("ul",null,(0,e.yg)("li",null,'Represent the relation: String field is one of the array values to, e.g. name in ["Profile", "Event"]')))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EXISTS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represents the relation: The field exists. If the field is an array, the field is either not present or empty."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GREATER_THAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation greater than, e.g. ownerCount > 5"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GREATER_THAN_OR_EQUAL_TO"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation greater than or equal to, e.g. ownerCount >= 5"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LESS_THAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation less than, e.g. ownerCount < 3"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LESS_THAN_OR_EQUAL_TO"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation less than or equal to, e.g. ownerCount <= 3"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"START_WITH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: String field starts with value, e.g. name starts with PageView"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"END_WITH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: String field ends with value, e.g. name ends with Event"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DESCENDANTS_INCL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: URN field any nested children in addition to the given URN"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ANCESTORS_INCL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: URN field matches any nested parent in addition to the given URN"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"RELATED_INCL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Represent the relation: URN field matches any nested child or parent in addition to the given URN"))))),(0,e.yg)("h2",{id:"formprompttype"},"FormPromptType"),(0,e.yg)("p",null,"Enum of all form prompt types"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"STRUCTURED_PROPERTY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A structured property form prompt type."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIELDS_STRUCTURED_PROPERTY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A schema field-level structured property form prompt type."))))),(0,e.yg)("h2",{id:"formtype"},"FormType"),(0,e.yg)("p",null,"The type of a form. This is optional on a form entity"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"VERIFICATION"),(0,e.yg)("td",null,(0,e.yg)("p",null,'This form is used for "verifying" entities as a state for governance and compliance'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"COMPLETION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"This form is used to help with filling out metadata on entities"))))),(0,e.yg)("h2",{id:"freshnessassertionscheduletype"},"FreshnessAssertionScheduleType"),(0,e.yg)("p",null,"The type of an Freshness assertion"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"CRON"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An schedule based on a CRON schedule representing the expected event times."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIXED_INTERVAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,'A scheduled based on a recurring fixed schedule which is used to compute the expected operation window. E.g. "every 24 hours".'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SINCE_THE_LAST_CHECK"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A schedule computed based on when the assertion was last evaluated, to the current moment in time."))))),(0,e.yg)("h2",{id:"freshnessassertiontype"},"FreshnessAssertionType"),(0,e.yg)("p",null,"The type of an Freshness assertion"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATASET_CHANGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion defined against a Dataset Change Operation - insert, update, delete, etc"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_JOB_RUN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion defined against a Data Job run"))))),(0,e.yg)("h2",{id:"healthstatus"},"HealthStatus"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"PASS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Asset is in a healthy state"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"WARN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Asset is in a warning state"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FAIL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The Asset is in a failing (unhealthy) state"))))),(0,e.yg)("h2",{id:"healthstatustype"},"HealthStatusType"),(0,e.yg)("p",null,"The type of the health status"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ASSERTIONS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Assertions status"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INCIDENTS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Incidents status"))))),(0,e.yg)("h2",{id:"iconlibrary"},"IconLibrary"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"MATERIAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Icons from the Material UI icon library"))))),(0,e.yg)("h2",{id:"incidentpriority"},"IncidentPriority"),(0,e.yg)("p",null,"The priority of the incident"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"LOW"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A low priority incident (P3)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MEDIUM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A medium priority incident (P2)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"HIGH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A high priority incident (P1)"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CRITICAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A critical priority incident (P0)"))))),(0,e.yg)("h2",{id:"incidentsourcetype"},"IncidentSourceType"),(0,e.yg)("p",null,"The source type of an incident, implying how it was created."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"MANUAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The incident was created manually, from either the API or the UI."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ASSERTION_FAILURE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An assertion has failed, triggering the incident."))))),(0,e.yg)("h2",{id:"incidentstage"},"IncidentStage"),(0,e.yg)("p",null,"The lifecycle stage of the incident."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"TRIAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The impact and priority of the incident is being actively assessed."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INVESTIGATION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The incident root cause is being investigated."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"WORK_IN_PROGRESS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The incident is in the remediation stage."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIXED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The incident is in the resolved as completed stage."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NO_ACTION_REQUIRED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The incident is in the resolved with no action required state, e.g., the incident was a false positive, or was expected."))))),(0,e.yg)("h2",{id:"incidentstate"},"IncidentState"),(0,e.yg)("p",null,"The state of an incident."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ACTIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The incident is ongoing, or active."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"RESOLVED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The incident is resolved."))))),(0,e.yg)("h2",{id:"incidenttype"},"IncidentType"),(0,e.yg)("p",null,"A specific type of incident"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"FRESHNESS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Freshness Assertion has failed, triggering the incident. Raised on assets where assertions are configured to generate incidents."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"VOLUME"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Volume Assertion has failed, triggering the incident. Raised on assets where assertions are configured to generate incidents."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIELD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Field Assertion has failed, triggering the incident. Raised on assets where assertions are configured to generate incidents."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SQL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A SQL Assertion has failed, triggering the incident. Raised on assets where assertions are configured to generate incidents."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_SCHEMA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Schema has failed, triggering the incident. Raised on assets where assertions are configured to generate incidents."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OPERATIONAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An operational incident, e.g. failure to materialize a dataset, or failure to execute a task / pipeline."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CUSTOM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A custom type of incident"))))),(0,e.yg)("h2",{id:"incrementingsegmentfieldtransformertype"},"IncrementingSegmentFieldTransformerType"),(0,e.yg)("p",null,"The 'standard' transformer type. Note that not all source systems will support all operators."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"TIMESTAMP_MS_TO_MINUTE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rounds a timestamp (in seconds) down to the start of the month."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TIMESTAMP_MS_TO_HOUR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rounds a timestamp (in milliseconds) down to the nearest hour."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TIMESTAMP_MS_TO_DATE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rounds a timestamp (in milliseconds) down to the start of the day."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TIMESTAMP_MS_TO_MONTH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rounds a timestamp (in milliseconds) down to the start of the month"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TIMESTAMP_MS_TO_YEAR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rounds a timestamp (in milliseconds) down to the start of the year"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FLOOR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rounds a numeric value down to the nearest integer."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CEILING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rounds a numeric value up to the nearest integer."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NATIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A backdoor to provide a native operator type specific to a given source system like Snowflake, Redshift, BQ, etc."))))),(0,e.yg)("h2",{id:"intendedusertype"},"IntendedUserType"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ENTERPRISE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Developed for Enterprise Users"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"HOBBY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Developed for Hobbyists"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ENTERTAINMENT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Developed for Entertainment Purposes"))))),(0,e.yg)("h2",{id:"lineagedirection"},"LineageDirection"),(0,e.yg)("p",null,"Direction between two nodes in the lineage graph"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"UPSTREAM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Upstream, or left-to-right in the lineage visualization"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DOWNSTREAM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Downstream, or right-to-left in the lineage visualization"))))),(0,e.yg)("h2",{id:"lineagesearchpath"},"LineageSearchPath"),(0,e.yg)("p",null,"The path taken when doing search across lineage"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"TORTOISE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates the tortoise lineage code path"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LIGHTNING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Designates the lightning lineage code path"))))),(0,e.yg)("h2",{id:"logicaloperator"},"LogicalOperator"),(0,e.yg)("p",null,"A Logical Operator, AND or OR."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"AND"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An AND operator."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An OR operator."))))),(0,e.yg)("h2",{id:"mediatype"},"MediaType"),(0,e.yg)("p",null,"The type of media"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"IMAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An image"))))),(0,e.yg)("h2",{id:"mlfeaturedatatype"},"MLFeatureDataType"),(0,e.yg)("p",null,"The data type associated with an individual Machine Learning Feature"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"USELESS"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NOMINAL"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ORDINAL"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"BINARY"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"COUNT"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TIME"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INTERVAL"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"IMAGE"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"VIDEO"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"AUDIO"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TEXT"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MAP"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SEQUENCE"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SET"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CONTINUOUS"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"BYTE"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNKNOWN"),(0,e.yg)("td",null)))),(0,e.yg)("h2",{id:"notebookcelltype"},"NotebookCellType"),(0,e.yg)("p",null,"The type for a NotebookCell"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"TEXT_CELL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"TEXT Notebook cell type. The cell context is text only."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"QUERY_CELL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"QUERY Notebook cell type. The cell context is query only."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CHART_CELL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"CHART Notebook cell type. The cell content is chart only."))))),(0,e.yg)("h2",{id:"operationsourcetype"},"OperationSourceType"),(0,e.yg)("p",null,"Enum to define the source/reporter type for an Operation."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_PROCESS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A data process reported the operation."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_PLATFORM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A data platform reported the operation."))))),(0,e.yg)("h2",{id:"operationtype"},"OperationType"),(0,e.yg)("p",null,"Enum to define the operation type when an entity changes."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"INSERT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When data is inserted."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UPDATE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When data is updated."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DELETE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When data is deleted."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CREATE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When table is created."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ALTER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When table is altered"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DROP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When table is dropped"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNKNOWN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Unknown operation"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CUSTOM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Custom"))))),(0,e.yg)("h2",{id:"origintype"},"OriginType"),(0,e.yg)("p",null,"Enum to define where an entity originated from."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"NATIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The entity is native to DataHub."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EXTERNAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The entity is external to DataHub."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNKNOWN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The entity is of unknown origin."))))),(0,e.yg)("h2",{id:"ownerentitytype"},"OwnerEntityType"),(0,e.yg)("p",null,"Entities that are able to own other entities"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"CORP_USER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A corp user owner"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CORP_GROUP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A corp group owner"))))),(0,e.yg)("h2",{id:"ownershipsourcetype"},"OwnershipSourceType"),(0,e.yg)("p",null,"The origin of Ownership metadata associated with a Metadata Entity"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"AUDIT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Auditing system or audit logs"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATABASE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Database, eg GRANTS table"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FILE_SYSTEM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"File system, eg file or directory owner"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ISSUE_TRACKING_SYSTEM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Issue tracking system, eg Jira"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MANUAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Manually provided by a user"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SERVICE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Other ownership like service, eg Nuage, ACL service etc"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SOURCE_CONTROL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"SCM system, eg GIT, SVN"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OTHER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Other sources"))))),(0,e.yg)("h2",{id:"ownershiptype"},"OwnershipType"),(0,e.yg)("p",null,"The type of the ownership relationship between a Person and a Metadata Entity\nNote that this field will soon become deprecated due to low usage"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"TECHNICAL_OWNER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person or group who is responsible for technical aspects of the asset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"BUSINESS_OWNER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person or group who is responsible for logical, or business related, aspects of the asset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATA_STEWARD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A steward, expert, or delegate responsible for the asset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NONE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"No specific type associated with the owner."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CUSTOM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Associated ownership type is a custom ownership type. Please check OwnershipTypeEntity urn for custom value."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATAOWNER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person or group that owns the data. Deprecated! This ownership type is no longer supported. Use TECHNICAL_OWNER instead."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DEVELOPER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person or group that is in charge of developing the code Deprecated! This ownership type is no longer supported. Use TECHNICAL_OWNER instead."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DELEGATE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person or a group that overseas the operation, eg a DBA or SRE Deprecated! This ownership type is no longer supported. Use TECHNICAL_OWNER instead."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PRODUCER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person, group, or service that produces or generates the data Deprecated! This ownership type is no longer supported. Use TECHNICAL_OWNER instead."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STAKEHOLDER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person or a group that has direct business interest Deprecated! Use BUSINESS_OWNER instead."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"CONSUMER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A person, group, or service that consumes the data Deprecated! This ownership type is no longer supported."))))),(0,e.yg)("h2",{id:"partitiontype"},"PartitionType"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"FULL_TABLE"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"QUERY"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PARTITION"),(0,e.yg)("td",null)))),(0,e.yg)("h2",{id:"personalsidebarsection"},"PersonalSidebarSection"),(0,e.yg)("p",null,"Variants of APIs used in the Search bar to get data"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"YOUR_GROUPS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The section containing groups you are in"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"YOUR_ASSETS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The section containing assets you own"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"YOUR_DOMAINS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The section containing domains you own"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"YOUR_GLOSSARY_NODES"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The section containing glossary nodes you own"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"YOUR_TAGS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The section containing tags you own"))))),(0,e.yg)("h2",{id:"platformnativetype"},"PlatformNativeType"),(0,e.yg)("p",null,"Deprecated, do not use this type\nThe logical type associated with an individual Dataset"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"TABLE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Table"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"VIEW"),(0,e.yg)("td",null,(0,e.yg)("p",null,"View"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DIRECTORY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Directory in file system"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STREAM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Stream"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"BUCKET"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Bucket in key value store"))))),(0,e.yg)("h2",{id:"platformtype"},"PlatformType"),(0,e.yg)("p",null,"The category of a specific Data Platform"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"FILE_SYSTEM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for a file system"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"KEY_VALUE_STORE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for a key value store"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MESSAGE_BROKER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for a message broker"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OBJECT_STORE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for an object store"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OLAP_DATASTORE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for an OLAP datastore"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"QUERY_ENGINE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for a query engine"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"RELATIONAL_DB"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for a relational database"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SEARCH_ENGINE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for a search engine"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OTHERS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Value for other platforms"))))),(0,e.yg)("h2",{id:"policymatchcondition"},"PolicyMatchCondition"),(0,e.yg)("p",null,"Match condition"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"EQUALS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Whether the field matches the value"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STARTS_WITH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Whether the field value starts with the value"))))),(0,e.yg)("h2",{id:"policystate"},"PolicyState"),(0,e.yg)("p",null,"The state of an Access Policy"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DRAFT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Policy that has not been officially created, but in progress Currently unused"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ACTIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Policy that is active and being enforced"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INACTIVE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Policy that is not active or being enforced"))))),(0,e.yg)("h2",{id:"policytype"},"PolicyType"),(0,e.yg)("p",null,"The type of the Access Policy"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"METADATA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An access policy that grants privileges pertaining to Metadata Entities"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PLATFORM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An access policy that grants top level administrative privileges pertaining to the DataHub Platform itself"))))),(0,e.yg)("h2",{id:"postcontenttype"},"PostContentType"),(0,e.yg)("p",null,"The type of post"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"TEXT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Text content"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"LINK"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Link content"))))),(0,e.yg)("h2",{id:"posttype"},"PostType"),(0,e.yg)("p",null,"The type of post"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"HOME_PAGE_ANNOUNCEMENT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Posts on the home page"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ENTITY_ANNOUNCEMENT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Posts on an entity page"))))),(0,e.yg)("h2",{id:"propertycardinality"},"PropertyCardinality"),(0,e.yg)("p",null,"The cardinality of a Structured Property determining whether one or multiple values\ncan be applied to the entity from this property."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SINGLE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Only one value of this property can applied to an entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MULTIPLE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Multiple values of this property can applied to an entity"))))),(0,e.yg)("h2",{id:"querylanguage"},"QueryLanguage"),(0,e.yg)("p",null,"A query language / dialect."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SQL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Standard ANSI SQL"))))),(0,e.yg)("h2",{id:"querysource"},"QuerySource"),(0,e.yg)("p",null,"The source of the query"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"MANUAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The query was provided manually, e.g. from the UI."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SYSTEM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The query was extracted by the system, e.g. from a dashboard."))))),(0,e.yg)("h2",{id:"recommendationrendertype"},"RecommendationRenderType"),(0,e.yg)("p",null,"Enum that defines how the modules should be rendered.\nThere should be two frontend implementation of large and small modules per type."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ENTITY_NAME_LIST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Simple list of entities"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"PLATFORM_SEARCH_LIST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"List of platforms"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TAG_SEARCH_LIST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Tag search list"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SEARCH_QUERY_LIST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A list of recommended search queries"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"GLOSSARY_TERM_SEARCH_LIST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Glossary Term search list"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DOMAIN_SEARCH_LIST"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Domain Search List"))))),(0,e.yg)("h2",{id:"relationshipdirection"},"RelationshipDirection"),(0,e.yg)("p",null,"Direction between a source and destination node"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"INCOMING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A directed edge pointing at the source Entity"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OUTGOING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A directed edge pointing at the destination Entity"))))),(0,e.yg)("h2",{id:"scenariotype"},"ScenarioType"),(0,e.yg)("p",null,"Type of the scenario requesting recommendation"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"HOME"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Recommendations to show on the users home page"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SEARCH_RESULTS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Recommendations to show on the search results page"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ENTITY_PROFILE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Recommendations to show on an Entity Profile page"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SEARCH_BAR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Recommendations to show on the search bar when clicked"))))),(0,e.yg)("h2",{id:"schemaassertioncompatibility"},"SchemaAssertionCompatibility"),(0,e.yg)("p",null,"Defines the required compatibility level for the schema assertion to pass."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"EXACT_MATCH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The schema must be exactly the same as the expected schema."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SUPERSET"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The schema must be a superset of the expected schema."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SUBSET"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The schema must be a subset of the expected schema."))))),(0,e.yg)("h2",{id:"schemafielddatatype"},"SchemaFieldDataType"),(0,e.yg)("p",null,"The type associated with a single Dataset schema field"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"BOOLEAN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A boolean type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FIXED"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A fixed bytestring type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STRING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A string type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"BYTES"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A string of bytes"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NUMBER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A number, including integers, floats, and doubles"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A datestrings type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TIME"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A timestamp type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ENUM"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An enum type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NULL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A NULL type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MAP"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A map collection type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ARRAY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An array collection type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"UNION"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An union type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"STRUCT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"An complex struct type"))))),(0,e.yg)("h2",{id:"searchbarapi"},"SearchBarAPI"),(0,e.yg)("p",null,"Variants of APIs used in the Search bar to get data"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"AUTOCOMPLETE_FOR_MULTIPLE"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SEARCH_ACROSS_ENTITIES"),(0,e.yg)("td",null)))),(0,e.yg)("h2",{id:"sortorder"},"SortOrder"),(0,e.yg)("p",null,"Order for sorting"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ASCENDING"),(0,e.yg)("td",null)),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DESCENDING"),(0,e.yg)("td",null)))),(0,e.yg)("h2",{id:"sourcecodeurltype"},"SourceCodeUrlType"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ML_MODEL_SOURCE_CODE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"MLModel Source Code"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"TRAINING_PIPELINE_SOURCE_CODE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Training Pipeline Source Code"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"EVALUATION_PIPELINE_SOURCE_CODE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Evaluation Pipeline Source Code"))))),(0,e.yg)("h2",{id:"sqlassertiontype"},"SqlAssertionType"),(0,e.yg)("p",null,"The type of the SQL assertion being monitored."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"METRIC"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A SQL Metric Assertion, e.g. one based on a numeric value returned by an arbitrary SQL query."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"METRIC_CHANGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A SQL assertion that is evaluated against the CHANGE in a metric assertion over time."))))),(0,e.yg)("h2",{id:"stddatatype"},"StdDataType"),(0,e.yg)("p",null,"A well-supported, standard DataHub Data Type."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"STRING"),(0,e.yg)("td",null,(0,e.yg)("p",null,"String data type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"NUMBER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Number data type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"URN"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Urn data type"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"RICH_TEXT"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Rich text data type. Right now this is markdown only."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Date data type in format YYYY-MM-DD"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"OTHER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Any other data type - refer to a provided data type urn."))))),(0,e.yg)("h2",{id:"subresourcetype"},"SubResourceType"),(0,e.yg)("p",null,"A type of Metadata Entity sub resource"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DATASET_FIELD"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A Dataset field or column"))))),(0,e.yg)("h2",{id:"termrelationshiptype"},"TermRelationshipType"),(0,e.yg)("p",null,"A type of Metadata Entity sub resource"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"isA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When a Term inherits from, or has an 'Is A' relationship with another Term"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"hasA"),(0,e.yg)("td",null,(0,e.yg)("p",null,"When a Term contains, or has a 'Has A' relationship with another Term"))))),(0,e.yg)("h2",{id:"testresulttype"},"TestResultType"),(0,e.yg)("p",null,"The result type of a test that has been run"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SUCCESS"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The test succeeded."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"FAILURE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"The test failed."))))),(0,e.yg)("h2",{id:"timerange"},"TimeRange"),(0,e.yg)("p",null,"A time range used in fetching Usage statistics"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DAY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Last day"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"WEEK"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Last week"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MONTH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Last month"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"QUARTER"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Last quarter"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"YEAR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Last year"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ALL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"All time"))))),(0,e.yg)("h2",{id:"usersetting"},"UserSetting"),(0,e.yg)("p",null,"An individual setting type for a Corp User."),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"SHOW_SIMPLIFIED_HOMEPAGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Show simplified homepage"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"SHOW_THEME_V2"),(0,e.yg)("td",null,(0,e.yg)("p",null,"Show theme v2"))))),(0,e.yg)("h2",{id:"volumeassertiontype"},"VolumeAssertionType"),(0,e.yg)("p",null,"A type of volume (row count) assertion"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"ROW_COUNT_TOTAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A volume assertion that is evaluated against the total row count of a dataset."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"ROW_COUNT_CHANGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A volume assertion that is evaluated against an incremental row count of a dataset, or a row count change."))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INCREMENTING_SEGMENT_ROW_COUNT_TOTAL"),(0,e.yg)("td",null,(0,e.yg)("p",null,'A volume assertion that checks the latest "segment" in a table based on an incrementing column to check whether it\'s row count falls into a particular range. This can be used to monitor the row count of an incrementing date-partition column segment.'))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"INCREMENTING_SEGMENT_ROW_COUNT_CHANGE"),(0,e.yg)("td",null,(0,e.yg)("p",null,'A volume assertion that compares the row counts in neighboring "segments" or "partitions" of an incrementing column. This can be used to track changes between subsequent date partition in a table, for example.'))))),(0,e.yg)("h2",{id:"windowduration"},"WindowDuration"),(0,e.yg)("p",null,"The duration of a fixed window of time"),(0,e.yg)("p",{style:{marginBottom:"0.4em"}},(0,e.yg)("strong",null,"Values")),(0,e.yg)("table",null,(0,e.yg)("thead",null,(0,e.yg)("tr",null,(0,e.yg)("th",null,"Value"),(0,e.yg)("th",null,"Description"))),(0,e.yg)("tbody",null,(0,e.yg)("tr",null,(0,e.yg)("td",null,"DAY"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A one day window"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"WEEK"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A one week window"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"MONTH"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A one month window"))),(0,e.yg)("tr",null,(0,e.yg)("td",null,"YEAR"),(0,e.yg)("td",null,(0,e.yg)("p",null,"A one year window"))))))}h.isMDXComponent=!0}}]);