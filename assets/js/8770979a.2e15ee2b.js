"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[87179],{8759:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>g,contentTitle:()=>m,default:()=>h,frontMatter:()=>d,metadata:()=>p,toc:()=>u});a(96540);var t=a(15680),r=a(53720),i=a(5400);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))})),e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const d={sidebar_position:17,title:"ML Model",slug:"/generated/metamodel/entities/mlmodel",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/mlModel.md"},m="ML Model",p={unversionedId:"docs/generated/metamodel/entities/mlModel",id:"docs/generated/metamodel/entities/mlModel",title:"ML Model",description:"The ML Model entity represents trained machine learning models across various ML platforms and frameworks. ML Models can be trained using different algorithms and frameworks (TensorFlow, PyTorch, Scikit-learn, etc.) and deployed to various platforms (MLflow, SageMaker, Vertex AI, etc.).",source:"@site/genDocs/docs/generated/metamodel/entities/mlModel.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/mlmodel",permalink:"/docs/generated/metamodel/entities/mlmodel",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/mlModel.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17,title:"ML Model",slug:"/generated/metamodel/entities/mlmodel",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/mlModel.md"},sidebar:"overviewSidebar",previous:{title:"Assertion",permalink:"/docs/generated/metamodel/entities/assertion"},next:{title:"ML Model Group",permalink:"/docs/generated/metamodel/entities/mlmodelgroup"}},g={},u=[{value:"Identity",id:"identity",level:2},{value:"Important Capabilities",id:"important-capabilities",level:2},{value:"Basic Model Information",id:"basic-model-information",level:3},{value:"Hyperparameters and Metrics",id:"hyperparameters-and-metrics",level:3},{value:"Intended Use and Ethical Considerations",id:"intended-use-and-ethical-considerations",level:3},{value:"Training and Evaluation Data",id:"training-and-evaluation-data",level:3},{value:"Direct Dataset References",id:"direct-dataset-references",level:4},{value:"Lineage via Training Runs",id:"lineage-via-training-runs",level:4},{value:"Factor Prompts and Quantitative Analysis",id:"factor-prompts-and-quantitative-analysis",level:3},{value:"Source Code and Cost",id:"source-code-and-cost",level:3},{value:"Training Runs and Experiments",id:"training-runs-and-experiments",level:3},{value:"Training Runs",id:"training-runs",level:4},{value:"Experiments",id:"experiments",level:4},{value:"Relationships and Lineage",id:"relationships-and-lineage",level:3},{value:"Core Relationships",id:"core-relationships",level:4},{value:"Lineage Graph Structure",id:"lineage-graph-structure",level:4},{value:"Tags, Terms, and Ownership",id:"tags-terms-and-ownership",level:3},{value:"Complete ML Workflow Example",id:"complete-ml-workflow-example",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"Querying ML Model Information",id:"querying-ml-model-information",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"Related Entities",id:"related-entities",level:3},{value:"GraphQL Resolvers",id:"graphql-resolvers",level:3},{value:"Ingestion Sources",id:"ingestion-sources",level:3},{value:"Notable Exceptions",id:"notable-exceptions",level:2},{value:"Model Versioning",id:"model-versioning",level:3},{value:"Version Properties Aspect",id:"version-properties-aspect",level:4},{value:"Version Aliases for A/B Testing",id:"version-aliases-for-ab-testing",level:4},{value:"Model Groups and Versioning",id:"model-groups-and-versioning",level:4},{value:"Platform-Specific Naming",id:"platform-specific-naming",level:3},{value:"Model Cards",id:"model-cards",level:3},{value:"Technical Reference Guide",id:"technical-reference-guide",level:2},{value:"Reading the Field Tables",id:"reading-the-field-tables",level:3},{value:"Aspects",id:"aspects",level:3},{value:"mlModelKey",id:"mlmodelkey",level:4},{value:"ownership",id:"ownership",level:4},{value:"mlModelProperties",id:"mlmodelproperties",level:4},{value:"intendedUse",id:"intendeduse",level:4},{value:"mlModelFactorPrompts",id:"mlmodelfactorprompts",level:4},{value:"mlModelMetrics",id:"mlmodelmetrics",level:4},{value:"mlModelEvaluationData",id:"mlmodelevaluationdata",level:4},{value:"mlModelTrainingData",id:"mlmodeltrainingdata",level:4},{value:"mlModelQuantitativeAnalyses",id:"mlmodelquantitativeanalyses",level:4},{value:"mlModelEthicalConsiderations",id:"mlmodelethicalconsiderations",level:4},{value:"mlModelCaveatsAndRecommendations",id:"mlmodelcaveatsandrecommendations",level:4},{value:"institutionalMemory",id:"institutionalmemory",level:4},{value:"sourceCode",id:"sourcecode",level:4},{value:"status",id:"status",level:4},{value:"cost",id:"cost",level:4},{value:"deprecation",id:"deprecation",level:4},{value:"browsePaths",id:"browsepaths",level:4},{value:"globalTags",id:"globaltags",level:4},{value:"dataPlatformInstance",id:"dataplatforminstance",level:4},{value:"browsePathsV2",id:"browsepathsv2",level:4},{value:"glossaryTerms",id:"glossaryterms",level:4},{value:"editableMlModelProperties",id:"editablemlmodelproperties",level:4},{value:"domains",id:"domains",level:4},{value:"applications",id:"applications",level:4},{value:"structuredProperties",id:"structuredproperties",level:4},{value:"forms",id:"forms",level:4},{value:"testResults",id:"testresults",level:4},{value:"versionProperties",id:"versionproperties",level:4},{value:"subTypes",id:"subtypes",level:4},{value:"container",id:"container",level:4},{value:"Common Types",id:"common-types",level:3},{value:"AuditStamp",id:"auditstamp",level:4},{value:"BaseData",id:"basedata",level:4},{value:"FormAssociation",id:"formassociation",level:4},{value:"MLMetric",id:"mlmetric",level:4},{value:"MLModelFactors",id:"mlmodelfactors",level:4},{value:"TestResult",id:"testresult",level:4},{value:"TimeStamp",id:"timestamp",level:4},{value:"VersionTag",id:"versiontag",level:4},{value:"Relationships",id:"relationships",level:3},{value:"Outgoing",id:"outgoing",level:4},{value:"Incoming",id:"incoming",level:4},{value:"Global Metadata Model",id:"global-metadata-model",level:3}],c={toc:u},y="wrapper";function h(e){var{components:n}=e,a=s(e,["components"]);return(0,t.yg)(y,o(function(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{},t=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),t.forEach((function(n){l(e,n,a[n])}))}return e}({},c,a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"ml-model"},"ML Model"),(0,t.yg)("p",null,"The ML Model entity represents trained machine learning models across various ML platforms and frameworks. ML Models can be trained using different algorithms and frameworks (TensorFlow, PyTorch, Scikit-learn, etc.) and deployed to various platforms (MLflow, SageMaker, Vertex AI, etc.)."),(0,t.yg)("h2",{id:"identity"},"Identity"),(0,t.yg)("p",null,"ML Models are identified by three pieces of information:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"The platform where the model is registered or deployed: this is the specific ML platform that hosts or manages this model. Examples are ",(0,t.yg)("inlineCode",{parentName:"li"},"mlflow"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"sagemaker"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"vertexai"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"databricks"),", etc. See ",(0,t.yg)("a",{parentName:"li",href:"/docs/generated/metamodel/entities/dataplatform"},"dataplatform")," for more details."),(0,t.yg)("li",{parentName:"ul"},"The name of the model: this is the unique identifier for the model within the platform. The naming convention varies by platform:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"MLflow: typically uses the registered model name (e.g., ",(0,t.yg)("inlineCode",{parentName:"li"},"recommendation-model"),")"),(0,t.yg)("li",{parentName:"ul"},"SageMaker: uses the model name or model package group name (e.g., ",(0,t.yg)("inlineCode",{parentName:"li"},"product-recommendation-v1"),")"),(0,t.yg)("li",{parentName:"ul"},"Vertex AI: uses the model resource name (e.g., ",(0,t.yg)("inlineCode",{parentName:"li"},"projects/123/locations/us-central1/models/456"),")"))),(0,t.yg)("li",{parentName:"ul"},"The environment or origin where the model was trained: this is similar to the fabric concept for datasets, allowing you to distinguish between models in different environments (PROD, DEV, QA, etc.). The full list of supported environments is available in ",(0,t.yg)("a",{parentName:"li",href:"https://raw.githubusercontent.com/datahub-project/datahub/master/li-utils/src/main/pegasus/com/linkedin/common/FabricType.pdl"},"FabricType.pdl"),".")),(0,t.yg)("p",null,"An example of an ML Model identifier is ",(0,t.yg)("inlineCode",{parentName:"p"},"urn:li:mlModel:(urn:li:dataPlatform:mlflow,my-recommendation-model,PROD)"),"."),(0,t.yg)("h2",{id:"important-capabilities"},"Important Capabilities"),(0,t.yg)("h3",{id:"basic-model-information"},"Basic Model Information"),(0,t.yg)("p",null,"The core information about an ML Model is captured in the ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties")," aspect. This includes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Name and Description"),": Human-readable name and description of what the model does"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Model Type"),': The algorithm or architecture used (e.g., "Convolutional Neural Network", "Random Forest", "BERT")'),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Version"),": Version information using the ",(0,t.yg)("inlineCode",{parentName:"li"},"versionProperties")," aspect"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Timestamps"),": Created and last modified timestamps"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Custom Properties"),": Flexible key-value pairs for platform-specific metadata (e.g., framework version, model format)")),(0,t.yg)("p",null,"The following code snippet shows you how to create a basic ML Model:"),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Create an ML Model"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/mlmodel_create.py\nfrom datahub.metadata.urns import MlModelGroupUrn\nfrom datahub.sdk import DataHubClient\nfrom datahub.sdk.mlmodel import MLModel\n\nclient = DataHubClient.from_env()\n\nmlmodel = MLModel(\n    id="customer-churn-predictor",\n    name="Customer Churn Prediction Model",\n    platform="mlflow",\n    description="A gradient boosting model that predicts customer churn based on usage patterns and engagement metrics",\n    custom_properties={\n        "framework": "xgboost",\n        "framework_version": "1.7.0",\n        "model_format": "pickle",\n    },\n    model_group=MlModelGroupUrn(platform="mlflow", name="customer-churn-models"),\n)\n\nclient.entities.upsert(mlmodel)\n\n'))),(0,t.yg)("h3",{id:"hyperparameters-and-metrics"},"Hyperparameters and Metrics"),(0,t.yg)("p",null,"ML Models can capture both the hyperparameters used during training and various metrics from training and production:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Hyperparameters"),": Configuration values that control the training process (learning rate, batch size, number of epochs, etc.)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Training Metrics"),": Performance metrics from the training process (accuracy, loss, F1 score, etc.)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Online Metrics"),": Performance metrics from production deployment (latency, throughput, drift, etc.)")),(0,t.yg)("p",null,"These are stored in the ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties")," aspect as structured lists of parameters and metrics."),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Add hyperparameters and metrics to an ML Model"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/mlmodel_add_metadata.py\nfrom datahub.metadata.urns import CorpUserUrn, DomainUrn, MlModelUrn, TagUrn\nfrom datahub.sdk import DataHubClient\n\nclient = DataHubClient.from_env()\n\nmlmodel = client.entities.get(\n    MlModelUrn(platform="mlflow", name="customer-churn-predictor")\n)\n\nmlmodel.set_hyper_params(\n    {\n        "learning_rate": "0.1",\n        "max_depth": "6",\n        "n_estimators": "100",\n        "subsample": "0.8",\n        "colsample_bytree": "0.8",\n    }\n)\n\nmlmodel.set_training_metrics(\n    {\n        "accuracy": "0.87",\n        "precision": "0.84",\n        "recall": "0.82",\n        "f1_score": "0.83",\n        "auc_roc": "0.91",\n    }\n)\n\nmlmodel.add_owner(CorpUserUrn("data_science_team"))\n\nmlmodel.add_tag(TagUrn("production"))\nmlmodel.add_tag(TagUrn("classification"))\n\nmlmodel.set_domain(DomainUrn("urn:li:domain:customer-analytics"))\n\nclient.entities.update(mlmodel)\n\n'))),(0,t.yg)("h3",{id:"intended-use-and-ethical-considerations"},"Intended Use and Ethical Considerations"),(0,t.yg)("p",null,"DataHub supports comprehensive model documentation following ML model card best practices. These aspects help stakeholders understand the appropriate use cases and ethical implications of using the model:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Intended Use")," (",(0,t.yg)("inlineCode",{parentName:"li"},"intendedUse")," aspect): Documents primary use cases, intended users, and out-of-scope applications"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Ethical Considerations")," (",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelEthicalConsiderations")," aspect): Documents use of sensitive data, risks and harms, mitigation strategies"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Caveats and Recommendations")," (",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelCaveatsAndRecommendations")," aspect): Additional considerations, ideal dataset characteristics, and usage recommendations")),(0,t.yg)("p",null,"These aspects align with responsible AI practices and help ensure models are used appropriately."),(0,t.yg)("h3",{id:"training-and-evaluation-data"},"Training and Evaluation Data"),(0,t.yg)("p",null,"ML Models can document their training and evaluation datasets in two complementary ways:"),(0,t.yg)("h4",{id:"direct-dataset-references"},"Direct Dataset References"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Training Data")," (",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelTrainingData")," aspect): Datasets used to train the model, including preprocessing information and motivation for dataset selection"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Evaluation Data")," (",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelEvaluationData")," aspect): Datasets used for model evaluation and testing")),(0,t.yg)("p",null,"Each dataset reference includes the dataset URN, motivation for using that dataset, and any preprocessing steps applied. This creates direct lineage relationships between models and their training data."),(0,t.yg)("h4",{id:"lineage-via-training-runs"},"Lineage via Training Runs"),(0,t.yg)("p",null,"Training runs (",(0,t.yg)("inlineCode",{parentName:"p"},"dataProcessInstance")," entities) provide an alternative and often more detailed way to capture training lineage:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Training runs declare their input datasets via ",(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceInput")," aspect"),(0,t.yg)("li",{parentName:"ul"},"Training runs declare their output datasets via ",(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceOutput")," aspect"),(0,t.yg)("li",{parentName:"ul"},"Models reference training runs via the ",(0,t.yg)("inlineCode",{parentName:"li"},"trainingJobs")," field")),(0,t.yg)("p",null,"This creates indirect lineage: ",(0,t.yg)("inlineCode",{parentName:"p"},"Dataset \u2192 Training Run \u2192 Model")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"When to use each approach:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Use ",(0,t.yg)("strong",{parentName:"li"},"direct dataset references")," for simple documentation of what data was used"),(0,t.yg)("li",{parentName:"ul"},"Use ",(0,t.yg)("strong",{parentName:"li"},"training runs")," for complete lineage tracking including:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Multiple training/validation/test datasets"),(0,t.yg)("li",{parentName:"ul"},"Metrics and hyperparameters from the training process"),(0,t.yg)("li",{parentName:"ul"},"Temporal tracking (when the training occurred)"),(0,t.yg)("li",{parentName:"ul"},"Connection to experiments for comparing multiple training attempts")))),(0,t.yg)("p",null,"Most production ML systems should use training runs for comprehensive lineage tracking."),(0,t.yg)("h3",{id:"factor-prompts-and-quantitative-analysis"},"Factor Prompts and Quantitative Analysis"),(0,t.yg)("p",null,"For detailed model analysis and performance reporting:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Factor Prompts")," (",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelFactorPrompts")," aspect): Factors that may affect model performance (demographic groups, environmental conditions, etc.)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Quantitative Analyses")," (",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelQuantitativeAnalyses")," aspect): Links to dashboards or reports showing disaggregated performance metrics across different factors"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Metrics")," (",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelMetrics")," aspect): Detailed metrics with descriptions beyond simple training/online metrics")),(0,t.yg)("h3",{id:"source-code-and-cost"},"Source Code and Cost"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Source Code")," (",(0,t.yg)("inlineCode",{parentName:"li"},"sourceCode")," aspect): Links to model training code, notebooks, or repositories (GitHub, GitLab, etc.)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Cost")," (",(0,t.yg)("inlineCode",{parentName:"li"},"cost")," aspect): Cost attribution information for tracking model training and inference expenses")),(0,t.yg)("h3",{id:"training-runs-and-experiments"},"Training Runs and Experiments"),(0,t.yg)("p",null,"ML Models in DataHub can be linked to their training runs and experiments, providing complete lineage from raw data through training to deployed models."),(0,t.yg)("h4",{id:"training-runs"},"Training Runs"),(0,t.yg)("p",null,"Training runs represent specific executions of model training jobs. In DataHub, training runs are modeled as ",(0,t.yg)("inlineCode",{parentName:"p"},"dataProcessInstance")," entities with a specialized subtype:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Entity Type"),": ",(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstance")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Subtype"),": ",(0,t.yg)("inlineCode",{parentName:"li"},"MLAssetSubTypes.MLFLOW_TRAINING_RUN")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Key Aspects"),":",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceProperties"),": Basic properties like name, timestamps, and custom properties"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"mlTrainingRunProperties"),": ML-specific properties including:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Training metrics (accuracy, loss, F1 score, etc.)"),(0,t.yg)("li",{parentName:"ul"},"Hyperparameters (learning rate, batch size, epochs, etc.)"),(0,t.yg)("li",{parentName:"ul"},"Output URLs (model artifacts, checkpoints)"),(0,t.yg)("li",{parentName:"ul"},"External URLs (links to training dashboards)"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceInput"),": Input datasets used for training"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceOutput"),": Output datasets (predictions, feature importance, etc.)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceRunEvent"),": Start, completion, and failure events")))),(0,t.yg)("p",null,"Training runs create lineage relationships showing:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Upstream"),": Which datasets were used for training"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Downstream"),": Which models were produced by the training run")),(0,t.yg)("p",null,"Models reference their training runs through the ",(0,t.yg)("inlineCode",{parentName:"p"},"trainingJobs")," field in ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties"),", and model groups can also reference training runs to track all training activity for a model family."),(0,t.yg)("h4",{id:"experiments"},"Experiments"),(0,t.yg)("p",null,"Experiments organize related training runs into logical groups, typically representing a series of attempts to optimize a model or compare different approaches. In DataHub, experiments are modeled as ",(0,t.yg)("inlineCode",{parentName:"p"},"container")," entities:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Entity Type"),": ",(0,t.yg)("inlineCode",{parentName:"li"},"container")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Subtype"),": ",(0,t.yg)("inlineCode",{parentName:"li"},"MLAssetSubTypes.MLFLOW_EXPERIMENT")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Purpose"),": Group related training runs for organization and comparison")),(0,t.yg)("p",null,"Training runs belong to experiments through the ",(0,t.yg)("inlineCode",{parentName:"p"},"container")," aspect, creating a hierarchy:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},'Experiment: "Customer Churn Prediction"\n\u251c\u2500\u2500 Training Run 1: baseline model\n\u251c\u2500\u2500 Training Run 2: with feature engineering\n\u251c\u2500\u2500 Training Run 3: hyperparameter tuning\n\u2514\u2500\u2500 Training Run 4: final production model\n')),(0,t.yg)("p",null,"This structure mirrors common ML platform patterns (like MLflow's experiment/run hierarchy) and enables:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Comparing metrics across multiple training attempts"),(0,t.yg)("li",{parentName:"ul"},"Tracking the evolution of a model through iterations"),(0,t.yg)("li",{parentName:"ul"},"Understanding which approaches were tried and their results"),(0,t.yg)("li",{parentName:"ul"},"Organizing training work by project or objective")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Create training runs and experiments"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/ai/dh_ai_docs_demo.py\nimport argparse\nfrom datetime import datetime\n\nfrom dh_ai_client import DatahubAIClient\n\nfrom datahub.emitter.mcp_builder import (\n    ContainerKey,\n)\nfrom datahub.ingestion.source.common.subtypes import MLAssetSubTypes\nfrom datahub.metadata.com.linkedin.pegasus2avro.dataprocess import RunResultType\nfrom datahub.metadata.schema_classes import (\n    AuditStampClass,\n    DataProcessInstancePropertiesClass,\n    MLHyperParamClass,\n    MLMetricClass,\n    MLTrainingRunPropertiesClass,\n)\nfrom datahub.metadata.urns import (\n    CorpUserUrn,\n    DataProcessInstanceUrn,\n    GlossaryTermUrn,\n    TagUrn,\n)\nfrom datahub.sdk.container import Container\nfrom datahub.sdk.dataset import Dataset\nfrom datahub.sdk.mlmodel import MLModel\nfrom datahub.sdk.mlmodelgroup import MLModelGroup\n\nparser = argparse.ArgumentParser()\nparser.add_argument("--token", required=False, help="DataHub access token")\nparser.add_argument(\n    "--server_url",\n    required=False,\n    default="http://localhost:8080",\n    help="DataHub server URL (defaults to http://localhost:8080)",\n)\nargs = parser.parse_args()\n\n# Initialize client\nclient = DatahubAIClient(token=args.token, server_url=args.server_url)\n\n# Use a unique prefix for all IDs to avoid conflicts\nprefix = "test"\n\n# Define all entity IDs upfront\n# Basic entity IDs\nbasic_model_group_id = f"{prefix}_basic_group"\nbasic_model_id = f"{prefix}_basic_model"\nbasic_experiment_id = f"{prefix}_basic_experiment"\nbasic_run_id = f"{prefix}_basic_run"\nbasic_dataset_id = f"{prefix}_basic_dataset"\n\n# Advanced entity IDs\nadvanced_model_group_id = f"{prefix}_airline_forecast_models_group"\nadvanced_model_id = f"{prefix}_arima_model"\nadvanced_experiment_id = f"{prefix}_airline_forecast_experiment"\nadvanced_run_id = f"{prefix}_simple_training_run"\nadvanced_input_dataset_id = f"{prefix}_iris_input"\nadvanced_output_dataset_id = f"{prefix}_iris_output"\n\n# Display names with prefix\nbasic_model_group_name = f"{prefix} Basic Group"\nbasic_model_name = f"{prefix} Basic Model"\nbasic_experiment_name = f"{prefix} Basic Experiment"\nbasic_run_name = f"{prefix} Basic Run"\nbasic_dataset_name = f"{prefix} Basic Dataset"\n\nadvanced_model_group_name = f"{prefix} Airline Forecast Models Group"\nadvanced_model_name = f"{prefix} ARIMA Model"\nadvanced_experiment_name = f"{prefix} Airline Forecast Experiment"\nadvanced_run_name = f"{prefix} Simple Training Run"\nadvanced_input_dataset_name = f"{prefix} Iris Training Input Data"\nadvanced_output_dataset_name = f"{prefix} Iris Model Output Data"\n\n\ndef create_basic_model_group():\n    """Create a basic model group."""\n    print("Creating basic model group...")\n    basic_model_group = MLModelGroup(\n        id=basic_model_group_id,\n        platform="mlflow",\n        name=basic_model_group_name,\n    )\n    client._emit_mcps(basic_model_group.as_mcps())\n    return basic_model_group\n\n\ndef create_advanced_model_group():\n    """Create an advanced model group."""\n    print("Creating advanced model group...")\n    advanced_model_group = MLModelGroup(\n        id=advanced_model_group_id,\n        platform="mlflow",\n        name=advanced_model_group_name,\n        description="Group of models for airline passenger forecasting",\n        created=datetime.now(),\n        last_modified=datetime.now(),\n        owners=[CorpUserUrn("urn:li:corpuser:datahub")],\n        external_url="https://www.linkedin.com/in/datahub",\n        tags=["urn:li:tag:forecasting", "urn:li:tag:arima"],\n        terms=["urn:li:glossaryTerm:forecasting"],\n        custom_properties={"team": "forecasting"},\n    )\n    client._emit_mcps(advanced_model_group.as_mcps())\n    return advanced_model_group\n\n\ndef create_basic_model():\n    """Create a basic model."""\n    print("Creating basic model...")\n    basic_model = MLModel(\n        id=basic_model_id,\n        platform="mlflow",\n        name=basic_model_name,\n    )\n    client._emit_mcps(basic_model.as_mcps())\n    return basic_model\n\n\ndef create_advanced_model():\n    """Create an advanced model."""\n    print("Creating advanced model...")\n    advanced_model = MLModel(\n        id=advanced_model_id,\n        platform="mlflow",\n        name=advanced_model_name,\n        description="ARIMA model for airline passenger forecasting",\n        created=datetime.now(),\n        last_modified=datetime.now(),\n        owners=[CorpUserUrn("urn:li:corpuser:datahub")],\n        external_url="https://www.linkedin.com/in/datahub",\n        tags=["urn:li:tag:forecasting", "urn:li:tag:arima"],\n        terms=["urn:li:glossaryTerm:forecasting"],\n        custom_properties={"team": "forecasting"},\n        version="1",\n        aliases=["champion"],\n        hyper_params={"learning_rate": "0.01"},\n        training_metrics={"accuracy": "0.9"},\n    )\n    client._emit_mcps(advanced_model.as_mcps())\n    return advanced_model\n\n\ndef create_basic_experiment():\n    """Create a basic experiment."""\n    print("Creating basic experiment...")\n    basic_experiment = Container(\n        container_key=ContainerKey(platform="mlflow", name=basic_experiment_id),\n        display_name=basic_experiment_name,\n    )\n    client._emit_mcps(basic_experiment.as_mcps())\n    return basic_experiment\n\n\ndef create_advanced_experiment():\n    """Create an advanced experiment."""\n    print("Creating advanced experiment...")\n    advanced_experiment = Container(\n        container_key=ContainerKey(platform="mlflow", name=advanced_experiment_id),\n        display_name=advanced_experiment_name,\n        description="Experiment to forecast airline passenger numbers",\n        extra_properties={"team": "forecasting"},\n        created=datetime(2025, 4, 9, 22, 30),\n        last_modified=datetime(2025, 4, 9, 22, 30),\n        subtype=MLAssetSubTypes.MLFLOW_EXPERIMENT,\n    )\n    client._emit_mcps(advanced_experiment.as_mcps())\n    return advanced_experiment\n\n\ndef create_basic_training_run():\n    """Create a basic training run."""\n    print("Creating basic training run...")\n    basic_run_urn = client.create_training_run(\n        run_id=basic_run_id,\n        run_name=basic_run_name,\n    )\n    return basic_run_urn\n\n\ndef create_advanced_training_run():\n    """Create an advanced training run."""\n    print("Creating advanced training run...")\n    advanced_run_urn = client.create_training_run(\n        run_id=advanced_run_id,\n        properties=DataProcessInstancePropertiesClass(\n            name=advanced_run_name,\n            created=AuditStampClass(\n                time=1628580000000, actor="urn:li:corpuser:datahub"\n            ),\n            customProperties={"team": "forecasting"},\n        ),\n        training_run_properties=MLTrainingRunPropertiesClass(\n            id=advanced_run_id,\n            outputUrls=["s3://my-bucket/output"],\n            trainingMetrics=[MLMetricClass(name="accuracy", value="0.9")],\n            hyperParams=[MLHyperParamClass(name="learning_rate", value="0.01")],\n            externalUrl="https:localhost:5000",\n        ),\n        run_result=RunResultType.FAILURE,\n        start_timestamp=1628580000000,\n        end_timestamp=1628580001000,\n    )\n    return advanced_run_urn\n\n\ndef create_basic_dataset():\n    """Create a basic dataset."""\n    print("Creating basic dataset...")\n    basic_input_dataset = Dataset(\n        platform="snowflake",\n        name=basic_dataset_id,\n        display_name=basic_dataset_name,\n    )\n    client._emit_mcps(basic_input_dataset.as_mcps())\n    return basic_input_dataset\n\n\ndef create_advanced_datasets():\n    """Create advanced datasets."""\n    print("Creating advanced datasets...")\n    advanced_input_dataset = Dataset(\n        platform="snowflake",\n        name=advanced_input_dataset_id,\n        description="Raw Iris dataset used for training ML models",\n        schema=[("id", "number"), ("name", "string"), ("species", "string")],\n        display_name=advanced_input_dataset_name,\n        tags=["urn:li:tag:ml_data", "urn:li:tag:iris"],\n        terms=["urn:li:glossaryTerm:raw_data"],\n        owners=[CorpUserUrn("urn:li:corpuser:datahub")],\n        custom_properties={\n            "data_source": "UCI Repository",\n            "records": "150",\n            "features": "4",\n        },\n    )\n    client._emit_mcps(advanced_input_dataset.as_mcps())\n\n    advanced_output_dataset = Dataset(\n        platform="snowflake",\n        name=advanced_output_dataset_id,\n        description="Processed Iris dataset with model predictions",\n        schema=[("id", "number"), ("name", "string"), ("species", "string")],\n        display_name=advanced_output_dataset_name,\n        tags=["urn:li:tag:ml_data", "urn:li:tag:predictions"],\n        terms=["urn:li:glossaryTerm:model_output"],\n        owners=[CorpUserUrn("urn:li:corpuser:datahub")],\n        custom_properties={\n            "model_version": "1.0",\n            "records": "150",\n            "accuracy": "0.95",\n        },\n    )\n    client._emit_mcps(advanced_output_dataset.as_mcps())\n    return advanced_input_dataset, advanced_output_dataset\n\n\n# Split relationship functions into individual top-level functions\ndef add_model_to_model_group(model, model_group):\n    """Add model to model group relationship."""\n    print("Adding model to model group...")\n    model.set_model_group(model_group.urn)\n    client._emit_mcps(model.as_mcps())\n\n\ndef add_run_to_experiment(run_urn, experiment):\n    """Add run to experiment relationship."""\n    print("Adding run to experiment...")\n    client.add_run_to_experiment(run_urn=run_urn, experiment_urn=str(experiment.urn))\n\n\ndef add_run_to_model(model, run_id):\n    """Add run to model relationship."""\n    print("Adding run to model...")\n    model.add_training_job(DataProcessInstanceUrn(run_id))\n    client._emit_mcps(model.as_mcps())\n\n\ndef add_run_to_model_group(model_group, run_id):\n    """Add run to model group relationship."""\n    print("Adding run to model group...")\n    model_group.add_training_job(DataProcessInstanceUrn(run_id))\n    client._emit_mcps(model_group.as_mcps())\n\n\ndef add_input_dataset_to_run(run_urn, input_dataset):\n    """Add input dataset to run relationship."""\n    print("Adding input dataset to run...")\n    client.add_input_datasets_to_run(\n        run_urn=run_urn, dataset_urns=[str(input_dataset.urn)]\n    )\n\n\ndef add_output_dataset_to_run(run_urn, output_dataset):\n    """Add output dataset to run relationship."""\n    print("Adding output dataset to run...")\n    client.add_output_datasets_to_run(\n        run_urn=run_urn, dataset_urns=[str(output_dataset.urn)]\n    )\n\n\ndef update_model_properties(model):\n    """Update model properties."""\n    print("Updating model properties...")\n\n    # Update model version\n    model.set_version("2")\n\n    # Add tags and terms\n    model.add_tag(TagUrn("marketing"))\n    model.add_term(GlossaryTermUrn("marketing"))\n\n    # Add version alias\n    model.add_version_alias("challenger")\n\n    # Save the changes\n    client._emit_mcps(model.as_mcps())\n\n\ndef update_model_group_properties(model_group):\n    """Update model group properties."""\n    print("Updating model group properties...")\n\n    # Update description\n    model_group.set_description("Updated description for airline forecast models")\n\n    # Add tags and terms\n    model_group.add_tag(TagUrn("production"))\n    model_group.add_term(GlossaryTermUrn("time-series"))\n\n    # Update custom properties\n    model_group.set_custom_properties(\n        {"team": "forecasting", "business_unit": "operations", "status": "active"}\n    )\n\n    # Save the changes\n    client._emit_mcps(model_group.as_mcps())\n\n\ndef update_experiment_properties():\n    """Update experiment properties."""\n    print("Updating experiment properties...")\n\n    # Create a container object for the existing experiment\n    existing_experiment = Container(\n        container_key=ContainerKey(platform="mlflow", name=advanced_experiment_id),\n        display_name=advanced_experiment_name,\n    )\n\n    # Update properties\n    existing_experiment.set_description(\n        "Updated experiment for forecasting passenger numbers"\n    )\n    existing_experiment.add_tag(TagUrn("time-series"))\n    existing_experiment.add_term(GlossaryTermUrn("forecasting"))\n    existing_experiment.set_custom_properties(\n        {"team": "forecasting", "priority": "high", "status": "active"}\n    )\n\n    # Save the changes\n    client._emit_mcps(existing_experiment.as_mcps())\n\n\ndef main():\n    # Parse arguments\n    print("Creating AI assets...")\n\n    # Comment in/out the functions you want to run\n    # Create basic entities\n    create_basic_model_group()\n    create_basic_model()\n    create_basic_experiment()\n    create_basic_training_run()\n    create_basic_dataset()\n\n    # Create advanced entities\n    advanced_model_group = create_advanced_model_group()\n    advanced_model = create_advanced_model()\n    advanced_experiment = create_advanced_experiment()\n    advanced_run_urn = create_advanced_training_run()\n    advanced_input_dataset, advanced_output_dataset = create_advanced_datasets()\n\n    # # Create relationships - each can be commented out independently\n    add_model_to_model_group(advanced_model, advanced_model_group)\n    add_run_to_experiment(advanced_run_urn, advanced_experiment)\n    add_run_to_model(advanced_model, advanced_run_id)\n    add_run_to_model_group(advanced_model_group, advanced_run_id)\n    add_input_dataset_to_run(advanced_run_urn, advanced_input_dataset)\n    add_output_dataset_to_run(advanced_run_urn, advanced_output_dataset)\n\n    # # Update properties - each can be commented out independently\n    update_model_properties(advanced_model)\n    update_model_group_properties(advanced_model_group)\n    update_experiment_properties()\n\n    print("All done! AI entities created successfully.")\n\n\nif __name__ == "__main__":\n    main()\n\n'))),(0,t.yg)("h3",{id:"relationships-and-lineage"},"Relationships and Lineage"),(0,t.yg)("p",null,"ML Models support rich relationship modeling through various aspects and fields:"),(0,t.yg)("h4",{id:"core-relationships"},"Core Relationships"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Model Groups")," (via ",(0,t.yg)("inlineCode",{parentName:"p"},"groups")," field in ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties"),"): Models can belong to ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelGroup")," entities, creating a ",(0,t.yg)("inlineCode",{parentName:"p"},"MemberOf")," relationship. This organizes related models into logical families or collections.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Training Runs")," (via ",(0,t.yg)("inlineCode",{parentName:"p"},"trainingJobs")," field in ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties"),"): Models reference ",(0,t.yg)("inlineCode",{parentName:"p"},"dataProcessInstance")," entities with ",(0,t.yg)("inlineCode",{parentName:"p"},"MLFLOW_TRAINING_RUN")," subtype that produced them. This creates upstream lineage showing:"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Which training run created this model"),(0,t.yg)("li",{parentName:"ul"},"What datasets were used for training (via the training run's input datasets)"),(0,t.yg)("li",{parentName:"ul"},"What hyperparameters and metrics were recorded"),(0,t.yg)("li",{parentName:"ul"},"Which experiment the training run belonged to"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Features")," (via ",(0,t.yg)("inlineCode",{parentName:"p"},"mlFeatures")," field in ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties"),"): Models can consume ",(0,t.yg)("inlineCode",{parentName:"p"},"mlFeature")," entities, creating a ",(0,t.yg)("inlineCode",{parentName:"p"},"Consumes")," relationship. This documents:"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Which features are required for model inference"),(0,t.yg)("li",{parentName:"ul"},"The complete feature set used during training"),(0,t.yg)("li",{parentName:"ul"},"Dependencies on feature stores or feature tables"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Deployments")," (via ",(0,t.yg)("inlineCode",{parentName:"p"},"deployments")," field in ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties"),"): Models can be deployed to ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelDeployment")," entities, representing running model endpoints in various environments (production, staging, etc.)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Training Datasets")," (via ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelTrainingData")," aspect): Direct references to datasets used for training, including preprocessing information and motivation for dataset selection")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Evaluation Datasets")," (via ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelEvaluationData")," aspect): References to datasets used for model evaluation and testing"))),(0,t.yg)("h4",{id:"lineage-graph-structure"},"Lineage Graph Structure"),(0,t.yg)("p",null,"These relationships create a comprehensive lineage graph:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"Training Datasets \u2192 Training Run \u2192 ML Model \u2192 ML Model Deployment\n                         \u2193\n                    Experiment\n\nFeature Tables \u2192 ML Features \u2192 ML Model\n\nML Model Group \u2190 ML Model\n")),(0,t.yg)("p",null,"This enables powerful queries such as:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'"Show me all datasets that influenced this model\'s predictions"'),(0,t.yg)("li",{parentName:"ul"},'"Which models will be affected if this dataset schema changes?"'),(0,t.yg)("li",{parentName:"ul"},'"What\'s the full history of training runs that created versions of this model?"'),(0,t.yg)("li",{parentName:"ul"},'"Which production endpoints are serving this model?"')),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Update model-specific aspects"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/mlmodel_update_aspects.py\nimport datahub.metadata.schema_classes as models\nfrom datahub.metadata.urns import DatasetUrn, MlModelUrn\nfrom datahub.sdk import DataHubClient\n\nclient = DataHubClient.from_env()\n\nmodel_urn = MlModelUrn(platform="mlflow", name="customer-churn-predictor")\n\nmlmodel = client.entities.get(model_urn)\n\nintended_use = models.IntendedUseClass(\n    primaryUses=[\n        "Predict customer churn to enable proactive retention campaigns",\n        "Identify high-risk customers for targeted interventions",\n    ],\n    primaryUsers=[models.IntendedUserTypeClass.ENTERPRISE],\n    outOfScopeUses=[\n        "Not suitable for real-time predictions (batch inference only)",\n        "Not trained on international markets outside North America",\n    ],\n)\n\nmlmodel._set_aspect(intended_use)\n\ntraining_data = models.TrainingDataClass(\n    trainingData=[\n        models.BaseDataClass(\n            dataset=str(\n                DatasetUrn(\n                    platform="snowflake", name="prod.analytics.customer_features"\n                )\n            ),\n            motivation="Historical customer data with confirmed churn labels",\n            preProcessing=[\n                "Removed customers with less than 30 days of history",\n                "Standardized numerical features using StandardScaler",\n                "One-hot encoded categorical variables",\n            ],\n        )\n    ]\n)\n\nmlmodel._set_aspect(training_data)\n\nsource_code = models.SourceCodeClass(\n    sourceCode=[\n        models.SourceCodeUrlClass(\n            type=models.SourceCodeUrlTypeClass.ML_MODEL_SOURCE_CODE,\n            sourceCodeUrl="https://github.com/example/ml-models/tree/main/churn-predictor",\n        )\n    ]\n)\n\nmlmodel._set_aspect(source_code)\n\nethical_considerations = models.EthicalConsiderationsClass(\n    data=["Model uses demographic data (age, location) which may be sensitive"],\n    risksAndHarms=[\n        "Predictions may disproportionately affect certain customer segments",\n        "False positives could lead to unnecessary retention spending",\n    ],\n    mitigations=[\n        "Regular bias audits conducted quarterly",\n        "Human review required for high-value customer interventions",\n    ],\n)\n\nmlmodel._set_aspect(ethical_considerations)\n\nclient.entities.update(mlmodel)\n\nprint(f"Updated aspects for model: {model_urn}")\n\n'))),(0,t.yg)("h3",{id:"tags-terms-and-ownership"},"Tags, Terms, and Ownership"),(0,t.yg)("p",null,"Like other DataHub entities, ML Models support:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Tags")," (",(0,t.yg)("inlineCode",{parentName:"li"},"globalTags"),' aspect): Flexible categorization (e.g., "pii-model", "production-ready", "experimental")'),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Glossary Terms")," (",(0,t.yg)("inlineCode",{parentName:"li"},"glossaryTerms"),' aspect): Business concepts (e.g., "Customer Churn", "Fraud Detection")'),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Ownership")," (",(0,t.yg)("inlineCode",{parentName:"li"},"ownership")," aspect): Individuals or teams responsible for the model (data scientists, ML engineers, etc.)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Domains")," (",(0,t.yg)("inlineCode",{parentName:"li"},"domains"),' aspect): Organizational grouping (e.g., "Recommendations", "Risk Management")')),(0,t.yg)("h3",{id:"complete-ml-workflow-example"},"Complete ML Workflow Example"),(0,t.yg)("p",null,"The following example demonstrates a complete ML model lifecycle in DataHub, showing how all the pieces work together:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"1. Create Model Group\n   \u2193\n2. Create Experiment (Container)\n   \u2193\n3. Create Training Run (DataProcessInstance)\n   \u251c\u2500\u2500 Link input datasets\n   \u251c\u2500\u2500 Link output datasets\n   \u2514\u2500\u2500 Add metrics and hyperparameters\n   \u2193\n4. Create Model\n   \u251c\u2500\u2500 Set version and aliases\n   \u251c\u2500\u2500 Link to model group\n   \u251c\u2500\u2500 Link to training run\n   \u251c\u2500\u2500 Add hyperparameters and metrics\n   \u2514\u2500\u2500 Add ownership and tags\n   \u2193\n5. Link Training Run to Experiment\n   \u2193\n6. Update Model properties as needed\n   \u251c\u2500\u2500 Change version aliases (champion \u2192 challenger)\n   \u251c\u2500\u2500 Add additional tags/terms\n   \u2514\u2500\u2500 Update metrics from production\n")),(0,t.yg)("p",null,"This workflow creates rich lineage showing:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Which datasets trained the model"),(0,t.yg)("li",{parentName:"ul"},"What experiments and training runs were involved"),(0,t.yg)("li",{parentName:"ul"},"How the model evolved through versions"),(0,t.yg)("li",{parentName:"ul"},"Which version is deployed (via aliases)"),(0,t.yg)("li",{parentName:"ul"},"Who owns and maintains the model")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Complete Python Example: Full ML Workflow"),(0,t.yg)("p",null,"See the comprehensive example in ",(0,t.yg)("inlineCode",{parentName:"p"},"/metadata-ingestion/examples/ai/dh_ai_docs_demo.py")," which demonstrates:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Creating model groups with metadata"),(0,t.yg)("li",{parentName:"ul"},"Creating experiments to organize training runs"),(0,t.yg)("li",{parentName:"ul"},"Creating training runs with metrics, hyperparameters, and dataset lineage"),(0,t.yg)("li",{parentName:"ul"},"Creating models with versions and aliases"),(0,t.yg)("li",{parentName:"ul"},"Linking all entities together to form complete lineage"),(0,t.yg)("li",{parentName:"ul"},"Updating properties and managing the model lifecycle")),(0,t.yg)("p",null,"The example shows both basic patterns for getting started and advanced patterns for production ML systems.")),(0,t.yg)("h2",{id:"code-examples"},"Code Examples"),(0,t.yg)("h3",{id:"querying-ml-model-information"},"Querying ML Model Information"),(0,t.yg)("p",null,"The standard REST APIs can be used to retrieve ML Model entities and their aspects:"),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python: Query an ML Model via REST API"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/mlmodel_query_rest_api.py\nimport urllib.parse\n\nimport requests\n\ngms_server = "http://localhost:8080"\n\nmodel_urn = "urn:li:mlModel:(urn:li:dataPlatform:mlflow,customer-churn-predictor,PROD)"\nencoded_urn = urllib.parse.quote(model_urn, safe="")\n\nresponse = requests.get(f"{gms_server}/entities/{encoded_urn}")\n\nif response.status_code == 200:\n    entity = response.json()\n\n    print(f"Entity URN: {entity[\'urn\']}")\n    print("\\nAspects:")\n\n    if "mlModelProperties" in entity["aspects"]:\n        props = entity["aspects"]["mlModelProperties"]\n        print(f"  Name: {props.get(\'name\')}")\n        print(f"  Description: {props.get(\'description\')}")\n        print(f"  Type: {props.get(\'type\')}")\n\n        if props.get("hyperParams"):\n            print("\\n  Hyperparameters:")\n            for param in props["hyperParams"]:\n                print(f"    - {param[\'name\']}: {param[\'value\']}")\n\n        if props.get("trainingMetrics"):\n            print("\\n  Training Metrics:")\n            for metric in props["trainingMetrics"]:\n                print(f"    - {metric[\'name\']}: {metric[\'value\']}")\n\n    if "globalTags" in entity["aspects"]:\n        tags = entity["aspects"]["globalTags"]["tags"]\n        print(f"\\n  Tags: {[tag[\'tag\'] for tag in tags]}")\n\n    if "ownership" in entity["aspects"]:\n        owners = entity["aspects"]["ownership"]["owners"]\n        print(f"\\n  Owners: {[owner[\'owner\'] for owner in owners]}")\n\n    if "intendedUse" in entity["aspects"]:\n        intended = entity["aspects"]["intendedUse"]\n        print(f"\\n  Primary Uses: {intended.get(\'primaryUses\')}")\n        print(f"  Out of Scope Uses: {intended.get(\'outOfScopeUses\')}")\n\nelse:\n    print(f"Failed to fetch entity: {response.status_code}")\n    print(response.text)\n\n'))),(0,t.yg)("h2",{id:"integration-points"},"Integration Points"),(0,t.yg)("h3",{id:"related-entities"},"Related Entities"),(0,t.yg)("p",null,"ML Models integrate with several other entities in the DataHub metadata model:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"mlModelGroup"),": Logical grouping of related model versions (e.g., all versions of a recommendation model)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"mlModelDeployment"),": Running instances of deployed models with status, endpoint URLs, and deployment metadata"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"mlFeature"),": Individual features consumed by the model for inference"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"mlFeatureTable"),": Collections of features, often from feature stores"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"dataset"),": Training and evaluation datasets used by the model"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"dataProcessInstance")," (with ",(0,t.yg)("inlineCode",{parentName:"li"},"MLFLOW_TRAINING_RUN")," subtype): Specific training runs that created model versions, including metrics, hyperparameters, and lineage to input/output datasets"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"container")," (with ",(0,t.yg)("inlineCode",{parentName:"li"},"MLFLOW_EXPERIMENT")," subtype): Experiments that organize related training runs for a model or project"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"versionSet"),": Groups all versions of a model together for version management")),(0,t.yg)("h3",{id:"graphql-resolvers"},"GraphQL Resolvers"),(0,t.yg)("p",null,"The GraphQL API provides rich querying capabilities for ML Models through resolvers in ",(0,t.yg)("inlineCode",{parentName:"p"},"datahub-graphql-core/src/main/java/com/linkedin/datahub/graphql/types/mlmodel/"),". These resolvers support:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Fetching model details with all aspects"),(0,t.yg)("li",{parentName:"ul"},"Navigating relationships to features, groups, and deployments"),(0,t.yg)("li",{parentName:"ul"},"Searching and filtering models by tags, terms, platform, etc.")),(0,t.yg)("h3",{id:"ingestion-sources"},"Ingestion Sources"),(0,t.yg)("p",null,"Several ingestion sources automatically extract ML Model metadata:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"MLflow"),": Extracts registered models, versions, metrics, parameters, and lineage from MLflow tracking servers"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"SageMaker"),": Ingests models, model packages, and endpoints from AWS SageMaker"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Vertex AI"),": Extracts models and endpoints from Google Cloud Vertex AI"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Databricks"),": Ingests MLflow models from Databricks workspaces"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Unity Catalog"),": Extracts ML models registered in Unity Catalog")),(0,t.yg)("p",null,"These sources are located in ",(0,t.yg)("inlineCode",{parentName:"p"},"/metadata-ingestion/src/datahub/ingestion/source/")," and automatically populate model properties, relationships, and lineage."),(0,t.yg)("h2",{id:"notable-exceptions"},"Notable Exceptions"),(0,t.yg)("h3",{id:"model-versioning"},"Model Versioning"),(0,t.yg)("p",null,"ML Model versioning in DataHub uses the ",(0,t.yg)("inlineCode",{parentName:"p"},"versionProperties")," aspect, which provides a robust framework for tracking model versions across their lifecycle. This is the standard approach demonstrated in production ML platforms."),(0,t.yg)("h4",{id:"version-properties-aspect"},"Version Properties Aspect"),(0,t.yg)("p",null,"Every ML Model should use the ",(0,t.yg)("inlineCode",{parentName:"p"},"versionProperties")," aspect, which includes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"version"),": A ",(0,t.yg)("inlineCode",{parentName:"li"},"VersionTagClass"),' containing the version identifier (e.g., "1", "2", "v1.0.0")'),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"versionSet"),": A URN that groups all versions of a model together (e.g., ",(0,t.yg)("inlineCode",{parentName:"li"},"urn:li:versionSet:(mlModel,mlmodel_my-model_versions)"),")"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"sortId"),": A string used for ordering versions (typically the version number zero-padded)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"aliases"),": Optional array of ",(0,t.yg)("inlineCode",{parentName:"li"},"VersionTagClass")," objects for named version references")),(0,t.yg)("h4",{id:"version-aliases-for-ab-testing"},"Version Aliases for A/B Testing"),(0,t.yg)("p",null,"Version aliases enable flexible model lifecycle management and A/B testing workflows. Common aliases include:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},'"champion"'),": The currently deployed production model"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},'"challenger"'),": A candidate model being tested or evaluated"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},'"baseline"'),": A reference model for performance comparison"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},'"latest"'),": The most recently trained version")),(0,t.yg)("p",null,"These aliases allow you to reference models by their role rather than specific version numbers, enabling smooth model promotion workflows:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},'Model v1 (alias: "champion")     # Currently in production\nModel v2 (alias: "challenger")   # Being tested in canary deployment\nModel v3 (alias: "latest")       # Just completed training\n')),(0,t.yg)("p",null,"When v2 proves superior, you can update aliases without changing infrastructure:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},'Model v1 (no alias)              # Retired\nModel v2 (alias: "champion")     # Promoted to production\nModel v3 (alias: "challenger")   # Now being tested\n')),(0,t.yg)("h4",{id:"model-groups-and-versioning"},"Model Groups and Versioning"),(0,t.yg)("p",null,"Model groups (",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelGroup")," entities) serve as logical containers for organizing related models. While model groups can contain multiple versions of the same model, versioning is handled through the ",(0,t.yg)("inlineCode",{parentName:"p"},"versionProperties")," aspect on individual models, not through the group structure itself. Model groups are used for:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Organizing all versions of a model family"),(0,t.yg)("li",{parentName:"ul"},"Grouping experimental variants or different architectures solving the same problem"),(0,t.yg)("li",{parentName:"ul"},"Managing lineage and metadata common across multiple related models")),(0,t.yg)("p",null,"The relationship between models and model groups is through the ",(0,t.yg)("inlineCode",{parentName:"p"},"groups")," field in ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelProperties"),", creating a ",(0,t.yg)("inlineCode",{parentName:"p"},"MemberOf")," relationship."),(0,t.yg)("h3",{id:"platform-specific-naming"},"Platform-Specific Naming"),(0,t.yg)("p",null,"Different ML platforms have different naming conventions:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"MLflow"),": Uses a two-level hierarchy (registered model name + version number). In DataHub, each version can be a separate entity, or versions can be tracked in a single entity."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"SageMaker"),": Has multiple model concepts (model, model package, model package group). DataHub can model these as separate entities or consolidate them."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Vertex AI"),": Uses fully qualified resource names. These should be simplified to human-readable names when possible.")),(0,t.yg)("p",null,"When ingesting from these platforms, connectors handle platform-specific naming and convert it to appropriate DataHub URNs."),(0,t.yg)("h3",{id:"model-cards"},"Model Cards"),(0,t.yg)("p",null,"The various aspects (",(0,t.yg)("inlineCode",{parentName:"p"},"intendedUse"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelFactorPrompts"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"mlModelEthicalConsiderations"),", etc.) follow the Model Cards for Model Reporting framework (Mitchell et al., 2019). While these aspects are optional, they are strongly recommended for production models to ensure responsible AI practices and transparent model documentation."),(0,t.yg)("h2",{id:"technical-reference-guide"},"Technical Reference Guide"),(0,t.yg)("p",null,"The sections above provide an overview of how to use this entity. The following sections provide detailed technical information about how metadata is stored and represented in DataHub."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Aspects")," are the individual pieces of metadata that can be attached to an entity. Each aspect contains specific information (like ownership, tags, or properties) and is stored as a separate record, allowing for flexible and incremental metadata updates."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Relationships")," show how this entity connects to other entities in the metadata graph. These connections are derived from the fields within each aspect and form the foundation of DataHub's knowledge graph."),(0,t.yg)("h3",{id:"reading-the-field-tables"},"Reading the Field Tables"),(0,t.yg)("p",null,"Each aspect's field table includes an ",(0,t.yg)("strong",{parentName:"p"},"Annotations")," column that provides additional metadata about how fields are used:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"\u26a0\ufe0f Deprecated"),": This field is deprecated and may be removed in a future version. Check the description for the recommended alternative"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Searchable"),": This field is indexed and can be searched in DataHub's search interface"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Searchable (fieldname)"),": When the field name in parentheses is shown, it indicates the field is indexed under a different name in the search index. For example, ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardTool")," is indexed as ",(0,t.yg)("inlineCode",{parentName:"li"},"tool")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"\u2192 RelationshipName"),": This field creates a relationship to another entity. The arrow indicates this field contains a reference (URN) to another entity, and the name indicates the type of relationship (e.g., ",(0,t.yg)("inlineCode",{parentName:"li"},"\u2192 Contains"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"\u2192 OwnedBy"),")")),(0,t.yg)("p",null,"Fields with complex types (like ",(0,t.yg)("inlineCode",{parentName:"p"},"Edge"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"AuditStamp"),") link to their definitions in the ",(0,t.yg)("a",{parentName:"p",href:"#common-types"},"Common Types")," section below."),(0,t.yg)("h3",{id:"aspects"},"Aspects"),(0,t.yg)("h4",{id:"mlmodelkey"},"mlModelKey"),(0,t.yg)("p",null,"Key for an ML model"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"platform"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Standardized platform urn for the model"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"name"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Name of the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"origin"),(0,t.yg)("td",{parentName:"tr",align:null},"FabricType"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Fabric type where model belongs to or where it was generated"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelKey"\n  },\n  "name": "MLModelKey",\n  "namespace": "com.linkedin.metadata.key",\n  "fields": [\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "platform",\n      "doc": "Standardized platform urn for the model"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldNameAliases": [\n          "_entityName"\n        ],\n        "fieldType": "WORD_GRAM"\n      },\n      "type": "string",\n      "name": "name",\n      "doc": "Name of the MLModel"\n    },\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "TEXT_PARTIAL",\n        "filterNameOverride": "Environment",\n        "queryByDefault": false\n      },\n      "type": {\n        "type": "enum",\n        "symbolDocs": {\n          "CORP": "Designates corporation fabrics",\n          "DEV": "Designates development fabrics",\n          "EI": "Designates early-integration fabrics",\n          "NON_PROD": "Designates non-production fabrics",\n          "PRD": "Alternative Prod spelling",\n          "PRE": "Designates pre-production fabrics",\n          "PROD": "Designates production fabrics",\n          "QA": "Designates quality assurance fabrics",\n          "RVW": "Designates review fabrics",\n          "SANDBOX": "Designates sandbox fabrics",\n          "SBX": "Alternative spelling for sandbox",\n          "SIT": "System Integration Testing",\n          "STG": "Designates staging fabrics",\n          "TEST": "Designates testing fabrics",\n          "TST": "Alternative Test spelling",\n          "UAT": "Designates user acceptance testing fabrics"\n        },\n        "name": "FabricType",\n        "namespace": "com.linkedin.common",\n        "symbols": [\n          "DEV",\n          "TEST",\n          "QA",\n          "UAT",\n          "EI",\n          "PRE",\n          "STG",\n          "NON_PROD",\n          "PROD",\n          "CORP",\n          "RVW",\n          "PRD",\n          "TST",\n          "SIT",\n          "SBX",\n          "SANDBOX"\n        ],\n        "doc": "Fabric group type"\n      },\n      "name": "origin",\n      "doc": "Fabric type where model belongs to or where it was generated"\n    }\n  ],\n  "doc": "Key for an ML model"\n}\n')))),(0,t.yg)("h4",{id:"ownership"},"ownership"),(0,t.yg)("p",null,"Ownership information of an entity."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"owners"),(0,t.yg)("td",{parentName:"tr",align:null},"Owner[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"List of owners of the entity."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"ownerTypes"),(0,t.yg)("td",{parentName:"tr",align:null},"map"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Ownership type to Owners map, populated via mutation hook."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who last modified the record and when. A value of 0 in the time field indi..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "ownership"\n  },\n  "name": "Ownership",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "Owner",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "corpuser",\n                  "corpGroup"\n                ],\n                "name": "OwnedBy"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "owners",\n                "fieldType": "URN",\n                "filterNameOverride": "Owned By",\n                "hasValuesFieldName": "hasOwners",\n                "queryByDefault": false\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "owner",\n              "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\\n(Caveat: only corpuser is currently supported in the frontend.)"\n            },\n            {\n              "deprecated": true,\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "BUSINESS_OWNER": "A person or group who is responsible for logical, or business related, aspects of the asset.",\n                  "CONSUMER": "A person, group, or service that consumes the data\\nDeprecated! Use TECHNICAL_OWNER or BUSINESS_OWNER instead.",\n                  "CUSTOM": "Set when ownership type is unknown or a when new one is specified as an ownership type entity for which we have no\\nenum value for. This is used for backwards compatibility",\n                  "DATAOWNER": "A person or group that is owning the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DATA_STEWARD": "A steward, expert, or delegate responsible for the asset.",\n                  "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DEVELOPER": "A person or group that is in charge of developing the code\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "NONE": "No specific type associated to the owner.",\n                  "PRODUCER": "A person, group, or service that produces/generates the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "STAKEHOLDER": "A person or a group that has direct business interest\\nDeprecated! Use TECHNICAL_OWNER, BUSINESS_OWNER, or STEWARD instead.",\n                  "TECHNICAL_OWNER": "person or group who is responsible for technical aspects of the asset."\n                },\n                "deprecatedSymbols": {\n                  "CONSUMER": true,\n                  "DATAOWNER": true,\n                  "DELEGATE": true,\n                  "DEVELOPER": true,\n                  "PRODUCER": true,\n                  "STAKEHOLDER": true\n                },\n                "name": "OwnershipType",\n                "namespace": "com.linkedin.common",\n                "symbols": [\n                  "CUSTOM",\n                  "TECHNICAL_OWNER",\n                  "BUSINESS_OWNER",\n                  "DATA_STEWARD",\n                  "NONE",\n                  "DEVELOPER",\n                  "DATAOWNER",\n                  "DELEGATE",\n                  "PRODUCER",\n                  "CONSUMER",\n                  "STAKEHOLDER"\n                ],\n                "doc": "Asset owner types"\n              },\n              "name": "type",\n              "doc": "The type of the ownership"\n            },\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "ownershipType"\n                ],\n                "name": "ownershipType"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "typeUrn",\n              "default": null,\n              "doc": "The type of the ownership\\nUrn of type O"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "OwnershipSource",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": {\n                        "type": "enum",\n                        "symbolDocs": {\n                          "AUDIT": "Auditing system or audit logs",\n                          "DATABASE": "Database, e.g. GRANTS table",\n                          "FILE_SYSTEM": "File system, e.g. file/directory owner",\n                          "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",\n                          "MANUAL": "Manually provided by a user",\n                          "OTHER": "Other sources",\n                          "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",\n                          "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"\n                        },\n                        "name": "OwnershipSourceType",\n                        "namespace": "com.linkedin.common",\n                        "symbols": [\n                          "AUDIT",\n                          "DATABASE",\n                          "FILE_SYSTEM",\n                          "ISSUE_TRACKING_SYSTEM",\n                          "MANUAL",\n                          "SERVICE",\n                          "SOURCE_CONTROL",\n                          "OTHER"\n                        ]\n                      },\n                      "name": "type",\n                      "doc": "The type of the source"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "url",\n                      "default": null,\n                      "doc": "A reference URL for the source"\n                    }\n                  ],\n                  "doc": "Source/provider of the ownership information"\n                }\n              ],\n              "name": "source",\n              "default": null,\n              "doc": "Source information for the ownership"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "ownerAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "ownerAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "ownerAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Ownership information"\n        }\n      },\n      "name": "owners",\n      "doc": "List of owners of the entity."\n    },\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "MAP_ARRAY",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        {\n          "type": "map",\n          "values": {\n            "type": "array",\n            "items": "string"\n          }\n        },\n        "null"\n      ],\n      "name": "ownerTypes",\n      "default": {},\n      "doc": "Ownership type to Owners map, populated via mutation hook."\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "lastModified",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data."\n    }\n  ],\n  "doc": "Ownership information of an entity."\n}\n')))),(0,t.yg)("h4",{id:"mlmodelproperties"},"mlModelProperties"),(0,t.yg)("p",null,"Properties associated with a ML Model"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"customProperties"),(0,t.yg)("td",{parentName:"tr",align:null},"map"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"externalUrl"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"URL where the reference exist"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"trainingJobs"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"List of jobs or process instances (if any) used to train the model or group. Visible in Lineage. ..."),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 TrainedBy")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"downstreamJobs"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"List of jobs or process instances (if any) that use the model or group."),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 UsedBy")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"name"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Display name of the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"description"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Documentation of the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"date"),(0,t.yg)("td",{parentName:"tr",align:null},"long"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Date when the MLModel was developed"),(0,t.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"created"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#timestamp"},"TimeStamp")),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who created this and when"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#timestamp"},"TimeStamp")),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Date when the MLModel was last modified"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"version"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#versiontag"},"VersionTag")),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Version of the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"type"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Type of Algorithm or MLModel such as whether it is a Naive Bayes classifier, Convolutional Neural..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"hyperParameters"),(0,t.yg)("td",{parentName:"tr",align:null},"map"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Hyper Parameters of the MLModel  NOTE: these are deprecated in favor of hyperParams"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"hyperParams"),(0,t.yg)("td",{parentName:"tr",align:null},"MLHyperParam[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Hyperparameters of the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"trainingMetrics"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#mlmetric"},"MLMetric"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Metrics of the MLModel used in training"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"onlineMetrics"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#mlmetric"},"MLMetric"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Metrics of the MLModel used in production"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"mlFeatures"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"List of features used for MLModel training"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 Consumes")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"tags"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Tags for the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"deployments"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Deployments for the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 DeployedTo")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"groups"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Groups the model belongs to"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 MemberOf"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelProperties"\n  },\n  "name": "MLModelProperties",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "TEXT",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "map",\n        "values": "string"\n      },\n      "name": "customProperties",\n      "default": {},\n      "doc": "Custom property bag."\n    },\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD"\n      },\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "externalUrl",\n      "default": null,\n      "doc": "URL where the reference exist"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataJob",\n            "dataProcessInstance"\n          ],\n          "isLineage": true,\n          "name": "TrainedBy"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "trainingJobs",\n      "default": null,\n      "doc": "List of jobs or process instances (if any) used to train the model or group. Visible in Lineage. Note that ML Models can also be specified as the output of a specific Data Process Instances (runs) via the DataProcessInstanceOutputs aspect."\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataJob",\n            "dataProcessInstance"\n          ],\n          "isLineage": true,\n          "isUpstream": false,\n          "name": "UsedBy"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "downstreamJobs",\n      "default": null,\n      "doc": "List of jobs or process instances (if any) that use the model or group."\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldType": "WORD_GRAM",\n        "queryByDefault": true\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "name",\n      "default": null,\n      "doc": "Display name of the MLModel"\n    },\n    {\n      "Searchable": {\n        "fieldType": "TEXT",\n        "hasValuesFieldName": "hasDescription"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "description",\n      "default": null,\n      "doc": "Documentation of the MLModel"\n    },\n    {\n      "deprecated": true,\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "date",\n      "default": null,\n      "doc": "Date when the MLModel was developed"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeStamp",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": "long",\n              "name": "time",\n              "doc": "When did the event occur"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "actor",\n              "default": null,\n              "doc": "Optional: The actor urn involved in the event."\n            }\n          ],\n          "doc": "A standard event timestamp"\n        }\n      ],\n      "name": "created",\n      "default": null,\n      "doc": "Audit stamp containing who created this and when"\n    },\n    {\n      "type": [\n        "null",\n        "com.linkedin.common.TimeStamp"\n      ],\n      "name": "lastModified",\n      "default": null,\n      "doc": "Date when the MLModel was last modified"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "VersionTag",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "versionTag",\n              "default": null\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "metadataAttribution",\n              "default": null\n            }\n          ],\n          "doc": "A resource-defined string representing the resource state for the purpose of concurrency control"\n        }\n      ],\n      "name": "version",\n      "default": null,\n      "doc": "Version of the MLModel"\n    },\n    {\n      "Searchable": {\n        "fieldType": "TEXT_PARTIAL"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "type",\n      "default": null,\n      "doc": "Type of Algorithm or MLModel such as whether it is a Naive Bayes classifier, Convolutional Neural Network, etc"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "map",\n          "values": [\n            "string",\n            "int",\n            "float",\n            "double",\n            "boolean"\n          ]\n        }\n      ],\n      "name": "hyperParameters",\n      "default": null,\n      "doc": "Hyper Parameters of the MLModel\\n\\nNOTE: these are deprecated in favor of hyperParams"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "Aspect": {\n              "name": "mlHyperParam"\n            },\n            "name": "MLHyperParam",\n            "namespace": "com.linkedin.ml.metadata",\n            "fields": [\n              {\n                "type": "string",\n                "name": "name",\n                "doc": "Name of the MLHyperParam"\n              },\n              {\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "description",\n                "default": null,\n                "doc": "Documentation of the MLHyperParam"\n              },\n              {\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "value",\n                "default": null,\n                "doc": "The value of the MLHyperParam"\n              },\n              {\n                "type": [\n                  "null",\n                  "long"\n                ],\n                "name": "createdAt",\n                "default": null,\n                "doc": "Date when the MLHyperParam was developed"\n              }\n            ],\n            "doc": "Properties associated with an ML Hyper Param"\n          }\n        }\n      ],\n      "name": "hyperParams",\n      "default": null,\n      "doc": "Hyperparameters of the MLModel"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "Aspect": {\n              "name": "mlMetric"\n            },\n            "name": "MLMetric",\n            "namespace": "com.linkedin.ml.metadata",\n            "fields": [\n              {\n                "type": "string",\n                "name": "name",\n                "doc": "Name of the mlMetric"\n              },\n              {\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "description",\n                "default": null,\n                "doc": "Documentation of the mlMetric"\n              },\n              {\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "value",\n                "default": null,\n                "doc": "The value of the mlMetric"\n              },\n              {\n                "type": [\n                  "null",\n                  "long"\n                ],\n                "name": "createdAt",\n                "default": null,\n                "doc": "Date when the mlMetric was developed"\n              }\n            ],\n            "doc": "Properties associated with an ML Metric"\n          }\n        }\n      ],\n      "name": "trainingMetrics",\n      "default": null,\n      "doc": "Metrics of the MLModel used in training"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "com.linkedin.ml.metadata.MLMetric"\n        }\n      ],\n      "name": "onlineMetrics",\n      "default": null,\n      "doc": "Metrics of the MLModel used in production"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "mlFeature"\n          ],\n          "isLineage": true,\n          "name": "Consumes"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "mlFeatures",\n      "default": null,\n      "doc": "List of features used for MLModel training"\n    },\n    {\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "tags",\n      "default": [],\n      "doc": "Tags for the MLModel"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "mlModelDeployment"\n          ],\n          "name": "DeployedTo"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "deployments",\n      "default": null,\n      "doc": "Deployments for the MLModel"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "mlModelGroup"\n          ],\n          "isLineage": true,\n          "isUpstream": false,\n          "name": "MemberOf"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "groups",\n      "default": null,\n      "doc": "Groups the model belongs to"\n    }\n  ],\n  "doc": "Properties associated with a ML Model"\n}\n')))),(0,t.yg)("h4",{id:"intendeduse"},"intendedUse"),(0,t.yg)("p",null,"Intended Use for the ML Model"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"primaryUses"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Primary Use cases for the MLModel."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"primaryUsers"),(0,t.yg)("td",{parentName:"tr",align:null},"IntendedUserType[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Primary Intended Users - For example, was the MLModel developed for entertainment purposes, for h..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"outOfScopeUses"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Highlight technology that the MLModel might easily be confused with, or related contexts that use..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "intendedUse"\n  },\n  "name": "IntendedUse",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "primaryUses",\n      "default": null,\n      "doc": "Primary Use cases for the MLModel."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "enum",\n            "name": "IntendedUserType",\n            "namespace": "com.linkedin.ml.metadata",\n            "symbols": [\n              "ENTERPRISE",\n              "HOBBY",\n              "ENTERTAINMENT"\n            ]\n          }\n        }\n      ],\n      "name": "primaryUsers",\n      "default": null,\n      "doc": "Primary Intended Users - For example, was the MLModel developed for entertainment purposes, for hobbyists, or enterprise solutions?"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "outOfScopeUses",\n      "default": null,\n      "doc": "Highlight technology that the MLModel might easily be confused with, or related contexts that users could try to apply the MLModel to."\n    }\n  ],\n  "doc": "Intended Use for the ML Model"\n}\n')))),(0,t.yg)("h4",{id:"mlmodelfactorprompts"},"mlModelFactorPrompts"),(0,t.yg)("p",null,"Prompts which affect the performance of the MLModel"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"relevantFactors"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#mlmodelfactors"},"MLModelFactors"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"What are foreseeable salient factors for which MLModel performance may vary, and how were these d..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"evaluationFactors"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#mlmodelfactors"},"MLModelFactors"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Which factors are being reported, and why were these chosen?"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelFactorPrompts"\n  },\n  "name": "MLModelFactorPrompts",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "name": "MLModelFactors",\n            "namespace": "com.linkedin.ml.metadata",\n            "fields": [\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "array",\n                    "items": "string"\n                  }\n                ],\n                "name": "groups",\n                "default": null,\n                "doc": "Groups refers to distinct categories with similar characteristics that are present in the evaluation data instances.\\nFor human-centric machine learning MLModels, groups are people who share one or multiple characteristics."\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "array",\n                    "items": "string"\n                  }\n                ],\n                "name": "instrumentation",\n                "default": null,\n                "doc": "The performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.\\nFor example, a face detection model may perform differently depending on the camera\'s hardware and software,\\nincluding lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode."\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "array",\n                    "items": "string"\n                  }\n                ],\n                "name": "environment",\n                "default": null,\n                "doc": "A further factor affecting MLModel performance is the environment in which it is deployed."\n              }\n            ],\n            "doc": "Factors affecting the performance of the MLModel."\n          }\n        }\n      ],\n      "name": "relevantFactors",\n      "default": null,\n      "doc": "What are foreseeable salient factors for which MLModel performance may vary, and how were these determined?"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "com.linkedin.ml.metadata.MLModelFactors"\n        }\n      ],\n      "name": "evaluationFactors",\n      "default": null,\n      "doc": "Which factors are being reported, and why were these chosen?"\n    }\n  ],\n  "doc": "Prompts which affect the performance of the MLModel"\n}\n')))),(0,t.yg)("h4",{id:"mlmodelmetrics"},"mlModelMetrics"),(0,t.yg)("p",null,"Metrics to be featured for the MLModel."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"performanceMeasures"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Measures of MLModel performance"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"decisionThreshold"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Decision Thresholds used (if any)?"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelMetrics"\n  },\n  "name": "Metrics",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "performanceMeasures",\n      "default": null,\n      "doc": "Measures of MLModel performance"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "decisionThreshold",\n      "default": null,\n      "doc": "Decision Thresholds used (if any)?"\n    }\n  ],\n  "doc": "Metrics to be featured for the MLModel."\n}\n')))),(0,t.yg)("h4",{id:"mlmodelevaluationdata"},"mlModelEvaluationData"),(0,t.yg)("p",null,"All referenced datasets would ideally point to any set of documents that provide visibility into the source and composition of the dataset."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"evaluationData"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#basedata"},"BaseData"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Details on the dataset(s) used for the quantitative analyses in the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelEvaluationData"\n  },\n  "name": "EvaluationData",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "BaseData",\n          "namespace": "com.linkedin.ml.metadata",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.DatasetUrn"\n              },\n              "type": "string",\n              "name": "dataset",\n              "doc": "What dataset were used in the MLModel?"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "motivation",\n              "default": null,\n              "doc": "Why was this dataset chosen?"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "array",\n                  "items": "string"\n                }\n              ],\n              "name": "preProcessing",\n              "default": null,\n              "doc": "How was the data preprocessed (e.g., tokenization of sentences, cropping of images, any filtering such as dropping images without faces)?"\n            }\n          ],\n          "doc": "BaseData record"\n        }\n      },\n      "name": "evaluationData",\n      "doc": "Details on the dataset(s) used for the quantitative analyses in the MLModel"\n    }\n  ],\n  "doc": "All referenced datasets would ideally point to any set of documents that provide visibility into the source and composition of the dataset."\n}\n')))),(0,t.yg)("h4",{id:"mlmodeltrainingdata"},"mlModelTrainingData"),(0,t.yg)("p",null,"Ideally, the MLModel card would contain as much information about the training data as the evaluation data. However, there might be cases where it is not feasible to provide this level of detailed information about the training data. For example, the data may be proprietary, or require a non-disclosure agreement. In these cases, we advocate for basic details about the distributions over groups in the data, as well as any other details that could inform stakeholders on the kinds of biases the model may have encoded."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"trainingData"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#basedata"},"BaseData"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Details on the dataset(s) used for training the MLModel"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelTrainingData"\n  },\n  "name": "TrainingData",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "BaseData",\n          "namespace": "com.linkedin.ml.metadata",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.DatasetUrn"\n              },\n              "type": "string",\n              "name": "dataset",\n              "doc": "What dataset were used in the MLModel?"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "motivation",\n              "default": null,\n              "doc": "Why was this dataset chosen?"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "array",\n                  "items": "string"\n                }\n              ],\n              "name": "preProcessing",\n              "default": null,\n              "doc": "How was the data preprocessed (e.g., tokenization of sentences, cropping of images, any filtering such as dropping images without faces)?"\n            }\n          ],\n          "doc": "BaseData record"\n        }\n      },\n      "name": "trainingData",\n      "doc": "Details on the dataset(s) used for training the MLModel"\n    }\n  ],\n  "doc": "Ideally, the MLModel card would contain as much information about the training data as the evaluation data. However, there might be cases where it is not feasible to provide this level of detailed information about the training data. For example, the data may be proprietary, or require a non-disclosure agreement. In these cases, we advocate for basic details about the distributions over groups in the data, as well as any other details that could inform stakeholders on the kinds of biases the model may have encoded."\n}\n')))),(0,t.yg)("h4",{id:"mlmodelquantitativeanalyses"},"mlModelQuantitativeAnalyses"),(0,t.yg)("p",null,"Quantitative analyses should be disaggregated, that is, broken down by the chosen factors. Quantitative analyses should provide the results of evaluating the MLModel according to the chosen metrics, providing confidence interval values when possible."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"unitaryResults"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Link to a dashboard with results showing how the MLModel performed with respect to each factor"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"intersectionalResults"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Link to a dashboard with results showing how the MLModel performed with respect to the intersecti..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelQuantitativeAnalyses"\n  },\n  "name": "QuantitativeAnalyses",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "unitaryResults",\n      "default": null,\n      "doc": "Link to a dashboard with results showing how the MLModel performed with respect to each factor"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "intersectionalResults",\n      "default": null,\n      "doc": "Link to a dashboard with results showing how the MLModel performed with respect to the intersection of evaluated factors?"\n    }\n  ],\n  "doc": "Quantitative analyses should be disaggregated, that is, broken down by the chosen factors. Quantitative analyses should provide the results of evaluating the MLModel according to the chosen metrics, providing confidence interval values when possible."\n}\n')))),(0,t.yg)("h4",{id:"mlmodelethicalconsiderations"},"mlModelEthicalConsiderations"),(0,t.yg)("p",null,"This section is intended to demonstrate the ethical considerations that went into MLModel development, surfacing ethical challenges and solutions to stakeholders."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"data"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Does the MLModel use any sensitive data (e.g., protected classes)?"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"humanLife"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Is the MLModel intended to inform decisions about matters central to human life or flourishing - ..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"mitigations"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"What risk mitigation strategies were used during MLModel development?"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"risksAndHarms"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood,..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"useCases"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Are there any known MLModel use cases that are especially fraught? This may connect directly to t..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelEthicalConsiderations"\n  },\n  "name": "EthicalConsiderations",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "data",\n      "default": null,\n      "doc": "Does the MLModel use any sensitive data (e.g., protected classes)?"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "humanLife",\n      "default": null,\n      "doc": " Is the MLModel intended to inform decisions about matters central to human life or flourishing - e.g., health or safety? Or could it be used in such a way?"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "mitigations",\n      "default": null,\n      "doc": "What risk mitigation strategies were used during MLModel development?"\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "risksAndHarms",\n      "default": null,\n      "doc": "What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "useCases",\n      "default": null,\n      "doc": "Are there any known MLModel use cases that are especially fraught? This may connect directly to the intended use section"\n    }\n  ],\n  "doc": "This section is intended to demonstrate the ethical considerations that went into MLModel development, surfacing ethical challenges and solutions to stakeholders."\n}\n')))),(0,t.yg)("h4",{id:"mlmodelcaveatsandrecommendations"},"mlModelCaveatsAndRecommendations"),(0,t.yg)("p",null,"This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"caveats"),(0,t.yg)("td",{parentName:"tr",align:null},"CaveatDetails"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"This section should list additional concerns that were not covered in the previous sections. For ..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"recommendations"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Recommendations on where this MLModel should be used."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"idealDatasetCharacteristics"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Ideal characteristics of an evaluation dataset for this MLModel"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "mlModelCaveatsAndRecommendations"\n  },\n  "name": "CaveatsAndRecommendations",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "CaveatDetails",\n          "namespace": "com.linkedin.ml.metadata",\n          "fields": [\n            {\n              "type": [\n                "null",\n                "boolean"\n              ],\n              "name": "needsFurtherTesting",\n              "default": null,\n              "doc": "Did the results suggest any further testing?"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "caveatDescription",\n              "default": null,\n              "doc": "Caveat Description\\nFor ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "array",\n                  "items": "string"\n                }\n              ],\n              "name": "groupsNotRepresented",\n              "default": null,\n              "doc": "Relevant groups that were not represented in the evaluation dataset?"\n            }\n          ],\n          "doc": "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?"\n        }\n      ],\n      "name": "caveats",\n      "default": null,\n      "doc": "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset?"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "recommendations",\n      "default": null,\n      "doc": "Recommendations on where this MLModel should be used."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "string"\n        }\n      ],\n      "name": "idealDatasetCharacteristics",\n      "default": null,\n      "doc": "Ideal characteristics of an evaluation dataset for this MLModel"\n    }\n  ],\n  "doc": "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?"\n}\n')))),(0,t.yg)("h4",{id:"institutionalmemory"},"institutionalMemory"),(0,t.yg)("p",null,"Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"elements"),(0,t.yg)("td",{parentName:"tr",align:null},"InstitutionalMemoryMetadata[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"List of records that represent institutional memory of an entity. Each record consists of a link,..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "institutionalMemory"\n  },\n  "name": "InstitutionalMemory",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "InstitutionalMemoryMetadata",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.url.Url",\n                "coercerClass": "com.linkedin.common.url.UrlCoercer"\n              },\n              "type": "string",\n              "name": "url",\n              "doc": "Link to an engineering design document or a wiki page."\n            },\n            {\n              "type": "string",\n              "name": "description",\n              "doc": "Description of the link."\n            },\n            {\n              "type": {\n                "type": "record",\n                "name": "AuditStamp",\n                "namespace": "com.linkedin.common",\n                "fields": [\n                  {\n                    "type": "long",\n                    "name": "time",\n                    "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": "string",\n                    "name": "actor",\n                    "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "impersonator",\n                    "default": null,\n                    "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                  },\n                  {\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "message",\n                    "default": null,\n                    "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                  }\n                ],\n                "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n              },\n              "name": "createStamp",\n              "doc": "Audit stamp associated with creation of this record"\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "updateStamp",\n              "default": null,\n              "doc": "Audit stamp associated with updation of this record"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "InstitutionalMemoryMetadataSettings",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "boolean",\n                      "name": "showInAssetPreview",\n                      "default": false,\n                      "doc": "Show record in asset preview like on entity header and search previews"\n                    }\n                  ],\n                  "doc": "Settings related to a record of InstitutionalMemoryMetadata"\n                }\n              ],\n              "name": "settings",\n              "default": null,\n              "doc": "Settings for this record"\n            }\n          ],\n          "doc": "Metadata corresponding to a record of institutional memory."\n        }\n      },\n      "name": "elements",\n      "doc": "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."\n    }\n  ],\n  "doc": "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."\n}\n')))),(0,t.yg)("h4",{id:"sourcecode"},"sourceCode"),(0,t.yg)("p",null,"Source Code"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"sourceCode"),(0,t.yg)("td",{parentName:"tr",align:null},"SourceCodeUrl[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Source Code along with types"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "sourceCode"\n  },\n  "name": "SourceCode",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "SourceCodeUrl",\n          "namespace": "com.linkedin.ml.metadata",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "SourceCodeUrlType",\n                "namespace": "com.linkedin.ml.metadata",\n                "symbols": [\n                  "ML_MODEL_SOURCE_CODE",\n                  "TRAINING_PIPELINE_SOURCE_CODE",\n                  "EVALUATION_PIPELINE_SOURCE_CODE"\n                ]\n              },\n              "name": "type",\n              "doc": "Source Code Url Types"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.url.Url",\n                "coercerClass": "com.linkedin.common.url.UrlCoercer"\n              },\n              "type": "string",\n              "name": "sourceCodeUrl",\n              "doc": "Source Code Url"\n            }\n          ],\n          "doc": "Source Code Url Entity"\n        }\n      },\n      "name": "sourceCode",\n      "doc": "Source Code along with types"\n    }\n  ],\n  "doc": "Source Code"\n}\n')))),(0,t.yg)("h4",{id:"status"},"status"),(0,t.yg)("p",null,"The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"removed"),(0,t.yg)("td",{parentName:"tr",align:null},"boolean"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Whether the entity has been removed (soft-deleted)."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "status"\n  },\n  "name": "Status",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN"\n      },\n      "type": "boolean",\n      "name": "removed",\n      "default": false,\n      "doc": "Whether the entity has been removed (soft-deleted)."\n    }\n  ],\n  "doc": "The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\\nThis aspect is used to represent soft deletes conventionally."\n}\n')))),(0,t.yg)("h4",{id:"cost"},"cost"),(0,t.yg)("p",null,"None"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"costType"),(0,t.yg)("td",{parentName:"tr",align:null},"CostType"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"cost"),(0,t.yg)("td",{parentName:"tr",align:null},"CostCost"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "cost"\n  },\n  "name": "Cost",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "enum",\n        "symbolDocs": {\n          "ORG_COST_TYPE": "Org Cost Type to which the Cost of this entity should be attributed to"\n        },\n        "name": "CostType",\n        "namespace": "com.linkedin.common",\n        "symbols": [\n          "ORG_COST_TYPE"\n        ],\n        "doc": "Type of Cost Code"\n      },\n      "name": "costType"\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "CostCost",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": [\n              "null",\n              "double"\n            ],\n            "name": "costId",\n            "default": null\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "costCode",\n            "default": null\n          },\n          {\n            "type": {\n              "type": "enum",\n              "name": "CostCostDiscriminator",\n              "namespace": "com.linkedin.common",\n              "symbols": [\n                "costId",\n                "costCode"\n              ]\n            },\n            "name": "fieldDiscriminator",\n            "doc": "Contains the name of the field that has its value set."\n          }\n        ]\n      },\n      "name": "cost"\n    }\n  ]\n}\n')))),(0,t.yg)("h4",{id:"deprecation"},"deprecation"),(0,t.yg)("p",null,"Deprecation status of an entity"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"deprecated"),(0,t.yg)("td",{parentName:"tr",align:null},"boolean"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Whether the entity is deprecated."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"decommissionTime"),(0,t.yg)("td",{parentName:"tr",align:null},"long"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The time user plan to decommission this entity."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"note"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Additional information about the entity deprecation plan, such as the wiki, doc, RB."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"actor"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The user URN which will be credited for modifying this deprecation content."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"replacement"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "deprecation"\n  },\n  "name": "Deprecation",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "BOOLEAN",\n        "filterNameOverride": "Deprecated",\n        "weightsPerFieldValue": {\n          "true": 0.5\n        }\n      },\n      "type": "boolean",\n      "name": "deprecated",\n      "doc": "Whether the entity is deprecated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "decommissionTime",\n      "default": null,\n      "doc": "The time user plan to decommission this entity."\n    },\n    {\n      "type": "string",\n      "name": "note",\n      "doc": "Additional information about the entity deprecation plan, such as the wiki, doc, RB."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "actor",\n      "doc": "The user URN which will be credited for modifying this deprecation content."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "replacement",\n      "default": null\n    }\n  ],\n  "doc": "Deprecation status of an entity"\n}\n')))),(0,t.yg)("h4",{id:"browsepaths"},"browsePaths"),(0,t.yg)("p",null,"Shared aspect containing Browse Paths to be indexed for an entity."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"paths"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"A list of valid browse paths for the entity.  Browse paths are expected to be forward slash-separ..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "browsePaths"\n  },\n  "name": "BrowsePaths",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldName": "browsePaths",\n          "fieldType": "BROWSE_PATH"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "paths",\n      "doc": "A list of valid browse paths for the entity.\\n\\nBrowse paths are expected to be forward slash-separated strings. For example: \'prod/snowflake/datasetName\'"\n    }\n  ],\n  "doc": "Shared aspect containing Browse Paths to be indexed for an entity."\n}\n')))),(0,t.yg)("h4",{id:"globaltags"},"globalTags"),(0,t.yg)("p",null,"Tag aspect used for applying tags to an entity"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"tags"),(0,t.yg)("td",{parentName:"tr",align:null},"TagAssociation[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Tags associated with a given entity"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 TaggedWith"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "globalTags"\n  },\n  "name": "GlobalTags",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/tag": {\n          "entityTypes": [\n            "tag"\n          ],\n          "name": "TaggedWith"\n        }\n      },\n      "Searchable": {\n        "/*/tag": {\n          "addToFilters": true,\n          "boostScore": 0.5,\n          "fieldName": "tags",\n          "fieldType": "URN",\n          "filterNameOverride": "Tag",\n          "hasValuesFieldName": "hasTags",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TagAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.TagUrn"\n              },\n              "type": "string",\n              "name": "tag",\n              "doc": "Urn of the applied tag"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "tagAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "tagAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "tagAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters."\n        }\n      },\n      "name": "tags",\n      "doc": "Tags associated with a given entity"\n    }\n  ],\n  "doc": "Tag aspect used for applying tags to an entity"\n}\n')))),(0,t.yg)("h4",{id:"dataplatforminstance"},"dataPlatformInstance"),(0,t.yg)("p",null,"The specific instance of the data platform that this entity belongs to"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"platform"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Data Platform"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"instance"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Instance of the data platform (e.g. db instance)"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable (platformInstance)"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataPlatformInstance"\n  },\n  "name": "DataPlatformInstance",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "URN",\n        "filterNameOverride": "Platform"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "platform",\n      "doc": "Data Platform"\n    },\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldName": "platformInstance",\n        "fieldType": "URN",\n        "filterNameOverride": "Platform Instance"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "instance",\n      "default": null,\n      "doc": "Instance of the data platform (e.g. db instance)"\n    }\n  ],\n  "doc": "The specific instance of the data platform that this entity belongs to"\n}\n')))),(0,t.yg)("h4",{id:"browsepathsv2"},"browsePathsV2"),(0,t.yg)("p",null,"Shared aspect containing a Browse Path to be indexed for an entity."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"path"),(0,t.yg)("td",{parentName:"tr",align:null},"BrowsePathEntry[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"A valid browse path for the entity. This field is provided by DataHub by default. This aspect is ..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "browsePathsV2"\n  },\n  "name": "BrowsePathsV2",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/id": {\n          "fieldName": "browsePathV2",\n          "fieldType": "BROWSE_PATH_V2"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "BrowsePathEntry",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": "string",\n              "name": "id",\n              "doc": "The ID of the browse path entry. This is what gets stored in the index.\\nIf there\'s an urn associated with this entry, id and urn will be the same"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "urn",\n              "default": null,\n              "doc": "Optional urn pointing to some entity in DataHub"\n            }\n          ],\n          "doc": "Represents a single level in an entity\'s browsePathV2"\n        }\n      },\n      "name": "path",\n      "doc": "A valid browse path for the entity. This field is provided by DataHub by default.\\nThis aspect is a newer version of browsePaths where we can encode more information in the path.\\nThis path is also based on containers for a given entity if it has containers.\\n\\nThis is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.\\nThese paths should not include high level info captured elsewhere ie. Platform and Environment."\n    }\n  ],\n  "doc": "Shared aspect containing a Browse Path to be indexed for an entity."\n}\n')))),(0,t.yg)("h4",{id:"glossaryterms"},"glossaryTerms"),(0,t.yg)("p",null,"Related business terms information"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"terms"),(0,t.yg)("td",{parentName:"tr",align:null},"GlossaryTermAssociation[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The related business terms"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"auditStamp"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who reported the related business term"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "glossaryTerms"\n  },\n  "name": "GlossaryTerms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "GlossaryTermAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "glossaryTerm"\n                ],\n                "name": "TermedWith"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "glossaryTerms",\n                "fieldType": "URN",\n                "filterNameOverride": "Glossary Term",\n                "hasValuesFieldName": "hasGlossaryTerms",\n                "includeSystemModifiedAt": true,\n                "systemModifiedAtFieldName": "termsModifiedAt"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.GlossaryTermUrn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied glossary term"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "actor",\n              "default": null,\n              "doc": "The user URN which will be credited for adding associating this term to the entity"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "termAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "termAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "termAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Properties of an applied glossary term."\n        }\n      },\n      "name": "terms",\n      "doc": "The related business terms"\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "auditStamp",\n      "doc": "Audit stamp containing who reported the related business term"\n    }\n  ],\n  "doc": "Related business terms information"\n}\n')))),(0,t.yg)("h4",{id:"editablemlmodelproperties"},"editableMlModelProperties"),(0,t.yg)("p",null,"Properties associated with a ML Model editable from the UI"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"description"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Documentation of the ml model"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable (editedDescription)"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "editableMlModelProperties"\n  },\n  "name": "EditableMLModelProperties",\n  "namespace": "com.linkedin.ml.metadata",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldName": "editedDescription",\n        "fieldType": "TEXT"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "description",\n      "default": null,\n      "doc": "Documentation of the ml model"\n    }\n  ],\n  "doc": "Properties associated with a ML Model editable from the UI"\n}\n')))),(0,t.yg)("h4",{id:"domains"},"domains"),(0,t.yg)("p",null,"Links from an Asset to its Domains"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"domains"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The Domains attached to an Asset"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 AssociatedWith"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "domains"\n  },\n  "name": "Domains",\n  "namespace": "com.linkedin.domain",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "domain"\n          ],\n          "name": "AssociatedWith"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldName": "domains",\n          "fieldType": "URN",\n          "filterNameOverride": "Domain",\n          "hasValuesFieldName": "hasDomain"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "domains",\n      "doc": "The Domains attached to an Asset"\n    }\n  ],\n  "doc": "Links from an Asset to its Domains"\n}\n')))),(0,t.yg)("h4",{id:"applications"},"applications"),(0,t.yg)("p",null,"Links from an Asset to its Applications"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"applications"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The Applications attached to an Asset"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 AssociatedWith"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "applications"\n  },\n  "name": "Applications",\n  "namespace": "com.linkedin.application",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "application"\n          ],\n          "name": "AssociatedWith"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldName": "applications",\n          "fieldType": "URN",\n          "filterNameOverride": "Application",\n          "hasValuesFieldName": "hasApplication"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "applications",\n      "doc": "The Applications attached to an Asset"\n    }\n  ],\n  "doc": "Links from an Asset to its Applications"\n}\n')))),(0,t.yg)("h4",{id:"structuredproperties"},"structuredProperties"),(0,t.yg)("p",null,"Properties about an entity governed by StructuredPropertyDefinition"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"properties"),(0,t.yg)("td",{parentName:"tr",align:null},"StructuredPropertyValueAssignment[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "structuredProperties"\n  },\n  "name": "StructuredProperties",\n  "namespace": "com.linkedin.structured",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "StructuredPropertyValueAssignment",\n          "namespace": "com.linkedin.structured",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "propertyUrn",\n              "doc": "The property that is being assigned a value."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": [\n                  "string",\n                  "double"\n                ]\n              },\n              "name": "values",\n              "doc": "The value assigned to the property."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "created",\n              "default": null,\n              "doc": "Audit stamp containing who created this relationship edge and when"\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "Audit stamp containing who last modified this relationship edge and when"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "structuredPropertyAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "structuredPropertyAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "structuredPropertyAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ]\n        }\n      },\n      "name": "properties",\n      "doc": "Custom property bag."\n    }\n  ],\n  "doc": "Properties about an entity governed by StructuredPropertyDefinition"\n}\n')))),(0,t.yg)("h4",{id:"forms"},"forms"),(0,t.yg)("p",null,"Forms that are assigned to this entity to be filled out"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"incompleteForms"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"All incomplete forms assigned to the entity."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"completedForms"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"All complete forms assigned to the entity."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"verifications"),(0,t.yg)("td",{parentName:"tr",align:null},"FormVerificationAssociation[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Verifications that have been applied to the entity via completed forms."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "forms"\n  },\n  "name": "Forms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "incompleteFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "incompleteFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "incompleteFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "incompleteForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied form"\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": {\n                  "type": "record",\n                  "name": "FormPromptAssociation",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "string",\n                      "name": "id",\n                      "doc": "The id for the prompt. This must be GLOBALLY UNIQUE."\n                    },\n                    {\n                      "type": {\n                        "type": "record",\n                        "name": "AuditStamp",\n                        "namespace": "com.linkedin.common",\n                        "fields": [\n                          {\n                            "type": "long",\n                            "name": "time",\n                            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": "string",\n                            "name": "actor",\n                            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "impersonator",\n                            "default": null,\n                            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                          },\n                          {\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "message",\n                            "default": null,\n                            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                          }\n                        ],\n                        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                      },\n                      "name": "lastModified",\n                      "doc": "The last time this prompt was touched for the entity (set, unset)"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        {\n                          "type": "record",\n                          "name": "FormPromptFieldAssociations",\n                          "namespace": "com.linkedin.common",\n                          "fields": [\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": {\n                                    "type": "record",\n                                    "name": "FieldFormPromptAssociation",\n                                    "namespace": "com.linkedin.common",\n                                    "fields": [\n                                      {\n                                        "type": "string",\n                                        "name": "fieldPath",\n                                        "doc": "The field path on a schema field."\n                                      },\n                                      {\n                                        "type": "com.linkedin.common.AuditStamp",\n                                        "name": "lastModified",\n                                        "doc": "The last time this prompt was touched for the field on the entity (set, unset)"\n                                      }\n                                    ],\n                                    "doc": "Information about the status of a particular prompt for a specific schema field\\non an entity."\n                                  }\n                                }\n                              ],\n                              "name": "completedFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are not yet complete for this form."\n                            },\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": "com.linkedin.common.FieldFormPromptAssociation"\n                                }\n                              ],\n                              "name": "incompleteFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are complete for this form."\n                            }\n                          ],\n                          "doc": "Information about the field-level prompt associations on a top-level prompt association."\n                        }\n                      ],\n                      "name": "fieldAssociations",\n                      "default": null,\n                      "doc": "Optional information about the field-level prompt associations."\n                    }\n                  ],\n                  "doc": "Information about the status of a particular prompt.\\nNote that this is where we can add additional information about individual responses:\\nactor, timestamp, and the response itself."\n                }\n              },\n              "name": "incompletePrompts",\n              "default": [],\n              "doc": "A list of prompts that are not yet complete for this form."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": "com.linkedin.common.FormPromptAssociation"\n              },\n              "name": "completedPrompts",\n              "default": [],\n              "doc": "A list of prompts that have been completed for this form."\n            }\n          ],\n          "doc": "Properties of an applied form."\n        }\n      },\n      "name": "incompleteForms",\n      "doc": "All incomplete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "completedFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "completedFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "completedFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "completedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.FormAssociation"\n      },\n      "name": "completedForms",\n      "doc": "All complete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/form": {\n          "fieldName": "verifiedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormVerificationAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "form",\n              "doc": "The urn of the form that granted this verification."\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "An audit stamp capturing who and when verification was applied for this form."\n            }\n          ],\n          "doc": "An association between a verification and an entity that has been granted\\nvia completion of one or more forms of type \'VERIFICATION\'."\n        }\n      },\n      "name": "verifications",\n      "default": [],\n      "doc": "Verifications that have been applied to the entity via completed forms."\n    }\n  ],\n  "doc": "Forms that are assigned to this entity to be filled out"\n}\n')))),(0,t.yg)("h4",{id:"testresults"},"testResults"),(0,t.yg)("p",null,"Information about a Test Result"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"failing"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Results that are failing"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsFailing")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"passing"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Results that are passing"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsPassing"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "testResults"\n  },\n  "name": "TestResults",\n  "namespace": "com.linkedin.test",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsFailing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "failingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasFailingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TestResult",\n          "namespace": "com.linkedin.test",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "test",\n              "doc": "The urn of the test"\n            },\n            {\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "FAILURE": " The Test Failed",\n                  "SUCCESS": " The Test Succeeded"\n                },\n                "name": "TestResultType",\n                "namespace": "com.linkedin.test",\n                "symbols": [\n                  "SUCCESS",\n                  "FAILURE"\n                ]\n              },\n              "name": "type",\n              "doc": "The type of the result"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "testDefinitionMd5",\n              "default": null,\n              "doc": "The md5 of the test definition that was used to compute this result.\\nSee TestInfo.testDefinition.md5 for more information."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "lastComputed",\n              "default": null,\n              "doc": "The audit stamp of when the result was computed, including the actor who computed it."\n            }\n          ],\n          "doc": "Information about a Test Result"\n        }\n      },\n      "name": "failing",\n      "doc": "Results that are failing"\n    },\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsPassing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "passingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasPassingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.test.TestResult"\n      },\n      "name": "passing",\n      "doc": "Results that are passing"\n    }\n  ],\n  "doc": "Information about a Test Result"\n}\n')))),(0,t.yg)("h4",{id:"versionproperties"},"versionProperties"),(0,t.yg)("p",null,"Properties about a versioned asset i.e. dataset, ML Model, etc."),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"versionSet"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The linked Version Set entity that ties multiple versioned assets together"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 VersionOf")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"version"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#versiontag"},"VersionTag")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Label for this versioned asset, is unique within a version set"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"aliases"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#versiontag"},"VersionTag"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Associated aliases for this versioned asset"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"comment"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Comment documenting what this version was created for, changes, or represents"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"sortId"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Sort identifier that determines where a version lives in the order of the Version Set. What this ..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable (versionSortId)")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"versioningScheme"),(0,t.yg)("td",{parentName:"tr",align:null},"VersioningScheme"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"What versioning scheme ",(0,t.yg)("inlineCode",{parentName:"td"},"sortId")," belongs to. Defaults to a plain string that is lexicographically ..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"sourceCreatedTimestamp"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Timestamp reflecting when this asset version was created in the source system."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"metadataCreatedTimestamp"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Timestamp reflecting when the metadata for this version was created in DataHub"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"isLatest"),(0,t.yg)("td",{parentName:"tr",align:null},"boolean"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Marks whether this version is currently the latest. Set by a side effect and should not be modifi..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "versionProperties"\n  },\n  "name": "VersionProperties",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Relationship": {\n        "entityTypes": [\n          "versionSet"\n        ],\n        "name": "VersionOf"\n      },\n      "Searchable": {\n        "queryByDefault": false\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "versionSet",\n      "doc": "The linked Version Set entity that ties multiple versioned assets together"\n    },\n    {\n      "Searchable": {\n        "/versionTag": {\n          "fieldName": "version",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "record",\n        "name": "VersionTag",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "versionTag",\n            "default": null\n          },\n          {\n            "type": [\n              "null",\n              {\n                "type": "record",\n                "name": "MetadataAttribution",\n                "namespace": "com.linkedin.common",\n                "fields": [\n                  {\n                    "type": "long",\n                    "name": "time",\n                    "doc": "When this metadata was updated."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": "string",\n                    "name": "actor",\n                    "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "source",\n                    "default": null,\n                    "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                  },\n                  {\n                    "type": {\n                      "type": "map",\n                      "values": "string"\n                    },\n                    "name": "sourceDetail",\n                    "default": {},\n                    "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                  }\n                ],\n                "doc": "Information about who, why, and how this metadata was applied"\n              }\n            ],\n            "name": "metadataAttribution",\n            "default": null\n          }\n        ],\n        "doc": "A resource-defined string representing the resource state for the purpose of concurrency control"\n      },\n      "name": "version",\n      "doc": "Label for this versioned asset, is unique within a version set"\n    },\n    {\n      "Searchable": {\n        "/*/versionTag": {\n          "fieldName": "aliases",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.VersionTag"\n      },\n      "name": "aliases",\n      "default": [],\n      "doc": "Associated aliases for this versioned asset"\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "comment",\n      "default": null,\n      "doc": "Comment documenting what this version was created for, changes, or represents"\n    },\n    {\n      "Searchable": {\n        "fieldName": "versionSortId",\n        "queryByDefault": false\n      },\n      "type": "string",\n      "name": "sortId",\n      "doc": "Sort identifier that determines where a version lives in the order of the Version Set.\\nWhat this looks like depends on the Version Scheme. For sort ids generated by DataHub we use an 8 character string representation."\n    },\n    {\n      "type": {\n        "type": "enum",\n        "symbolDocs": {\n          "ALPHANUMERIC_GENERATED_BY_DATAHUB": "String managed by DataHub. Currently, an 8 character alphabetical string.",\n          "LEXICOGRAPHIC_STRING": "String sorted lexicographically."\n        },\n        "name": "VersioningScheme",\n        "namespace": "com.linkedin.versionset",\n        "symbols": [\n          "LEXICOGRAPHIC_STRING",\n          "ALPHANUMERIC_GENERATED_BY_DATAHUB"\n        ]\n      },\n      "name": "versioningScheme",\n      "default": "LEXICOGRAPHIC_STRING",\n      "doc": "What versioning scheme `sortId` belongs to.\\nDefaults to a plain string that is lexicographically sorted."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "AuditStamp",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": "long",\n              "name": "time",\n              "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "actor",\n              "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "impersonator",\n              "default": null,\n              "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "message",\n              "default": null,\n              "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n            }\n          ],\n          "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n        }\n      ],\n      "name": "sourceCreatedTimestamp",\n      "default": null,\n      "doc": "Timestamp reflecting when this asset version was created in the source system."\n    },\n    {\n      "type": [\n        "null",\n        "com.linkedin.common.AuditStamp"\n      ],\n      "name": "metadataCreatedTimestamp",\n      "default": null,\n      "doc": "Timestamp reflecting when the metadata for this version was created in DataHub"\n    },\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN",\n        "queryByDefault": false\n      },\n      "type": [\n        "null",\n        "boolean"\n      ],\n      "name": "isLatest",\n      "default": null,\n      "doc": "Marks whether this version is currently the latest. Set by a side effect and should not be modified by API."\n    }\n  ],\n  "doc": "Properties about a versioned asset i.e. dataset, ML Model, etc."\n}\n')))),(0,t.yg)("h4",{id:"subtypes"},"subTypes"),(0,t.yg)("p",null,"Sub Types. Use this aspect to specialize a generic Entity\ne.g. Making a Dataset also be a View or also be a LookerExplore"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"typeNames"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The names of the specific types."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "subTypes"\n  },\n  "name": "SubTypes",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldType": "KEYWORD",\n          "filterNameOverride": "Sub Type",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "typeNames",\n      "doc": "The names of the specific types."\n    }\n  ],\n  "doc": "Sub Types. Use this aspect to specialize a generic Entity\\ne.g. Making a Dataset also be a View or also be a LookerExplore"\n}\n')))),(0,t.yg)("h4",{id:"container"},"container"),(0,t.yg)("p",null,"Link from an asset to its parent container"),(0,t.yg)(r.A,{mdxType:"Tabs"},(0,t.yg)(i.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"container"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The parent container of an asset"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsPartOf"))))),(0,t.yg)(i.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "container"\n  },\n  "name": "Container",\n  "namespace": "com.linkedin.container",\n  "fields": [\n    {\n      "Relationship": {\n        "entityTypes": [\n          "container"\n        ],\n        "name": "IsPartOf"\n      },\n      "Searchable": {\n        "addToFilters": true,\n        "fieldName": "container",\n        "fieldType": "URN",\n        "filterNameOverride": "Container",\n        "hasValuesFieldName": "hasContainer"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "container",\n      "doc": "The parent container of an asset"\n    }\n  ],\n  "doc": "Link from an asset to its parent container"\n}\n')))),(0,t.yg)("h3",{id:"common-types"},"Common Types"),(0,t.yg)("p",null,"These types are used across multiple aspects in this entity."),(0,t.yg)("h4",{id:"auditstamp"},"AuditStamp"),(0,t.yg)("p",null,"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"time")," (long): When did the resource/association/sub-resource move into the specific lifecyc..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"actor")," (string): The entity (e.g. a member URN) which will be credited for moving the resource..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"impersonator")," (string?): The entity (e.g. a service URN) which performs the change on behalf of the Ac..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"message")," (string?): Additional context around how DataHub was informed of the particular change. ...")),(0,t.yg)("h4",{id:"basedata"},"BaseData"),(0,t.yg)("p",null,"BaseData record"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"dataset")," (string): What dataset were used in the MLModel?"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"motivation")," (string?): Why was this dataset chosen?"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"preProcessing")," (string[]?): How was the data preprocessed (e.g., tokenization of sentences, cropping of i...")),(0,t.yg)("h4",{id:"formassociation"},"FormAssociation"),(0,t.yg)("p",null,"Properties of an applied form."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"urn")," (string): Urn of the applied form"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"incompletePrompts")," (FormPromptAssociation[]): A list of prompts that are not yet complete for this form."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"completedPrompts")," (FormPromptAssociation[]): A list of prompts that have been completed for this form.")),(0,t.yg)("h4",{id:"mlmetric"},"MLMetric"),(0,t.yg)("p",null,"Properties associated with an ML Metric"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"name")," (string): Name of the mlMetric"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"description")," (string?): Documentation of the mlMetric"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"value")," (string?): The value of the mlMetric"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"createdAt")," (long?): Date when the mlMetric was developed")),(0,t.yg)("h4",{id:"mlmodelfactors"},"MLModelFactors"),(0,t.yg)("p",null,"Factors affecting the performance of the MLModel."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"groups")," (string[]?): Groups refers to distinct categories with similar characteristics that are pr..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"instrumentation")," (string[]?): The performance of a MLModel can vary depending on what instruments were used..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"environment")," (string[]?): A further factor affecting MLModel performance is the environment in which it...")),(0,t.yg)("h4",{id:"testresult"},"TestResult"),(0,t.yg)("p",null,"Information about a Test Result"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"test")," (string): The urn of the test"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"type")," (TestResultType): The type of the result"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"testDefinitionMd5")," (string?): The md5 of the test definition that was used to compute this result. See Test..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"lastComputed")," (AuditStamp?): The audit stamp of when the result was computed, including the actor who comp...")),(0,t.yg)("h4",{id:"timestamp"},"TimeStamp"),(0,t.yg)("p",null,"A standard event timestamp"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"time")," (long): When did the event occur"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"actor")," (string?): Optional: The actor urn involved in the event.")),(0,t.yg)("h4",{id:"versiontag"},"VersionTag"),(0,t.yg)("p",null,"A resource-defined string representing the resource state for the purpose of concurrency control"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"versionTag")," (string?): "),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"metadataAttribution")," (MetadataAttribution?): ")),(0,t.yg)("h3",{id:"relationships"},"Relationships"),(0,t.yg)("h4",{id:"outgoing"},"Outgoing"),(0,t.yg)("p",null,"These are the relationships stored in this entity's aspects"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"OwnedBy"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Corpuser via ",(0,t.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,t.yg)("li",{parentName:"ul"},"CorpGroup via ",(0,t.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"ownershipType"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"OwnershipType via ",(0,t.yg)("inlineCode",{parentName:"li"},"ownership.owners.typeUrn")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"TrainedBy"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"DataJob via ",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelProperties.trainingJobs")),(0,t.yg)("li",{parentName:"ul"},"DataProcessInstance via ",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelProperties.trainingJobs")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"UsedBy"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"DataJob via ",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelProperties.downstreamJobs")),(0,t.yg)("li",{parentName:"ul"},"DataProcessInstance via ",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelProperties.downstreamJobs")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Consumes"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"MlFeature via ",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelProperties.mlFeatures")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"DeployedTo"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"MlModelDeployment via ",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelProperties.deployments")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"MemberOf"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"MlModelGroup via ",(0,t.yg)("inlineCode",{parentName:"li"},"mlModelProperties.groups")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"TaggedWith"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Tag via ",(0,t.yg)("inlineCode",{parentName:"li"},"globalTags.tags")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"TermedWith"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"GlossaryTerm via ",(0,t.yg)("inlineCode",{parentName:"li"},"glossaryTerms.terms.urn")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"AssociatedWith"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Domain via ",(0,t.yg)("inlineCode",{parentName:"li"},"domains.domains")),(0,t.yg)("li",{parentName:"ul"},"Application via ",(0,t.yg)("inlineCode",{parentName:"li"},"applications.applications")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"IsFailing"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Test via ",(0,t.yg)("inlineCode",{parentName:"li"},"testResults.failing")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"IsPassing"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Test via ",(0,t.yg)("inlineCode",{parentName:"li"},"testResults.passing")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"VersionOf"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"VersionSet via ",(0,t.yg)("inlineCode",{parentName:"li"},"versionProperties.versionSet")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"IsPartOf"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Container via ",(0,t.yg)("inlineCode",{parentName:"li"},"container.container"))))),(0,t.yg)("h4",{id:"incoming"},"Incoming"),(0,t.yg)("p",null,"These are the relationships stored in other entity's aspects"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Consumes"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"DataProcessInstance via ",(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceInput.inputs")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"DataProcessInstanceConsumes"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"DataProcessInstance via ",(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceInput.inputEdges")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Produces"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"DataProcessInstance via ",(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceOutput.outputs")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"DataProcessInstanceProduces"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"DataProcessInstance via ",(0,t.yg)("inlineCode",{parentName:"li"},"dataProcessInstanceOutput.outputEdges"))))),(0,t.yg)("h3",{id:"global-metadata-model"},(0,t.yg)("a",{parentName:"h3",href:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}h.isMDXComponent=!0}}]);