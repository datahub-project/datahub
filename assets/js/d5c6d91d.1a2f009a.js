"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[75863],{15680:(a,e,t)=>{t.d(e,{xA:()=>p,yg:()=>m});var r=t(96540);function n(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function o(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,r)}return t}function s(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){n(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function i(a,e){if(null==a)return{};var t,r,n=function(a,e){if(null==a)return{};var t,r,n={},o=Object.keys(a);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(n[t]=a[t]);return n}(a,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(a);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(n[t]=a[t])}return n}var d=r.createContext({}),l=function(a){var e=r.useContext(d),t=e;return a&&(t="function"==typeof a?a(e):s(s({},e),a)),t},p=function(a){var e=l(a.components);return r.createElement(d.Provider,{value:e},a.children)},c="mdxType",h={inlineCode:"code",wrapper:function(a){var e=a.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(a,e){var t=a.components,n=a.mdxType,o=a.originalType,d=a.parentName,p=i(a,["components","mdxType","originalType","parentName"]),c=l(t),u=n,m=c["".concat(d,".").concat(u)]||c[u]||h[u]||o;return t?r.createElement(m,s(s({ref:e},p),{},{components:t})):r.createElement(m,s({ref:e},p))}));function m(a,e){var t=arguments,n=e&&e.mdxType;if("string"==typeof a||n){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=a,i[c]="string"==typeof a?a:n,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},73180:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});t(96540);var r=t(15680);function n(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function o(a,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):function(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,r)}return t}(Object(e)).forEach((function(t){Object.defineProperty(a,t,Object.getOwnPropertyDescriptor(e,t))})),a}function s(a,e){if(null==a)return{};var t,r,n=function(a,e){if(null==a)return{};var t,r,n={},o=Object.keys(a);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(n[t]=a[t]);return n}(a,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(a);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(n[t]=a[t])}return n}const i={title:"Dashboard & Chart",slug:"/api/tutorials/dashboard-chart",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/dashboard-chart.md"},d="Dashboard & Chart",l={unversionedId:"docs/api/tutorials/dashboard-chart",id:"docs/api/tutorials/dashboard-chart",title:"Dashboard & Chart",description:"Why Would You Use Dashboards and Charts?",source:"@site/genDocs/docs/api/tutorials/dashboard-chart.md",sourceDirName:"docs/api/tutorials",slug:"/api/tutorials/dashboard-chart",permalink:"/docs/api/tutorials/dashboard-chart",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/dashboard-chart.md",tags:[],version:"current",frontMatter:{title:"Dashboard & Chart",slug:"/api/tutorials/dashboard-chart",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/dashboard-chart.md"},sidebar:"overviewSidebar",previous:{title:"Container",permalink:"/docs/api/tutorials/container"},next:{title:"DataFlow & DataJob",permalink:"/docs/api/tutorials/dataflow-datajob"}},p={},c=[{value:"Why Would You Use Dashboards and Charts?",id:"why-would-you-use-dashboards-and-charts",level:2},{value:"Goal Of This Guide",id:"goal-of-this-guide",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create Chart",id:"create-chart",level:2},{value:"Link Chart with Datasets",id:"link-chart-with-datasets",level:3},{value:"Create Dashboard",id:"create-dashboard",level:2},{value:"Link Dashboard with Charts, Dashboards, and Datasets",id:"link-dashboard-with-charts-dashboards-and-datasets",level:3},{value:"Read Chart",id:"read-chart",level:2},{value:"Expected Output",id:"expected-output",level:4},{value:"Read Dashboard",id:"read-dashboard",level:2},{value:"Expected Output",id:"expected-output-1",level:4}],h={toc:c},u="wrapper";function m(a){var{components:e}=a,t=s(a,["components"]);return(0,r.yg)(u,o(function(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable})))),r.forEach((function(e){n(a,e,t[e])}))}return a}({},h,t),{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"dashboard--chart"},"Dashboard & Chart"),(0,r.yg)("h2",{id:"why-would-you-use-dashboards-and-charts"},"Why Would You Use Dashboards and Charts?"),(0,r.yg)("p",null,"The dashboard and chart entities are used to represent visualizations of data, typically in the context of business intelligence or analytics platforms. They allow users to create, manage, and share visual representations of data insights."),(0,r.yg)("h3",{id:"goal-of-this-guide"},"Goal Of This Guide"),(0,r.yg)("p",null,"This guide will show you how to"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Create a dashboard and a chart."),(0,r.yg)("li",{parentName:"ul"},"Link the dashboard to the chart or another dashboard."),(0,r.yg)("li",{parentName:"ul"},"Read dashboard and chart entities.")),(0,r.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.yg)("p",null,"For this tutorial, you need to deploy DataHub Quickstart and ingest sample data.\nFor detailed steps, please refer to ",(0,r.yg)("a",{parentName:"p",href:"/docs/quickstart"},"Datahub Quickstart Guide"),"."),(0,r.yg)("h2",{id:"create-chart"},"Create Chart"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/chart_create_simple.py\nfrom datahub.metadata.urns import TagUrn\nfrom datahub.sdk import Chart, DataHubClient\n\nclient = DataHubClient.from_env()\n\nchart = Chart(\n    name="example_chart",\n    platform="looker",\n    description="looker chart for production",\n    tags=[TagUrn(name="production"), TagUrn(name="data_engineering")],\n)\n\nclient.entities.upsert(chart)\n\n')),(0,r.yg)("h3",{id:"link-chart-with-datasets"},"Link Chart with Datasets"),(0,r.yg)("p",null,"You can associate datasets with the chart by providing the dataset URN in the ",(0,r.yg)("inlineCode",{parentName:"p"},"input_datasets")," parameter. This will create lineage between the chart and the datasets, so you can track the data sources used by the chart."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/chart_create_complex.py\nfrom datahub.metadata.urns import TagUrn\nfrom datahub.sdk import Chart, DataHubClient, Dataset\n\nclient = DataHubClient.from_env()\n\ninput_datasets = [\n    Dataset(\n        name="example_dataset",\n        platform="snowflake",\n        description="looker dataset for production",\n        schema=[("id", "string"), ("name", "string")],\n    ),\n    Dataset(\n        name="example_dataset_2",\n        platform="snowflake",\n        description="looker dataset for production",\n        schema=[("id", "string"), ("name", "string")],\n    ),\n    Dataset(\n        name="example_dataset_3",\n        platform="snowflake",\n        description="looker dataset for production",\n        schema=[("id", "string"), ("name", "string")],\n    ),\n]\n\n# create a chart with two input datasets\nchart = Chart(\n    name="example_chart",\n    platform="looker",\n    description="looker chart for production",\n    tags=[TagUrn(name="production"), TagUrn(name="data_engineering")],\n    input_datasets=[input_datasets[0], input_datasets[1]],\n)\n\nfor dataset in input_datasets:\n    client.entities.upsert(dataset)\n\n# add a new dataset to the chart\nchart.add_input_dataset(input_datasets[2])\nclient.entities.upsert(chart)\n\n')),(0,r.yg)("h2",{id:"create-dashboard"},"Create Dashboard"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_create_simple.py\nfrom datahub.metadata.urns import TagUrn\nfrom datahub.sdk import Dashboard, DataHubClient\n\nclient = DataHubClient.from_env()\n\ndashboard = Dashboard(\n    name="example_dashboard",\n    platform="looker",\n    description="looker dashboard for production",\n    tags=[TagUrn(name="production"), TagUrn(name="data_engineering")],\n)\n\nclient.entities.upsert(dashboard)\n\n')),(0,r.yg)("h3",{id:"link-dashboard-with-charts-dashboards-and-datasets"},"Link Dashboard with Charts, Dashboards, and Datasets"),(0,r.yg)("p",null,"You can associate charts, dashboards, and datasets with the dashboard by providing their URNs in the ",(0,r.yg)("inlineCode",{parentName:"p"},"charts"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"dashboards"),", and ",(0,r.yg)("inlineCode",{parentName:"p"},"input_datasets")," parameters, respectively. This will create lineage between the dashboard and the associated entities."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_create_complex.py\nfrom datahub.metadata.urns import TagUrn\nfrom datahub.sdk import Chart, Dashboard, DataHubClient, Dataset\n\nclient = DataHubClient.from_env()\ndashboard1 = Dashboard(\n    name="example_dashboard_2",\n    platform="looker",\n    description="looker dashboard for production",\n)\nchart = Chart(\n    name="example_chart",\n    platform="looker",\n    description="looker chart for production",\n)\n\ninput_dataset = Dataset(\n    name="example_dataset5",\n    platform="snowflake",\n    description="snowflake dataset for production",\n)\n\n\ndashboard2 = Dashboard(\n    name="example_dashboard",\n    platform="looker",\n    description="looker dashboard for production",\n    tags=[TagUrn(name="production"), TagUrn(name="data_engineering")],\n    input_datasets=[input_dataset.urn],\n    charts=[chart.urn],\n    dashboards=[dashboard1.urn],\n)\n\n\nclient.entities.upsert(dashboard1)\nclient.entities.upsert(chart)\nclient.entities.upsert(input_dataset)\n\nclient.entities.upsert(dashboard2)\n\n')),(0,r.yg)("h2",{id:"read-chart"},"Read Chart"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/chart_read.py\nfrom datahub.sdk import ChartUrn, DataHubClient\n\nclient = DataHubClient.from_env()\n\n# Or get this from the UI (share -> copy urn) and use ChartUrn.from_string(...)\nchart_urn = ChartUrn("looker", "example_chart_id")\n\nchart_entity = client.entities.get(chart_urn)\nprint("Chart name:", chart_entity.name)\nprint("Chart platform:", chart_entity.platform)\nprint("Chart description:", chart_entity.description)\n\n')),(0,r.yg)("h4",{id:"expected-output"},"Expected Output"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},">> Chart name: example_chart\n>> Chart platform: urn:li:dataPlatform:looker\n>> Chart description: looker chart for production\n")),(0,r.yg)("h2",{id:"read-dashboard"},"Read Dashboard"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_read.py\nfrom datahub.sdk import DashboardUrn, DataHubClient\n\nclient = DataHubClient.from_env()\n\n# Or get this from the UI (share -> copy urn) and use DashboardUrn.from_string(...)\ndashboard_urn = DashboardUrn("looker", "example_dashboard_id")\n\ndashboard_entity = client.entities.get(dashboard_urn)\nprint("Dashboard name:", dashboard_entity.name)\nprint("Dashboard platform:", dashboard_entity.platform)\nprint("Dashboard description:", dashboard_entity.description)\n\n')),(0,r.yg)("h4",{id:"expected-output-1"},"Expected Output"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},">> Dashboard name: example_dashboard\n>> Dashboard platform: urn:li:dataPlatform:looker\n>> Dashboard description: looker dashboard for production\n")))}m.isMDXComponent=!0}}]);