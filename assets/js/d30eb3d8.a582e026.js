"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[87856],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),g=c(t),m=r,y=g["".concat(s,".").concat(m)]||g[m]||p[m]||i;return t?a.createElement(y,l(l({ref:n},u),{},{components:t})):a.createElement(y,l({ref:n},u))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[g]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},94523:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>c,toc:()=>g});t(96540);var a=t(15680);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const o={title:"Elasticsearch & OpenSearch Multi-Client Shim",slug:"/how/elasticsearch-search-client-shim",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/how/elasticsearch-search-client-shim.md"},s="Elasticsearch & OpenSearch Multi-Client Shim",c={unversionedId:"docs/how/elasticsearch-search-client-shim",id:"docs/how/elasticsearch-search-client-shim",title:"Elasticsearch & OpenSearch Multi-Client Shim",description:"This guide explains how to use DataHub's multi-client search engine shim to support different versions of Elasticsearch and OpenSearch through a unified interface.",source:"@site/genDocs/docs/how/elasticsearch-search-client-shim.md",sourceDirName:"docs/how",slug:"/how/elasticsearch-search-client-shim",permalink:"/docs/how/elasticsearch-search-client-shim",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/how/elasticsearch-search-client-shim.md",tags:[],version:"current",frontMatter:{title:"Elasticsearch & OpenSearch Multi-Client Shim",slug:"/how/elasticsearch-search-client-shim",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/how/elasticsearch-search-client-shim.md"}},u={},g=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Core Components",id:"core-components",level:3},{value:"Supported Configurations",id:"supported-configurations",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"application.yaml Configuration",id:"applicationyaml-configuration",level:3},{value:"Migration Scenarios",id:"migration-scenarios",level:2},{value:"Scenario 1: Elasticsearch 7.17 \u2192 Elasticsearch 8.x",id:"scenario-1-elasticsearch-717--elasticsearch-8x",level:3},{value:"Scenario 2: Elasticsearch 7.17 \u2192 OpenSearch 2.x",id:"scenario-2-elasticsearch-717--opensearch-2x",level:3},{value:"Scenario 3: Auto-Detection (Recommended)",id:"scenario-3-auto-detection-recommended",level:3},{value:"Deployment Guide",id:"deployment-guide",level:2},{value:"Docker Compose",id:"docker-compose",level:3},{value:"Kubernetes",id:"kubernetes",level:3},{value:"Helm",id:"helm",level:3},{value:"Validation and Testing",id:"validation-and-testing",level:2},{value:"Verify Shim Configuration",id:"verify-shim-configuration",level:3},{value:"Common Validation Steps",id:"common-validation-steps",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"1. Connection Failures",id:"1-connection-failures",level:4},{value:"2. Auto-Detection Failures",id:"2-auto-detection-failures",level:4},{value:"3. API Compatibility Issues",id:"3-api-compatibility-issues",level:4},{value:"4. Dependency Issues",id:"4-dependency-issues",level:4},{value:"Debug Mode",id:"debug-mode",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Pre-Migration",id:"pre-migration",level:3},{value:"During Migration",id:"during-migration",level:3},{value:"Post-Migration",id:"post-migration",level:3},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Planned Features",id:"planned-features",level:3},{value:"Contributing",id:"contributing",level:3},{value:"Support Matrix",id:"support-matrix",level:2},{value:"FAQ",id:"faq",level:2},{value:"Q: Can I use the shim with existing deployments?",id:"q-can-i-use-the-shim-with-existing-deployments",level:3},{value:"Q: Can I use multiple search engines simultaneously?",id:"q-can-i-use-multiple-search-engines-simultaneously",level:3}],p={toc:g},m="wrapper";function y(e){var{components:n}=e,t=l(e,["components"]);return(0,a.yg)(m,i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){r(e,n,t[n])}))}return e}({},p,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"elasticsearch--opensearch-multi-client-shim"},"Elasticsearch & OpenSearch Multi-Client Shim"),(0,a.yg)("p",null,"This guide explains how to use DataHub's multi-client search engine shim to support different versions of Elasticsearch and OpenSearch through a unified interface."),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"DataHub's search client shim provides seamless support for:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Elasticsearch 7.17")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Elasticsearch 8.17+")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"OpenSearch 2.x")," with full REST high-level client support")),(0,a.yg)("p",null,"This enables smooth migrations between different search engine versions while maintaining backward compatibility with existing DataHub deployments."),(0,a.yg)("h2",{id:"architecture"},"Architecture"),(0,a.yg)("h3",{id:"core-components"},"Core Components"),(0,a.yg)("p",null,"The shim consists of several key components:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"strong"},"SearchClientShim"))," - Main abstraction interface"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"strong"},"SearchClientShimFactory"))," - Factory for creating appropriate client implementations"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Implementation Classes")," - Concrete implementations for each search engine:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Es7CompatibilitySearchClientShim")," - ES 7.17"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Es8SearchClientShim")," - ES 8.17+"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"OpenSearch2SearchClientShim")," - OpenSearch 2.x")))),(0,a.yg)("h3",{id:"supported-configurations"},"Supported Configurations"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Source Engine"),(0,a.yg)("th",{parentName:"tr",align:null},"Target Engine"),(0,a.yg)("th",{parentName:"tr",align:null},"Shim Implementation"),(0,a.yg)("th",{parentName:"tr",align:null},"Status"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"DataHub \u2192 ES 7.17"),(0,a.yg)("td",{parentName:"tr",align:null},"ES 7.17"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"Es7CompatibilitySearchClientShim")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Complete")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"DataHub \u2192 ES 8.17+"),(0,a.yg)("td",{parentName:"tr",align:null},"ES 8.17+"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"Es8SearchClientShim")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Complete")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"DataHub \u2192 OpenSearch 2.x"),(0,a.yg)("td",{parentName:"tr",align:null},"OpenSearch 2.x"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"OpenSearch2SearchClientShim")),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Complete")))),(0,a.yg)("h2",{id:"configuration"},"Configuration"),(0,a.yg)("h3",{id:"environment-variables"},"Environment Variables"),(0,a.yg)("p",null,"Configure the shim using these environment variables:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"# Enable the search client shim (required)\nELASTICSEARCH_SHIM_ENABLED=true\n\n# Specify engine type (or use AUTO_DETECT)\nELASTICSEARCH_SHIM_ENGINE_TYPE=AUTO_DETECT\n# Options: AUTO_DETECT, ELASTICSEARCH_7, ELASTICSEARCH_8, OPENSEARCH_2\n\n# Enable auto-detection (recommended)\nELASTICSEARCH_SHIM_AUTO_DETECT=true\n")),(0,a.yg)("h3",{id:"applicationyaml-configuration"},"application.yaml Configuration"),(0,a.yg)("p",null,"Alternatively, configure via application.yaml:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"elasticsearch:\n  host: localhost\n  port: 9200\n  username: ${ELASTICSEARCH_USERNAME:#{null}}\n  password: ${ELASTICSEARCH_PASSWORD:#{null}}\n  useSSL: false\n  # Standard Elasticsearch configuration...\n\n  # Multi-client shim configuration\n  shim:\n    enabled: true # Enable shim\n    engineType: AUTO_DETECT # or specific type\n    autoDetectEngine: true # Auto-detect cluster type\n")),(0,a.yg)("h2",{id:"migration-scenarios"},"Migration Scenarios"),(0,a.yg)("h3",{id:"scenario-1-elasticsearch-717--elasticsearch-8x"},"Scenario 1: Elasticsearch 7.17 \u2192 Elasticsearch 8.x"),(0,a.yg)("p",null,"This is the most common migration path."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 1: Enable the shim")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"ELASTICSEARCH_SHIM_ENABLED=true\nELASTICSEARCH_SHIM_ENGINE_TYPE=ELASTICSEARCH_8\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 2: Verify connection")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"# Check logs for successful connection\n")),(0,a.yg)("h3",{id:"scenario-2-elasticsearch-717--opensearch-2x"},"Scenario 2: Elasticsearch 7.17 \u2192 OpenSearch 2.x"),(0,a.yg)("p",null,"Direct migration from Elasticsearch to OpenSearch 2.x."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Configuration:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"ELASTICSEARCH_SHIM_ENABLED=true\nELASTICSEARCH_SHIM_ENGINE_TYPE=OPENSEARCH_2\nELASTICSEARCH_SHIM_AUTO_DETECT=true\n")),(0,a.yg)("h3",{id:"scenario-3-auto-detection-recommended"},"Scenario 3: Auto-Detection (Recommended)"),(0,a.yg)("p",null,"Let DataHub automatically detect your search engine type:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"ELASTICSEARCH_SHIM_ENABLED=true\nELASTICSEARCH_SHIM_ENGINE_TYPE=AUTO_DETECT\nELASTICSEARCH_SHIM_AUTO_DETECT=true\n")),(0,a.yg)("p",null,"The shim will:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Connect to your search cluster"),(0,a.yg)("li",{parentName:"ol"},"Identify the engine type and version"),(0,a.yg)("li",{parentName:"ol"},"Select the appropriate client implementation")),(0,a.yg)("h2",{id:"deployment-guide"},"Deployment Guide"),(0,a.yg)("h3",{id:"docker-compose"},"Docker Compose"),(0,a.yg)("p",null,"Update your ",(0,a.yg)("inlineCode",{parentName:"p"},"docker-compose.yml"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"services:\n  datahub-gms:\n    environment:\n      - ELASTICSEARCH_SHIM_ENABLED=true\n      - ELASTICSEARCH_SHIM_ENGINE_TYPE=AUTO_DETECT\n      # ... other ES config\n")),(0,a.yg)("h3",{id:"kubernetes"},"Kubernetes"),(0,a.yg)("p",null,"Update your deployment manifests:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: datahub-gms\nspec:\n  template:\n    spec:\n      containers:\n        - name: datahub-gms\n          env:\n            - name: ELASTICSEARCH_SHIM_ENABLED\n              value: "true"\n            - name: ELASTICSEARCH_SHIM_ENGINE_TYPE\n              value: "AUTO_DETECT"\n          # ... other configuration\n')),(0,a.yg)("h3",{id:"helm"},"Helm"),(0,a.yg)("p",null,"Update your ",(0,a.yg)("inlineCode",{parentName:"p"},"values.yaml"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},'global:\n  elasticsearch:\n    shim:\n      enabled: true\n      engineType: "AUTO_DETECT"\n      autoDetectEngine: true\n')),(0,a.yg)("h2",{id:"validation-and-testing"},"Validation and Testing"),(0,a.yg)("h3",{id:"verify-shim-configuration"},"Verify Shim Configuration"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Check logs")," for shim initialization:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'docker logs datahub-gms | grep -i "shim\\|search"\n')),(0,a.yg)("p",null,"Look for messages like:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"INFO  Creating SearchClientShim for engine type: ELASTICSEARCH_7\nINFO  Auto-detected search engine type: ELASTICSEARCH_7\n")),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Test search functionality")," in DataHub UI:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Search for datasets"),(0,a.yg)("li",{parentName:"ul"},"Browse data assets"),(0,a.yg)("li",{parentName:"ul"},"Check that lineage is working")),(0,a.yg)("ol",{start:2},(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Monitor performance")," during transition:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Watch for connection errors"),(0,a.yg)("li",{parentName:"ul"},"Check response times"),(0,a.yg)("li",{parentName:"ul"},"Monitor resource usage")),(0,a.yg)("h3",{id:"common-validation-steps"},"Common Validation Steps"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'# 1. Check DataHub health endpoint\ncurl http://localhost:8080/health\n\n# 2. Verify search index access\ncurl -u user:pass "http://elasticsearch:9200/_cat/indices?v"\n\n# 3. Test search functionality\ncurl -X POST "http://localhost:8080/api/graphql" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"query": "{ search(input: {type: DATASET, query: \\"*\\"}) { total }}"}\'\n')),(0,a.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.yg)("h3",{id:"common-issues"},"Common Issues"),(0,a.yg)("h4",{id:"1-connection-failures"},"1. Connection Failures"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"ERROR: Unable to connect to search cluster\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Solutions:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Verify ",(0,a.yg)("inlineCode",{parentName:"li"},"ELASTICSEARCH_HOST")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"ELASTICSEARCH_PORT")),(0,a.yg)("li",{parentName:"ul"},"Check network connectivity between DataHub and search cluster"),(0,a.yg)("li",{parentName:"ul"},"Ensure credentials are correct"),(0,a.yg)("li",{parentName:"ul"},"Verify SSL/TLS configuration (ES8 Containers use SSL by default so if you previously weren't this may cause issues)")),(0,a.yg)("h4",{id:"2-auto-detection-failures"},"2. Auto-Detection Failures"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"ERROR: Unable to detect search engine type\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Solutions:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Manually specify engine type: ",(0,a.yg)("inlineCode",{parentName:"li"},"ELASTICSEARCH_SHIM_ENGINE_TYPE=ELASTICSEARCH_8")),(0,a.yg)("li",{parentName:"ul"},"Check cluster health: ",(0,a.yg)("inlineCode",{parentName:"li"},"curl http://elasticsearch:9200/_cluster/health")),(0,a.yg)("li",{parentName:"ul"},"Verify authentication credentials")),(0,a.yg)("h4",{id:"3-api-compatibility-issues"},"3. API Compatibility Issues"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"ERROR: Incompatible API version\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Solutions:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Check Elasticsearch version compatibility"),(0,a.yg)("li",{parentName:"ul"},"Review deprecation warnings in ES logs")),(0,a.yg)("h4",{id:"4-dependency-issues"},"4. Dependency Issues"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"ERROR: ClassNotFoundException for ES client\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Solutions:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Ensure correct client dependencies are included in classpath"),(0,a.yg)("li",{parentName:"ul"},"Check ",(0,a.yg)("inlineCode",{parentName:"li"},"build.gradle")," for required dependencies"),(0,a.yg)("li",{parentName:"ul"},"Rebuild DataHub with appropriate client libraries")),(0,a.yg)("h3",{id:"debug-mode"},"Debug Mode"),(0,a.yg)("p",null,"Enable debug logging to troubleshoot issues:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"# Add to environment\nDATAHUB_LOG_LEVEL=DEBUG\nELASTICSEARCH_SHIM_DEBUG=true\n")),(0,a.yg)("h3",{id:"performance-monitoring"},"Performance Monitoring"),(0,a.yg)("p",null,"Monitor key metrics during migration:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'# Connection pool metrics\ncurl "http://localhost:8080/actuator/metrics/elasticsearch.connections"\n\n# Search operation metrics\ncurl "http://localhost:8080/actuator/metrics/elasticsearch.search"\n\n# Error rates\ncurl "http://localhost:8080/actuator/metrics/elasticsearch.errors"\n')),(0,a.yg)("h2",{id:"best-practices"},"Best Practices"),(0,a.yg)("h3",{id:"pre-migration"},"Pre-Migration"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Backup your data")," before changing search engine configuration"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Test in staging")," with representative data volumes"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Monitor resource usage")," patterns in current deployment"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Document current configuration")," for rollback scenarios")),(0,a.yg)("h3",{id:"during-migration"},"During Migration"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Enable auto-detection initially")," for smooth transition"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Monitor logs closely")," for connection and performance issues"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Test all search functionality")," after configuration changes")),(0,a.yg)("h3",{id:"post-migration"},"Post-Migration"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Update documentation")," with new configuration"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Monitor performance metrics")," for several days"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Plan for future upgrades")," (ES 8.x native support)"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Train team members")," on new configuration options")),(0,a.yg)("h2",{id:"future-enhancements"},"Future Enhancements"),(0,a.yg)("h3",{id:"planned-features"},"Planned Features"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"OpenSearch 3.x support")," when available"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Enhanced AWS IAM authentication")," for all client types"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Advanced feature detection")," and capability querying")),(0,a.yg)("h3",{id:"contributing"},"Contributing"),(0,a.yg)("p",null,"To extend the shim for additional search engines:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Implement ",(0,a.yg)("inlineCode",{parentName:"strong"},"SearchClientShim"))," interface"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Add engine type")," to ",(0,a.yg)("inlineCode",{parentName:"li"},"SearchEngineType")," enum"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Update factory logic")," in ",(0,a.yg)("inlineCode",{parentName:"li"},"SearchClientShimFactory")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Add configuration options")," to application.yaml"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Write tests")," and documentation")),(0,a.yg)("h2",{id:"support-matrix"},"Support Matrix"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"DataHub Version"),(0,a.yg)("th",{parentName:"tr",align:null},"ES 7.17"),(0,a.yg)("th",{parentName:"tr",align:null},"ES 8.x"),(0,a.yg)("th",{parentName:"tr",align:null},"OpenSearch 2.x"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"0.3.15+"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Full"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 8.17+"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Full")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Future"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Full"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Full"),(0,a.yg)("td",{parentName:"tr",align:null},"\u2705 Full")))),(0,a.yg)("h2",{id:"faq"},"FAQ"),(0,a.yg)("h3",{id:"q-can-i-use-the-shim-with-existing-deployments"},"Q: Can I use the shim with existing deployments?"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"A:")," Yes, the shim is backward compatible. It is a thin abstraction layer over the existing code"),(0,a.yg)("h3",{id:"q-can-i-use-multiple-search-engines-simultaneously"},"Q: Can I use multiple search engines simultaneously?"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"A:")," No, DataHub connects to one search cluster at a time. Use the shim to switch between different engine types."),(0,a.yg)("p",null,"For additional support, please refer to the ",(0,a.yg)("a",{parentName:"p",href:"https://datahubproject.io/docs/community"},"DataHub community forums")," or file an issue in the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/datahubproject/datahub"},"GitHub repository"),"."))}y.isMDXComponent=!0}}]);