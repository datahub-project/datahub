"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[77343],{20553:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>m,default:()=>h,frontMatter:()=>d,metadata:()=>p,toc:()=>u});a(96540);var t=a(15680),i=a(53720),r=a(5400);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))})),e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}const d={sidebar_position:7,title:"Dashboard",slug:"/generated/metamodel/entities/dashboard",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dashboard.md"},m="Dashboard",p={unversionedId:"docs/generated/metamodel/entities/dashboard",id:"docs/generated/metamodel/entities/dashboard",title:"Dashboard",description:"Dashboards are collections of visualizations and charts that provide insights into data. In DataHub, dashboards represent collections of charts (visualizations) typically found in Business Intelligence (BI) platforms and data visualization tools. Dashboards are typically ingested from platforms like Looker, Tableau, PowerBI, Superset, Mode, Grafana, and other BI tools.",source:"@site/genDocs/docs/generated/metamodel/entities/dashboard.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/dashboard",permalink:"/docs/generated/metamodel/entities/dashboard",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dashboard.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Dashboard",slug:"/generated/metamodel/entities/dashboard",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/dashboard.md"},sidebar:"overviewSidebar",previous:{title:"Chart",permalink:"/docs/generated/metamodel/entities/chart"},next:{title:"Notebook",permalink:"/docs/generated/metamodel/entities/notebook"}},c={},u=[{value:"Identity",id:"identity",level:2},{value:"Important Capabilities",id:"important-capabilities",level:2},{value:"Dashboard Information and Metadata",id:"dashboard-information-and-metadata",level:3},{value:"Container Relationships - Charts in Dashboards",id:"container-relationships---charts-in-dashboards",level:3},{value:"Data Lineage - Dataset Dependencies",id:"data-lineage---dataset-dependencies",level:3},{value:"Nested Dashboards",id:"nested-dashboards",level:3},{value:"Field-Level Lineage",id:"field-level-lineage",level:3},{value:"Editable Properties",id:"editable-properties",level:3},{value:"Tags and Glossary Terms",id:"tags-and-glossary-terms",level:3},{value:"Adding Tags to a Dashboard",id:"adding-tags-to-a-dashboard",level:4},{value:"Adding Glossary Terms to a Dashboard",id:"adding-glossary-terms-to-a-dashboard",level:4},{value:"Ownership",id:"ownership",level:3},{value:"Usage Statistics",id:"usage-statistics",level:3},{value:"Organizational Context",id:"organizational-context",level:3},{value:"Domains",id:"domains",level:4},{value:"Container Hierarchy",id:"container-hierarchy",level:4},{value:"Embedding and External URLs",id:"embedding-and-external-urls",level:3},{value:"Dashboard Subtypes",id:"dashboard-subtypes",level:3},{value:"Integration with External Systems",id:"integration-with-external-systems",level:2},{value:"Ingestion from BI Platforms",id:"ingestion-from-bi-platforms",level:3},{value:"Querying Dashboard Information",id:"querying-dashboard-information",level:3},{value:"Relationships API",id:"relationships-api",level:3},{value:"GraphQL API",id:"graphql-api",level:2},{value:"Notable Exceptions",id:"notable-exceptions",level:2},{value:"Platform-Specific Variations",id:"platform-specific-variations",level:3},{value:"Deprecated Fields",id:"deprecated-fields",level:3},{value:"Container vs Parent",id:"container-vs-parent",level:3},{value:"Related Entities",id:"related-entities",level:2},{value:"Technical Reference Guide",id:"technical-reference-guide",level:2},{value:"Reading the Field Tables",id:"reading-the-field-tables",level:3},{value:"Aspects",id:"aspects",level:3},{value:"dashboardKey",id:"dashboardkey",level:4},{value:"dashboardInfo",id:"dashboardinfo",level:4},{value:"editableDashboardProperties",id:"editabledashboardproperties",level:4},{value:"ownership",id:"ownership-1",level:4},{value:"status",id:"status",level:4},{value:"globalTags",id:"globaltags",level:4},{value:"browsePaths",id:"browsepaths",level:4},{value:"glossaryTerms",id:"glossaryterms",level:4},{value:"institutionalMemory",id:"institutionalmemory",level:4},{value:"dataPlatformInstance",id:"dataplatforminstance",level:4},{value:"browsePathsV2",id:"browsepathsv2",level:4},{value:"domains",id:"domains-1",level:4},{value:"applications",id:"applications",level:4},{value:"container",id:"container",level:4},{value:"deprecation",id:"deprecation",level:4},{value:"inputFields",id:"inputfields",level:4},{value:"subTypes",id:"subtypes",level:4},{value:"embed",id:"embed",level:4},{value:"structuredProperties",id:"structuredproperties",level:4},{value:"incidentsSummary",id:"incidentssummary",level:4},{value:"forms",id:"forms",level:4},{value:"testResults",id:"testresults",level:4},{value:"dashboardUsageStatistics (Timeseries)",id:"dashboardusagestatistics-timeseries",level:4},{value:"Common Types",id:"common-types",level:3},{value:"AuditStamp",id:"auditstamp",level:4},{value:"ChangeAuditStamps",id:"changeauditstamps",level:4},{value:"Edge",id:"edge",level:4},{value:"FormAssociation",id:"formassociation",level:4},{value:"IncidentSummaryDetails",id:"incidentsummarydetails",level:4},{value:"TestResult",id:"testresult",level:4},{value:"Relationships",id:"relationships",level:3},{value:"Self",id:"self",level:4},{value:"Outgoing",id:"outgoing",level:4},{value:"Global Metadata Model",id:"global-metadata-model",level:3}],g={toc:u},y="wrapper";function h(e){var{components:n}=e,a=o(e,["components"]);return(0,t.yg)(y,s(function(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{},t=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),t.forEach((function(n){l(e,n,a[n])}))}return e}({},g,a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"dashboard"},"Dashboard"),(0,t.yg)("p",null,"Dashboards are collections of visualizations and charts that provide insights into data. In DataHub, dashboards represent collections of charts (visualizations) typically found in Business Intelligence (BI) platforms and data visualization tools. Dashboards are typically ingested from platforms like Looker, Tableau, PowerBI, Superset, Mode, Grafana, and other BI tools."),(0,t.yg)("h2",{id:"identity"},"Identity"),(0,t.yg)("p",null,"Dashboards are identified by two pieces of information:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"The platform that they belong to"),": This is the specific BI tool or dashboarding platform that hosts the dashboard. Examples include ",(0,t.yg)("inlineCode",{parentName:"li"},"looker"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"tableau"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"powerbi"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"superset"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"mode"),", etc. This corresponds to the ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardTool")," field in the dashboard's key aspect."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"The dashboard identifier in the specific platform"),": Each platform has its own way of uniquely identifying dashboards within its system. For example, Looker uses identifiers like ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboards.999999"),", while PowerBI might use GUIDs, and Tableau uses site-relative paths.")),(0,t.yg)("p",null,"An example of a dashboard identifier is ",(0,t.yg)("inlineCode",{parentName:"p"},"urn:li:dashboard:(looker,dashboards.999999)"),"."),(0,t.yg)("p",null,"For platforms with multiple instances (e.g., separate Looker deployments for different environments), the URN can include a platform instance identifier: ",(0,t.yg)("inlineCode",{parentName:"p"},"urn:li:dashboard:(looker,dashboards.999999,prod-instance)"),"."),(0,t.yg)("h2",{id:"important-capabilities"},"Important Capabilities"),(0,t.yg)("h3",{id:"dashboard-information-and-metadata"},"Dashboard Information and Metadata"),(0,t.yg)("p",null,"The core metadata about a dashboard is stored in the ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo")," aspect. This includes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Title"),": The display name of the dashboard (searchable, auto-complete enabled)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Description"),": A detailed description of what the dashboard shows"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Dashboard URL"),": A link to view the dashboard in its native platform"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Access Level"),": The access level of the dashboard (PUBLIC or PRIVATE)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Last Modified"),": Audit stamps tracking when the dashboard was created, modified, or deleted"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Last Refreshed"),": Timestamp of when the dashboard data was last refreshed, including who refreshed it"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Custom Properties"),": Platform-specific metadata as key-value pairs")),(0,t.yg)("p",null,"The following code snippet shows you how to create a dashboard with basic information."),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Create a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_create_simple.py\nfrom datahub.metadata.urns import TagUrn\nfrom datahub.sdk import Dashboard, DataHubClient\n\nclient = DataHubClient.from_env()\n\ndashboard = Dashboard(\n    name="example_dashboard",\n    platform="looker",\n    description="looker dashboard for production",\n    tags=[TagUrn(name="production"), TagUrn(name="data_engineering")],\n)\n\nclient.entities.upsert(dashboard)\n\n'))),(0,t.yg)("p",null,"For more complex dashboard creation with charts and datasets:"),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Create a dashboard with charts and datasets"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_create_complex.py\nfrom datahub.metadata.urns import TagUrn\nfrom datahub.sdk import Chart, Dashboard, DataHubClient, Dataset\n\nclient = DataHubClient.from_env()\ndashboard1 = Dashboard(\n    name="example_dashboard_2",\n    platform="looker",\n    description="looker dashboard for production",\n)\nchart = Chart(\n    name="example_chart",\n    platform="looker",\n    description="looker chart for production",\n)\n\ninput_dataset = Dataset(\n    name="example_dataset5",\n    platform="snowflake",\n    description="snowflake dataset for production",\n)\n\n\ndashboard2 = Dashboard(\n    name="example_dashboard",\n    platform="looker",\n    description="looker dashboard for production",\n    tags=[TagUrn(name="production"), TagUrn(name="data_engineering")],\n    input_datasets=[input_dataset.urn],\n    charts=[chart.urn],\n    dashboards=[dashboard1.urn],\n)\n\n\nclient.entities.upsert(dashboard1)\nclient.entities.upsert(chart)\nclient.entities.upsert(input_dataset)\n\nclient.entities.upsert(dashboard2)\n\n'))),(0,t.yg)("h3",{id:"container-relationships---charts-in-dashboards"},"Container Relationships - Charts in Dashboards"),(0,t.yg)("p",null,"Dashboards act as containers for charts. The ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo")," aspect's ",(0,t.yg)("inlineCode",{parentName:"p"},"chartEdges")," field tracks which charts belong to the dashboard, creating a hierarchical relationship:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"Dashboard (Container)\n\u251c\u2500\u2500 Chart 1 (Bar Chart)\n\u251c\u2500\u2500 Chart 2 (Pie Chart)\n\u2514\u2500\u2500 Chart 3 (Line Chart)\n")),(0,t.yg)("p",null,"Each chart edge includes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Destination URN"),": The URN of the chart"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Created"),": Audit stamps for when the chart was added"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Last Modified"),": Audit stamps for when the relationship was modified"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Properties"),": Optional custom properties for the relationship")),(0,t.yg)("p",null,"This relationship enables:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Navigation"),": Users can browse from dashboards to their constituent charts"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Dependency Tracking"),": Understanding which charts belong to which dashboards"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Metadata Propagation"),": Ownership and tags can be inherited from dashboard to charts"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Impact Analysis"),": When a dashboard is deprecated, identify all affected charts")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Add charts to a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_add_charts.py\nfrom datahub.sdk import Chart, Dashboard, DataHubClient\n\nclient = DataHubClient.from_env()\n\n# Create charts that belong to the dashboard\nchart1 = Chart(platform="looker", name="sales_by_region_chart")\nchart2 = Chart(platform="looker", name="revenue_trend_chart")\nchart3 = Chart(platform="looker", name="customer_count_chart")\n\n# Create dashboard with charts\ndashboard = Dashboard(\n    platform="looker",\n    name="sales_dashboard",\n    display_name="Sales Overview Dashboard",\n    description="Comprehensive sales analytics dashboard",\n)\n\n# Add charts to the dashboard\ndashboard.add_chart(chart1)\ndashboard.add_chart(chart2)\ndashboard.add_chart(chart3)\n\n# Upsert the dashboard (this will also create the chart relationships)\nclient.entities.upsert(dashboard)\n\n'))),(0,t.yg)("h3",{id:"data-lineage---dataset-dependencies"},"Data Lineage - Dataset Dependencies"),(0,t.yg)("p",null,"Dashboards often consume data from one or more datasets. The ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo")," aspect's ",(0,t.yg)("inlineCode",{parentName:"p"},"datasetEdges")," field tracks these relationships, creating ",(0,t.yg)("inlineCode",{parentName:"p"},"Consumes")," relationships in the metadata graph. This enables:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Impact Analysis"),": Understanding which dashboards are affected when a dataset changes"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Data Lineage Visualization"),": Showing the flow of data from source datasets through to dashboards"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Dependency Tracking"),": Identifying all upstream dependencies for a dashboard"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Compliance"),": Tracking which dashboards use sensitive or regulated data")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Add dataset lineage to a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_add_lineage.py\nfrom datahub.sdk import Dashboard, DataHubClient, Dataset\n\nclient = DataHubClient.from_env()\n\n# Define the source datasets\nsales_dataset = Dataset(platform="bigquery", name="project.dataset.sales")\ncustomer_dataset = Dataset(platform="bigquery", name="project.dataset.customers")\nproducts_dataset = Dataset(platform="bigquery", name="project.dataset.products")\n\n# Create dashboard with lineage to upstream datasets\ndashboard = Dashboard(\n    platform="looker",\n    name="sales_dashboard",\n    display_name="Sales Overview Dashboard",\n    description="Dashboard showing sales metrics across regions and products",\n)\n\n# Add dataset dependencies\ndashboard.add_input_dataset(sales_dataset)\ndashboard.add_input_dataset(customer_dataset)\ndashboard.add_input_dataset(products_dataset)\n\n# Upsert the dashboard (this will create the Consumes relationships)\nclient.entities.upsert(dashboard)\n\n'))),(0,t.yg)("h3",{id:"nested-dashboards"},"Nested Dashboards"),(0,t.yg)("p",null,"Some platforms support dashboards that contain other dashboards (e.g., PowerBI Apps that contain multiple dashboards). The ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo")," aspect's ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboards")," field tracks these nested relationships, enabling hierarchical dashboard organization:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"PowerBI App (Dashboard)\n\u251c\u2500\u2500 Sales Dashboard (Dashboard)\n\u2502   \u251c\u2500\u2500 Chart 1\n\u2502   \u2514\u2500\u2500 Chart 2\n\u2514\u2500\u2500 Marketing Dashboard (Dashboard)\n    \u251c\u2500\u2500 Chart 3\n    \u2514\u2500\u2500 Chart 4\n")),(0,t.yg)("p",null,"This is particularly useful for platforms like PowerBI where Apps act as top-level containers for multiple dashboards."),(0,t.yg)("h3",{id:"field-level-lineage"},"Field-Level Lineage"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"inputFields")," aspect (optional) provides fine-grained tracking of which specific dataset fields (columns) are referenced by the dashboard. Each input field creates a ",(0,t.yg)("inlineCode",{parentName:"p"},"consumesField")," relationship to a ",(0,t.yg)("inlineCode",{parentName:"p"},"schemaField")," entity, enabling:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Column-Level Impact Analysis"),": Understanding which dashboards use a specific column"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Data Sensitivity Tracking"),": Identifying dashboards that display sensitive fields"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Schema Change Impact"),": Predicting the effect of schema changes on dashboards")),(0,t.yg)("h3",{id:"editable-properties"},"Editable Properties"),(0,t.yg)("p",null,"DataHub separates metadata that comes from ingestion sources (in ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo"),") from metadata that users edit in the DataHub UI (in ",(0,t.yg)("inlineCode",{parentName:"p"},"editableDashboardProperties"),"). This separation ensures that:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"User edits are preserved across ingestion runs"),(0,t.yg)("li",{parentName:"ul"},"Source system metadata remains authoritative for its fields"),(0,t.yg)("li",{parentName:"ul"},"Users can enhance metadata without interfering with automated ingestion")),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"editableDashboardProperties")," aspect currently supports:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Description"),": A user-provided description that supplements or overrides the ingested description")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Update editable dashboard properties"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_update_editable.py\nimport datahub.metadata.schema_classes as models\nfrom datahub.sdk import DashboardUrn, DataHubClient\n\nclient = DataHubClient.from_env()\n\ndashboard_urn = DashboardUrn("looker", "dashboards.999999")\n\ndashboard = client.entities.get(dashboard_urn)\n\ncurrent_editable = dashboard._get_aspect(models.EditableDashboardPropertiesClass)\n\nif current_editable:\n    current_editable.description = "Updated description added via DataHub UI"\nelse:\n    current_editable = models.EditableDashboardPropertiesClass(\n        description="Updated description added via DataHub UI"\n    )\n    dashboard._set_aspect(current_editable)\n\nclient.entities.update(dashboard)\nprint(f"Updated editable properties for dashboard {dashboard_urn}")\n\n'))),(0,t.yg)("h3",{id:"tags-and-glossary-terms"},"Tags and Glossary Terms"),(0,t.yg)("p",null,"Dashboards can have Tags or Terms attached to them. Read ",(0,t.yg)("a",{parentName:"p",href:"https://medium.com/datahub-project/tags-and-terms-two-powerful-datahub-features-used-in-two-different-scenarios-b5b4791e892e"},"this blog")," to understand the difference between tags and terms."),(0,t.yg)("h4",{id:"adding-tags-to-a-dashboard"},"Adding Tags to a Dashboard"),(0,t.yg)("p",null,"Tags are added to dashboards using the ",(0,t.yg)("inlineCode",{parentName:"p"},"globalTags")," aspect."),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Add a tag to a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_add_tag.py\nfrom datahub.sdk import DashboardUrn, DataHubClient, TagUrn\n\nclient = DataHubClient.from_env()\n\ndashboard = client.entities.get(DashboardUrn("looker", "dashboards.999999"))\n\ndashboard.add_tag(TagUrn("Production"))\n\nclient.entities.update(dashboard)\n\nprint(f"Added tag {TagUrn(\'Production\')} to dashboard {dashboard.urn}")\n\n'))),(0,t.yg)("h4",{id:"adding-glossary-terms-to-a-dashboard"},"Adding Glossary Terms to a Dashboard"),(0,t.yg)("p",null,"Glossary terms are added using the ",(0,t.yg)("inlineCode",{parentName:"p"},"glossaryTerms")," aspect."),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Add a glossary term to a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_add_term.py\nfrom datahub.metadata.urns import GlossaryTermUrn\nfrom datahub.sdk import DashboardUrn, DataHubClient\n\nclient = DataHubClient.from_env()\n\ndashboard = client.entities.get(DashboardUrn("looker", "dashboards.999999"))\n\ndashboard.add_term(GlossaryTermUrn("SalesMetrics"))\n\nclient.entities.update(dashboard)\n\nprint(f"Added term {GlossaryTermUrn(\'SalesMetrics\')} to dashboard {dashboard.urn}")\n\n'))),(0,t.yg)("h3",{id:"ownership"},"Ownership"),(0,t.yg)("p",null,"Ownership is associated with a dashboard using the ",(0,t.yg)("inlineCode",{parentName:"p"},"ownership")," aspect. Owners can be of different types such as ",(0,t.yg)("inlineCode",{parentName:"p"},"DATAOWNER"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"TECHNICAL_OWNER"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"BUSINESS_OWNER"),", etc. Ownership can be inherited from source systems or added in DataHub."),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Add an owner to a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_add_owner.py\nfrom datahub.sdk import CorpUserUrn, DashboardUrn, DataHubClient\n\nclient = DataHubClient.from_env()\n\ndashboard = client.entities.get(DashboardUrn("looker", "dashboards.999999"))\n\ndashboard.add_owner(CorpUserUrn("jdoe"))\n\nclient.entities.update(dashboard)\n\nprint(f"Added owner {CorpUserUrn(\'jdoe\')} to dashboard {dashboard.urn}")\n\n'))),(0,t.yg)("h3",{id:"usage-statistics"},"Usage Statistics"),(0,t.yg)("p",null,"Dashboards can track usage metrics through the ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardUsageStatistics")," aspect (experimental). This timeseries aspect captures:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Views Count"),": Total number of times the dashboard has been viewed"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Executions Count"),": Number of times the dashboard has been refreshed or synced"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Unique User Count"),": Number of distinct users who viewed the dashboard"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Per-User Counts"),": Detailed usage breakdown by individual users"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Favorites Count"),": Number of users who favorited the dashboard"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Last Viewed At"),": Timestamp of the most recent view"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Event Granularity"),": Bucketing for statistics (daily, hourly)")),(0,t.yg)("p",null,"Usage statistics help identify:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Popular dashboards that might need performance optimization"),(0,t.yg)("li",{parentName:"ul"},"Unused dashboards that could be deprecated"),(0,t.yg)("li",{parentName:"ul"},"User engagement patterns"),(0,t.yg)("li",{parentName:"ul"},"Dashboard adoption metrics")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Python SDK: Add usage statistics to a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/dashboard_usage.py\nfrom datetime import datetime\nfrom typing import List\n\nimport datahub.metadata.schema_classes as models\nfrom datahub.metadata.urns import CorpUserUrn\nfrom datahub.sdk import DataHubClient\nfrom datahub.sdk.dashboard import Dashboard\n\nclient = DataHubClient.from_env()\n\n# Day 1: User activity and absolute usage statistics\nusage_day_1_user_counts: List[models.DashboardUserUsageCountsClass] = [\n    models.DashboardUserUsageCountsClass(\n        user=str(CorpUserUrn("user1")),\n        executionsCount=3,\n        usageCount=3,\n    ),\n    models.DashboardUserUsageCountsClass(\n        user=str(CorpUserUrn("user2")),\n        executionsCount=2,\n        usageCount=2,\n    ),\n]\n\nusage_day_1_stats = models.DashboardUsageStatisticsClass(\n    timestampMillis=round(\n        datetime.strptime("2022-02-09", "%Y-%m-%d").timestamp() * 1000\n    ),\n    eventGranularity=models.TimeWindowSizeClass(unit=models.CalendarIntervalClass.DAY),\n    uniqueUserCount=2,\n    executionsCount=5,\n    userCounts=usage_day_1_user_counts,\n)\n\nabsolute_usage_day_1_stats = models.DashboardUsageStatisticsClass(\n    timestampMillis=round(\n        datetime.strptime("2022-02-09", "%Y-%m-%d").timestamp() * 1000\n    ),\n    favoritesCount=100,\n    viewsCount=25,\n    lastViewedAt=round(\n        datetime.strptime("2022-02-09 04:45:30", "%Y-%m-%d %H:%M:%S").timestamp() * 1000\n    ),\n)\n\ndashboard = Dashboard(\n    platform="looker",\n    name="dashboards.999999",\n    extra_aspects=[usage_day_1_stats, absolute_usage_day_1_stats],\n)\n\nclient.entities.update(dashboard)\n\n# Day 2: Updated user activity and absolute usage statistics\nusage_day_2_user_counts: List[models.DashboardUserUsageCountsClass] = [\n    models.DashboardUserUsageCountsClass(\n        user=str(CorpUserUrn("user1")),\n        executionsCount=4,\n        usageCount=4,\n    ),\n    models.DashboardUserUsageCountsClass(\n        user=str(CorpUserUrn("user2")),\n        executionsCount=6,\n        usageCount=6,\n    ),\n]\n\nusage_day_2_stats = models.DashboardUsageStatisticsClass(\n    timestampMillis=round(\n        datetime.strptime("2022-02-10", "%Y-%m-%d").timestamp() * 1000\n    ),\n    eventGranularity=models.TimeWindowSizeClass(unit=models.CalendarIntervalClass.DAY),\n    uniqueUserCount=2,\n    executionsCount=10,\n    userCounts=usage_day_2_user_counts,\n)\n\nabsolute_usage_day_2_stats = models.DashboardUsageStatisticsClass(\n    timestampMillis=round(\n        datetime.strptime("2022-02-10", "%Y-%m-%d").timestamp() * 1000\n    ),\n    favoritesCount=100,\n    viewsCount=27,\n    lastViewedAt=round(\n        datetime.strptime("2022-02-10 10:45:30", "%Y-%m-%d %H:%M:%S").timestamp() * 1000\n    ),\n)\n\ndashboard = Dashboard(\n    platform="looker",\n    name="dashboards.999999",\n    extra_aspects=[usage_day_2_stats, absolute_usage_day_2_stats],\n)\n\nclient.entities.update(dashboard)\n\n# Day 3: Single user activity and absolute usage statistics\nusage_day_3_user_counts: List[models.DashboardUserUsageCountsClass] = [\n    models.DashboardUserUsageCountsClass(\n        user=str(CorpUserUrn("user1")),\n        executionsCount=2,\n        usageCount=2,\n    ),\n]\n\nusage_day_3_stats = models.DashboardUsageStatisticsClass(\n    timestampMillis=round(\n        datetime.strptime("2022-02-11", "%Y-%m-%d").timestamp() * 1000\n    ),\n    eventGranularity=models.TimeWindowSizeClass(unit=models.CalendarIntervalClass.DAY),\n    uniqueUserCount=1,\n    executionsCount=2,\n    userCounts=usage_day_3_user_counts,\n)\n\nabsolute_usage_day_3_stats = models.DashboardUsageStatisticsClass(\n    timestampMillis=round(\n        datetime.strptime("2022-02-11", "%Y-%m-%d").timestamp() * 1000\n    ),\n    favoritesCount=102,\n    viewsCount=30,\n    lastViewedAt=round(\n        datetime.strptime("2022-02-11 02:45:30", "%Y-%m-%d %H:%M:%S").timestamp() * 1000\n    ),\n)\n\ndashboard = Dashboard(\n    platform="looker",\n    name="dashboards.999999",\n    extra_aspects=[usage_day_3_stats, absolute_usage_day_3_stats],\n)\n\nclient.entities.update(dashboard)\n\n'))),(0,t.yg)("h3",{id:"organizational-context"},"Organizational Context"),(0,t.yg)("h4",{id:"domains"},"Domains"),(0,t.yg)("p",null,"Dashboards can be organized into Domains (business areas or data products) using the ",(0,t.yg)("inlineCode",{parentName:"p"},"domains")," aspect. This helps with:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Organizing dashboards by business function"),(0,t.yg)("li",{parentName:"ul"},"Access control and governance"),(0,t.yg)("li",{parentName:"ul"},"Discovery by domain experts")),(0,t.yg)("h4",{id:"container-hierarchy"},"Container Hierarchy"),(0,t.yg)("p",null,"Dashboards can belong to higher-level containers (e.g., a Tableau project or PowerBI workspace). The ",(0,t.yg)("inlineCode",{parentName:"p"},"container")," aspect tracks this relationship, creating a hierarchical structure:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"Tableau Project (Container)\n\u251c\u2500\u2500 Sales Dashboard\n\u251c\u2500\u2500 Marketing Dashboard\n\u2514\u2500\u2500 Finance Dashboard\n")),(0,t.yg)("p",null,"This hierarchy is important for:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Navigating related dashboards"),(0,t.yg)("li",{parentName:"ul"},"Understanding organizational structure"),(0,t.yg)("li",{parentName:"ul"},"Propagating metadata (like ownership) from container to dashboards")),(0,t.yg)("h3",{id:"embedding-and-external-urls"},"Embedding and External URLs"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"embed")," aspect stores URLs that allow embedding the dashboard in external applications or viewing it in its native platform. The ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardUrl")," field in ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo")," provides a direct link to the dashboard. This supports:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Embedding dashboards in wikis or documentation"),(0,t.yg)("li",{parentName:"ul"},"Deep linking to the dashboard in the BI tool"),(0,t.yg)("li",{parentName:"ul"},"Integration with external portals")),(0,t.yg)("h3",{id:"dashboard-subtypes"},"Dashboard Subtypes"),(0,t.yg)("p",null,"Dashboards from different platforms may have platform-specific subtypes defined in the ",(0,t.yg)("inlineCode",{parentName:"p"},"subTypes")," aspect. Examples include:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"PowerBI"),": ",(0,t.yg)("inlineCode",{parentName:"li"},"PowerBI App")," (a container for multiple PowerBI dashboards)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Looker"),": Different Looker dashboard types"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Tableau"),": Workbook types")),(0,t.yg)("p",null,"Subtypes help users understand the platform-specific nature of the dashboard."),(0,t.yg)("h2",{id:"integration-with-external-systems"},"Integration with External Systems"),(0,t.yg)("h3",{id:"ingestion-from-bi-platforms"},"Ingestion from BI Platforms"),(0,t.yg)("p",null,"Dashboards are typically ingested automatically from BI platforms using DataHub's ingestion connectors:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Looker"),": Ingests dashboards and their elements (charts/looks)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Tableau"),": Ingests dashboards (workbooks) and their sheets"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"PowerBI"),": Ingests reports and apps (which can contain multiple dashboards)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Superset"),": Ingests dashboards with their charts"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Mode"),": Ingests reports (dashboards) and queries"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Grafana"),": Ingests dashboards with their panels")),(0,t.yg)("p",null,"Each connector maps platform-specific dashboard metadata to DataHub's standardized dashboard model, including:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Dashboard title, description, and URL"),(0,t.yg)("li",{parentName:"ul"},"Container relationships (charts within dashboards)"),(0,t.yg)("li",{parentName:"ul"},"Dataset dependencies (lineage)"),(0,t.yg)("li",{parentName:"ul"},"Ownership information"),(0,t.yg)("li",{parentName:"ul"},"Custom platform-specific properties")),(0,t.yg)("h3",{id:"querying-dashboard-information"},"Querying Dashboard Information"),(0,t.yg)("p",null,"You can retrieve dashboard information using DataHub's REST API:"),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Fetch dashboard entity snapshot"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl 'http://localhost:8080/entities/urn%3Ali%3Adashboard%3A(looker,dashboards.999999)'\n")),(0,t.yg)("p",null,"The response includes all aspects of the dashboard, including:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Dashboard information (title, description, URL)"),(0,t.yg)("li",{parentName:"ul"},"Charts contained in the dashboard"),(0,t.yg)("li",{parentName:"ul"},"Datasets consumed by the dashboard"),(0,t.yg)("li",{parentName:"ul"},"Ownership, tags, and terms"),(0,t.yg)("li",{parentName:"ul"},"Usage statistics"),(0,t.yg)("li",{parentName:"ul"},"And all other configured aspects"))),(0,t.yg)("h3",{id:"relationships-api"},"Relationships API"),(0,t.yg)("p",null,"You can query dashboard relationships to understand its connections to other entities:"),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Find charts contained in a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl 'http://localhost:8080/relationships?direction=OUTGOING&urn=urn%3Ali%3Adashboard%3A(looker,dashboards.999999)&types=Contains'\n")),(0,t.yg)("p",null,"This returns all charts that belong to this dashboard.")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Find datasets consumed by a dashboard"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl 'http://localhost:8080/relationships?direction=OUTGOING&urn=urn%3Ali%3Adashboard%3A(looker,dashboards.999999)&types=Consumes'\n")),(0,t.yg)("p",null,"This returns all datasets that this dashboard depends on.")),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Find which dashboards contain a specific chart"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl 'http://localhost:8080/relationships?direction=INCOMING&urn=urn%3Ali%3Achart%3A(looker,look%2F1234)&types=Contains'\n")),(0,t.yg)("p",null,"This returns all dashboards that contain the specified chart.")),(0,t.yg)("h2",{id:"graphql-api"},"GraphQL API"),(0,t.yg)("p",null,"Dashboards are fully supported in DataHub's GraphQL API, which provides:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Queries"),": Search, browse, and retrieve dashboards"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Mutations"),": Create, update, and delete dashboards"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Faceted Search"),": Filter dashboards by tool, access level, and other attributes"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Lineage Queries"),": Traverse upstream (datasets) and downstream relationships"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Batch Loading"),": Efficiently load multiple dashboards"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Usage Statistics"),": Query dashboard usage metrics")),(0,t.yg)("p",null,"The GraphQL ",(0,t.yg)("inlineCode",{parentName:"p"},"Dashboard")," type includes all standard metadata fields plus dashboard-specific properties like charts, datasets, and usage statistics."),(0,t.yg)("h2",{id:"notable-exceptions"},"Notable Exceptions"),(0,t.yg)("h3",{id:"platform-specific-variations"},"Platform-Specific Variations"),(0,t.yg)("p",null,"Different BI platforms have different concepts that map to dashboards:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Tableau"),': A Tableau "workbook" maps to a DataHub dashboard entity. A workbook contains multiple "sheets" (charts). Tableau also has "dashboards" within workbooks that are collections of sheets - these are also modeled as dashboard entities in DataHub.')),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"PowerBI"),': PowerBI has "reports" (which map to dashboards) and "apps" (which are containers for multiple reports). Apps are also modeled as dashboards but with a subtype distinguishing them.')),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Looker"),': Looker dashboards contain "elements" which can be charts, looks, or text elements. Each visual element becomes a chart in DataHub.')),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},"Superset"),': Superset dashboards contain "slices" (charts). The relationship is straightforward dashboard-to-chart.'))),(0,t.yg)("h3",{id:"deprecated-fields"},"Deprecated Fields"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo.charts")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo.datasets")," fields are deprecated in favor of ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo.chartEdges")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"dashboardInfo.datasetEdges"),". The ",(0,t.yg)("inlineCode",{parentName:"p"},"Edges")," versions provide richer relationship metadata including timestamps and actors for when relationships were created or modified."),(0,t.yg)("h3",{id:"container-vs-parent"},"Container vs Parent"),(0,t.yg)("p",null,"Dashboards serve dual roles:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"They are ",(0,t.yg)("strong",{parentName:"li"},"containers")," for charts (via ",(0,t.yg)("inlineCode",{parentName:"li"},"chartEdges"),")"),(0,t.yg)("li",{parentName:"ul"},"They can have ",(0,t.yg)("strong",{parentName:"li"},"parent containers")," themselves (e.g., a Tableau project or PowerBI workspace)")),(0,t.yg)("p",null,"This two-level hierarchy is important for understanding organizational structure."),(0,t.yg)("h2",{id:"related-entities"},"Related Entities"),(0,t.yg)("p",null,"Dashboards frequently interact with these other DataHub entities:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Chart"),": Dashboards contain charts (visual elements)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Dataset"),": Dashboards consume data from datasets"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"SchemaField"),": Dashboards may reference specific fields/columns through field-level lineage"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"DataPlatform"),": Dashboards are associated with a specific BI platform"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Container"),": Dashboards can belong to higher-level containers (projects, workspaces)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Domain"),": Dashboards can be organized into business domains"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"GlossaryTerm"),": Dashboards can be annotated with business terms"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Tag"),": Dashboards can be tagged for classification and discovery"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"CorpUser / CorpGroup"),": Dashboards have owners and are used by users")),(0,t.yg)("h2",{id:"technical-reference-guide"},"Technical Reference Guide"),(0,t.yg)("p",null,"The sections above provide an overview of how to use this entity. The following sections provide detailed technical information about how metadata is stored and represented in DataHub."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Aspects")," are the individual pieces of metadata that can be attached to an entity. Each aspect contains specific information (like ownership, tags, or properties) and is stored as a separate record, allowing for flexible and incremental metadata updates."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Relationships")," show how this entity connects to other entities in the metadata graph. These connections are derived from the fields within each aspect and form the foundation of DataHub's knowledge graph."),(0,t.yg)("h3",{id:"reading-the-field-tables"},"Reading the Field Tables"),(0,t.yg)("p",null,"Each aspect's field table includes an ",(0,t.yg)("strong",{parentName:"p"},"Annotations")," column that provides additional metadata about how fields are used:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"\u26a0\ufe0f Deprecated"),": This field is deprecated and may be removed in a future version. Check the description for the recommended alternative"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Searchable"),": This field is indexed and can be searched in DataHub's search interface"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Searchable (fieldname)"),": When the field name in parentheses is shown, it indicates the field is indexed under a different name in the search index. For example, ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardTool")," is indexed as ",(0,t.yg)("inlineCode",{parentName:"li"},"tool")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"\u2192 RelationshipName"),": This field creates a relationship to another entity. The arrow indicates this field contains a reference (URN) to another entity, and the name indicates the type of relationship (e.g., ",(0,t.yg)("inlineCode",{parentName:"li"},"\u2192 Contains"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"\u2192 OwnedBy"),")")),(0,t.yg)("p",null,"Fields with complex types (like ",(0,t.yg)("inlineCode",{parentName:"p"},"Edge"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"AuditStamp"),") link to their definitions in the ",(0,t.yg)("a",{parentName:"p",href:"#common-types"},"Common Types")," section below."),(0,t.yg)("h3",{id:"aspects"},"Aspects"),(0,t.yg)("h4",{id:"dashboardkey"},"dashboardKey"),(0,t.yg)("p",null,"Key for a Dashboard"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"dashboardTool"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The name of the dashboard tool such as looker, redash etc."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable (tool)")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"dashboardId"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Unique id for the dashboard. This id should be globally unique for a dashboarding tool even when ..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dashboardKey"\n  },\n  "name": "DashboardKey",\n  "namespace": "com.linkedin.metadata.key",\n  "fields": [\n    {\n      "Searchable": {\n        "boostScore": 4.0,\n        "fieldName": "tool",\n        "fieldType": "TEXT_PARTIAL"\n      },\n      "type": "string",\n      "name": "dashboardTool",\n      "doc": "The name of the dashboard tool such as looker, redash etc."\n    },\n    {\n      "type": "string",\n      "name": "dashboardId",\n      "doc": "Unique id for the dashboard. This id should be globally unique for a dashboarding tool even when there are multiple deployments of it. As an example, dashboard URL could be used here for Looker such as \'looker.linkedin.com/dashboards/1234\'"\n    }\n  ],\n  "doc": "Key for a Dashboard"\n}\n')))),(0,t.yg)("h4",{id:"dashboardinfo"},"dashboardInfo"),(0,t.yg)("p",null,"Information about a dashboard"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"customProperties"),(0,t.yg)("td",{parentName:"tr",align:null},"map"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"externalUrl"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"URL where the reference exist"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"title"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Title of the dashboard"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"description"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Detailed description about the dashboard"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"charts"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Charts in a dashboard Deprecated! Use chartEdges instead."),(0,t.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated, \u2192 Contains")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"chartEdges"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#edge"},"Edge"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Charts in a dashboard"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 Contains")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"datasets"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Datasets consumed by a dashboard Deprecated! Use datasetEdges instead."),(0,t.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated, \u2192 Consumes")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"datasetEdges"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#edge"},"Edge"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Datasets consumed by a dashboard"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 Consumes")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"dashboards"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#edge"},"Edge"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Dashboards included by this dashboard. Some dashboard entities (e.g. PowerBI Apps) can contain ot..."),(0,t.yg)("td",{parentName:"tr",align:null},"\u2192 DashboardContainsDashboard")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#changeauditstamps"},"ChangeAuditStamps")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Captures information about who created/last modified/deleted this dashboard and when"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"dashboardUrl"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"URL for the dashboard. This could be used as an external link on DataHub to allow users access/vi..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"access"),(0,t.yg)("td",{parentName:"tr",align:null},"AccessLevel"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Access level for the dashboard"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"lastRefreshed"),(0,t.yg)("td",{parentName:"tr",align:null},"long"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The time when this dashboard last refreshed"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dashboardInfo"\n  },\n  "name": "DashboardInfo",\n  "namespace": "com.linkedin.dashboard",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "TEXT",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "map",\n        "values": "string"\n      },\n      "name": "customProperties",\n      "default": {},\n      "doc": "Custom property bag."\n    },\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD"\n      },\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "externalUrl",\n      "default": null,\n      "doc": "URL where the reference exist"\n    },\n    {\n      "Searchable": {\n        "boostScore": 10.0,\n        "enableAutocomplete": true,\n        "fieldNameAliases": [\n          "_entityName"\n        ],\n        "fieldType": "WORD_GRAM"\n      },\n      "type": "string",\n      "name": "title",\n      "doc": "Title of the dashboard"\n    },\n    {\n      "Searchable": {\n        "fieldType": "TEXT",\n        "hasValuesFieldName": "hasDescription"\n      },\n      "type": "string",\n      "name": "description",\n      "doc": "Detailed description about the dashboard"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "chart"\n          ],\n          "isLineage": true,\n          "name": "Contains"\n        }\n      },\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "charts",\n      "default": [],\n      "doc": "Charts in a dashboard\\nDeprecated! Use chartEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "chartEdges/*/created/actor",\n          "createdOn": "chartEdges/*/created/time",\n          "entityTypes": [\n            "chart"\n          ],\n          "isLineage": true,\n          "name": "Contains",\n          "properties": "chartEdges/*/properties",\n          "updatedActor": "chartEdges/*/lastModified/actor",\n          "updatedOn": "chartEdges/*/lastModified/time"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "name": "Edge",\n            "namespace": "com.linkedin.common",\n            "fields": [\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "sourceUrn",\n                "default": null,\n                "doc": "Urn of the source of this relationship edge.\\nIf not specified, assumed to be the entity that this aspect belongs to."\n              },\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": "string",\n                "name": "destinationUrn",\n                "doc": "Urn of the destination of this relationship edge."\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "record",\n                    "name": "AuditStamp",\n                    "namespace": "com.linkedin.common",\n                    "fields": [\n                      {\n                        "type": "long",\n                        "name": "time",\n                        "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                      },\n                      {\n                        "java": {\n                          "class": "com.linkedin.common.urn.Urn"\n                        },\n                        "type": "string",\n                        "name": "actor",\n                        "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                      },\n                      {\n                        "java": {\n                          "class": "com.linkedin.common.urn.Urn"\n                        },\n                        "type": [\n                          "null",\n                          "string"\n                        ],\n                        "name": "impersonator",\n                        "default": null,\n                        "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                      },\n                      {\n                        "type": [\n                          "null",\n                          "string"\n                        ],\n                        "name": "message",\n                        "default": null,\n                        "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                      }\n                    ],\n                    "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                  }\n                ],\n                "name": "created",\n                "default": null,\n                "doc": "Audit stamp containing who created this relationship edge and when"\n              },\n              {\n                "type": [\n                  "null",\n                  "com.linkedin.common.AuditStamp"\n                ],\n                "name": "lastModified",\n                "default": null,\n                "doc": "Audit stamp containing who last modified this relationship edge and when"\n              },\n              {\n                "type": [\n                  "null",\n                  {\n                    "type": "map",\n                    "values": "string"\n                  }\n                ],\n                "name": "properties",\n                "default": null,\n                "doc": "A generic properties bag that allows us to store specific information on this graph edge."\n              }\n            ],\n            "doc": "A common structure to represent all edges to entities when used inside aspects as collections\\nThis ensures that all edges have common structure around audit-stamps and will support PATCH, time-travel automatically."\n          }\n        }\n      ],\n      "name": "chartEdges",\n      "default": null,\n      "doc": "Charts in a dashboard"\n    },\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "name": "Consumes"\n        }\n      },\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "datasets",\n      "default": [],\n      "doc": "Datasets consumed by a dashboard\\nDeprecated! Use datasetEdges instead."\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "datasetEdges/*/created/actor",\n          "createdOn": "datasetEdges/*/created/time",\n          "entityTypes": [\n            "dataset"\n          ],\n          "isLineage": true,\n          "name": "Consumes",\n          "properties": "datasetEdges/*/properties",\n          "updatedActor": "datasetEdges/*/lastModified/actor",\n          "updatedOn": "datasetEdges/*/lastModified/time"\n        }\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": "com.linkedin.common.Edge"\n        }\n      ],\n      "name": "datasetEdges",\n      "default": null,\n      "doc": "Datasets consumed by a dashboard"\n    },\n    {\n      "Relationship": {\n        "/*/destinationUrn": {\n          "createdActor": "dashboards/*/created/actor",\n          "createdOn": "dashboards/*/created/time",\n          "entityTypes": [\n            "dashboard"\n          ],\n          "isLineage": true,\n          "name": "DashboardContainsDashboard",\n          "properties": "dashboards/*/properties",\n          "updatedActor": "dashboards/*/lastModified/actor",\n          "updatedOn": "dashboards/*/lastModified/time"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.Edge"\n      },\n      "name": "dashboards",\n      "default": [],\n      "doc": "Dashboards included by this dashboard.\\nSome dashboard entities (e.g. PowerBI Apps) can contain other dashboards.\\n\\nThe Edge\'s sourceUrn should never be set, as it will always be the base dashboard."\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "ChangeAuditStamps",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "com.linkedin.common.AuditStamp",\n            "name": "created",\n            "default": {\n              "actor": "urn:li:corpuser:unknown",\n              "impersonator": null,\n              "time": 0,\n              "message": null\n            },\n            "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."\n          },\n          {\n            "type": "com.linkedin.common.AuditStamp",\n            "name": "lastModified",\n            "default": {\n              "actor": "urn:li:corpuser:unknown",\n              "impersonator": null,\n              "time": 0,\n              "message": null\n            },\n            "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."\n          },\n          {\n            "type": [\n              "null",\n              "com.linkedin.common.AuditStamp"\n            ],\n            "name": "deleted",\n            "default": null,\n            "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into various lifecycle stages, and who acted to move it into those lifecycle stages. The recommended best practice is to include this record in your record schema, and annotate its fields as @readOnly in your resource. See https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations"\n      },\n      "name": "lastModified",\n      "doc": "Captures information about who created/last modified/deleted this dashboard and when"\n    },\n    {\n      "Searchable": {\n        "fieldType": "KEYWORD"\n      },\n      "java": {\n        "class": "com.linkedin.common.url.Url",\n        "coercerClass": "com.linkedin.common.url.UrlCoercer"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "dashboardUrl",\n      "default": null,\n      "doc": "URL for the dashboard. This could be used as an external link on DataHub to allow users access/view the dashboard"\n    },\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "KEYWORD",\n        "filterNameOverride": "Access Level"\n      },\n      "type": [\n        "null",\n        {\n          "type": "enum",\n          "symbolDocs": {\n            "PRIVATE": "Private availability to certain set of users",\n            "PUBLIC": "Publicly available access level"\n          },\n          "name": "AccessLevel",\n          "namespace": "com.linkedin.common",\n          "symbols": [\n            "PUBLIC",\n            "PRIVATE"\n          ],\n          "doc": "The various access levels"\n        }\n      ],\n      "name": "access",\n      "default": null,\n      "doc": "Access level for the dashboard"\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "lastRefreshed",\n      "default": null,\n      "doc": "The time when this dashboard last refreshed"\n    }\n  ],\n  "doc": "Information about a dashboard"\n}\n')))),(0,t.yg)("h4",{id:"editabledashboardproperties"},"editableDashboardProperties"),(0,t.yg)("p",null,"Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"created"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"An AuditStamp corresponding to the last modification of this resource/association/sub-resource. I..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"deleted"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically,..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"description"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Edited documentation of the dashboard"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable (editedDescription)"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "editableDashboardProperties"\n  },\n  "name": "EditableDashboardProperties",\n  "namespace": "com.linkedin.dashboard",\n  "fields": [\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "created",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data."\n    },\n    {\n      "type": "com.linkedin.common.AuditStamp",\n      "name": "lastModified",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data."\n    },\n    {\n      "type": [\n        "null",\n        "com.linkedin.common.AuditStamp"\n      ],\n      "name": "deleted",\n      "default": null,\n      "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."\n    },\n    {\n      "Searchable": {\n        "fieldName": "editedDescription",\n        "fieldType": "TEXT"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "description",\n      "default": null,\n      "doc": "Edited documentation of the dashboard"\n    }\n  ],\n  "doc": "Stores editable changes made to properties. This separates changes made from\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"\n}\n')))),(0,t.yg)("h4",{id:"ownership-1"},"ownership"),(0,t.yg)("p",null,"Ownership information of an entity."),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"owners"),(0,t.yg)("td",{parentName:"tr",align:null},"Owner[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"List of owners of the entity."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"ownerTypes"),(0,t.yg)("td",{parentName:"tr",align:null},"map"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Ownership type to Owners map, populated via mutation hook."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"lastModified"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who last modified the record and when. A value of 0 in the time field indi..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "ownership"\n  },\n  "name": "Ownership",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "Owner",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "corpuser",\n                  "corpGroup"\n                ],\n                "name": "OwnedBy"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "owners",\n                "fieldType": "URN",\n                "filterNameOverride": "Owned By",\n                "hasValuesFieldName": "hasOwners",\n                "queryByDefault": false\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "owner",\n              "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\\n(Caveat: only corpuser is currently supported in the frontend.)"\n            },\n            {\n              "deprecated": true,\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "BUSINESS_OWNER": "A person or group who is responsible for logical, or business related, aspects of the asset.",\n                  "CONSUMER": "A person, group, or service that consumes the data\\nDeprecated! Use TECHNICAL_OWNER or BUSINESS_OWNER instead.",\n                  "CUSTOM": "Set when ownership type is unknown or a when new one is specified as an ownership type entity for which we have no\\nenum value for. This is used for backwards compatibility",\n                  "DATAOWNER": "A person or group that is owning the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DATA_STEWARD": "A steward, expert, or delegate responsible for the asset.",\n                  "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "DEVELOPER": "A person or group that is in charge of developing the code\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "NONE": "No specific type associated to the owner.",\n                  "PRODUCER": "A person, group, or service that produces/generates the data\\nDeprecated! Use TECHNICAL_OWNER instead.",\n                  "STAKEHOLDER": "A person or a group that has direct business interest\\nDeprecated! Use TECHNICAL_OWNER, BUSINESS_OWNER, or STEWARD instead.",\n                  "TECHNICAL_OWNER": "person or group who is responsible for technical aspects of the asset."\n                },\n                "deprecatedSymbols": {\n                  "CONSUMER": true,\n                  "DATAOWNER": true,\n                  "DELEGATE": true,\n                  "DEVELOPER": true,\n                  "PRODUCER": true,\n                  "STAKEHOLDER": true\n                },\n                "name": "OwnershipType",\n                "namespace": "com.linkedin.common",\n                "symbols": [\n                  "CUSTOM",\n                  "TECHNICAL_OWNER",\n                  "BUSINESS_OWNER",\n                  "DATA_STEWARD",\n                  "NONE",\n                  "DEVELOPER",\n                  "DATAOWNER",\n                  "DELEGATE",\n                  "PRODUCER",\n                  "CONSUMER",\n                  "STAKEHOLDER"\n                ],\n                "doc": "Asset owner types"\n              },\n              "name": "type",\n              "doc": "The type of the ownership"\n            },\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "ownershipType"\n                ],\n                "name": "ownershipType"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "typeUrn",\n              "default": null,\n              "doc": "The type of the ownership\\nUrn of type O"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "OwnershipSource",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": {\n                        "type": "enum",\n                        "symbolDocs": {\n                          "AUDIT": "Auditing system or audit logs",\n                          "DATABASE": "Database, e.g. GRANTS table",\n                          "FILE_SYSTEM": "File system, e.g. file/directory owner",\n                          "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",\n                          "MANUAL": "Manually provided by a user",\n                          "OTHER": "Other sources",\n                          "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",\n                          "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"\n                        },\n                        "name": "OwnershipSourceType",\n                        "namespace": "com.linkedin.common",\n                        "symbols": [\n                          "AUDIT",\n                          "DATABASE",\n                          "FILE_SYSTEM",\n                          "ISSUE_TRACKING_SYSTEM",\n                          "MANUAL",\n                          "SERVICE",\n                          "SOURCE_CONTROL",\n                          "OTHER"\n                        ]\n                      },\n                      "name": "type",\n                      "doc": "The type of the source"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "url",\n                      "default": null,\n                      "doc": "A reference URL for the source"\n                    }\n                  ],\n                  "doc": "Source/provider of the ownership information"\n                }\n              ],\n              "name": "source",\n              "default": null,\n              "doc": "Source information for the ownership"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "ownerAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "ownerAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "ownerAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Ownership information"\n        }\n      },\n      "name": "owners",\n      "doc": "List of owners of the entity."\n    },\n    {\n      "Searchable": {\n        "/*": {\n          "fieldType": "MAP_ARRAY",\n          "queryByDefault": false\n        }\n      },\n      "type": [\n        {\n          "type": "map",\n          "values": {\n            "type": "array",\n            "items": "string"\n          }\n        },\n        "null"\n      ],\n      "name": "ownerTypes",\n      "default": {},\n      "doc": "Ownership type to Owners map, populated via mutation hook."\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "lastModified",\n      "default": {\n        "actor": "urn:li:corpuser:unknown",\n        "impersonator": null,\n        "time": 0,\n        "message": null\n      },\n      "doc": "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data."\n    }\n  ],\n  "doc": "Ownership information of an entity."\n}\n')))),(0,t.yg)("h4",{id:"status"},"status"),(0,t.yg)("p",null,"The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally."),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"removed"),(0,t.yg)("td",{parentName:"tr",align:null},"boolean"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Whether the entity has been removed (soft-deleted)."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "status"\n  },\n  "name": "Status",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "fieldType": "BOOLEAN"\n      },\n      "type": "boolean",\n      "name": "removed",\n      "default": false,\n      "doc": "Whether the entity has been removed (soft-deleted)."\n    }\n  ],\n  "doc": "The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\\nThis aspect is used to represent soft deletes conventionally."\n}\n')))),(0,t.yg)("h4",{id:"globaltags"},"globalTags"),(0,t.yg)("p",null,"Tag aspect used for applying tags to an entity"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"tags"),(0,t.yg)("td",{parentName:"tr",align:null},"TagAssociation[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Tags associated with a given entity"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 TaggedWith"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "globalTags"\n  },\n  "name": "GlobalTags",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/tag": {\n          "entityTypes": [\n            "tag"\n          ],\n          "name": "TaggedWith"\n        }\n      },\n      "Searchable": {\n        "/*/tag": {\n          "addToFilters": true,\n          "boostScore": 0.5,\n          "fieldName": "tags",\n          "fieldType": "URN",\n          "filterNameOverride": "Tag",\n          "hasValuesFieldName": "hasTags",\n          "queryByDefault": true\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TagAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.TagUrn"\n              },\n              "type": "string",\n              "name": "tag",\n              "doc": "Urn of the applied tag"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "tagAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "tagAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "tagAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters."\n        }\n      },\n      "name": "tags",\n      "doc": "Tags associated with a given entity"\n    }\n  ],\n  "doc": "Tag aspect used for applying tags to an entity"\n}\n')))),(0,t.yg)("h4",{id:"browsepaths"},"browsePaths"),(0,t.yg)("p",null,"Shared aspect containing Browse Paths to be indexed for an entity."),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"paths"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"A list of valid browse paths for the entity.  Browse paths are expected to be forward slash-separ..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "browsePaths"\n  },\n  "name": "BrowsePaths",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "fieldName": "browsePaths",\n          "fieldType": "BROWSE_PATH"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "paths",\n      "doc": "A list of valid browse paths for the entity.\\n\\nBrowse paths are expected to be forward slash-separated strings. For example: \'prod/snowflake/datasetName\'"\n    }\n  ],\n  "doc": "Shared aspect containing Browse Paths to be indexed for an entity."\n}\n')))),(0,t.yg)("h4",{id:"glossaryterms"},"glossaryTerms"),(0,t.yg)("p",null,"Related business terms information"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"terms"),(0,t.yg)("td",{parentName:"tr",align:null},"GlossaryTermAssociation[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The related business terms"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"auditStamp"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#auditstamp"},"AuditStamp")),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Audit stamp containing who reported the related business term"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "glossaryTerms"\n  },\n  "name": "GlossaryTerms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "GlossaryTermAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "glossaryTerm"\n                ],\n                "name": "TermedWith"\n              },\n              "Searchable": {\n                "addToFilters": true,\n                "fieldName": "glossaryTerms",\n                "fieldType": "URN",\n                "filterNameOverride": "Glossary Term",\n                "hasValuesFieldName": "hasGlossaryTerms",\n                "includeSystemModifiedAt": true,\n                "systemModifiedAtFieldName": "termsModifiedAt"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.GlossaryTermUrn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied glossary term"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "actor",\n              "default": null,\n              "doc": "The user URN which will be credited for adding associating this term to the entity"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "context",\n              "default": null,\n              "doc": "Additional context about the association"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "termAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "termAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "termAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ],\n          "doc": "Properties of an applied glossary term."\n        }\n      },\n      "name": "terms",\n      "doc": "The related business terms"\n    },\n    {\n      "type": {\n        "type": "record",\n        "name": "AuditStamp",\n        "namespace": "com.linkedin.common",\n        "fields": [\n          {\n            "type": "long",\n            "name": "time",\n            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": "string",\n            "name": "actor",\n            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n          },\n          {\n            "java": {\n              "class": "com.linkedin.common.urn.Urn"\n            },\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "impersonator",\n            "default": null,\n            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n          },\n          {\n            "type": [\n              "null",\n              "string"\n            ],\n            "name": "message",\n            "default": null,\n            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n          }\n        ],\n        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n      },\n      "name": "auditStamp",\n      "doc": "Audit stamp containing who reported the related business term"\n    }\n  ],\n  "doc": "Related business terms information"\n}\n')))),(0,t.yg)("h4",{id:"institutionalmemory"},"institutionalMemory"),(0,t.yg)("p",null,"Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"elements"),(0,t.yg)("td",{parentName:"tr",align:null},"InstitutionalMemoryMetadata[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"List of records that represent institutional memory of an entity. Each record consists of a link,..."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "institutionalMemory"\n  },\n  "name": "InstitutionalMemory",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "InstitutionalMemoryMetadata",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.url.Url",\n                "coercerClass": "com.linkedin.common.url.UrlCoercer"\n              },\n              "type": "string",\n              "name": "url",\n              "doc": "Link to an engineering design document or a wiki page."\n            },\n            {\n              "type": "string",\n              "name": "description",\n              "doc": "Description of the link."\n            },\n            {\n              "type": {\n                "type": "record",\n                "name": "AuditStamp",\n                "namespace": "com.linkedin.common",\n                "fields": [\n                  {\n                    "type": "long",\n                    "name": "time",\n                    "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": "string",\n                    "name": "actor",\n                    "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                  },\n                  {\n                    "java": {\n                      "class": "com.linkedin.common.urn.Urn"\n                    },\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "impersonator",\n                    "default": null,\n                    "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                  },\n                  {\n                    "type": [\n                      "null",\n                      "string"\n                    ],\n                    "name": "message",\n                    "default": null,\n                    "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                  }\n                ],\n                "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n              },\n              "name": "createStamp",\n              "doc": "Audit stamp associated with creation of this record"\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "updateStamp",\n              "default": null,\n              "doc": "Audit stamp associated with updation of this record"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "InstitutionalMemoryMetadataSettings",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "boolean",\n                      "name": "showInAssetPreview",\n                      "default": false,\n                      "doc": "Show record in asset preview like on entity header and search previews"\n                    }\n                  ],\n                  "doc": "Settings related to a record of InstitutionalMemoryMetadata"\n                }\n              ],\n              "name": "settings",\n              "default": null,\n              "doc": "Settings for this record"\n            }\n          ],\n          "doc": "Metadata corresponding to a record of institutional memory."\n        }\n      },\n      "name": "elements",\n      "doc": "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."\n    }\n  ],\n  "doc": "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."\n}\n')))),(0,t.yg)("h4",{id:"dataplatforminstance"},"dataPlatformInstance"),(0,t.yg)("p",null,"The specific instance of the data platform that this entity belongs to"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"platform"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Data Platform"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"instance"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Instance of the data platform (e.g. db instance)"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable (platformInstance)"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dataPlatformInstance"\n  },\n  "name": "DataPlatformInstance",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "URN",\n        "filterNameOverride": "Platform"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "platform",\n      "doc": "Data Platform"\n    },\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldName": "platformInstance",\n        "fieldType": "URN",\n        "filterNameOverride": "Platform Instance"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "instance",\n      "default": null,\n      "doc": "Instance of the data platform (e.g. db instance)"\n    }\n  ],\n  "doc": "The specific instance of the data platform that this entity belongs to"\n}\n')))),(0,t.yg)("h4",{id:"browsepathsv2"},"browsePathsV2"),(0,t.yg)("p",null,"Shared aspect containing a Browse Path to be indexed for an entity."),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"path"),(0,t.yg)("td",{parentName:"tr",align:null},"BrowsePathEntry[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"A valid browse path for the entity. This field is provided by DataHub by default. This aspect is ..."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "browsePathsV2"\n  },\n  "name": "BrowsePathsV2",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/id": {\n          "fieldName": "browsePathV2",\n          "fieldType": "BROWSE_PATH_V2"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "BrowsePathEntry",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "type": "string",\n              "name": "id",\n              "doc": "The ID of the browse path entry. This is what gets stored in the index.\\nIf there\'s an urn associated with this entry, id and urn will be the same"\n            },\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "urn",\n              "default": null,\n              "doc": "Optional urn pointing to some entity in DataHub"\n            }\n          ],\n          "doc": "Represents a single level in an entity\'s browsePathV2"\n        }\n      },\n      "name": "path",\n      "doc": "A valid browse path for the entity. This field is provided by DataHub by default.\\nThis aspect is a newer version of browsePaths where we can encode more information in the path.\\nThis path is also based on containers for a given entity if it has containers.\\n\\nThis is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.\\nThese paths should not include high level info captured elsewhere ie. Platform and Environment."\n    }\n  ],\n  "doc": "Shared aspect containing a Browse Path to be indexed for an entity."\n}\n')))),(0,t.yg)("h4",{id:"domains-1"},"domains"),(0,t.yg)("p",null,"Links from an Asset to its Domains"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"domains"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The Domains attached to an Asset"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 AssociatedWith"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "domains"\n  },\n  "name": "Domains",\n  "namespace": "com.linkedin.domain",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "domain"\n          ],\n          "name": "AssociatedWith"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldName": "domains",\n          "fieldType": "URN",\n          "filterNameOverride": "Domain",\n          "hasValuesFieldName": "hasDomain"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "domains",\n      "doc": "The Domains attached to an Asset"\n    }\n  ],\n  "doc": "Links from an Asset to its Domains"\n}\n')))),(0,t.yg)("h4",{id:"applications"},"applications"),(0,t.yg)("p",null,"Links from an Asset to its Applications"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"applications"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The Applications attached to an Asset"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 AssociatedWith"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "applications"\n  },\n  "name": "Applications",\n  "namespace": "com.linkedin.application",\n  "fields": [\n    {\n      "Relationship": {\n        "/*": {\n          "entityTypes": [\n            "application"\n          ],\n          "name": "AssociatedWith"\n        }\n      },\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldName": "applications",\n          "fieldType": "URN",\n          "filterNameOverride": "Application",\n          "hasValuesFieldName": "hasApplication"\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "applications",\n      "doc": "The Applications attached to an Asset"\n    }\n  ],\n  "doc": "Links from an Asset to its Applications"\n}\n')))),(0,t.yg)("h4",{id:"container"},"container"),(0,t.yg)("p",null,"Link from an asset to its parent container"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"container"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The parent container of an asset"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsPartOf"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "container"\n  },\n  "name": "Container",\n  "namespace": "com.linkedin.container",\n  "fields": [\n    {\n      "Relationship": {\n        "entityTypes": [\n          "container"\n        ],\n        "name": "IsPartOf"\n      },\n      "Searchable": {\n        "addToFilters": true,\n        "fieldName": "container",\n        "fieldType": "URN",\n        "filterNameOverride": "Container",\n        "hasValuesFieldName": "hasContainer"\n      },\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "container",\n      "doc": "The parent container of an asset"\n    }\n  ],\n  "doc": "Link from an asset to its parent container"\n}\n')))),(0,t.yg)("h4",{id:"deprecation"},"deprecation"),(0,t.yg)("p",null,"Deprecation status of an entity"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"deprecated"),(0,t.yg)("td",{parentName:"tr",align:null},"boolean"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Whether the entity is deprecated."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"decommissionTime"),(0,t.yg)("td",{parentName:"tr",align:null},"long"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The time user plan to decommission this entity."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"note"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Additional information about the entity deprecation plan, such as the wiki, doc, RB."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"actor"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The user URN which will be credited for modifying this deprecation content."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"replacement"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "deprecation"\n  },\n  "name": "Deprecation",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "addToFilters": true,\n        "fieldType": "BOOLEAN",\n        "filterNameOverride": "Deprecated",\n        "weightsPerFieldValue": {\n          "true": 0.5\n        }\n      },\n      "type": "boolean",\n      "name": "deprecated",\n      "doc": "Whether the entity is deprecated."\n    },\n    {\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "decommissionTime",\n      "default": null,\n      "doc": "The time user plan to decommission this entity."\n    },\n    {\n      "type": "string",\n      "name": "note",\n      "doc": "Additional information about the entity deprecation plan, such as the wiki, doc, RB."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": "string",\n      "name": "actor",\n      "doc": "The user URN which will be credited for modifying this deprecation content."\n    },\n    {\n      "java": {\n        "class": "com.linkedin.common.urn.Urn"\n      },\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "replacement",\n      "default": null\n    }\n  ],\n  "doc": "Deprecation status of an entity"\n}\n')))),(0,t.yg)("h4",{id:"inputfields"},"inputFields"),(0,t.yg)("p",null,"Information about the fields a chart or dashboard references"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"fields"),(0,t.yg)("td",{parentName:"tr",align:null},"InputField[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"List of fields being referenced"),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "inputFields"\n  },\n  "name": "InputFields",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "InputField",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "Relationship": {\n                "entityTypes": [\n                  "schemaField"\n                ],\n                "name": "consumesField"\n              },\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "schemaFieldUrn",\n              "doc": "Urn of the schema being referenced for lineage purposes"\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "SchemaField",\n                  "namespace": "com.linkedin.schema",\n                  "fields": [\n                    {\n                      "Searchable": {\n                        "boostScore": 1.0,\n                        "fieldName": "fieldPaths",\n                        "fieldType": "TEXT",\n                        "queryByDefault": "true"\n                      },\n                      "type": "string",\n                      "name": "fieldPath",\n                      "doc": "Flattened name of the field. Field is computed from jsonPath field."\n                    },\n                    {\n                      "Deprecated": true,\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "jsonPath",\n                      "default": null,\n                      "doc": "Flattened name of a field in JSON Path notation."\n                    },\n                    {\n                      "type": "boolean",\n                      "name": "nullable",\n                      "default": false,\n                      "doc": "Indicates if this field is optional or nullable"\n                    },\n                    {\n                      "Searchable": {\n                        "boostScore": 0.1,\n                        "fieldName": "fieldDescriptions",\n                        "fieldType": "TEXT"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "description",\n                      "default": null,\n                      "doc": "Description"\n                    },\n                    {\n                      "Deprecated": true,\n                      "Searchable": {\n                        "boostScore": 0.2,\n                        "fieldName": "fieldLabels",\n                        "fieldType": "TEXT"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "label",\n                      "default": null,\n                      "doc": "Label of the field. Provides a more human-readable name for the field than field path. Some sources will\\nprovide this metadata but not all sources have the concept of a label. If just one string is associated with\\na field in a source, that is most likely a description.\\n\\nNote that this field is deprecated and is not surfaced in the UI."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        {\n                          "type": "record",\n                          "name": "AuditStamp",\n                          "namespace": "com.linkedin.common",\n                          "fields": [\n                            {\n                              "type": "long",\n                              "name": "time",\n                              "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                            },\n                            {\n                              "java": {\n                                "class": "com.linkedin.common.urn.Urn"\n                              },\n                              "type": "string",\n                              "name": "actor",\n                              "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                            },\n                            {\n                              "java": {\n                                "class": "com.linkedin.common.urn.Urn"\n                              },\n                              "type": [\n                                "null",\n                                "string"\n                              ],\n                              "name": "impersonator",\n                              "default": null,\n                              "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                            },\n                            {\n                              "type": [\n                                "null",\n                                "string"\n                              ],\n                              "name": "message",\n                              "default": null,\n                              "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                            }\n                          ],\n                          "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                        }\n                      ],\n                      "name": "created",\n                      "default": null,\n                      "doc": "An AuditStamp corresponding to the creation of this schema field."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "com.linkedin.common.AuditStamp"\n                      ],\n                      "name": "lastModified",\n                      "default": null,\n                      "doc": "An AuditStamp corresponding to the last modification of this schema field."\n                    },\n                    {\n                      "type": {\n                        "type": "record",\n                        "name": "SchemaFieldDataType",\n                        "namespace": "com.linkedin.schema",\n                        "fields": [\n                          {\n                            "type": [\n                              {\n                                "type": "record",\n                                "name": "BooleanType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Boolean field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "FixedType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Fixed field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "StringType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "String field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "BytesType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Bytes field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "NumberType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Number data type: long, integer, short, etc.."\n                              },\n                              {\n                                "type": "record",\n                                "name": "DateType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Date field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "TimeType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Time field type. This should also be used for datetimes."\n                              },\n                              {\n                                "type": "record",\n                                "name": "EnumType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Enum field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "NullType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Null field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "MapType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [\n                                  {\n                                    "type": [\n                                      "null",\n                                      "string"\n                                    ],\n                                    "name": "keyType",\n                                    "default": null,\n                                    "doc": "Key type in a map"\n                                  },\n                                  {\n                                    "type": [\n                                      "null",\n                                      "string"\n                                    ],\n                                    "name": "valueType",\n                                    "default": null,\n                                    "doc": "Type of the value in a map"\n                                  }\n                                ],\n                                "doc": "Map field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "ArrayType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [\n                                  {\n                                    "type": [\n                                      "null",\n                                      {\n                                        "type": "array",\n                                        "items": "string"\n                                      }\n                                    ],\n                                    "name": "nestedType",\n                                    "default": null,\n                                    "doc": "List of types this array holds."\n                                  }\n                                ],\n                                "doc": "Array field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "UnionType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [\n                                  {\n                                    "type": [\n                                      "null",\n                                      {\n                                        "type": "array",\n                                        "items": "string"\n                                      }\n                                    ],\n                                    "name": "nestedTypes",\n                                    "default": null,\n                                    "doc": "List of types in union type."\n                                  }\n                                ],\n                                "doc": "Union field type."\n                              },\n                              {\n                                "type": "record",\n                                "name": "RecordType",\n                                "namespace": "com.linkedin.schema",\n                                "fields": [],\n                                "doc": "Record field type."\n                              }\n                            ],\n                            "name": "type",\n                            "doc": "Data platform specific types"\n                          }\n                        ],\n                        "doc": "Schema field data types"\n                      },\n                      "name": "type",\n                      "doc": "Platform independent field type of the field."\n                    },\n                    {\n                      "type": "string",\n                      "name": "nativeDataType",\n                      "doc": "The native type of the field in the dataset\'s platform as declared by platform schema."\n                    },\n                    {\n                      "type": "boolean",\n                      "name": "recursive",\n                      "default": false,\n                      "doc": "There are use cases when a field in type B references type A. A field in A references field of type B. In such cases, we will mark the first field as recursive."\n                    },\n                    {\n                      "Relationship": {\n                        "/tags/*/tag": {\n                          "entityTypes": [\n                            "tag"\n                          ],\n                          "name": "SchemaFieldTaggedWith"\n                        }\n                      },\n                      "Searchable": {\n                        "/tags/*/attribution/actor": {\n                          "fieldName": "fieldTagAttributionActors",\n                          "fieldType": "URN",\n                          "queryByDefault": false\n                        },\n                        "/tags/*/attribution/source": {\n                          "fieldName": "fieldTagAttributionSources",\n                          "fieldType": "URN",\n                          "queryByDefault": false\n                        },\n                        "/tags/*/attribution/time": {\n                          "fieldName": "fieldTagAttributionDates",\n                          "fieldType": "DATETIME",\n                          "queryByDefault": false\n                        },\n                        "/tags/*/tag": {\n                          "boostScore": 0.5,\n                          "fieldName": "fieldTags",\n                          "fieldType": "URN"\n                        }\n                      },\n                      "type": [\n                        "null",\n                        {\n                          "type": "record",\n                          "Aspect": {\n                            "name": "globalTags"\n                          },\n                          "name": "GlobalTags",\n                          "namespace": "com.linkedin.common",\n                          "fields": [\n                            {\n                              "Relationship": {\n                                "/*/tag": {\n                                  "entityTypes": [\n                                    "tag"\n                                  ],\n                                  "name": "TaggedWith"\n                                }\n                              },\n                              "Searchable": {\n                                "/*/tag": {\n                                  "addToFilters": true,\n                                  "boostScore": 0.5,\n                                  "fieldName": "tags",\n                                  "fieldType": "URN",\n                                  "filterNameOverride": "Tag",\n                                  "hasValuesFieldName": "hasTags",\n                                  "queryByDefault": true\n                                }\n                              },\n                              "type": {\n                                "type": "array",\n                                "items": {\n                                  "type": "record",\n                                  "name": "TagAssociation",\n                                  "namespace": "com.linkedin.common",\n                                  "fields": [\n                                    {\n                                      "java": {\n                                        "class": "com.linkedin.common.urn.TagUrn"\n                                      },\n                                      "type": "string",\n                                      "name": "tag",\n                                      "doc": "Urn of the applied tag"\n                                    },\n                                    {\n                                      "type": [\n                                        "null",\n                                        "string"\n                                      ],\n                                      "name": "context",\n                                      "default": null,\n                                      "doc": "Additional context about the association"\n                                    },\n                                    {\n                                      "Searchable": {\n                                        "/actor": {\n                                          "fieldName": "tagAttributionActors",\n                                          "fieldType": "URN",\n                                          "queryByDefault": false\n                                        },\n                                        "/source": {\n                                          "fieldName": "tagAttributionSources",\n                                          "fieldType": "URN",\n                                          "queryByDefault": false\n                                        },\n                                        "/time": {\n                                          "fieldName": "tagAttributionDates",\n                                          "fieldType": "DATETIME",\n                                          "queryByDefault": false\n                                        }\n                                      },\n                                      "type": [\n                                        "null",\n                                        {\n                                          "type": "record",\n                                          "name": "MetadataAttribution",\n                                          "namespace": "com.linkedin.common",\n                                          "fields": [\n                                            {\n                                              "type": "long",\n                                              "name": "time",\n                                              "doc": "When this metadata was updated."\n                                            },\n                                            {\n                                              "java": {\n                                                "class": "com.linkedin.common.urn.Urn"\n                                              },\n                                              "type": "string",\n                                              "name": "actor",\n                                              "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                                            },\n                                            {\n                                              "java": {\n                                                "class": "com.linkedin.common.urn.Urn"\n                                              },\n                                              "type": [\n                                                "null",\n                                                "string"\n                                              ],\n                                              "name": "source",\n                                              "default": null,\n                                              "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                                            },\n                                            {\n                                              "type": {\n                                                "type": "map",\n                                                "values": "string"\n                                              },\n                                              "name": "sourceDetail",\n                                              "default": {},\n                                              "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                                            }\n                                          ],\n                                          "doc": "Information about who, why, and how this metadata was applied"\n                                        }\n                                      ],\n                                      "name": "attribution",\n                                      "default": null,\n                                      "doc": "Information about who, why, and how this metadata was applied"\n                                    }\n                                  ],\n                                  "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters."\n                                }\n                              },\n                              "name": "tags",\n                              "doc": "Tags associated with a given entity"\n                            }\n                          ],\n                          "doc": "Tag aspect used for applying tags to an entity"\n                        }\n                      ],\n                      "name": "globalTags",\n                      "default": null,\n                      "doc": "Tags associated with the field"\n                    },\n                    {\n                      "Relationship": {\n                        "/terms/*/urn": {\n                          "entityTypes": [\n                            "glossaryTerm"\n                          ],\n                          "name": "SchemaFieldWithGlossaryTerm"\n                        }\n                      },\n                      "Searchable": {\n                        "/terms/*/attribution/actor": {\n                          "fieldName": "fieldTermAttributionActors",\n                          "fieldType": "URN",\n                          "queryByDefault": false\n                        },\n                        "/terms/*/attribution/source": {\n                          "fieldName": "fieldTermAttributionSources",\n                          "fieldType": "URN",\n                          "queryByDefault": false\n                        },\n                        "/terms/*/attribution/time": {\n                          "fieldName": "fieldTermAttributionDates",\n                          "fieldType": "DATETIME",\n                          "queryByDefault": false\n                        },\n                        "/terms/*/urn": {\n                          "boostScore": 0.5,\n                          "fieldName": "fieldGlossaryTerms",\n                          "fieldType": "URN"\n                        }\n                      },\n                      "type": [\n                        "null",\n                        {\n                          "type": "record",\n                          "Aspect": {\n                            "name": "glossaryTerms"\n                          },\n                          "name": "GlossaryTerms",\n                          "namespace": "com.linkedin.common",\n                          "fields": [\n                            {\n                              "type": {\n                                "type": "array",\n                                "items": {\n                                  "type": "record",\n                                  "name": "GlossaryTermAssociation",\n                                  "namespace": "com.linkedin.common",\n                                  "fields": [\n                                    {\n                                      "Relationship": {\n                                        "entityTypes": [\n                                          "glossaryTerm"\n                                        ],\n                                        "name": "TermedWith"\n                                      },\n                                      "Searchable": {\n                                        "addToFilters": true,\n                                        "fieldName": "glossaryTerms",\n                                        "fieldType": "URN",\n                                        "filterNameOverride": "Glossary Term",\n                                        "hasValuesFieldName": "hasGlossaryTerms",\n                                        "includeSystemModifiedAt": true,\n                                        "systemModifiedAtFieldName": "termsModifiedAt"\n                                      },\n                                      "java": {\n                                        "class": "com.linkedin.common.urn.GlossaryTermUrn"\n                                      },\n                                      "type": "string",\n                                      "name": "urn",\n                                      "doc": "Urn of the applied glossary term"\n                                    },\n                                    {\n                                      "java": {\n                                        "class": "com.linkedin.common.urn.Urn"\n                                      },\n                                      "type": [\n                                        "null",\n                                        "string"\n                                      ],\n                                      "name": "actor",\n                                      "default": null,\n                                      "doc": "The user URN which will be credited for adding associating this term to the entity"\n                                    },\n                                    {\n                                      "type": [\n                                        "null",\n                                        "string"\n                                      ],\n                                      "name": "context",\n                                      "default": null,\n                                      "doc": "Additional context about the association"\n                                    },\n                                    {\n                                      "Searchable": {\n                                        "/actor": {\n                                          "fieldName": "termAttributionActors",\n                                          "fieldType": "URN",\n                                          "queryByDefault": false\n                                        },\n                                        "/source": {\n                                          "fieldName": "termAttributionSources",\n                                          "fieldType": "URN",\n                                          "queryByDefault": false\n                                        },\n                                        "/time": {\n                                          "fieldName": "termAttributionDates",\n                                          "fieldType": "DATETIME",\n                                          "queryByDefault": false\n                                        }\n                                      },\n                                      "type": [\n                                        "null",\n                                        "com.linkedin.common.MetadataAttribution"\n                                      ],\n                                      "name": "attribution",\n                                      "default": null,\n                                      "doc": "Information about who, why, and how this metadata was applied"\n                                    }\n                                  ],\n                                  "doc": "Properties of an applied glossary term."\n                                }\n                              },\n                              "name": "terms",\n                              "doc": "The related business terms"\n                            },\n                            {\n                              "type": "com.linkedin.common.AuditStamp",\n                              "name": "auditStamp",\n                              "doc": "Audit stamp containing who reported the related business term"\n                            }\n                          ],\n                          "doc": "Related business terms information"\n                        }\n                      ],\n                      "name": "glossaryTerms",\n                      "default": null,\n                      "doc": "Glossary terms associated with the field"\n                    },\n                    {\n                      "type": "boolean",\n                      "name": "isPartOfKey",\n                      "default": false,\n                      "doc": "For schema fields that are part of complex keys, set this field to true\\nWe do this to easily distinguish between value and key fields"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "boolean"\n                      ],\n                      "name": "isPartitioningKey",\n                      "default": null,\n                      "doc": "For Datasets which are partitioned, this determines the partitioning key.\\nNote that multiple columns can be part of a partitioning key, but currently we do not support\\nrendering the ordered partitioning key."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "jsonProps",\n                      "default": null,\n                      "doc": "For schema fields that have other properties that are not modeled explicitly,\\nuse this field to serialize those properties into a JSON string"\n                    }\n                  ],\n                  "doc": "SchemaField to describe metadata related to dataset schema."\n                }\n              ],\n              "name": "schemaField",\n              "default": null,\n              "doc": "Copied version of the referenced schema field object for indexing purposes"\n            }\n          ],\n          "doc": "Information about a field a chart or dashboard references"\n        }\n      },\n      "name": "fields",\n      "doc": "List of fields being referenced"\n    }\n  ],\n  "doc": "Information about the fields a chart or dashboard references"\n}\n')))),(0,t.yg)("h4",{id:"subtypes"},"subTypes"),(0,t.yg)("p",null,"Sub Types. Use this aspect to specialize a generic Entity\ne.g. Making a Dataset also be a View or also be a LookerExplore"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"typeNames"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The names of the specific types."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "subTypes"\n  },\n  "name": "SubTypes",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*": {\n          "addToFilters": true,\n          "fieldType": "KEYWORD",\n          "filterNameOverride": "Sub Type",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "typeNames",\n      "doc": "The names of the specific types."\n    }\n  ],\n  "doc": "Sub Types. Use this aspect to specialize a generic Entity\\ne.g. Making a Dataset also be a View or also be a LookerExplore"\n}\n')))),(0,t.yg)("h4",{id:"embed"},"embed"),(0,t.yg)("p",null,"Information regarding rendering an embed for an asset."),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"renderUrl"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"An embed URL to be rendered inside of an iframe."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "embed"\n  },\n  "name": "Embed",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "renderUrl",\n      "default": null,\n      "doc": "An embed URL to be rendered inside of an iframe."\n    }\n  ],\n  "doc": "Information regarding rendering an embed for an asset."\n}\n')))),(0,t.yg)("h4",{id:"structuredproperties"},"structuredProperties"),(0,t.yg)("p",null,"Properties about an entity governed by StructuredPropertyDefinition"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"properties"),(0,t.yg)("td",{parentName:"tr",align:null},"StructuredPropertyValueAssignment[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Custom property bag."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "structuredProperties"\n  },\n  "name": "StructuredProperties",\n  "namespace": "com.linkedin.structured",\n  "fields": [\n    {\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "StructuredPropertyValueAssignment",\n          "namespace": "com.linkedin.structured",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "propertyUrn",\n              "doc": "The property that is being assigned a value."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": [\n                  "string",\n                  "double"\n                ]\n              },\n              "name": "values",\n              "doc": "The value assigned to the property."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "created",\n              "default": null,\n              "doc": "Audit stamp containing who created this relationship edge and when"\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "Audit stamp containing who last modified this relationship edge and when"\n            },\n            {\n              "Searchable": {\n                "/actor": {\n                  "fieldName": "structuredPropertyAttributionActors",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/source": {\n                  "fieldName": "structuredPropertyAttributionSources",\n                  "fieldType": "URN",\n                  "queryByDefault": false\n                },\n                "/time": {\n                  "fieldName": "structuredPropertyAttributionDates",\n                  "fieldType": "DATETIME",\n                  "queryByDefault": false\n                }\n              },\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "MetadataAttribution",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When this metadata was updated."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\\neither be a user (in case of UI edits) or the datahub system for automation."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "source",\n                      "default": null,\n                      "doc": "The DataHub source responsible for applying the associated metadata. This will only be filled out\\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn."\n                    },\n                    {\n                      "type": {\n                        "type": "map",\n                        "values": "string"\n                      },\n                      "name": "sourceDetail",\n                      "default": {},\n                      "doc": "The details associated with why this metadata was applied. For example, this could include\\nthe actual regex rule, sql statement, ingestion pipeline ID, etc."\n                    }\n                  ],\n                  "doc": "Information about who, why, and how this metadata was applied"\n                }\n              ],\n              "name": "attribution",\n              "default": null,\n              "doc": "Information about who, why, and how this metadata was applied"\n            }\n          ]\n        }\n      },\n      "name": "properties",\n      "doc": "Custom property bag."\n    }\n  ],\n  "doc": "Properties about an entity governed by StructuredPropertyDefinition"\n}\n')))),(0,t.yg)("h4",{id:"incidentssummary"},"incidentsSummary"),(0,t.yg)("p",null,"Summary related incidents on an entity."),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"resolvedIncidents"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Resolved incidents for an asset Deprecated! Use the richer resolvedIncidentsDetails instead."),(0,t.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"activeIncidents"),(0,t.yg)("td",{parentName:"tr",align:null},"string[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Active incidents for an asset Deprecated! Use the richer activeIncidentsDetails instead."),(0,t.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f Deprecated")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"resolvedIncidentDetails"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#incidentsummarydetails"},"IncidentSummaryDetails"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Summary details about the set of resolved incidents"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 ResolvedIncidents")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"activeIncidentDetails"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#incidentsummarydetails"},"IncidentSummaryDetails"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Summary details about the set of active incidents"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 ActiveIncidents"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "incidentsSummary"\n  },\n  "name": "IncidentsSummary",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "resolvedIncidents",\n      "default": [],\n      "doc": "Resolved incidents for an asset\\nDeprecated! Use the richer resolvedIncidentsDetails instead."\n    },\n    {\n      "deprecated": true,\n      "type": {\n        "type": "array",\n        "items": "string"\n      },\n      "name": "activeIncidents",\n      "default": [],\n      "doc": "Active incidents for an asset\\nDeprecated! Use the richer activeIncidentsDetails instead."\n    },\n    {\n      "Relationship": {\n        "/*/urn": {\n          "entityTypes": [\n            "incident"\n          ],\n          "name": "ResolvedIncidents"\n        }\n      },\n      "Searchable": {\n        "/*/createdAt": {\n          "fieldName": "resolvedIncidentCreatedTimes",\n          "fieldType": "DATETIME"\n        },\n        "/*/priority": {\n          "fieldName": "resolvedIncidentPriorities",\n          "fieldType": "COUNT"\n        },\n        "/*/resolvedAt": {\n          "fieldName": "resolvedIncidentResolvedTimes",\n          "fieldType": "DATETIME"\n        },\n        "/*/type": {\n          "fieldName": "resolvedIncidentTypes",\n          "fieldType": "KEYWORD"\n        },\n        "/*/urn": {\n          "fieldName": "resolvedIncidents",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasResolvedIncidents",\n          "numValuesFieldName": "numResolvedIncidents",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "IncidentSummaryDetails",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "The urn of the incident"\n            },\n            {\n              "type": "string",\n              "name": "type",\n              "doc": "The type of an incident"\n            },\n            {\n              "type": "long",\n              "name": "createdAt",\n              "doc": "The time at which the incident was raised in milliseconds since epoch."\n            },\n            {\n              "type": [\n                "null",\n                "long"\n              ],\n              "name": "resolvedAt",\n              "default": null,\n              "doc": "The time at which the incident was marked as resolved in milliseconds since epoch. Null if the incident is still active."\n            },\n            {\n              "type": [\n                "null",\n                "int"\n              ],\n              "name": "priority",\n              "default": null,\n              "doc": "The priority of the incident"\n            }\n          ],\n          "doc": "Summary statistics about incidents on an entity."\n        }\n      },\n      "name": "resolvedIncidentDetails",\n      "default": [],\n      "doc": "Summary details about the set of resolved incidents"\n    },\n    {\n      "Relationship": {\n        "/*/urn": {\n          "entityTypes": [\n            "incident"\n          ],\n          "name": "ActiveIncidents"\n        }\n      },\n      "Searchable": {\n        "/*/createdAt": {\n          "fieldName": "activeIncidentCreatedTimes",\n          "fieldType": "DATETIME"\n        },\n        "/*/priority": {\n          "fieldName": "activeIncidentPriorities",\n          "fieldType": "COUNT"\n        },\n        "/*/type": {\n          "fieldName": "activeIncidentTypes",\n          "fieldType": "KEYWORD"\n        },\n        "/*/urn": {\n          "addHasValuesToFilters": true,\n          "fieldName": "activeIncidents",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasActiveIncidents",\n          "numValuesFieldName": "numActiveIncidents",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.IncidentSummaryDetails"\n      },\n      "name": "activeIncidentDetails",\n      "default": [],\n      "doc": "Summary details about the set of active incidents"\n    }\n  ],\n  "doc": "Summary related incidents on an entity."\n}\n')))),(0,t.yg)("h4",{id:"forms"},"forms"),(0,t.yg)("p",null,"Forms that are assigned to this entity to be filled out"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"incompleteForms"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"All incomplete forms assigned to the entity."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"completedForms"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#formassociation"},"FormAssociation"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"All complete forms assigned to the entity."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"verifications"),(0,t.yg)("td",{parentName:"tr",align:null},"FormVerificationAssociation[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Verifications that have been applied to the entity via completed forms."),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "forms"\n  },\n  "name": "Forms",\n  "namespace": "com.linkedin.common",\n  "fields": [\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "incompleteFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "incompleteFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "incompleteFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "incompleteForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "urn",\n              "doc": "Urn of the applied form"\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": {\n                  "type": "record",\n                  "name": "FormPromptAssociation",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "string",\n                      "name": "id",\n                      "doc": "The id for the prompt. This must be GLOBALLY UNIQUE."\n                    },\n                    {\n                      "type": {\n                        "type": "record",\n                        "name": "AuditStamp",\n                        "namespace": "com.linkedin.common",\n                        "fields": [\n                          {\n                            "type": "long",\n                            "name": "time",\n                            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": "string",\n                            "name": "actor",\n                            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                          },\n                          {\n                            "java": {\n                              "class": "com.linkedin.common.urn.Urn"\n                            },\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "impersonator",\n                            "default": null,\n                            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                          },\n                          {\n                            "type": [\n                              "null",\n                              "string"\n                            ],\n                            "name": "message",\n                            "default": null,\n                            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                          }\n                        ],\n                        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                      },\n                      "name": "lastModified",\n                      "doc": "The last time this prompt was touched for the entity (set, unset)"\n                    },\n                    {\n                      "type": [\n                        "null",\n                        {\n                          "type": "record",\n                          "name": "FormPromptFieldAssociations",\n                          "namespace": "com.linkedin.common",\n                          "fields": [\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": {\n                                    "type": "record",\n                                    "name": "FieldFormPromptAssociation",\n                                    "namespace": "com.linkedin.common",\n                                    "fields": [\n                                      {\n                                        "type": "string",\n                                        "name": "fieldPath",\n                                        "doc": "The field path on a schema field."\n                                      },\n                                      {\n                                        "type": "com.linkedin.common.AuditStamp",\n                                        "name": "lastModified",\n                                        "doc": "The last time this prompt was touched for the field on the entity (set, unset)"\n                                      }\n                                    ],\n                                    "doc": "Information about the status of a particular prompt for a specific schema field\\non an entity."\n                                  }\n                                }\n                              ],\n                              "name": "completedFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are not yet complete for this form."\n                            },\n                            {\n                              "type": [\n                                "null",\n                                {\n                                  "type": "array",\n                                  "items": "com.linkedin.common.FieldFormPromptAssociation"\n                                }\n                              ],\n                              "name": "incompleteFieldPrompts",\n                              "default": null,\n                              "doc": "A list of field-level prompt associations that are complete for this form."\n                            }\n                          ],\n                          "doc": "Information about the field-level prompt associations on a top-level prompt association."\n                        }\n                      ],\n                      "name": "fieldAssociations",\n                      "default": null,\n                      "doc": "Optional information about the field-level prompt associations."\n                    }\n                  ],\n                  "doc": "Information about the status of a particular prompt.\\nNote that this is where we can add additional information about individual responses:\\nactor, timestamp, and the response itself."\n                }\n              },\n              "name": "incompletePrompts",\n              "default": [],\n              "doc": "A list of prompts that are not yet complete for this form."\n            },\n            {\n              "type": {\n                "type": "array",\n                "items": "com.linkedin.common.FormPromptAssociation"\n              },\n              "name": "completedPrompts",\n              "default": [],\n              "doc": "A list of prompts that have been completed for this form."\n            }\n          ],\n          "doc": "Properties of an applied form."\n        }\n      },\n      "name": "incompleteForms",\n      "doc": "All incomplete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/completedPrompts/*/id": {\n          "fieldName": "completedFormsCompletedPromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/completedPrompts/*/lastModified/time": {\n          "fieldName": "completedFormsCompletedPromptResponseTimes",\n          "fieldType": "DATETIME",\n          "queryByDefault": false\n        },\n        "/*/incompletePrompts/*/id": {\n          "fieldName": "completedFormsIncompletePromptIds",\n          "fieldType": "KEYWORD",\n          "queryByDefault": false\n        },\n        "/*/urn": {\n          "fieldName": "completedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.common.FormAssociation"\n      },\n      "name": "completedForms",\n      "doc": "All complete forms assigned to the entity."\n    },\n    {\n      "Searchable": {\n        "/*/form": {\n          "fieldName": "verifiedForms",\n          "fieldType": "URN",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "FormVerificationAssociation",\n          "namespace": "com.linkedin.common",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "form",\n              "doc": "The urn of the form that granted this verification."\n            },\n            {\n              "type": [\n                "null",\n                "com.linkedin.common.AuditStamp"\n              ],\n              "name": "lastModified",\n              "default": null,\n              "doc": "An audit stamp capturing who and when verification was applied for this form."\n            }\n          ],\n          "doc": "An association between a verification and an entity that has been granted\\nvia completion of one or more forms of type \'VERIFICATION\'."\n        }\n      },\n      "name": "verifications",\n      "default": [],\n      "doc": "Verifications that have been applied to the entity via completed forms."\n    }\n  ],\n  "doc": "Forms that are assigned to this entity to be filled out"\n}\n')))),(0,t.yg)("h4",{id:"testresults"},"testResults"),(0,t.yg)("p",null,"Information about a Test Result"),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"failing"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Results that are failing"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsFailing")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"passing"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#testresult"},"TestResult"),"[]"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"Results that are passing"),(0,t.yg)("td",{parentName:"tr",align:null},"Searchable, \u2192 IsPassing"))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "testResults"\n  },\n  "name": "TestResults",\n  "namespace": "com.linkedin.test",\n  "fields": [\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsFailing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "failingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasFailingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": {\n          "type": "record",\n          "name": "TestResult",\n          "namespace": "com.linkedin.test",\n          "fields": [\n            {\n              "java": {\n                "class": "com.linkedin.common.urn.Urn"\n              },\n              "type": "string",\n              "name": "test",\n              "doc": "The urn of the test"\n            },\n            {\n              "type": {\n                "type": "enum",\n                "symbolDocs": {\n                  "FAILURE": " The Test Failed",\n                  "SUCCESS": " The Test Succeeded"\n                },\n                "name": "TestResultType",\n                "namespace": "com.linkedin.test",\n                "symbols": [\n                  "SUCCESS",\n                  "FAILURE"\n                ]\n              },\n              "name": "type",\n              "doc": "The type of the result"\n            },\n            {\n              "type": [\n                "null",\n                "string"\n              ],\n              "name": "testDefinitionMd5",\n              "default": null,\n              "doc": "The md5 of the test definition that was used to compute this result.\\nSee TestInfo.testDefinition.md5 for more information."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "AuditStamp",\n                  "namespace": "com.linkedin.common",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "time",\n                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": "string",\n                      "name": "actor",\n                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."\n                    },\n                    {\n                      "java": {\n                        "class": "com.linkedin.common.urn.Urn"\n                      },\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "impersonator",\n                      "default": null,\n                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."\n                    },\n                    {\n                      "type": [\n                        "null",\n                        "string"\n                      ],\n                      "name": "message",\n                      "default": null,\n                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."\n                    }\n                  ],\n                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."\n                }\n              ],\n              "name": "lastComputed",\n              "default": null,\n              "doc": "The audit stamp of when the result was computed, including the actor who computed it."\n            }\n          ],\n          "doc": "Information about a Test Result"\n        }\n      },\n      "name": "failing",\n      "doc": "Results that are failing"\n    },\n    {\n      "Relationship": {\n        "/*/test": {\n          "entityTypes": [\n            "test"\n          ],\n          "name": "IsPassing"\n        }\n      },\n      "Searchable": {\n        "/*/test": {\n          "fieldName": "passingTests",\n          "fieldType": "URN",\n          "hasValuesFieldName": "hasPassingTests",\n          "queryByDefault": false\n        }\n      },\n      "type": {\n        "type": "array",\n        "items": "com.linkedin.test.TestResult"\n      },\n      "name": "passing",\n      "doc": "Results that are passing"\n    }\n  ],\n  "doc": "Information about a Test Result"\n}\n')))),(0,t.yg)("h4",{id:"dashboardusagestatistics-timeseries"},"dashboardUsageStatistics (Timeseries)"),(0,t.yg)("p",null,"Experimental (Subject to breaking change) -- Stats corresponding to dashboard's usage."),(0,t.yg)("p",null,"If this aspect represents the latest snapshot of the statistics about a Dashboard, the eventGranularity field should be null.\nIf this aspect represents a bucketed window of usage statistics (e.g. over a day), then the eventGranularity field should be set accordingly. "),(0,t.yg)(i.A,{mdxType:"Tabs"},(0,t.yg)(r.A,{value:"fields",label:"Fields",default:!0,mdxType:"TabItem"},(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Field"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Required"),(0,t.yg)("th",{parentName:"tr",align:null},"Description"),(0,t.yg)("th",{parentName:"tr",align:null},"Annotations"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"timestampMillis"),(0,t.yg)("td",{parentName:"tr",align:null},"long"),(0,t.yg)("td",{parentName:"tr",align:null},"\u2713"),(0,t.yg)("td",{parentName:"tr",align:null},"The event timestamp field as epoch at UTC in milli seconds."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"eventGranularity"),(0,t.yg)("td",{parentName:"tr",align:null},"TimeWindowSize"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Granularity of the event if applicable"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"partitionSpec"),(0,t.yg)("td",{parentName:"tr",align:null},"PartitionSpec"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The optional partition specification."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"messageId"),(0,t.yg)("td",{parentName:"tr",align:null},"string"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The optional messageId, if provided serves as a custom user-defined unique identifier for an aspe..."),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"viewsCount"),(0,t.yg)("td",{parentName:"tr",align:null},"int"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The total number of times dashboard has been viewed"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"executionsCount"),(0,t.yg)("td",{parentName:"tr",align:null},"int"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The total number of dashboard executions (refreshes / syncs)"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"uniqueUserCount"),(0,t.yg)("td",{parentName:"tr",align:null},"int"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Unique user count"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"userCounts"),(0,t.yg)("td",{parentName:"tr",align:null},"DashboardUserUsageCounts[]"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Users within this bucket, with frequency counts"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"favoritesCount"),(0,t.yg)("td",{parentName:"tr",align:null},"int"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"The total number of times that the dashboard has been favorited"),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"lastViewedAt"),(0,t.yg)("td",{parentName:"tr",align:null},"long"),(0,t.yg)("td",{parentName:"tr",align:null}),(0,t.yg)("td",{parentName:"tr",align:null},"Last viewed at  This should not be set in cases where statistics are windowed."),(0,t.yg)("td",{parentName:"tr",align:null}))))),(0,t.yg)(r.A,{value:"raw",label:"Raw Schema",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "dashboardUsageStatistics",\n    "type": "timeseries"\n  },\n  "name": "DashboardUsageStatistics",\n  "namespace": "com.linkedin.dashboard",\n  "fields": [\n    {\n      "type": "long",\n      "name": "timestampMillis",\n      "doc": "The event timestamp field as epoch at UTC in milli seconds."\n    },\n    {\n      "type": [\n        "null",\n        {\n          "type": "record",\n          "name": "TimeWindowSize",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "type": {\n                "type": "enum",\n                "name": "CalendarInterval",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "SECOND",\n                  "MINUTE",\n                  "HOUR",\n                  "DAY",\n                  "WEEK",\n                  "MONTH",\n                  "QUARTER",\n                  "YEAR"\n                ]\n              },\n              "name": "unit",\n              "doc": "Interval unit such as minute/hour/day etc."\n            },\n            {\n              "type": "int",\n              "name": "multiple",\n              "default": 1,\n              "doc": "How many units. Defaults to 1."\n            }\n          ],\n          "doc": "Defines the size of a time window."\n        }\n      ],\n      "name": "eventGranularity",\n      "default": null,\n      "doc": "Granularity of the event if applicable"\n    },\n    {\n      "type": [\n        {\n          "type": "record",\n          "name": "PartitionSpec",\n          "namespace": "com.linkedin.timeseries",\n          "fields": [\n            {\n              "TimeseriesField": {},\n              "type": "string",\n              "name": "partition",\n              "doc": "A unique id / value for the partition for which statistics were collected,\\ngenerated by applying the key definition to a given row."\n            },\n            {\n              "type": [\n                "null",\n                {\n                  "type": "record",\n                  "name": "TimeWindow",\n                  "namespace": "com.linkedin.timeseries",\n                  "fields": [\n                    {\n                      "type": "long",\n                      "name": "startTimeMillis",\n                      "doc": "Start time as epoch at UTC."\n                    },\n                    {\n                      "type": "com.linkedin.timeseries.TimeWindowSize",\n                      "name": "length",\n                      "doc": "The length of the window."\n                    }\n                  ]\n                }\n              ],\n              "name": "timePartition",\n              "default": null,\n              "doc": "Time window of the partition, if we are able to extract it from the partition key."\n            },\n            {\n              "deprecated": true,\n              "type": {\n                "type": "enum",\n                "name": "PartitionType",\n                "namespace": "com.linkedin.timeseries",\n                "symbols": [\n                  "FULL_TABLE",\n                  "QUERY",\n                  "PARTITION"\n                ]\n              },\n              "name": "type",\n              "default": "PARTITION",\n              "doc": "Unused!"\n            }\n          ],\n          "doc": "A reference to a specific partition in a dataset."\n        },\n        "null"\n      ],\n      "name": "partitionSpec",\n      "default": {\n        "partition": "FULL_TABLE_SNAPSHOT",\n        "type": "FULL_TABLE",\n        "timePartition": null\n      },\n      "doc": "The optional partition specification."\n    },\n    {\n      "type": [\n        "null",\n        "string"\n      ],\n      "name": "messageId",\n      "default": null,\n      "doc": "The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value."\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "int"\n      ],\n      "name": "viewsCount",\n      "default": null,\n      "doc": "The total number of times dashboard has been viewed"\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "int"\n      ],\n      "name": "executionsCount",\n      "default": null,\n      "doc": "The total number of dashboard executions (refreshes / syncs) "\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "int"\n      ],\n      "name": "uniqueUserCount",\n      "default": null,\n      "doc": "Unique user count"\n    },\n    {\n      "TimeseriesFieldCollection": {\n        "key": "user"\n      },\n      "type": [\n        "null",\n        {\n          "type": "array",\n          "items": {\n            "type": "record",\n            "name": "DashboardUserUsageCounts",\n            "namespace": "com.linkedin.dashboard",\n            "fields": [\n              {\n                "java": {\n                  "class": "com.linkedin.common.urn.Urn"\n                },\n                "type": "string",\n                "name": "user",\n                "doc": "The unique id of the user."\n              },\n              {\n                "TimeseriesField": {},\n                "type": [\n                  "null",\n                  "int"\n                ],\n                "name": "viewsCount",\n                "default": null,\n                "doc": "The number of times the user has viewed the dashboard"\n              },\n              {\n                "TimeseriesField": {},\n                "type": [\n                  "null",\n                  "int"\n                ],\n                "name": "executionsCount",\n                "default": null,\n                "doc": "The number of times the user has executed (refreshed) the dashboard"\n              },\n              {\n                "TimeseriesField": {},\n                "type": [\n                  "null",\n                  "int"\n                ],\n                "name": "usageCount",\n                "default": null,\n                "doc": "Normalized numeric metric representing user\'s dashboard usage -- the number of times the user executed or viewed the dashboard. "\n              },\n              {\n                "TimeseriesField": {},\n                "type": [\n                  "null",\n                  "string"\n                ],\n                "name": "userEmail",\n                "default": null,\n                "doc": "If user_email is set, we attempt to resolve the user\'s urn upon ingest"\n              }\n            ],\n            "doc": "Records a single user\'s usage counts for a given resource"\n          }\n        }\n      ],\n      "name": "userCounts",\n      "default": null,\n      "doc": "Users within this bucket, with frequency counts"\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "int"\n      ],\n      "name": "favoritesCount",\n      "default": null,\n      "doc": "The total number of times that the dashboard has been favorited "\n    },\n    {\n      "TimeseriesField": {},\n      "type": [\n        "null",\n        "long"\n      ],\n      "name": "lastViewedAt",\n      "default": null,\n      "doc": "Last viewed at\\n\\nThis should not be set in cases where statistics are windowed. "\n    }\n  ],\n  "doc": "Experimental (Subject to breaking change) -- Stats corresponding to dashboard\'s usage.\\n\\nIf this aspect represents the latest snapshot of the statistics about a Dashboard, the eventGranularity field should be null. \\nIf this aspect represents a bucketed window of usage statistics (e.g. over a day), then the eventGranularity field should be set accordingly. "\n}\n')))),(0,t.yg)("h3",{id:"common-types"},"Common Types"),(0,t.yg)("p",null,"These types are used across multiple aspects in this entity."),(0,t.yg)("h4",{id:"auditstamp"},"AuditStamp"),(0,t.yg)("p",null,"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"time")," (long): When did the resource/association/sub-resource move into the specific lifecyc..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"actor")," (string): The entity (e.g. a member URN) which will be credited for moving the resource..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"impersonator")," (string?): The entity (e.g. a service URN) which performs the change on behalf of the Ac..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"message")," (string?): Additional context around how DataHub was informed of the particular change. ...")),(0,t.yg)("h4",{id:"changeauditstamps"},"ChangeAuditStamps"),(0,t.yg)("p",null,"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into various lifecycle stages, and who acted to move it into those lifecycle stages. The recommended best practice is to include this record in your record schema, and annotate its fields as @readOnly in your resource. See ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations"},"https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"created")," (AuditStamp): An AuditStamp corresponding to the creation of this resource/association/sub-..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"lastModified")," (AuditStamp): An AuditStamp corresponding to the last modification of this resource/associa..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"deleted")," (AuditStamp?): An AuditStamp corresponding to the deletion of this resource/association/sub-...")),(0,t.yg)("h4",{id:"edge"},"Edge"),(0,t.yg)("p",null,"A common structure to represent all edges to entities when used inside aspects as collections\nThis ensures that all edges have common structure around audit-stamps and will support PATCH, time-travel automatically."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"sourceUrn")," (string?): Urn of the source of this relationship edge. If not specified, assumed to be ..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"destinationUrn")," (string): Urn of the destination of this relationship edge."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"created")," (AuditStamp?): Audit stamp containing who created this relationship edge and when"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"lastModified")," (AuditStamp?): Audit stamp containing who last modified this relationship edge and when"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"properties")," (map?): A generic properties bag that allows us to store specific information on this...")),(0,t.yg)("h4",{id:"formassociation"},"FormAssociation"),(0,t.yg)("p",null,"Properties of an applied form."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"urn")," (string): Urn of the applied form"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"incompletePrompts")," (FormPromptAssociation[]): A list of prompts that are not yet complete for this form."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"completedPrompts")," (FormPromptAssociation[]): A list of prompts that have been completed for this form.")),(0,t.yg)("h4",{id:"incidentsummarydetails"},"IncidentSummaryDetails"),(0,t.yg)("p",null,"Summary statistics about incidents on an entity."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"urn")," (string): The urn of the incident"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"type")," (string): The type of an incident"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"createdAt")," (long): The time at which the incident was raised in milliseconds since epoch."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"resolvedAt")," (long?): The time at which the incident was marked as resolved in milliseconds since e..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"priority")," (int?): The priority of the incident")),(0,t.yg)("h4",{id:"testresult"},"TestResult"),(0,t.yg)("p",null,"Information about a Test Result"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Fields:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"test")," (string): The urn of the test"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"type")," (TestResultType): The type of the result"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"testDefinitionMd5")," (string?): The md5 of the test definition that was used to compute this result. See Test..."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"lastComputed")," (AuditStamp?): The audit stamp of when the result was computed, including the actor who comp...")),(0,t.yg)("h3",{id:"relationships"},"Relationships"),(0,t.yg)("h4",{id:"self"},"Self"),(0,t.yg)("p",null,"These are the relationships to itself, stored in this entity's aspects"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"DashboardContainsDashboard (via ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardInfo.dashboards"),")")),(0,t.yg)("h4",{id:"outgoing"},"Outgoing"),(0,t.yg)("p",null,"These are the relationships stored in this entity's aspects"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Contains"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Chart via ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardInfo.charts")),(0,t.yg)("li",{parentName:"ul"},"Chart via ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardInfo.chartEdges")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Consumes"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Dataset via ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardInfo.datasets")),(0,t.yg)("li",{parentName:"ul"},"Dataset via ",(0,t.yg)("inlineCode",{parentName:"li"},"dashboardInfo.datasetEdges")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"OwnedBy"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Corpuser via ",(0,t.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")),(0,t.yg)("li",{parentName:"ul"},"CorpGroup via ",(0,t.yg)("inlineCode",{parentName:"li"},"ownership.owners.owner")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"ownershipType"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"OwnershipType via ",(0,t.yg)("inlineCode",{parentName:"li"},"ownership.owners.typeUrn")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"TaggedWith"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Tag via ",(0,t.yg)("inlineCode",{parentName:"li"},"globalTags.tags")),(0,t.yg)("li",{parentName:"ul"},"Tag via ",(0,t.yg)("inlineCode",{parentName:"li"},"inputFields.fields.schemaField.globalTags.tags")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"TermedWith"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"GlossaryTerm via ",(0,t.yg)("inlineCode",{parentName:"li"},"glossaryTerms.terms.urn")),(0,t.yg)("li",{parentName:"ul"},"GlossaryTerm via ",(0,t.yg)("inlineCode",{parentName:"li"},"inputFields.fields.schemaField.glossaryTerms.terms.urn")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"AssociatedWith"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Domain via ",(0,t.yg)("inlineCode",{parentName:"li"},"domains.domains")),(0,t.yg)("li",{parentName:"ul"},"Application via ",(0,t.yg)("inlineCode",{parentName:"li"},"applications.applications")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"IsPartOf"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Container via ",(0,t.yg)("inlineCode",{parentName:"li"},"container.container")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"consumesField"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"SchemaField via ",(0,t.yg)("inlineCode",{parentName:"li"},"inputFields.fields.schemaFieldUrn")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"SchemaFieldTaggedWith"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Tag via ",(0,t.yg)("inlineCode",{parentName:"li"},"inputFields.fields.schemaField.globalTags")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"SchemaFieldWithGlossaryTerm"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"GlossaryTerm via ",(0,t.yg)("inlineCode",{parentName:"li"},"inputFields.fields.schemaField.glossaryTerms")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"ResolvedIncidents"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Incident via ",(0,t.yg)("inlineCode",{parentName:"li"},"incidentsSummary.resolvedIncidentDetails")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"ActiveIncidents"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Incident via ",(0,t.yg)("inlineCode",{parentName:"li"},"incidentsSummary.activeIncidentDetails")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"IsFailing"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Test via ",(0,t.yg)("inlineCode",{parentName:"li"},"testResults.failing")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"IsPassing"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Test via ",(0,t.yg)("inlineCode",{parentName:"li"},"testResults.passing"))))),(0,t.yg)("h3",{id:"global-metadata-model"},(0,t.yg)("a",{parentName:"h3",href:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,t.yg)("p",null,(0,t.yg)("img",{parentName:"p",src:"https://github.com/datahub-project/static-assets/raw/main/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}h.isMDXComponent=!0}}]);