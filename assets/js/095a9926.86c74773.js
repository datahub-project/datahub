"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[31414],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>d});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,d=u["".concat(o,".").concat(c)]||u[c]||y[c]||l;return n?a.createElement(d,i(i({ref:t},g),{},{components:n})):a.createElement(d,i({ref:t},g))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},93397:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>u});n(96540);var a=n(15680);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const s={title:"Audit Events Search API V1",slug:"/actions/events/audit-events-search-guide",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/actions/events/audit-events-search-guide.md"},o="Audit Events Search API V1",p={unversionedId:"docs/actions/events/audit-events-search-guide",id:"version-1.1.0/docs/actions/events/audit-events-search-guide",title:"Audit Events Search API V1",description:"Endpoint",source:"@site/versioned_docs/version-1.1.0/docs/actions/events/audit-events-search-guide.md",sourceDirName:"docs/actions/events",slug:"/actions/events/audit-events-search-guide",permalink:"/docs/1.1.0/actions/events/audit-events-search-guide",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/actions/events/audit-events-search-guide.md",tags:[],version:"1.1.0",frontMatter:{title:"Audit Events Search API V1",slug:"/actions/events/audit-events-search-guide",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/actions/events/audit-events-search-guide.md"},sidebar:"overviewSidebar",previous:{title:"Kafka Event Source",permalink:"/docs/1.1.0/actions/sources/kafka-event-source"},next:{title:"Entity Change Event V1",permalink:"/docs/1.1.0/actions/events/entity-change-event"}},g={},u=[{value:"Endpoint",id:"endpoint",level:2},{value:"Overview",id:"overview",level:2},{value:"Request Structure",id:"request-structure",level:2},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Response Structure",id:"response-structure",level:2},{value:"Event Types",id:"event-types",level:2},{value:"Common Fields (UsageEventResult)",id:"common-fields-usageeventresult",level:3},{value:"Specific Event Types",id:"specific-event-types",level:3},{value:"EntityEvent",id:"entityevent",level:4},{value:"Create/Update/Delete Event Types",id:"createupdatedelete-event-types",level:4},{value:"LogInEvent &amp; FailedLogInEvent",id:"loginevent--failedloginevent",level:4},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Search for All Events",id:"basic-search-for-all-events",level:3},{value:"Search for Events by a Specific User",id:"search-for-events-by-a-specific-user",level:3},{value:"Search for Specific Event Types with Time Range",id:"search-for-specific-event-types-with-time-range",level:3},{value:"Search for Events on Specific Entity Types",id:"search-for-events-on-specific-entity-types",level:3},{value:"Paginating through Results",id:"paginating-through-results",level:3},{value:"Best Practices",id:"best-practices",level:2}],y={toc:u},c="wrapper";function d(e){var{components:t}=e,n=i(e,["components"]);return(0,a.yg)(c,l(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}({},y,n),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"audit-events-search-api-v1"},"Audit Events Search API V1"),(0,a.yg)("h2",{id:"endpoint"},"Endpoint"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"/openapi/v1/events/audit/search")),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"This API allows you to search for audit events that occur within DataHub. Audit events track various actions performed by users and systems, providing a comprehensive history of activities and changes within your DataHub instance."),(0,a.yg)("h2",{id:"request-structure"},"Request Structure"),(0,a.yg)("p",null,"The Audit Events Search API accepts POST requests with optional query parameters and a required JSON body."),(0,a.yg)("h3",{id:"query-parameters"},"Query Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Default"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"startTime"),(0,a.yg)("td",{parentName:"tr",align:null},"int64"),(0,a.yg)("td",{parentName:"tr",align:null},"The timestamp (in ms) to start the search from, defaults to one day ago"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"-1")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"endTime"),(0,a.yg)("td",{parentName:"tr",align:null},"int64"),(0,a.yg)("td",{parentName:"tr",align:null},"The timestamp (in ms) to end the search at, defaults to current time"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"-1")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"size"),(0,a.yg)("td",{parentName:"tr",align:null},"int32"),(0,a.yg)("td",{parentName:"tr",align:null},"The maximum number of events to return in one response"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"10")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"scrollId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"The scroll ID used for pagination when fetching subsequent results"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"null")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"includeRaw"),(0,a.yg)("td",{parentName:"tr",align:null},"boolean"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether to include the raw event data in the response"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"true")))),(0,a.yg)("h3",{id:"request-body"},"Request Body"),(0,a.yg)("p",null,"The request body must be a JSON object with the following structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "eventTypes": ["string"],\n  "entityTypes": ["string"],\n  "aspectTypes": ["string"],\n  "actorUrns": ["string"]\n}\n')),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"eventTypes"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"List of event types to filter by (empty means all event types)"),(0,a.yg)("td",{parentName:"tr",align:null},"No")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"entityTypes"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"List of entity types to filter by (empty means all entities)"),(0,a.yg)("td",{parentName:"tr",align:null},"No")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"aspectTypes"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"List of aspect types to filter by (empty means all aspects)"),(0,a.yg)("td",{parentName:"tr",align:null},"No")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"actorUrns"),(0,a.yg)("td",{parentName:"tr",align:null},"string[]"),(0,a.yg)("td",{parentName:"tr",align:null},"List of actor URNs to filter by (empty means all actors)"),(0,a.yg)("td",{parentName:"tr",align:null},"No")))),(0,a.yg)("p",null,"These filters work as ",(0,a.yg)("inlineCode",{parentName:"p"},"and")," filters between each other and ",(0,a.yg)("inlineCode",{parentName:"p"},"or")," filters for elements in the list so:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "eventTypes": ["CreateAccessTokenEvent", "RevokeAccessTokenEvent"],\n  "actorUrns": ["urn:li:corpuser:datahub"]\n}\n')),(0,a.yg)("p",null,"Filters for events that are either ",(0,a.yg)("inlineCode",{parentName:"p"},"CreateAccessTokenEvent")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"RevokeAccessTokenEvent")," AND had ",(0,a.yg)("inlineCode",{parentName:"p"},"urn:li:corpuser:datahub")," as the actor."),(0,a.yg)("h2",{id:"response-structure"},"Response Structure"),(0,a.yg)("p",null,"The API returns a JSON object with the following structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "nextScrollId": "string",\n  "count": 0,\n  "total": 0,\n  "usageEvents": [\n    {\n      // Event data varies based on event type\n    }\n  ]\n}\n')),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"nextScrollId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"ID for retrieving the next page of results (if more are available)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"count"),(0,a.yg)("td",{parentName:"tr",align:null},"int32"),(0,a.yg)("td",{parentName:"tr",align:null},"Number of events returned in this response")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"total"),(0,a.yg)("td",{parentName:"tr",align:null},"int32"),(0,a.yg)("td",{parentName:"tr",align:null},"Total count of matching events (calculated up to 10,000)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"usageEvents"),(0,a.yg)("td",{parentName:"tr",align:null},"array"),(0,a.yg)("td",{parentName:"tr",align:null},"Array of usage events matching the search criteria")))),(0,a.yg)("h2",{id:"event-types"},"Event Types"),(0,a.yg)("p",null,"The API supports various event types that track different actions within DataHub. Each event type has its own specific structure, but all share common properties defined in the ",(0,a.yg)("inlineCode",{parentName:"p"},"UsageEventResult")," base type."),(0,a.yg)("h3",{id:"common-fields-usageeventresult"},"Common Fields (UsageEventResult)"),(0,a.yg)("p",null,"All event types include these base fields:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Field"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"eventType"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"Type of the event")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"timestamp"),(0,a.yg)("td",{parentName:"tr",align:null},"int64"),(0,a.yg)("td",{parentName:"tr",align:null},"Timestamp when the event occurred (in milliseconds)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"actorUrn"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"URN of the actor who performed the action")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"sourceIP"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"IP address from which the action was performed")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"eventSource"),(0,a.yg)("td",{parentName:"tr",align:null},"enum"),(0,a.yg)("td",{parentName:"tr",align:null},"Source API of the event (RESTLI, OPENAPI, GRAPHQL, SSO_SCIM)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"userAgent"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"User agent string from the HTTP request (if applicable)")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"telemetryTraceId"),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"Trace ID from system telemetry")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"rawUsageEvent"),(0,a.yg)("td",{parentName:"tr",align:null},"object"),(0,a.yg)("td",{parentName:"tr",align:null},"Full raw event contents if includeRaw=true")))),(0,a.yg)("h3",{id:"specific-event-types"},"Specific Event Types"),(0,a.yg)("p",null,"The API returns different event types, each with its own specific structure in addition to the common fields:"),(0,a.yg)("h4",{id:"entityevent"},"EntityEvent"),(0,a.yg)("p",null,"Tracks general entity operations."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "eventType": "EntityEvent",\n  "timestamp": 1649953100653,\n  "actorUrn": "urn:li:corpuser:jdoe",\n  "sourceIP": "192.168.1.1",\n  "eventSource": "GRAPHQL",\n  "userAgent": "Mozilla/5.0...",\n  "telemetryTraceId": "abc123",\n  "entityUrn": "urn:li:dataset:abc",\n  "entityType": "dataset",\n  "aspectName": "ownership"\n}\n')),(0,a.yg)("h4",{id:"createupdatedelete-event-types"},"Create/Update/Delete Event Types"),(0,a.yg)("p",null,"Several event types track specific creation, update, and deletion actions:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"CreateUserEvent"),": Tracks user creation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"UpdateUserEvent"),": Tracks user updates"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"CreateAccessTokenEvent"),": Tracks access token creation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"RevokeAccessTokenEvent"),": Tracks access token revocation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"CreatePolicyEvent"),": Tracks policy creation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"UpdatePolicyEvent"),": Tracks policy updates"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"CreateIngestionSourceEvent"),": Tracks ingestion source creation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"UpdateIngestionSourceEvent"),": Tracks ingestion source updates"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"DeleteEntityEvent"),": Tracks entity deletion"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"UpdateAspectEvent"),": Tracks aspect updates")),(0,a.yg)("p",null,"All these event types share the same structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "eventType": "[Event Type Name]",\n  "timestamp": 1649953100653,\n  "actorUrn": "urn:li:corpuser:jdoe",\n  "sourceIP": "192.168.1.1",\n  "eventSource": "GRAPHQL",\n  "userAgent": "Mozilla/5.0...",\n  "telemetryTraceId": "abc123",\n  "entityUrn": "urn:li:dataset:abc",\n  "entityType": "dataset",\n  "aspectName": "ownership"\n}\n')),(0,a.yg)("h4",{id:"loginevent--failedloginevent"},"LogInEvent & FailedLogInEvent"),(0,a.yg)("p",null,"Tracks user login events with a specific login source."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "eventType": "LogInEvent",\n  "timestamp": 1649953100653,\n  "actorUrn": "urn:li:corpuser:jdoe",\n  "sourceIP": "192.168.1.1",\n  "eventSource": "GRAPHQL",\n  "userAgent": "Mozilla/5.0...",\n  "telemetryTraceId": "abc123",\n  "loginSource": "PASSWORD_LOGIN"\n}\n')),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"loginSource")," can be one of:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"PASSWORD_RESET"),(0,a.yg)("li",{parentName:"ul"},"PASSWORD_LOGIN"),(0,a.yg)("li",{parentName:"ul"},"FALLBACK_LOGIN"),(0,a.yg)("li",{parentName:"ul"},"SIGN_UP_LINK_LOGIN"),(0,a.yg)("li",{parentName:"ul"},"GUEST_LOGIN"),(0,a.yg)("li",{parentName:"ul"},"SSO_LOGIN"),(0,a.yg)("li",{parentName:"ul"},"OIDC_IMPLICIT_LOGIN")),(0,a.yg)("h2",{id:"usage-examples"},"Usage Examples"),(0,a.yg)("h3",{id:"basic-search-for-all-events"},"Basic Search for All Events"),(0,a.yg)("p",null,"To search for all audit events with default parameters:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'// POST /openapi/v1/events/audit/search\n{\n  "eventTypes": [],\n  "entityTypes": [],\n  "aspectTypes": [],\n  "actorUrns": []\n}\n')),(0,a.yg)("h3",{id:"search-for-events-by-a-specific-user"},"Search for Events by a Specific User"),(0,a.yg)("p",null,"To search for all events performed by a specific user:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'// POST /openapi/v1/events/audit/search\n{\n  "eventTypes": [],\n  "entityTypes": [],\n  "aspectTypes": [],\n  "actorUrns": ["urn:li:corpuser:jdoe"]\n}\n')),(0,a.yg)("h3",{id:"search-for-specific-event-types-with-time-range"},"Search for Specific Event Types with Time Range"),(0,a.yg)("p",null,"To search for specific event types within a time range:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'// POST /openapi/v1/events/audit/search?startTime=1649953000000&endTime=1649954000000\n{\n  "eventTypes": ["LogInEvent", "CreateUserEvent"],\n  "entityTypes": [],\n  "aspectTypes": [],\n  "actorUrns": []\n}\n')),(0,a.yg)("h3",{id:"search-for-events-on-specific-entity-types"},"Search for Events on Specific Entity Types"),(0,a.yg)("p",null,"To search for events related to specific entity types:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'// POST /openapi/v1/events/audit/search\n{\n  "eventTypes": [],\n  "entityTypes": ["dataset", "dashboard"],\n  "aspectTypes": [],\n  "actorUrns": []\n}\n')),(0,a.yg)("h3",{id:"paginating-through-results"},"Paginating through Results"),(0,a.yg)("p",null,"To retrieve the first page of results:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'// POST /openapi/v1/events/audit/search?size=25\n{\n  "eventTypes": [],\n  "entityTypes": [],\n  "aspectTypes": [],\n  "actorUrns": []\n}\n')),(0,a.yg)("p",null,"To retrieve subsequent pages, use the ",(0,a.yg)("inlineCode",{parentName:"p"},"nextScrollId")," from the previous response:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'// POST /openapi/v1/events/audit/search?scrollId=abcdef123456&size=25\n{\n  "eventTypes": [],\n  "entityTypes": [],\n  "aspectTypes": [],\n  "actorUrns": []\n}\n')),(0,a.yg)("h2",{id:"best-practices"},"Best Practices"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Use Time Ranges"),": Always specify start and end times when searching for events to limit the result set and improve performance.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Filter Appropriately"),": Use the filtering options (eventTypes, entityTypes, etc.) to narrow down your search to only the events you're interested in.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Paginate Results"),": Use the size parameter and scrollId to paginate through large result sets rather than trying to retrieve all events at once.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Monitor User Activity"),": Use the actorUrns filter to track actions by specific users, which is useful for security auditing."))))}d.isMDXComponent=!0}}]);