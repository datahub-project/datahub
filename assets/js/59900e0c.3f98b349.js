"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[21656],{15680:(t,e,a)=>{a.d(e,{xA:()=>s,yg:()=>d});var n=a(96540);function o(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,o=function(t,e){if(null==t)return{};var a,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(o[a]=t[a]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(o[a]=t[a])}return o}var p=n.createContext({}),c=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},s=function(t){var e=c(t.components);return n.createElement(p.Provider,{value:e},t.children)},u="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,o=t.mdxType,i=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),u=c(a),m=o,d=u["".concat(p,".").concat(m)]||u[m]||g[m]||i;return a?n.createElement(d,r(r({ref:e},s),{},{components:a})):n.createElement(d,r({ref:e},s))}));function d(t,e){var a=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=a.length,r=new Array(i);r[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[u]="string"==typeof t?t:o,r[1]=l;for(var c=2;c<i;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},41297:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>u});a(96540);var n=a(15680);function o(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):function(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))})),t}function r(t,e){if(null==t)return{};var a,n,o=function(t,e){if(null==t)return{};var a,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(o[a]=t[a]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(o[a]=t[a])}return o}const l={title:"Documentation Propagation Action",slug:"/datahub-actions/src/datahub_actions/plugin/action/propagation/docs",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/datahub-actions/src/datahub_actions/plugin/action/propagation/docs/README.md"},p="Documentation Propagation Action",c={unversionedId:"datahub-actions/src/datahub_actions/plugin/action/propagation/docs/README",id:"datahub-actions/src/datahub_actions/plugin/action/propagation/docs/README",title:"Documentation Propagation Action",description:"The Documentation Propagation Action allows you to automatically propagate documentation from schema fields to related schema fields. For example, when you add or update documentation for a column in a dataset, this action can automatically propagate that documentation to upstream, downstream, or sibling columns.",source:"@site/genDocs/datahub-actions/src/datahub_actions/plugin/action/propagation/docs/README.md",sourceDirName:"datahub-actions/src/datahub_actions/plugin/action/propagation/docs",slug:"/datahub-actions/src/datahub_actions/plugin/action/propagation/docs",permalink:"/docs/datahub-actions/src/datahub_actions/plugin/action/propagation/docs",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/datahub-actions/src/datahub_actions/plugin/action/propagation/docs/README.md",tags:[],version:"current",frontMatter:{title:"Documentation Propagation Action",slug:"/datahub-actions/src/datahub_actions/plugin/action/propagation/docs",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/datahub-actions/src/datahub_actions/plugin/action/propagation/docs/README.md"}},s={},u=[{value:"Functionality",id:"functionality",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Example Configuration",id:"example-configuration",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Propagation Attribution",id:"propagation-attribution",level:2},{value:"Caveats and Limitations",id:"caveats-and-limitations",level:2}],g={toc:u},m="wrapper";function d(t){var{components:e}=t,a=r(t,["components"]);return(0,n.yg)(m,i(function(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(t){return Object.getOwnPropertyDescriptor(a,t).enumerable})))),n.forEach((function(e){o(t,e,a[e])}))}return t}({},g,a),{components:e,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"documentation-propagation-action"},"Documentation Propagation Action"),(0,n.yg)("p",null,"The Documentation Propagation Action allows you to automatically propagate documentation from schema fields to related schema fields. For example, when you add or update documentation for a column in a dataset, this action can automatically propagate that documentation to upstream, downstream, or sibling columns."),(0,n.yg)("h2",{id:"functionality"},"Functionality"),(0,n.yg)("p",null,"This action listens for documentation changes on schema fields and propagates those changes to related fields based on your configuration. It supports:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Downstream Propagation"),": Propagate documentation to columns in downstream datasets"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Upstream Propagation"),": Propagate documentation to columns in upstream datasets"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Sibling Propagation"),": Propagate documentation to columns in sibling datasets (e.g., views of the same table)")),(0,n.yg)("h2",{id:"configuration-options"},"Configuration Options"),(0,n.yg)("p",null,"The Documentation Propagation Action provides several configuration options:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"enabled"),": Controls whether documentation propagation is enabled (default: ",(0,n.yg)("inlineCode",{parentName:"li"},"true"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"columns_enabled"),": Controls whether column-level documentation propagation is enabled (default: ",(0,n.yg)("inlineCode",{parentName:"li"},"true"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"datasets_enabled"),": Controls whether dataset-level documentation propagation is enabled (default: ",(0,n.yg)("inlineCode",{parentName:"li"},"false"),") - Note: Currently not implemented"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"column_propagation_relationships"),": Specifies which relationships to use for propagation. Valid values are:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"UPSTREAM"),": Propagate to upstream columns"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"DOWNSTREAM"),": Propagate to downstream columns"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"SIBLING"),": Propagate to sibling columns"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"max_propagation_depth"),": Maximum depth for propagation chains (default: ",(0,n.yg)("inlineCode",{parentName:"li"},"5"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"max_propagation_fanout"),": Maximum number of entities to propagate to in a single hop (default: ",(0,n.yg)("inlineCode",{parentName:"li"},"1000"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"max_propagation_time_millis"),": Maximum time in milliseconds for a propagation chain (default: ",(0,n.yg)("inlineCode",{parentName:"li"},"3600000")," - 1 hour)")),(0,n.yg)("h2",{id:"example-configuration"},"Example Configuration"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'name: "documentation_propagation"\nsource:\n  type: "kafka"\n  config:\n    connection:\n      bootstrap: ${KAFKA_BOOTSTRAP_SERVER:-localhost:9092}\n      schema_registry_url: ${SCHEMA_REGISTRY_URL:-http://localhost:8081}\n    # Topic Routing - which topics to read from.\n    topic_routes:\n      #mcl: ${METADATA_CHANGE_LOG_VERSIONED_TOPIC_NAME:-MetadataChangeLog_Versioned_v1} # Topic name for MetadataChangeLogEvent_v1 events.\n      pe: ${PLATFORM_EVENT_TOPIC_NAME:PlatformEvent_v1} # Topic name for PlatformEvent_v1 events.\nfilter:\n  event_type: "EntityChangeEvent_v1"\n  event:\n    entityType: "schemaField"\n    category: "DOCUMENTATION"\naction:\n  type: "doc_propagation"\n  config:\n    enabled: true\n    columns_enabled: true\n    max_propagation_depth: 3 # Optional: Limit propagation depth\n\ndatahub:\n  server: ${DATAHUB_GMS_HOST:-http://localhost:8080}\n  token: ${DATAHUB_GMS_TOKEN}\n')),(0,n.yg)("h2",{id:"behavior"},"Behavior"),(0,n.yg)("p",null,"When a documentation change is detected on a schema field:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"The action checks if propagation is enabled and if the change should be propagated"),(0,n.yg)("li",{parentName:"ol"},"It determines the appropriate propagation relationships based on your configuration"),(0,n.yg)("li",{parentName:"ol"},"It finds related schema fields based on those relationships"),(0,n.yg)("li",{parentName:"ol"},"It propagates the documentation to those fields, preserving attribution information"),(0,n.yg)("li",{parentName:"ol"},"It respects propagation limits (depth, fanout, time) to prevent excessive propagation")),(0,n.yg)("h2",{id:"propagation-attribution"},"Propagation Attribution"),(0,n.yg)("p",null,"When documentation is propagated, the action adds attribution metadata to track:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"The original source of the documentation"),(0,n.yg)("li",{parentName:"ul"},"The propagation path"),(0,n.yg)("li",{parentName:"ul"},"The time of propagation"),(0,n.yg)("li",{parentName:"ul"},"The depth of propagation")),(0,n.yg)("p",null,"This attribution information is stored with the propagated documentation and can be viewed in the DataHub UI."),(0,n.yg)("h2",{id:"caveats-and-limitations"},"Caveats and Limitations"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Upstream Propagation"),": When propagating upstream, the action only propagates if there is exactly one upstream field. This prevents ambiguous propagation when multiple upstream fields exist."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Dataset Documentation"),": Dataset-level documentation propagation is not currently supported, only schema field (column) documentation."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Single Upstream Field"),": For downstream propagation, the action only propagates to a downstream field if it has exactly one upstream field (the field being propagated from). This ensures that documentation is only propagated in clear one-to-one relationships.")))}d.isMDXComponent=!0}}]);