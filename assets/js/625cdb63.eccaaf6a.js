"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[74884],{15680:(e,a,t)=>{t.d(a,{xA:()=>p,yg:()=>c});var n=t(96540);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var m=n.createContext({}),g=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},p=function(e){var a=g(e.components);return n.createElement(m.Provider,{value:a},e.children)},y="mdxType",o={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,i=e.originalType,m=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),y=g(t),d=l,c=y["".concat(m,".").concat(d)]||y[d]||o[d]||i;return t?n.createElement(c,r(r({ref:a},p),{},{components:t})):n.createElement(c,r({ref:a},p))}));function c(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=d;var s={};for(var m in a)hasOwnProperty.call(a,m)&&(s[m]=a[m]);s.originalType=e,s[y]="string"==typeof e?e:l,r[1]=s;for(var g=2;g<i;g++)r[g]=t[g];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},20800:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>m,default:()=>c,frontMatter:()=>s,metadata:()=>g,toc:()=>y});t(96540);var n=t(15680);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){return a=null!=a?a:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):function(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})),e}function r(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}const s={title:"MCP Builder"},m=void 0,g={unversionedId:"python-sdk/builder/mcp-builder",id:"python-sdk/builder/mcp-builder",title:"MCP Builder",description:"These classes and methods make it easier to construct MetadataChangeProposals.",source:"@site/genDocs/python-sdk/builder/mcp-builder.mdx",sourceDirName:"python-sdk/builder",slug:"/python-sdk/builder/mcp-builder",permalink:"/docs/python-sdk/builder/mcp-builder",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/genDocs/python-sdk/builder/mcp-builder.mdx",tags:[],version:"current",frontMatter:{title:"MCP Builder"},sidebar:"overviewSidebar",previous:{title:"MCE Builder",permalink:"/docs/python-sdk/builder/mce-builder"},next:{title:"Graph Client",permalink:"/docs/python-sdk/clients/graph-client"}},p={},y=[{value:'<span className="visually-hidden">MetadataChangeProposalWrapper</span>',id:"datahub.emitter.mcp.MetadataChangeProposalWrapper",level:3},{value:"as_workunit(*, treat_errors_as_warnings=False, is_primary_source=True)",id:"as_workunit-treat_errors_as_warningsfalse-is_primary_sourcetrue",level:4},{value:"aspect <em>: <code>Optional</code>_Aspect</em> <em>= None</em>",id:"aspect--optional_aspect--none",level:4},{value:"aspectName <em>: <code>Optional</code>str</em> <em>= None</em>",id:"aspectname--optionalstr--none",level:4},{value:"auditHeader <em>: <code>Optional</code>[<code>KafkaAuditHeaderClass</code>]</em> <em>= None</em>",id:"auditheader--optionalkafkaauditheaderclass--none",level:4},{value:"changeType <em>: <code>Union</code>[<code>str</code>, <code>ChangeTypeClass</code>]</em> <em>= &#39;UPSERT&#39;</em>",id:"changetype--unionstr-changetypeclass--upsert",level:4},{value:"<em>classmethod</em> construct_many(entityUrn, aspects)",id:"classmethod-construct_manyentityurn-aspects",level:4},{value:"entityKeyAspect <em>: <code>Optional</code>_Aspect</em> <em>= None</em>",id:"entitykeyaspect--optional_aspect--none",level:4},{value:"entityType <em>: <code>str</code></em> <em>= &#39;ENTITY_TYPE_UNSET&#39;</em>",id:"entitytype--str--entity_type_unset",level:4},{value:"entityUrn <em>: <code>Optional</code>str</em> <em>= None</em>",id:"entityurn--optionalstr--none",level:4},{value:"<em>classmethod</em> from_obj(obj, tuples=False)",id:"classmethod-from_objobj-tuplesfalse",level:4},{value:"<em>classmethod</em> from_obj_require_wrapper(obj, tuples=False)",id:"classmethod-from_obj_require_wrapperobj-tuplesfalse",level:4},{value:"headers <em>: <code>Optional</code>[<code>Dict</code>str, str]</em> <em>= None</em>",id:"headers--optionaldictstr-str--none",level:4},{value:"make_mcp()",id:"make_mcp",level:4},{value:"systemMetadata <em>: <code>Optional</code>[<code>SystemMetadataClass</code>]</em> <em>= None</em>",id:"systemmetadata--optionalsystemmetadataclass--none",level:4},{value:"to_obj(tuples=False, simplified_structure=False)",id:"to_objtuplesfalse-simplified_structurefalse",level:4},{value:"<em>classmethod</em> try_from_mcl(mcl)",id:"classmethod-try_from_mclmcl",level:4},{value:"<em>classmethod</em> try_from_mcpc(mcpc)",id:"classmethod-try_from_mcpcmcpc",level:4},{value:"validate()",id:"validate",level:4},{value:'<span className="visually-hidden">BigQueryDatasetKey</span>',id:"datahub.emitter.mcp_builder.BigQueryDatasetKey",level:3},{value:"dataset_id <em>: <code>str</code></em>",id:"dataset_id--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict--",level:4},{value:'<span className="visually-hidden">BucketKey</span>',id:"datahub.emitter.mcp_builder.BucketKey",level:3},{value:"bucket_name <em>: <code>str</code></em>",id:"bucket_name--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---1",level:4},{value:'<span className="visually-hidden">CatalogKey</span>',id:"datahub.emitter.mcp_builder.CatalogKey",level:3},{value:"catalog <em>: <code>str</code></em>",id:"catalog--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---2",level:4},{value:'<span className="visually-hidden">CatalogKeyWithMetastore</span>',id:"datahub.emitter.mcp_builder.CatalogKeyWithMetastore",level:3},{value:"catalog <em>: <code>str</code></em>",id:"catalog--str-1",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---3",level:4},{value:'<span className="visually-hidden">ContainerKey</span>',id:"datahub.emitter.mcp_builder.ContainerKey",level:3},{value:"as_urn()",id:"as_urn",level:4},{value:"as_urn_typed()",id:"as_urn_typed",level:4},{value:"backcompat_env_as_instance <em>: <code>bool</code></em>",id:"backcompat_env_as_instance--bool",level:4},{value:"env <em>: <code>Optional</code>str</em>",id:"env--optionalstr",level:4},{value:"guid_dict()",id:"guid_dict",level:4},{value:"instance <em>: <code>Optional</code>str</em>",id:"instance--optionalstr",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---4",level:4},{value:"parent_key()",id:"parent_key",level:4},{value:"platform <em>: <code>str</code></em>",id:"platform--str",level:4},{value:"property_dict()",id:"property_dict",level:4},{value:'<span className="visually-hidden">DatabaseKey</span>',id:"datahub.emitter.mcp_builder.DatabaseKey",level:3},{value:"database <em>: <code>str</code></em>",id:"database--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---5",level:4},{value:'<span className="visually-hidden">DatahubKey</span>',id:"datahub.emitter.mcp_builder.DatahubKey",level:3},{value:"guid()",id:"guid",level:4},{value:"guid_dict()",id:"guid_dict-1",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---6",level:4},{value:'<span className="visually-hidden">ExperimentKey</span>',id:"datahub.emitter.mcp_builder.ExperimentKey",level:3},{value:"id <em>: <code>str</code></em>",id:"id--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---7",level:4},{value:'<span className="visually-hidden">FolderKey</span>',id:"datahub.emitter.mcp_builder.FolderKey",level:3},{value:"folder_abs_path <em>: <code>str</code></em>",id:"folder_abs_path--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---8",level:4},{value:'<span className="visually-hidden">MetastoreKey</span>',id:"datahub.emitter.mcp_builder.MetastoreKey",level:3},{value:"metastore <em>: <code>str</code></em>",id:"metastore--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---9",level:4},{value:'<span className="visually-hidden">NamespaceKey</span>',id:"datahub.emitter.mcp_builder.NamespaceKey",level:3},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---10",level:4},{value:"namespace <em>: <code>str</code></em>",id:"namespace--str",level:4},{value:'<span className="visually-hidden">NotebookKey</span>',id:"datahub.emitter.mcp_builder.NotebookKey",level:3},{value:"as_urn()",id:"as_urn-1",level:4},{value:"instance <em>: <code>Optional</code>str</em>",id:"instance--optionalstr-1",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---11",level:4},{value:"notebook_id <em>: <code>int</code></em>",id:"notebook_id--int",level:4},{value:"platform <em>: <code>str</code></em>",id:"platform--str-1",level:4},{value:'<span className="visually-hidden">PlatformKey</span>',id:"datahub.emitter.mcp_builder.PlatformKey",level:3},{value:'<span className="visually-hidden">ProjectIdKey</span>',id:"datahub.emitter.mcp_builder.ProjectIdKey",level:3},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---12",level:4},{value:"project_id <em>: <code>str</code></em>",id:"project_id--str",level:4},{value:'<span className="visually-hidden">SchemaKey</span>',id:"datahub.emitter.mcp_builder.SchemaKey",level:3},{value:"db_schema <em>: <code>str</code></em>",id:"db_schema--str",level:4},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---13",level:4},{value:'<span className="visually-hidden">UnitySchemaKey</span>',id:"datahub.emitter.mcp_builder.UnitySchemaKey",level:3},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---14",level:4},{value:"unity_schema <em>: <code>str</code></em>",id:"unity_schema--str",level:4},{value:'<span className="visually-hidden">UnitySchemaKeyWithMetastore</span>',id:"datahub.emitter.mcp_builder.UnitySchemaKeyWithMetastore",level:3},{value:"model_config <em>: ClassVarConfigDict</em> <em>= {}</em>",id:"model_config--classvarconfigdict---15",level:4},{value:"unity_schema <em>: <code>str</code></em>",id:"unity_schema--str-1",level:4},{value:'<span className="visually-hidden">add_dataset_to_container</span>',id:"datahub.emitter.mcp_builder.add_dataset_to_container",level:3},{value:'<span className="visually-hidden">add_domain_to_entity_wu</span>',id:"datahub.emitter.mcp_builder.add_domain_to_entity_wu",level:3},{value:'<span className="visually-hidden">add_entity_to_container</span>',id:"datahub.emitter.mcp_builder.add_entity_to_container",level:3},{value:'<span className="visually-hidden">add_owner_to_entity_wu</span>',id:"datahub.emitter.mcp_builder.add_owner_to_entity_wu",level:3},{value:'<span className="visually-hidden">add_structured_properties_to_entity_wu</span>',id:"datahub.emitter.mcp_builder.add_structured_properties_to_entity_wu",level:3},{value:'<span className="visually-hidden">add_tags_to_entity_wu</span>',id:"datahub.emitter.mcp_builder.add_tags_to_entity_wu",level:3},{value:'<span className="visually-hidden">create_embed_mcp</span>',id:"datahub.emitter.mcp_builder.create_embed_mcp",level:3},{value:'<span className="visually-hidden">entity_supports_aspect</span>',id:"datahub.emitter.mcp_builder.entity_supports_aspect",level:3},{value:'<span className="visually-hidden">gen_containers</span>',id:"datahub.emitter.mcp_builder.gen_containers",level:3},{value:'<span className="visually-hidden">mcps_from_mce</span>',id:"datahub.emitter.mcp_builder.mcps_from_mce",level:3}],o={toc:y},d="wrapper";function c(e){var{components:a}=e,t=r(e,["components"]);return(0,n.yg)(d,i(function(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(a){l(e,a,t[a])}))}return e}({},o,t),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("div",{className:"sphinx-api-docs"},(0,n.yg)("a",{id:"mcp-builder"}),(0,n.yg)("p",null,"These classes and methods make it easier to construct MetadataChangeProposals."),(0,n.yg)("h3",{id:"datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("span",{className:"visually-hidden"},"MetadataChangeProposalWrapper")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp."),(0,n.yg)("span",{class:"class-name"},"MetadataChangeProposalWrapper"),"(",(0,n.yg)("span",{class:"arg-name"},"entityType")," = ",(0,n.yg)("span",{class:"arg-default"},"'ENTITY_TYPE_UNSET'"),", ",(0,n.yg)("span",{class:"arg-name"},"changeType")," = ",(0,n.yg)("span",{class:"arg-default"},"'UPSERT'"),", ",(0,n.yg)("span",{class:"arg-name"},"entityUrn")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"entityKeyAspect")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"auditHeader")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"aspectName")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"aspect")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"systemMetadata")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"headers")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("inlineCode",{parentName:"p"},"object")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entityType")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"changeType")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Union"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),", ",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.ChangeTypeClass"},(0,n.yg)("inlineCode",{parentName:"a"},"ChangeTypeClass")),"]) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entityUrn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entityKeyAspect")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"_Aspect"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"auditHeader")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.KafkaAuditHeaderClass"},(0,n.yg)("inlineCode",{parentName:"a"},"KafkaAuditHeaderClass")),"]) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"aspectName")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"aspect")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"_Aspect"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"systemMetadata")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.SystemMetadataClass"},(0,n.yg)("inlineCode",{parentName:"a"},"SystemMetadataClass")),"]) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"headers")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"Dict"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]","])")))),(0,n.yg)("h4",{id:"as_workunit-treat_errors_as_warningsfalse-is_primary_sourcetrue"},"as_workunit(","*",", treat_errors_as_warnings=False, is_primary_source=True)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"treat_errors_as_warnings")," (",(0,n.yg)("inlineCode",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"is_primary_source")," (",(0,n.yg)("inlineCode",{parentName:"li"},"bool"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"))),(0,n.yg)("h4",{id:"aspect--optional_aspect--none"},"aspect ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"_Aspect"),"]")," ",(0,n.yg)("em",{parentName:"h4"},"= None")),(0,n.yg)("h4",{id:"aspectname--optionalstr--none"},"aspectName ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"str"),"]")," ",(0,n.yg)("em",{parentName:"h4"},"= None")),(0,n.yg)("h4",{id:"auditheader--optionalkafkaauditheaderclass--none"},"auditHeader ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("a",{parentName:"em",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.KafkaAuditHeaderClass"},(0,n.yg)("inlineCode",{parentName:"a"},"KafkaAuditHeaderClass")),"]")," ",(0,n.yg)("em",{parentName:"h4"},"= None")),(0,n.yg)("h4",{id:"changetype--unionstr-changetypeclass--upsert"},"changeType ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Union"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"str"),", ",(0,n.yg)("a",{parentName:"em",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.ChangeTypeClass"},(0,n.yg)("inlineCode",{parentName:"a"},"ChangeTypeClass")),"]")," ",(0,n.yg)("em",{parentName:"h4"},"= 'UPSERT'")),(0,n.yg)("h4",{id:"classmethod-construct_manyentityurn-aspects"},(0,n.yg)("em",{parentName:"h4"},"classmethod")," construct_many(entityUrn, aspects)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entityUrn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"aspects")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Sequence"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"_Aspect"),"]","])"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"List"),"[",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalWrapper")),"]")),(0,n.yg)("h4",{id:"entitykeyaspect--optional_aspect--none"},"entityKeyAspect ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"_Aspect"),"]")," ",(0,n.yg)("em",{parentName:"h4"},"= None")),(0,n.yg)("h4",{id:"entitytype--str--entity_type_unset"},"entityType ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))," ",(0,n.yg)("em",{parentName:"h4"},"= 'ENTITY_TYPE_UNSET'")),(0,n.yg)("h4",{id:"entityurn--optionalstr--none"},"entityUrn ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"str"),"]")," ",(0,n.yg)("em",{parentName:"h4"},"= None")),(0,n.yg)("h4",{id:"classmethod-from_objobj-tuplesfalse"},(0,n.yg)("em",{parentName:"h4"},"classmethod")," from_obj(obj, tuples=False)"),(0,n.yg)("p",null,"Attempt to deserialize into an MCPW, but fall back\nto a standard MCP if we\u2019re missing codegen\u2019d classes for the\nentity key or aspect."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"obj")," (",(0,n.yg)("inlineCode",{parentName:"li"},"dict"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"tuples")," (",(0,n.yg)("inlineCode",{parentName:"li"},"bool"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Union"),"[",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalWrapper")),", ",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.MetadataChangeProposalClass"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalClass")),"]")),(0,n.yg)("h4",{id:"classmethod-from_obj_require_wrapperobj-tuplesfalse"},(0,n.yg)("em",{parentName:"h4"},"classmethod")," from_obj_require_wrapper(obj, tuples=False)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"obj")," (",(0,n.yg)("inlineCode",{parentName:"li"},"dict"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"tuples")," (",(0,n.yg)("inlineCode",{parentName:"li"},"bool"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalWrapper")))),(0,n.yg)("h4",{id:"headers--optionaldictstr-str--none"},"headers ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"Dict"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"str"),", ",(0,n.yg)("inlineCode",{parentName:"em"},"str"),"]","]")," ",(0,n.yg)("em",{parentName:"h4"},"= None")),(0,n.yg)("h4",{id:"make_mcp"},"make_mcp()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.MetadataChangeProposalClass"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalClass")))),(0,n.yg)("h4",{id:"systemmetadata--optionalsystemmetadataclass--none"},"systemMetadata ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("a",{parentName:"em",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.SystemMetadataClass"},(0,n.yg)("inlineCode",{parentName:"a"},"SystemMetadataClass")),"]")," ",(0,n.yg)("em",{parentName:"h4"},"= None")),(0,n.yg)("h4",{id:"to_objtuplesfalse-simplified_structurefalse"},"to_obj(tuples=False, simplified_structure=False)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"tuples")," (",(0,n.yg)("inlineCode",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"simplified_structure")," (",(0,n.yg)("inlineCode",{parentName:"li"},"bool"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"dict"))),(0,n.yg)("h4",{id:"classmethod-try_from_mclmcl"},(0,n.yg)("em",{parentName:"h4"},"classmethod")," try_from_mcl(mcl)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("strong",{parentName:"li"},"mcl")," (",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.MetadataChangeLogClass"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeLogClass")),") \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Union"),"[",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalWrapper")),", ",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.MetadataChangeProposalClass"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalClass")),"]")),(0,n.yg)("h4",{id:"classmethod-try_from_mcpcmcpc"},(0,n.yg)("em",{parentName:"h4"},"classmethod")," try_from_mcpc(mcpc)"),(0,n.yg)("p",null,"Attempts to create a MetadataChangeProposalWrapper from a MetadataChangeProposalClass.\nNeatly handles unsupported, expected cases, such as unknown aspect types or non-json content type."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Raises:"),(0,n.yg)("strong",{parentName:"li"},"Exception if the generic aspect is invalid**"),",** ",(0,n.yg)("strong",{parentName:"li"},"e.g. contains invalid json.")," \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("strong",{parentName:"li"},"mcpc")," (",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.MetadataChangeProposalClass"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalClass")),") \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalWrapper")),"]")),(0,n.yg)("h4",{id:"validate"},"validate()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"bool")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.BigQueryDatasetKey"},(0,n.yg)("span",{className:"visually-hidden"},"BigQueryDatasetKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"BigQueryDatasetKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.BigQueryDatasetKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ProjectIdKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ProjectIdKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"project_id")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"dataset_id")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"dataset_id--str"},"dataset_id ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict--"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.BucketKey"},(0,n.yg)("span",{className:"visually-hidden"},"BucketKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"BucketKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.BucketKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"bucket_name")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"bucket_name--str"},"bucket_name ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---1"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.CatalogKey"},(0,n.yg)("span",{className:"visually-hidden"},"CatalogKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"CatalogKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.CatalogKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"catalog")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"catalog--str"},"catalog ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---2"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.CatalogKeyWithMetastore"},(0,n.yg)("span",{className:"visually-hidden"},"CatalogKeyWithMetastore")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"CatalogKeyWithMetastore"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.CatalogKeyWithMetastore",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.MetastoreKey"},(0,n.yg)("inlineCode",{parentName:"a"},"MetastoreKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"metastore")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"catalog")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"catalog--str-1"},"catalog ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---3"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("span",{className:"visually-hidden"},"ContainerKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"ContainerKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.ContainerKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.DatahubKey"},(0,n.yg)("inlineCode",{parentName:"a"},"DatahubKey"))),(0,n.yg)("p",null,"Base class for container guid keys. Most users should use one of the subclasses instead."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")")))),(0,n.yg)("h4",{id:"as_urn"},"as_urn()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"str"))),(0,n.yg)("h4",{id:"as_urn_typed"},"as_urn_typed()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/urns#datahub.metadata.urns.ContainerUrn"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerUrn")))),(0,n.yg)("h4",{id:"backcompat_env_as_instance--bool"},"backcompat_env_as_instance ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"bool"))),(0,n.yg)("h4",{id:"env--optionalstr"},"env ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"str"),"]")),(0,n.yg)("h4",{id:"guid_dict"},"guid_dict()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Dict"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]")),(0,n.yg)("h4",{id:"instance--optionalstr"},"instance ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"str"),"]")),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---4"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]","."),(0,n.yg)("h4",{id:"parent_key"},"parent_key()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey")),"]")),(0,n.yg)("h4",{id:"platform--str"},"platform ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"property_dict"},"property_dict()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Dict"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.DatabaseKey"},(0,n.yg)("span",{className:"visually-hidden"},"DatabaseKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"DatabaseKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.DatabaseKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"database")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"database--str"},"database ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---5"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.DatahubKey"},(0,n.yg)("span",{className:"visually-hidden"},"DatahubKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"DatahubKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.DatahubKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("inlineCode",{parentName:"p"},"BaseModel")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")")),(0,n.yg)("h4",{id:"guid"},"guid()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"str"))),(0,n.yg)("h4",{id:"guid_dict-1"},"guid_dict()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Dict"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]")),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---6"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.ExperimentKey"},(0,n.yg)("span",{className:"visually-hidden"},"ExperimentKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"ExperimentKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.ExperimentKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"id")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"id--str"},"id ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---7"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.FolderKey"},(0,n.yg)("span",{className:"visually-hidden"},"FolderKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"FolderKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.FolderKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"folder_abs_path")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"folder_abs_path--str"},"folder_abs_path ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---8"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.MetastoreKey"},(0,n.yg)("span",{className:"visually-hidden"},"MetastoreKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"MetastoreKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.MetastoreKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"metastore")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"metastore--str"},"metastore ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---9"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.NamespaceKey"},(0,n.yg)("span",{className:"visually-hidden"},"NamespaceKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"NamespaceKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.NamespaceKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("p",null,"For Iceberg namespaces (databases/schemas)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"namespace")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---10"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]","."),(0,n.yg)("h4",{id:"namespace--str"},"namespace ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.NotebookKey"},(0,n.yg)("span",{className:"visually-hidden"},"NotebookKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"NotebookKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.NotebookKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.DatahubKey"},(0,n.yg)("inlineCode",{parentName:"a"},"DatahubKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"notebook_id")," (",(0,n.yg)("em",{parentName:"li"},"int"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")")))),(0,n.yg)("h4",{id:"as_urn-1"},"as_urn()"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"str"))),(0,n.yg)("h4",{id:"instance--optionalstr-1"},"instance ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"em"},"str"),"]")),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---11"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]","."),(0,n.yg)("h4",{id:"notebook_id--int"},"notebook_id ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"int"))),(0,n.yg)("h4",{id:"platform--str-1"},"platform ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.PlatformKey"},(0,n.yg)("span",{className:"visually-hidden"},"PlatformKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"PlatformKey"),"()",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.PlatformKey",class:"hash-link"})),(0,n.yg)("p",null,"alias of ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.ProjectIdKey"},(0,n.yg)("span",{className:"visually-hidden"},"ProjectIdKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"ProjectIdKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.ProjectIdKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"project_id")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---12"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]","."),(0,n.yg)("h4",{id:"project_id--str"},"project_id ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.SchemaKey"},(0,n.yg)("span",{className:"visually-hidden"},"SchemaKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"SchemaKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.SchemaKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.DatabaseKey"},(0,n.yg)("inlineCode",{parentName:"a"},"DatabaseKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"database")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"schema")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"db_schema--str"},"db_schema ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str"))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---13"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]",".")),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.UnitySchemaKey"},(0,n.yg)("span",{className:"visually-hidden"},"UnitySchemaKey")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"UnitySchemaKey"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.UnitySchemaKey",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.CatalogKey"},(0,n.yg)("inlineCode",{parentName:"a"},"CatalogKey"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"catalog")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"unity_schema")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---14"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]","."),(0,n.yg)("h4",{id:"unity_schema--str"},"unity_schema ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.UnitySchemaKeyWithMetastore"},(0,n.yg)("span",{className:"visually-hidden"},"UnitySchemaKeyWithMetastore")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-text"},"class")," ",(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"UnitySchemaKeyWithMetastore"),"(",(0,n.yg)("span",{class:"arg-name"},"**data"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.UnitySchemaKeyWithMetastore",class:"hash-link"})),(0,n.yg)("p",null,"Bases: ",(0,n.yg)("a",{parentName:"p",href:"#datahub.emitter.mcp_builder.CatalogKeyWithMetastore"},(0,n.yg)("inlineCode",{parentName:"a"},"CatalogKeyWithMetastore"))),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"data")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Any"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"platform")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"instance")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"env")," (",(0,n.yg)("em",{parentName:"li"},"str")," ",(0,n.yg)("em",{parentName:"li"},"|")," ",(0,n.yg)("em",{parentName:"li"},"None"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"backcompat_env_as_instance")," (",(0,n.yg)("em",{parentName:"li"},"bool"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"metastore")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"catalog")," (",(0,n.yg)("em",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"unity_schema")," (",(0,n.yg)("em",{parentName:"li"},"str"),")")))),(0,n.yg)("h4",{id:"model_config--classvarconfigdict---15"},"model_config ",(0,n.yg)("em",{parentName:"h4"},": ClassVar","[ConfigDict]")," ",(0,n.yg)("em",{parentName:"h4"},"= {}")),(0,n.yg)("p",null,"Configuration for the model, should be a dictionary conforming to ","[ConfigDict][pydantic.config.ConfigDict]","."),(0,n.yg)("h4",{id:"unity_schema--str-1"},"unity_schema ",(0,n.yg)("em",{parentName:"h4"},": ",(0,n.yg)("inlineCode",{parentName:"em"},"str")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.add_dataset_to_container"},(0,n.yg)("span",{className:"visually-hidden"},"add_dataset_to_container")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"add_dataset_to_container"),"(",(0,n.yg)("span",{class:"arg-name"},"container_key"),", ",(0,n.yg)("span",{class:"arg-name"},"dataset_urn"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.add_dataset_to_container",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"container_key")," (",(0,n.yg)("inlineCode",{parentName:"li"},"TypeVar"),"(",(0,n.yg)("inlineCode",{parentName:"li"},"KeyType"),", bound= ",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey")),")) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"dataset_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.add_domain_to_entity_wu"},(0,n.yg)("span",{className:"visually-hidden"},"add_domain_to_entity_wu")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"add_domain_to_entity_wu"),"(",(0,n.yg)("span",{class:"arg-name"},"entity_urn"),", ",(0,n.yg)("span",{class:"arg-name"},"domain_urn"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.add_domain_to_entity_wu",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"domain_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.add_entity_to_container"},(0,n.yg)("span",{className:"visually-hidden"},"add_entity_to_container")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"add_entity_to_container"),"(",(0,n.yg)("span",{class:"arg-name"},"container_key"),", ",(0,n.yg)("span",{class:"arg-name"},"entity_type"),", ",(0,n.yg)("span",{class:"arg-name"},"entity_urn"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.add_entity_to_container",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"container_key")," (",(0,n.yg)("inlineCode",{parentName:"li"},"TypeVar"),"(",(0,n.yg)("inlineCode",{parentName:"li"},"KeyType"),", bound= ",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey")),")) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_type")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.add_owner_to_entity_wu"},(0,n.yg)("span",{className:"visually-hidden"},"add_owner_to_entity_wu")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"add_owner_to_entity_wu"),"(",(0,n.yg)("span",{class:"arg-name"},"entity_type"),", ",(0,n.yg)("span",{class:"arg-name"},"entity_urn"),", ",(0,n.yg)("span",{class:"arg-name"},"owner_urn"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.add_owner_to_entity_wu",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_type")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"owner_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.add_structured_properties_to_entity_wu"},(0,n.yg)("span",{className:"visually-hidden"},"add_structured_properties_to_entity_wu")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"add_structured_properties_to_entity_wu"),"(",(0,n.yg)("span",{class:"arg-name"},"entity_urn"),", ",(0,n.yg)("span",{class:"arg-name"},"structured_properties"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.add_structured_properties_to_entity_wu",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"structured_properties")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Dict"),"[",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/urns#datahub.metadata.urns.StructuredPropertyUrn"},(0,n.yg)("inlineCode",{parentName:"a"},"StructuredPropertyUrn")),", ",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]) \u2013 "))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.add_tags_to_entity_wu"},(0,n.yg)("span",{className:"visually-hidden"},"add_tags_to_entity_wu")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"add_tags_to_entity_wu"),"(",(0,n.yg)("span",{class:"arg-name"},"entity_type"),", ",(0,n.yg)("span",{class:"arg-name"},"entity_urn"),", ",(0,n.yg)("span",{class:"arg-name"},"tags"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.add_tags_to_entity_wu",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_type")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"tags")," (",(0,n.yg)("inlineCode",{parentName:"li"},"List"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.create_embed_mcp"},(0,n.yg)("span",{className:"visually-hidden"},"create_embed_mcp")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"create_embed_mcp"),"(",(0,n.yg)("span",{class:"arg-name"},"urn"),", ",(0,n.yg)("span",{class:"arg-name"},"embed_url"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.create_embed_mcp",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"embed_url")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalWrapper"))))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.entity_supports_aspect"},(0,n.yg)("span",{className:"visually-hidden"},"entity_supports_aspect")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"entity_supports_aspect"),"(",(0,n.yg)("span",{class:"arg-name"},"entity_type"),", ",(0,n.yg)("span",{class:"arg-name"},"aspect_type"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.entity_supports_aspect",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"entity_type")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"aspect_type")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Type"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"TypeVar"),"(",(0,n.yg)("inlineCode",{parentName:"li"},"Aspect"),", bound= ",(0,n.yg)("inlineCode",{parentName:"li"},"_Aspect"),")]",") \u2013 "))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"bool")))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.gen_containers"},(0,n.yg)("span",{className:"visually-hidden"},"gen_containers")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"gen_containers"),"(",(0,n.yg)("span",{class:"arg-name"},"container_key"),", ",(0,n.yg)("span",{class:"arg-name"},"name"),", ",(0,n.yg)("span",{class:"arg-name"},"sub_types"),", ",(0,n.yg)("span",{class:"arg-name"},"parent_container_key")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"extra_properties")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"structured_properties")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"domain_urn")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"description")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"owner_urn")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"external_url")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"tags")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"qualified_name")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"created")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),", ",(0,n.yg)("span",{class:"arg-name"},"last_modified")," = ",(0,n.yg)("span",{class:"arg-default"},"None"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.gen_containers",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"container_key")," (",(0,n.yg)("inlineCode",{parentName:"li"},"TypeVar"),"(",(0,n.yg)("inlineCode",{parentName:"li"},"KeyType"),", bound= ",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey")),")) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"name")," (",(0,n.yg)("inlineCode",{parentName:"li"},"str"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"sub_types")," (",(0,n.yg)("inlineCode",{parentName:"li"},"List"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"parent_container_key")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp_builder.ContainerKey"},(0,n.yg)("inlineCode",{parentName:"a"},"ContainerKey")),"]) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"extra_properties")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"Dict"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]","])"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"structured_properties")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"Dict"),"[",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/urns#datahub.metadata.urns.StructuredPropertyUrn"},(0,n.yg)("inlineCode",{parentName:"a"},"StructuredPropertyUrn")),", ",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]]) \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"domain_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"description")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"owner_urn")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"external_url")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"tags")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"List"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]","])"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"qualified_name")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"str"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"created")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"int"),"]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"last_modified")," (",(0,n.yg)("inlineCode",{parentName:"li"},"Optional"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"int"),"]",")"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("inlineCode",{parentName:"li"},"MetadataWorkUnit"),"]"))),(0,n.yg)("h3",{id:"datahub.emitter.mcp_builder.mcps_from_mce"},(0,n.yg)("span",{className:"visually-hidden"},"mcps_from_mce")),(0,n.yg)("div",{className:"h3-block"},(0,n.yg)("div",{className:"section-heading"},(0,n.yg)("span",{class:"class-owner"},"datahub.emitter.mcp_builder."),(0,n.yg)("span",{class:"class-name"},"mcps_from_mce"),"(",(0,n.yg)("span",{class:"arg-name"},"mce"),")",(0,n.yg)("a",{href:"#datahub.emitter.mcp_builder.mcps_from_mce",class:"hash-link"})),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Parameters:"),(0,n.yg)("strong",{parentName:"li"},"mce")," (",(0,n.yg)("a",{parentName:"li",href:"/docs/python-sdk/models#datahub.metadata.schema_classes.MetadataChangeEventClass"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeEventClass")),") \u2013 "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Return type:"),(0,n.yg)("inlineCode",{parentName:"li"},"Iterable"),"[",(0,n.yg)("a",{parentName:"li",href:"#datahub.emitter.mcp.MetadataChangeProposalWrapper"},(0,n.yg)("inlineCode",{parentName:"a"},"MetadataChangeProposalWrapper")),"]")))))}c.isMDXComponent=!0}}]);