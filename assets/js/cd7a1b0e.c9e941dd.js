"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[84014],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>m});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(a),g=r,m=c["".concat(u,".").concat(g)]||c[g]||d[g]||o;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},48919:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});a(96540);var n=a(15680);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const l={title:"prefect-datahub",slug:"/metadata-ingestion-modules/prefect-plugin",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion-modules/prefect-plugin/README.md"},u="prefect-datahub",s={unversionedId:"metadata-ingestion-modules/prefect-plugin/README",id:"version-1.1.0/metadata-ingestion-modules/prefect-plugin/README",title:"prefect-datahub",description:"Emit flows & tasks metadata to DataHub REST API with prefect-datahub",source:"@site/versioned_docs/version-1.1.0/metadata-ingestion-modules/prefect-plugin/README.md",sourceDirName:"metadata-ingestion-modules/prefect-plugin",slug:"/metadata-ingestion-modules/prefect-plugin",permalink:"/docs/1.1.0/metadata-ingestion-modules/prefect-plugin",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion-modules/prefect-plugin/README.md",tags:[],version:"1.1.0",frontMatter:{title:"prefect-datahub",slug:"/metadata-ingestion-modules/prefect-plugin",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion-modules/prefect-plugin/README.md"}},p={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Features",id:"features",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"1. Set up DataHub",id:"1-set-up-datahub",level:3},{value:"2. Configure DataHub Emitter",id:"2-configure-datahub-emitter",level:3},{value:"3. Use DataHub Emitter in Your Workflows",id:"3-use-datahub-emitter-in-your-workflows",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Support",id:"support",level:2},{value:"License",id:"license",level:2}],d={toc:c},g="wrapper";function m(e){var{components:t}=e,a=i(e,["components"]);return(0,n.yg)(g,o(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){r(e,t,a[t])}))}return e}({},d,a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"prefect-datahub"},"prefect-datahub"),(0,n.yg)("p",null,"Emit flows & tasks metadata to DataHub REST API with ",(0,n.yg)("inlineCode",{parentName:"p"},"prefect-datahub")),(0,n.yg)("p",{align:"center"},(0,n.yg)("a",{href:"https://pypi.python.org/pypi/prefect-datahub/",alt:"PyPI version"},(0,n.yg)("img",{alt:"PyPI",src:"https://img.shields.io/pypi/v/prefect-datahub?color=0052FF&labelColor=090422"})),(0,n.yg)("a",{href:"https://github.com/datahub-project/datahub/",alt:"Stars"},(0,n.yg)("img",{src:"https://img.shields.io/github/stars/datahub-project/datahub?color=0052FF&labelColor=090422"})),(0,n.yg)("a",{href:"https://pypistats.org/packages/prefect-datahub/",alt:"Downloads"},(0,n.yg)("img",{src:"https://img.shields.io/pypi/dm/prefect-datahub?color=0052FF&labelColor=090422"})),(0,n.yg)("a",{href:"https://github.com/datahub-project/datahub/pulse",alt:"Activity"},(0,n.yg)("img",{src:"https://img.shields.io/github/commit-activity/m/datahub-project/datahub?color=0052FF&labelColor=090422"})),(0,n.yg)("br",null),(0,n.yg)("a",{href:"https://datahubspace.slack.com",alt:"Slack"},(0,n.yg)("img",{src:"https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&labelColor=090422&logo=slack"}))),(0,n.yg)("h2",{id:"introduction"},"Introduction"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"prefect-datahub")," collection allows you to easily integrate DataHub's metadata ingestion capabilities into your Prefect workflows. With this collection, you can emit metadata about your flows, tasks, and workspace to DataHub's metadata service."),(0,n.yg)("h2",{id:"features"},"Features"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Seamless integration with Prefect workflows"),(0,n.yg)("li",{parentName:"ul"},"Support for ingesting metadata of flows, tasks, and workspaces to DataHub GMS REST API"),(0,n.yg)("li",{parentName:"ul"},"Easy configuration using Prefect blocks")),(0,n.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Python 3.8+"),(0,n.yg)("li",{parentName:"ul"},"Prefect 2.0.0+ and < 3.0.0+"),(0,n.yg)("li",{parentName:"ul"},"A running instance of DataHub")),(0,n.yg)("h2",{id:"installation"},"Installation"),(0,n.yg)("p",null,"Install ",(0,n.yg)("inlineCode",{parentName:"p"},"prefect-datahub")," using pip:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"pip install prefect-datahub\n")),(0,n.yg)("p",null,"We recommend using a Python virtual environment manager such as pipenv, conda, or virtualenv."),(0,n.yg)("h2",{id:"getting-started"},"Getting Started"),(0,n.yg)("h3",{id:"1-set-up-datahub"},"1. Set up DataHub"),(0,n.yg)("p",null,"Before using ",(0,n.yg)("inlineCode",{parentName:"p"},"prefect-datahub"),", you need to deploy an instance of DataHub. Follow the instructions on the ",(0,n.yg)("a",{parentName:"p",href:"/docs/quickstart"},"DataHub Quickstart page")," to set up DataHub."),(0,n.yg)("p",null,"After successful deployment, the DataHub GMS service should be running on ",(0,n.yg)("inlineCode",{parentName:"p"},"http://localhost:8080")," if deployed locally."),(0,n.yg)("h3",{id:"2-configure-datahub-emitter"},"2. Configure DataHub Emitter"),(0,n.yg)("p",null,"Save your DataHub configuration as a Prefect block:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'from prefect_datahub.datahub_emitter import DatahubEmitter\n\ndatahub_emitter = DatahubEmitter(\n    datahub_rest_url="http://localhost:8080",\n    env="DEV",\n    platform_instance="local_prefect",\n    token=None,  # generate auth token in the datahub and provide here if gms endpoint is secure\n)\ndatahub_emitter.save("datahub-emitter-test")\n')),(0,n.yg)("p",null,"Configuration options:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Config"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Default"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"datahub_rest_url"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"str")),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"http://localhost:8080")),(0,n.yg)("td",{parentName:"tr",align:null},"DataHub GMS REST URL")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"env"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"str")),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"PROD")),(0,n.yg)("td",{parentName:"tr",align:null},"Environment for assets (see ",(0,n.yg)("a",{parentName:"td",href:"/docs/graphql/enums/#fabrictype"},"FabricType"),")")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"platform_instance"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"str")),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"None")),(0,n.yg)("td",{parentName:"tr",align:null},"Platform instance for assets (see ",(0,n.yg)("a",{parentName:"td",href:"/docs/platform-instances/"},"Platform Instances"),")")))),(0,n.yg)("h3",{id:"3-use-datahub-emitter-in-your-workflows"},"3. Use DataHub Emitter in Your Workflows"),(0,n.yg)("p",null,"Here's an example of how to use the DataHub Emitter in a Prefect workflow:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-python"},'from prefect import flow, task\nfrom prefect_datahub.datahub_emitter import DatahubEmitter\nfrom prefect_datahub.entities import Dataset\n\ndatahub_emitter_block = DatahubEmitter.load("datahub-emitter-test")\n\n@task(name="Extract", description="Extract the data")\ndef extract():\n    return "This is data"\n\n@task(name="Transform", description="Transform the data")\ndef transform(data, datahub_emitter):\n    transformed_data = data.split(" ")\n    datahub_emitter.add_task(\n        inputs=[Dataset("snowflake", "mydb.schema.tableX")],\n        outputs=[Dataset("snowflake", "mydb.schema.tableY")],\n    )\n    return transformed_data\n\n@flow(name="ETL", description="Extract transform load flow")\ndef etl():\n    datahub_emitter = datahub_emitter_block\n    data = extract()\n    transformed_data = transform(data, datahub_emitter)\n    datahub_emitter.emit_flow()\n\nif __name__ == "__main__":\n    etl()\n')),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Note"),": To emit task metadata, you must call ",(0,n.yg)("inlineCode",{parentName:"p"},"emit_flow()")," at the end of your flow. Otherwise, no metadata will be emitted."),(0,n.yg)("h2",{id:"advanced-usage"},"Advanced Usage"),(0,n.yg)("p",null,"For more advanced usage and configuration options, please refer to the ",(0,n.yg)("a",{parentName:"p",href:"/docs/lineage/prefect/"},"prefect-datahub documentation"),"."),(0,n.yg)("h2",{id:"contributing"},"Contributing"),(0,n.yg)("p",null,"We welcome contributions to ",(0,n.yg)("inlineCode",{parentName:"p"},"prefect-datahub"),"! Please refer to our ",(0,n.yg)("a",{parentName:"p",href:"/docs/contributing"},"Contributing Guidelines")," for more information on how to get started."),(0,n.yg)("h2",{id:"support"},"Support"),(0,n.yg)("p",null,"If you encounter any issues or have questions, you can:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Open an issue in the ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/issues"},"DataHub GitHub repository")),(0,n.yg)("li",{parentName:"ul"},"Join the ",(0,n.yg)("a",{parentName:"li",href:"https://datahubspace.slack.com"},"DataHub Slack community")),(0,n.yg)("li",{parentName:"ul"},"Seek help in the ",(0,n.yg)("a",{parentName:"li",href:"https://prefect.io/slack"},"Prefect Slack community"))),(0,n.yg)("h2",{id:"license"},"License"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"prefect-datahub")," is released under the Apache 2.0 license. See the ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub/blob/master/LICENSE"},"LICENSE")," file for details."))}m.isMDXComponent=!0}}]);