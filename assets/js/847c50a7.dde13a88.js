"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[55178],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>m});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),g=r,m=p["".concat(s,".").concat(g)]||p[g]||d[g]||o;return a?n.createElement(m,i(i({ref:t},u),{},{components:a})):n.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},78765:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>p});a(96540);var n=a(15680);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const l={title:"Centralized Management",slug:"/features/feature-guides/logical-models/centralized-management",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/features/feature-guides/logical-models/centralized-management.md"},s="Centralized Management",c={unversionedId:"docs/features/feature-guides/logical-models/centralized-management",id:"docs/features/feature-guides/logical-models/centralized-management",title:"Centralized Management",description:"This feature is currently in private beta in DataHub Cloud. Reach out to your DataHub Cloud representative to learn more.",source:"@site/genDocs/docs/features/feature-guides/logical-models/centralized-management.md",sourceDirName:"docs/features/feature-guides/logical-models",slug:"/features/feature-guides/logical-models/centralized-management",permalink:"/docs/features/feature-guides/logical-models/centralized-management",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/features/feature-guides/logical-models/centralized-management.md",tags:[],version:"current",frontMatter:{title:"Centralized Management",slug:"/features/feature-guides/logical-models/centralized-management",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/features/feature-guides/logical-models/centralized-management.md"},sidebar:"overviewSidebar",previous:{title:"Logical Models",permalink:"/docs/features/feature-guides/logical-models/overview"},next:{title:"Metadata Tests",permalink:"/docs/tests/metadata-tests"}},u={},p=[{value:"How It Works",id:"how-it-works",level:2},{value:"Getting Started",id:"getting-started",level:2}],d=(g="FeatureAvailability",function(e){return console.warn("Component "+g+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.yg)("div",e)});var g;const m={toc:p},y="wrapper";function f(e){var{components:t}=e,a=i(e,["components"]);return(0,n.yg)(y,o(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){r(e,t,a[t])}))}return e}({},m,a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"centralized-management"},"Centralized Management"),(0,n.yg)(d,{saasOnly:!0,mdxType:"FeatureAvailability"}),(0,n.yg)("admonition",{type:"info"},(0,n.yg)("p",{parentName:"admonition"},"This feature is currently in private beta in DataHub Cloud. Reach out to your DataHub Cloud representative to learn more.")),(0,n.yg)("h2",{id:"how-it-works"},"How It Works"),(0,n.yg)("p",null,"Centralized Management allows governance of all physical children at the logical parent level. This means that metadata changes made to the logical model will be propagated to all its physical children."),(0,n.yg)("table",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Metadata at Logical Level"),(0,n.yg)("th",null,"Change at Physical Level")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Tags"),(0,n.yg)("td",null,"\u2705 Tags are replicated on physical children.")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Glossary Terms"),(0,n.yg)("td",null,"\u2705 Terms are replicated on physical children.")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Documentation"),(0,n.yg)("td",null,"\u2705 The description shown on the logical parent is copied to physical children. If the child has its own description, that will be shown instead.")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Ownership"),(0,n.yg)("td",null,"\u2705\ufe0f Owners are replicated on physical children. If the same user is an owner for multiple ownership types, only one ownership type replicated.")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Structured Properties"),(0,n.yg)("td",null,"\u2705 Structured properties are replicated on physical children. If the child has an existing value for the same property, it will be replaced, even if that property is multi-valued.")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Domains"),(0,n.yg)("td",null,"\u274c Domains are not propagated.")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Data Products"),(0,n.yg)("td",null,"\u274c Data products are not propagated.")),(0,n.yg)("tr",null,(0,n.yg)("td",null,"Data Quality Assertions"),(0,n.yg)("td",null,"\u274c Assertions are not propagated."))),(0,n.yg)("p",null,"You can hover over propagated attributes to see when and from where this information came."),(0,n.yg)("p",{style:{display:"flex",flexDirection:"row",justifyContent:"center",gap:"0px"}},(0,n.yg)("img",{width:"60%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/logical/description-propagated.png"}),(0,n.yg)("img",{width:"40%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/logical/tag-propagated.png"})),(0,n.yg)("h2",{id:"getting-started"},"Getting Started"),(0,n.yg)("p",null,"Centralized Management requires two automations. They currently must be created manually. This can be done via the ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub/blob/master/docs/api/graphql"},"GraphQL")," mutations below."),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"You can execute these mutations by visiting ",(0,n.yg)("inlineCode",{parentName:"p"},"<your-datahub-url>/api/graphiql"),".")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-graphql"},'mutation UpsertLogicalModelsPropagationAutomation {\n  upsertActionPipeline(\n    urn: "urn:li:dataHubAction:logical-models"\n    input: {\n      name: "Logical Models"\n      category: "System"\n      type: "datahub_integrations.propagation.propagation_v2.propagation_v2_action.PropagationV2Action"\n      description: "Propagation metadata from logical parents to their children"\n      config: {\n        recipe: """\n        {"name": "logical models", "action": {"type": "datahub_integrations.propagation.propagation_v2.propagation_v2_action.PropagationV2Action", "config": {"enabled": true, "propagation_rule": {"metadata_propagated": {"tags": {}, "terms": {}, "documentation": {}, "ownership": {}, "structured_properties": {}}, "origin_urn_resolution": {"lookup_type": "relationship", "relationship_type": "PhysicalInstanceOf"}, "target_urn_resolution": [{"lookup_type": "relationship", "relationship_type": "PhysicalInstanceOf"}]}}}}\n        """\n        executorId: "default"\n      }\n    }\n  )\n}\n')),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-graphql"},'mutation UpsertSchemaFieldPropagationAutomation {\n  upsertActionPipeline(\n    urn: "urn:li:dataHubAction:schema-field"\n    input: {\n      name: "Schema Fields"\n      category: "System"\n      type: "datahub_integrations.propagation.propagation_v2.propagation_v2_action.PropagationV2Action"\n      description: "Propagate tags, terms, and documentation on SchemaMetadata / EditableSchemaMetadata to aspects directly on schema fields"\n      config: {\n        recipe: """\n        {"name": "schema fields", "action": {"type": "datahub_integrations.propagation.propagation_v2.propagation_v2_action.PropagationV2Action", "config": {"enabled": true, "propagation_rule": {"metadata_propagated": {"tags": {"omit_attribution_is_propagated": true}, "terms": {"omit_attribution_is_propagated": true}, "documentation": {"omit_attribution_is_propagated": true}}, "origin_urn_resolution": {"lookup_type": "entity", "entity_type": "dataset", "query":"platform:logical"}, "target_urn_resolution": "schema_field"}}}}\n        """\n        executorId: "default"\n      }\n    }\n  )\n}\n')))}f.isMDXComponent=!0}}]);