namespace com.linkedin.dataset

import com.linkedin.common.AuditStamp
import com.linkedin.common.DatasetUrn
import com.linkedin.common.Urn


/**
 * Upstream lineage information about a dataset including the source reporting the lineage
 */
record Upstream {

  /**
   * Audit stamp containing who reported the lineage and when.
   */
  auditStamp: AuditStamp = {
    "time": 0,
    "actor": "urn:li:corpuser:unknown"
  }

  /**
   * Audit stamp containing who created the lineage and when.
   */
  created: optional AuditStamp

  /**
   * The upstream dataset the lineage points to
   */
  @Relationship = {
    "name": "DownstreamOf",
    "entityTypes": [ "dataset" ],
    "isLineage": true,
    "createdOn": "upstreams/*/created/time"
    "createdActor": "upstreams/*/created/actor"
    "updatedOn": "upstreams/*/auditStamp/time"
    "updatedActor": "upstreams/*/auditStamp/actor"
    "properties": "upstreams/*/properties"
    "via": "upstreams/*/query"
  }
  @Searchable = {
    "fieldName": "upstreams",
    "hasValuesFieldName": "hasUpstreams",
    "fieldType": "URN",
    "queryByDefault": false
  }
  dataset: DatasetUrn

  /**
   * The type of the lineage
   */
  type: DatasetLineageType

  /**
   * A generic properties bag that allows us to store specific information on this graph edge.
   */
  properties: optional map[string, string]

  /**
  * If the lineage is generated by a query, a reference to the query
  */
  query: optional Urn
}