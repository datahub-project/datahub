namespace com.linkedin.incident

import com.linkedin.common.AuditStamp

/**
 * Information about an incident raised on an asset
 */
record IncidentStatus {
  /**
  * The top-level state of the incident, whether it's active or resolved.
  */
  @Searchable = {
    "addToFilters": true,
    "filterNameOverride": "Status"
  }
  state: enum IncidentState {
    /**
     * The incident is ongoing, or active.
     */
    ACTIVE
    /**
     * The incident is resolved.
     */
    RESOLVED
  }

  /**
   * The lifecycle stage for the incident - Null means no stage was assigned yet.
   * In the future, we may add CUSTOM here with a customStage string field for user-defined stages.
   */
  @Searchable = {
    "addToFilters": true,
    "filterNameOverride": "Stage"
  }
  stage: optional enum IncidentStage {
    /**
     * The impact and priority of the incident is being actively assessed.
     */
    TRIAGE
    /**
     * The incident root cause is being investigated.
     */
    INVESTIGATION
    /**
     * The incident is in the remediation stage.
     */
    WORK_IN_PROGRESS
    /**
     * The incident is in the resolved as completed stage.
     */
    FIXED
    /**
     * The incident is in the resolved with no action required state, e.g. the
     * incident was a false positive, or was expected.
     */
    NO_ACTION_REQUIRED
  }

  /**
  * Optional message associated with the incident
  */
  message: optional string

  /**
   * The time at which the request was initially created
   */
  @Searchable = {
    "/time": {
        "fieldName": "lastUpdated",
        "fieldType": "COUNT"
      }
  }
  lastUpdated: AuditStamp
}
