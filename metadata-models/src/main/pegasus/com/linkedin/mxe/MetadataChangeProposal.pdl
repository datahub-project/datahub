namespace com.linkedin.mxe

import com.linkedin.avro2pegasus.events.KafkaAuditHeader
import com.linkedin.common.Urn
import com.linkedin.events.metadata.ChangeType

/**
 * Kafka event for proposing a metadata change for an entity. A corresponding MetadataChangeLog is emitted when the change is accepted and committed, otherwise a FailedMetadataChangeProposal will be emitted instead.
 */
record MetadataChangeProposal {

  /**
   * Kafka audit header. Currently remains unused in the open source.
   */
  auditHeader: optional KafkaAuditHeader

  /**
   * Type of the entity being written to
   */
  entityType: string

  /**
   * Urn of the entity being written
   **/
  entityUrn: optional Urn,

  /**
   * Key aspect of the entity being written
   */
  entityKeyAspect: optional GenericAspect

  /**
   * Type of change being proposed
   */
  changeType: ChangeType

  /**
   * Aspect of the entity being written to
   * Not filling this out implies that the writer wants to affect the entire entity
   * Note: This is only valid for CREATE, UPSERT, and DELETE operations.
   **/
  aspectName: optional string

  /**
   * The value of the new aspect.
   */
  aspect: optional GenericAspect

  /**
   * System properties that one might want to attach to an event
   **/
  systemMetadata: optional SystemMetadata

  /**
  * Headers - intended to mimic http headers
  */
  headers: optional map[string, string]
}
