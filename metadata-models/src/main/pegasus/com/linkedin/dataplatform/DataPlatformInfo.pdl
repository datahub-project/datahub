namespace com.linkedin.dataplatform

import com.linkedin.common.Url

/**
 * Information about a data platform
 */
@Aspect = {
  "name": "dataPlatformInfo"
}
record DataPlatformInfo {

  /**
   * Name of the data platform
   */
  @validate.strlen.max = 15
  @Searchable = {
    "fieldType": "WORD_GRAM",
    "enableAutocomplete": false,
    "boostScore": 10.0,
    "fieldNameAliases": [ "_entityName" ],
    "searchTier": 1,
    "searchLabel": "entityName"
  }
  name: string

  /**
   * The name that will be used for displaying a platform type.
   */
  @Searchable = {
    "fieldType": "WORD_GRAM",
    "enableAutocomplete": true,
    "boostScore": 10.0
  }
  displayName: optional string

  /**
   * Platform type this data platform describes
   */
  type:
    /**
     * Platform types available at LinkedIn
     */
    enum PlatformType {

      /**
       * Value for a file system, e.g. hdfs
       */
      FILE_SYSTEM

      /**
       * Value for a key value store, e.g. espresso, voldemort
       */
      KEY_VALUE_STORE

      /**
       * Value for a message broker, e.g. kafka
       */
      MESSAGE_BROKER

      /**
       * Value for an object store, e.g. ambry
       */
      OBJECT_STORE

      /**
       * Value for an OLAP datastore, e.g. pinot
       */
      OLAP_DATASTORE

      /**
       * Value for other platforms, e.g salesforce, dovetail
       */
      OTHERS

      /**
       * Value for a query engine, e.g. presto
       */
      QUERY_ENGINE

      /**
       * Value for a relational database, e.g. oracle, mysql
       */
      RELATIONAL_DB

      /**
       * Value for a search engine, e.g seas
       */
      SEARCH_ENGINE
    }

  /**
   * The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle
   */
  datasetNameDelimiter: string

  /**
   * The URL for a logo associated with the platform
   */
  logoUrl: optional Url
}
