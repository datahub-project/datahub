# Override to use PostgreSQL as a backing store for datahub-gms.
---
services:
  datahub-gms:
    env_file:
      - datahub-gms/env/docker-without-neo4j.env
      - datahub-gms/env/docker.postgres.env
    environment:
      - DATAHUB_SERVER_TYPE=${DATAHUB_SERVER_TYPE:-quickstart}
      - DATAHUB_TELEMETRY_ENABLED=${DATAHUB_TELEMETRY_ENABLED:-true}
      - METADATA_SERVICE_AUTH_ENABLED=${METADATA_SERVICE_AUTH_ENABLED:-false}
    depends_on:
      datahub-upgrade:
        condition: service_completed_successfully
    volumes:
      - ${HOME}/.datahub/plugins:/etc/datahub/plugins

  datahub-upgrade:
    hostname: datahub-upgrade
    image: ${DATAHUB_UPGRADE_IMAGE:-acryldata/datahub-upgrade}:${DATAHUB_VERSION:-head}
    command:
      - -u
      - SystemUpdate
    build:
      context: ../
      dockerfile: docker/datahub-upgrade/Dockerfile
    env_file:
      - datahub-upgrade/env/docker-without-neo4j.env
      - datahub-upgrade/env/docker.postgres.env
    depends_on:
      postgres-setup:
        condition: service_completed_successfully
      elasticsearch-setup:
        condition: service_completed_successfully
      kafka-setup:
        condition: service_completed_successfully

  postgres-setup:
    hostname: postgres-setup
    image: ${DATAHUB_POSTGRES_SETUP_IMAGE:-acryldata/datahub-postgres-setup}:${DATAHUB_VERSION:-head}
    build:
      context: ../
      dockerfile: docker/postgres-setup/Dockerfile
    env_file: postgres-setup/env/docker.env
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      datahub_setup_job: true

  postgres:
    hostname: postgres
    image: postgres:${DATAHUB_POSTGRES_VERSION:-12.3}
    env_file: postgres/env/docker.env
    ports:
      - '5432:5432'
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      start_period: 20s
      interval: 2s
      timeout: 10s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgresdata:/var/lib/postgresql/data

  kafka-setup:
    environment:
      - DATAHUB_PRECREATE_TOPICS=${DATAHUB_PRECREATE_TOPICS:-false}

volumes:
  postgresdata:
