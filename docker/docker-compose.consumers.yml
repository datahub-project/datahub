# Service definitions for standalone Kafka consumer containers.
services:
  datahub-gms:
    environment:
    - MAE_CONSUMER_ENABLED=false
    - MCE_CONSUMER_ENABLED=false
  datahub-mae-consumer:
    hostname: datahub-mae-consumer
    image: ${DATAHUB_MAE_CONSUMER_IMAGE:-acryldata/datahub-mae-consumer}:${DATAHUB_VERSION:-head}
    ports:
    - 9091:9091
    build:
      context: ../
      dockerfile: docker/datahub-mae-consumer/Dockerfile
    env_file: datahub-mae-consumer/env/docker.env
    environment:
      - KAFKA_CONSUMER_STOP_ON_DESERIALIZATION_ERROR=${KAFKA_CONSUMER_STOP_ON_DESERIALIZATION_ERROR:-true}
      - KAFKA_CONSUMER_HEALTH_CHECK_ENABLED=${KAFKA_CONSUMER_HEALTH_CHECK_ENABLED:-true}
    depends_on:
      neo4j:
        condition: service_healthy
  datahub-mce-consumer:
    hostname: datahub-mce-consumer
    image: ${DATAHUB_MCE_CONSUMER_IMAGE:-acryldata/datahub-mce-consumer}:${DATAHUB_VERSION:-head}
    ports:
    - 9090:9090
    build:
      context: ../
      dockerfile: docker/datahub-mce-consumer/Dockerfile
    env_file: datahub-mce-consumer/env/docker.env
    environment:
    - DATAHUB_SERVER_TYPE=${DATAHUB_SERVER_TYPE:-quickstart}
    - DATAHUB_TELEMETRY_ENABLED=${DATAHUB_TELEMETRY_ENABLED:-true}
    - NEO4J_HOST=http://neo4j:7474
    - NEO4J_URI=bolt://neo4j
    - NEO4J_USERNAME=neo4j
    - NEO4J_PASSWORD=datahub
    - GRAPH_SERVICE_IMPL=neo4j
    - KAFKA_CONSUMER_STOP_ON_DESERIALIZATION_ERROR=${KAFKA_CONSUMER_STOP_ON_DESERIALIZATION_ERROR:-true}
    - KAFKA_CONSUMER_HEALTH_CHECK_ENABLED=${KAFKA_CONSUMER_HEALTH_CHECK_ENABLED:-true}
    depends_on:
      neo4j:
        condition: service_healthy
