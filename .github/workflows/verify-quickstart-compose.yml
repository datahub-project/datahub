name: Verify Quickstart Compose

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
jobs:
  verify-quickstart-compose-updated:
    name: Verify quickstart compose file is up-to-date
    runs-on: ubuntu-latest
    env:
      THRESHOLD_GB: 4.3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate quickstart compose file
        run: |
          ./gradlew :docker:generateQuickstartComposeConfig

      - name: Verify generated file
        # If there are build changes, then the generated file will be different from the one in the PR
        run: |
          git diff --exit-code docker/quickstart/docker-compose.quickstart-profile.yml

      - name: Validate memory requirements
        run: |
          echo "Validating minimum memory requirements..."
          COMPOSE_FILE="docker/quickstart/docker-compose.quickstart-profile.yml"

          total_mb=0

          # Parse OpenSearch OPENSEARCH_JAVA_OPTS (-Xmx)
          if opensearch_xmx=$(grep -A 50 'opensearch:' "$COMPOSE_FILE" | grep 'OPENSEARCH_JAVA_OPTS:' | grep -oP '\-Xmx\K[0-9]+[mMgG]' | head -1); then
            if [[ $opensearch_xmx =~ ([0-9]+)[gG] ]]; then
              mb=$((${BASH_REMATCH[1]} * 1024))
            elif [[ $opensearch_xmx =~ ([0-9]+)[mM] ]]; then
              mb=${BASH_REMATCH[1]}
            fi
            echo "opensearch: ${mb}MB"
            total_mb=$((total_mb + mb))
          fi

          # Parse datahub-gms JAVA_OPTS (-Xmx)
          if gms_xmx=$(grep -A 100 'datahub-gms-quickstart:' "$COMPOSE_FILE" | grep 'JAVA_OPTS:' | grep -oP '\-Xmx\K[0-9]+[mMgG]' | head -1); then
            if [[ $gms_xmx =~ ([0-9]+)[gG] ]]; then
              mb=$((${BASH_REMATCH[1]} * 1024))
            elif [[ $gms_xmx =~ ([0-9]+)[mM] ]]; then
              mb=${BASH_REMATCH[1]}
            fi
            echo "datahub-gms: ${mb}MB"
            total_mb=$((total_mb + mb))
          fi

          # Parse frontend JAVA_OPTS (-Xmx)
          if frontend_xmx=$(grep -A 50 'frontend-quickstart:' "$COMPOSE_FILE" | grep 'JAVA_OPTS:' | grep -oP '\-Xmx\K[0-9]+[mMgG]' | head -1); then
            if [[ $frontend_xmx =~ ([0-9]+)[gG] ]]; then
              mb=$((${BASH_REMATCH[1]} * 1024))
            elif [[ $frontend_xmx =~ ([0-9]+)[mM] ]]; then
              mb=${BASH_REMATCH[1]}
            fi
            echo "frontend: ${mb}MB"
            total_mb=$((total_mb + mb))
          fi

          # Parse Kafka KAFKA_HEAP_OPTS (-Xmx)
          if kafka_xmx=$(grep -A 50 'kafka-broker:' "$COMPOSE_FILE" | grep 'KAFKA_HEAP_OPTS:' | grep -oP '\-Xmx\K[0-9]+[mMgG]' | head -1); then
            if [[ $kafka_xmx =~ ([0-9]+)[gG] ]]; then
              mb=$((${BASH_REMATCH[1]} * 1024))
            elif [[ $kafka_xmx =~ ([0-9]+)[mM] ]]; then
              mb=${BASH_REMATCH[1]}
            fi
            echo "kafka-broker: ${mb}MB"
            total_mb=$((total_mb + mb))
          fi

          # Add estimates for non-JVM services
          mysql_mb=400
          datahub_actions_mb=200
          docker_overhead_mb=300

          echo "mysql: ${mysql_mb}MB (estimated)"
          echo "datahub-actions: ${datahub_actions_mb}MB (estimated)"
          echo "docker-overhead: ${docker_overhead_mb}MB (estimated)"

          total_mb=$((total_mb + mysql_mb + datahub_actions_mb + docker_overhead_mb))
          total_gb=$(echo "scale=2; $total_mb / 1024" | bc)

          echo "---"
          echo "Total minimum memory: ${total_mb}MB (${total_gb}GB)"
          echo "Threshold: ${{ env.THRESHOLD_GB }}GB"

          threshold_mb=$(echo "${{ env.THRESHOLD_GB }} * 1024" | bc | cut -d'.' -f1)

          if [ $total_mb -gt $threshold_mb ]; then
            echo "❌ FAILURE: Memory requirement (${total_mb}MB) exceeds threshold (${threshold_mb}MB)"
            exit 1
          else
            echo "✅ SUCCESS: Memory requirement is within threshold"
            margin=$((threshold_mb - total_mb))
            margin_gb=$(echo "scale=2; $margin / 1024" | bc)
            echo "Margin: ${margin}MB (${margin_gb}GB)"
          fi

      - name: Validation failure message
        if: failure()
        run: |
          echo "==================== Validation Failed ===================="
          echo ""
          echo "Possible causes:"
          echo ""
          echo "1. The committed docker-compose file differs from the generated version."
          echo "   Solution: Run the following command and commit the changes:"
          echo "   ./gradlew :docker:generateQuickstartComposeConfig"
          echo ""
          echo "2. The total minimum memory requirement exceeds the  ${{ env.THRESHOLD_GB }}GB threshold."
          echo "   Solution: Adjust the threshold in this workflow. Also Update MIN_MEMORY_NEEDED in metadata-ingestion/src/datahub/cli/docker_check.py"
          echo ""
          echo "=========================================================="
          exit 1
