[
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "dataFlowInfo",
    "aspect": {
        "json": {
            "customProperties": {
                "catchup": "false",
                "description": "A simple DAG that runs a few fake data tasks.",
                "doc_md": "",
                "fileloc": "<fileloc>",
                "is_paused_upon_creation": "",
                "start_date": "2023-01-01T00:00:00+00:00",
                "tags": "[]",
                "timezone": "UTC"
            },
            "externalUrl": "http://airflow.example.com/tree?dag_id=simple_dag",
            "name": "simple_dag",
            "description": "A simple DAG that runs a few fake data tasks.",
            "env": "PROD"
        }
    }
},
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "ownership",
    "aspect": {
        "json": {
            "owners": [
                {
                    "owner": "urn:li:corpuser:airflow",
                    "type": "DEVELOPER",
                    "source": {
                        "type": "SERVICE"
                    }
                }
            ],
            "ownerTypes": {},
            "lastModified": {
                "time": 0,
                "actor": "urn:li:corpuser:airflow"
            }
        }
    }
},
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "globalTags",
    "aspect": {
        "json": {
            "tags": []
        }
    }
},
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataFlow",
    "entityUrn": "urn:li:dataFlow:(airflow,myairflow.simple_dag,prod)",
    "changeType": "UPSERT",
    "aspectName": "browsePathsV2",
    "aspect": {
        "json": {
            "path": [
                {
                    "id": "myairflow",
                    "urn": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
                },
                {
                    "id": "simple_dag"
                }
            ]
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInfo",
    "aspect": {
        "json": {
            "customProperties": {
                "depends_on_past": "False",
                "email": "None",
                "label": "'task_1'",
                "execution_timeout": "None",
                "task_id": "'task_1'",
                "trigger_rule": "<TriggerRule.ALL_SUCCESS: 'all_success'>",
                "wait_for_downstream": "False",
                "downstream_task_ids": "['run_another_data_task']",
                "inlets": "[Dataset(platform='snowflake', name='mydb.schema.tableA', env='PROD', platform_instance=None), Urn(_urn='urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)'), Urn(_urn='urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.test_dag,PROD),test_task)')]",
                "outlets": "[Dataset(platform='snowflake', name='mydb.schema.tableD', env='PROD', platform_instance=None)]"
            },
            "externalUrl": "http://airflow.example.com/taskinstance/list/?flt1_dag_id_equals=simple_dag&_flt_3_task_id=task_1",
            "name": "task_1",
            "type": {
                "string": "COMMAND"
            },
            "env": "PROD"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInputOutput",
    "aspect": {
        "json": {
            "inputDatasets": [
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableA,PROD)",
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)"
            ],
            "outputDatasets": [
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableD,PROD)"
            ],
            "inputDatajobs": [
                "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.test_dag,PROD),test_task)"
            ],
            "fineGrainedLineages": []
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableA,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableA",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableC",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableD,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableD",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "ownership",
    "aspect": {
        "json": {
            "owners": [
                {
                    "owner": "urn:li:corpuser:airflow",
                    "type": "DEVELOPER",
                    "source": {
                        "type": "SERVICE"
                    }
                }
            ],
            "ownerTypes": {},
            "lastModified": {
                "time": 0,
                "actor": "urn:li:corpuser:airflow"
            }
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "globalTags",
    "aspect": {
        "json": {
            "tags": []
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:fdbbbcd638bc0e91bbf8d7775efbecaf",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceProperties",
    "aspect": {
        "json": {
            "customProperties": {
                "run_id": "manual_run_test",
                "start_date": "<start_date>",
                "try_number": "0",
                "state": "TaskInstanceState.RUNNING",
                "task_id": "task_1",
                "dag_id": "simple_dag",
                "end_date": "<end_date>",
                "max_tries": "0",
                "operator": "BashOperator",
                "log_url": "http://airflow.example.com/dags/simple_dag/runs/manual_run_test/tasks/task_1?try_number=1",
                "orchestrator": "airflow"
            },
            "externalUrl": "http://airflow.example.com/dags/simple_dag/runs/manual_run_test/tasks/task_1?try_number=1",
            "name": "simple_dag_task_1_manual_run_test",
            "type": "BATCH_AD_HOC",
            "created": {
                "time": 1760950956896,
                "actor": "urn:li:corpuser:datahub"
            }
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:fdbbbcd638bc0e91bbf8d7775efbecaf",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceRelationships",
    "aspect": {
        "json": {
            "parentTemplate": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
            "upstreamInstances": []
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:fdbbbcd638bc0e91bbf8d7775efbecaf",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:fdbbbcd638bc0e91bbf8d7775efbecaf",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceInput",
    "aspect": {
        "json": {
            "inputs": [
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableA,PROD)",
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)"
            ]
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:fdbbbcd638bc0e91bbf8d7775efbecaf",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceOutput",
    "aspect": {
        "json": {
            "outputs": [
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableD,PROD)"
            ]
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableA,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableA",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableC",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableD,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableD",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:fdbbbcd638bc0e91bbf8d7775efbecaf",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceRunEvent",
    "aspect": {
        "json": {
            "timestampMillis": 1760950956896,
            "partitionSpec": {
                "partition": "FULL_TABLE_SNAPSHOT",
                "type": "FULL_TABLE"
            },
            "status": "STARTED",
            "attempt": 1
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableD,PROD)",
    "changeType": "UPSERT",
    "aspectName": "operation",
    "aspect": {
        "json": {
            "timestampMillis": 1760950959479,
            "partitionSpec": {
                "partition": "FULL_TABLE_SNAPSHOT",
                "type": "FULL_TABLE"
            },
            "actor": "urn:li:corpuser:airflow",
            "operationType": "CREATE",
            "lastUpdatedTimestamp": 1760950959479
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInfo",
    "aspect": {
        "json": {
            "customProperties": {
                "depends_on_past": "False",
                "email": "None",
                "label": "'task_1'",
                "execution_timeout": "None",
                "task_id": "'task_1'",
                "trigger_rule": "<TriggerRule.ALL_SUCCESS: 'all_success'>",
                "wait_for_downstream": "False",
                "downstream_task_ids": "['run_another_data_task']",
                "inlets": "[Dataset(platform='snowflake', name='mydb.schema.tableA', env='PROD', platform_instance=None), Urn(_urn='urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)'), Urn(_urn='urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.test_dag,PROD),test_task)')]",
                "outlets": "[Dataset(platform='snowflake', name='mydb.schema.tableD', env='PROD', platform_instance=None)]"
            },
            "externalUrl": "http://airflow.example.com/taskinstance/list/?flt1_dag_id_equals=simple_dag&_flt_3_task_id=task_1",
            "name": "task_1",
            "type": {
                "string": "COMMAND"
            },
            "env": "PROD"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInputOutput",
    "aspect": {
        "json": {
            "inputDatasets": [
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableA,PROD)",
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)"
            ],
            "outputDatasets": [
                "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableD,PROD)"
            ],
            "inputDatajobs": [
                "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.test_dag,PROD),test_task)"
            ],
            "fineGrainedLineages": []
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableA,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableA",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableC,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableC",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataset",
    "entityUrn": "urn:li:dataset:(urn:li:dataPlatform:snowflake,mydb.schema.tableD,PROD)",
    "changeType": "UPSERT",
    "aspectName": "datasetKey",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:snowflake",
            "name": "mydb.schema.tableD",
            "origin": "PROD"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "ownership",
    "aspect": {
        "json": {
            "owners": [
                {
                    "owner": "urn:li:corpuser:airflow",
                    "type": "DEVELOPER",
                    "source": {
                        "type": "SERVICE"
                    }
                }
            ],
            "ownerTypes": {},
            "lastModified": {
                "time": 0,
                "actor": "urn:li:corpuser:airflow"
            }
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)",
    "changeType": "UPSERT",
    "aspectName": "globalTags",
    "aspect": {
        "json": {
            "tags": []
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:fdbbbcd638bc0e91bbf8d7775efbecaf",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceRunEvent",
    "aspect": {
        "json": {
            "timestampMillis": 1760950959507,
            "partitionSpec": {
                "partition": "FULL_TABLE_SNAPSHOT",
                "type": "FULL_TABLE"
            },
            "status": "COMPLETE",
            "result": {
                "type": "SUCCESS",
                "nativeResultType": "airflow"
            }
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInfo",
    "aspect": {
        "json": {
            "customProperties": {
                "depends_on_past": "False",
                "email": "None",
                "label": "'run_another_data_task'",
                "execution_timeout": "None",
                "task_id": "'run_another_data_task'",
                "trigger_rule": "<TriggerRule.ALL_SUCCESS: 'all_success'>",
                "wait_for_downstream": "False",
                "downstream_task_ids": "[]",
                "inlets": "[]",
                "outlets": "[]"
            },
            "externalUrl": "http://airflow.example.com/taskinstance/list/?flt1_dag_id_equals=simple_dag&_flt_3_task_id=run_another_data_task",
            "name": "run_another_data_task",
            "type": {
                "string": "COMMAND"
            },
            "env": "PROD"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInputOutput",
    "aspect": {
        "json": {
            "inputDatasets": [],
            "outputDatasets": [],
            "inputDatajobs": [
                "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)"
            ],
            "fineGrainedLineages": []
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "ownership",
    "aspect": {
        "json": {
            "owners": [
                {
                    "owner": "urn:li:corpuser:airflow",
                    "type": "DEVELOPER",
                    "source": {
                        "type": "SERVICE"
                    }
                }
            ],
            "ownerTypes": {},
            "lastModified": {
                "time": 0,
                "actor": "urn:li:corpuser:airflow"
            }
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "globalTags",
    "aspect": {
        "json": {
            "tags": []
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:888f71b79d9a0b162fe44acad7b2c2ae",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceProperties",
    "aspect": {
        "json": {
            "customProperties": {
                "run_id": "manual_run_test",
                "start_date": "<start_date>",
                "try_number": "0",
                "state": "TaskInstanceState.RUNNING",
                "task_id": "run_another_data_task",
                "dag_id": "simple_dag",
                "end_date": "<end_date>",
                "max_tries": "0",
                "operator": "BashOperator",
                "log_url": "http://airflow.example.com/dags/simple_dag/runs/manual_run_test/tasks/run_another_data_task?try_number=1",
                "orchestrator": "airflow"
            },
            "externalUrl": "http://airflow.example.com/dags/simple_dag/runs/manual_run_test/tasks/run_another_data_task?try_number=1",
            "name": "simple_dag_run_another_data_task_manual_run_test",
            "type": "BATCH_AD_HOC",
            "created": {
                "time": 1760950960397,
                "actor": "urn:li:corpuser:datahub"
            }
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:888f71b79d9a0b162fe44acad7b2c2ae",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceRelationships",
    "aspect": {
        "json": {
            "parentTemplate": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
            "upstreamInstances": []
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:888f71b79d9a0b162fe44acad7b2c2ae",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:888f71b79d9a0b162fe44acad7b2c2ae",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceRunEvent",
    "aspect": {
        "json": {
            "timestampMillis": 1760950960397,
            "partitionSpec": {
                "partition": "FULL_TABLE_SNAPSHOT",
                "type": "FULL_TABLE"
            },
            "status": "STARTED",
            "attempt": 1
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInfo",
    "aspect": {
        "json": {
            "customProperties": {
                "depends_on_past": "False",
                "email": "None",
                "label": "'run_another_data_task'",
                "execution_timeout": "None",
                "task_id": "'run_another_data_task'",
                "trigger_rule": "<TriggerRule.ALL_SUCCESS: 'all_success'>",
                "wait_for_downstream": "False",
                "downstream_task_ids": "[]",
                "inlets": "[]",
                "outlets": "[]"
            },
            "externalUrl": "http://airflow.example.com/taskinstance/list/?flt1_dag_id_equals=simple_dag&_flt_3_task_id=run_another_data_task",
            "name": "run_another_data_task",
            "type": {
                "string": "COMMAND"
            },
            "env": "PROD"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "dataPlatformInstance",
    "aspect": {
        "json": {
            "platform": "urn:li:dataPlatform:airflow",
            "instance": "urn:li:dataPlatformInstance:(urn:li:dataPlatform:airflow,myairflow)"
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "status",
    "aspect": {
        "json": {
            "removed": false
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "dataJobInputOutput",
    "aspect": {
        "json": {
            "inputDatasets": [],
            "outputDatasets": [],
            "inputDatajobs": [
                "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),task_1)"
            ],
            "fineGrainedLineages": []
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "ownership",
    "aspect": {
        "json": {
            "owners": [
                {
                    "owner": "urn:li:corpuser:airflow",
                    "type": "DEVELOPER",
                    "source": {
                        "type": "SERVICE"
                    }
                }
            ],
            "ownerTypes": {},
            "lastModified": {
                "time": 0,
                "actor": "urn:li:corpuser:airflow"
            }
        }
    }
},
{
    "entityType": "dataJob",
    "entityUrn": "urn:li:dataJob:(urn:li:dataFlow:(airflow,myairflow.simple_dag,prod),run_another_data_task)",
    "changeType": "UPSERT",
    "aspectName": "globalTags",
    "aspect": {
        "json": {
            "tags": []
        }
    }
},
{
    "entityType": "dataProcessInstance",
    "entityUrn": "urn:li:dataProcessInstance:888f71b79d9a0b162fe44acad7b2c2ae",
    "changeType": "UPSERT",
    "aspectName": "dataProcessInstanceRunEvent",
    "aspect": {
        "json": {
            "timestampMillis": 1760950961970,
            "partitionSpec": {
                "partition": "FULL_TABLE_SNAPSHOT",
                "type": "FULL_TABLE"
            },
            "status": "COMPLETE",
            "result": {
                "type": "SUCCESS",
                "nativeResultType": "airflow"
            }
        }
    }
}
]