extend type Query {
  """
  Generates a presigned url to upload files
  """
  getPresignedUploadUrl(
    input: GetPresignedUploadUrlInput!
  ): GetPresignedUploadUrlResponse!
}

extend type Mutation {
  """
  Create a new DataHub file entity
  """
  createDataHubFile(input: CreateDataHubFileInput!): CreateDataHubFileResponse!
}

"""
Input for the getUploadPresignedUrl query.
"""
input GetPresignedUploadUrlInput {
  """
  Original name of the file to upload
  """
  fileName: String!

  """
  The scenario for the upload (e.g., ASSET_DOCUMENTATION, PROFILE_IMAGE).
  """
  scenario: UploadDownloadScenario!
  """
  The URN of the asset associated with the upload (required when scenario is ASSET_DOCUMENTATION).
  """
  assetUrn: String

  """
  Optional content type of file e.g. "application/pdf"
  """
  contentType: String
}

"""
Enum to specify the context of the upload.
"""
enum UploadDownloadScenario {
  """
  Upload for asset documentation.
  """
  ASSET_DOCUMENTATION
}

type GetPresignedUploadUrlResponse {
  url: String!
  fileId: String!
}

"""
A DataHub file entity representing a file stored in S3
"""
type DataHubFile implements Entity {
  """
  A primary key associated with the DataHub File
  """
  urn: String!

  """
  A standard Entity Type
  """
  type: EntityType!

  """
  The main information about a DataHub file
  """
  info: DataHubFileInfo!

  """
  Granular API for querying edges extending from this entity
  """
  relationships(input: RelationshipsInput!): EntityRelationshipsResult
}

"""
Information about a DataHub file
"""
type DataHubFileInfo {
  """
  The full S3 key/path where this file is stored
  """
  storageLocation: String!

  """
  The original filename as uploaded by the user
  """
  originalFileName: String!

  """
  MIME type of the file (e.g., image/png, application/pdf)
  """
  mimeType: String!

  """
  Size of the file in bytes
  """
  sizeInBytes: Long!

  """
  The scenario/context in which this file was uploaded
  """
  scenario: UploadDownloadScenario!

  """
  Optional entity this file is associated with
  """
  referencedByAsset: Entity

  """
  The dataset schema field this file is referenced by
  """
  schemaField: SchemaFieldEntity

  """
  Timestamp when this file was last downloaded
  """
  lastDownloadedTime: Long

  """
  Timestamp when this file was first marked as unreferenced
  """
  unreferencedSince: Long

  """
  Audit stamp for when and by whom this file was created
  """
  created: ResolvedAuditStamp!
}

"""
Input for creating a DataHub file
"""
input CreateDataHubFileInput {
  """
  Unique id for the file (will be used to create the URN)
  """
  id: String!

  """
  The full S3 key/path where this file is stored
  """
  storageLocation: String!

  """
  The original filename as uploaded by the user
  """
  originalFileName: String!

  """
  MIME type of the file (e.g., image/png, application/pdf)
  """
  mimeType: String!

  """
  Size of the file in bytes
  """
  sizeInBytes: Long!

  """
  The scenario/context in which this file was uploaded
  """
  scenario: UploadDownloadScenario!

  """
  Optional URN of the entity this file is associated with
  """
  referencedByAsset: String

  """
  The dataset schema field urn this file is referenced by
  """
  schemaField: String
}

"""
Response from creating a DataHub file
"""
type CreateDataHubFileResponse {
  """
  The created DataHub file entity
  """
  file: DataHubFile!
}
