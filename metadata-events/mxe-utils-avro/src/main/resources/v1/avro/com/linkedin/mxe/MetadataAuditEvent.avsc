{
  "type" : "record",
  "name" : "MetadataAuditEvent",
  "namespace" : "com.linkedin.pegasus2avro.mxe",
  "doc" : "Kafka event for capturing update made to an entity's metadata.",
  "fields" : [ {
    "name" : "auditHeader",
    "type" : [ "null", {
      "type" : "record",
      "name" : "KafkaAuditHeader",
      "namespace" : "com.linkedin.avro2pegasus.events",
      "doc" : "This header records information about the context of an event as it is emitted into kafka and is intended to be used by the kafka audit application.  For more information see go/kafkaauditheader",
      "fields" : [ {
        "name" : "time",
        "type" : "long",
        "doc" : "The time at which the event was emitted into kafka.",
        "compliance" : [ {
          "policy" : "EVENT_TIME"
        } ]
      }, {
        "name" : "server",
        "type" : "string",
        "doc" : "The fully qualified name of the host from which the event is being emitted.",
        "compliance" : "NONE"
      }, {
        "name" : "instance",
        "type" : [ "null", "string" ],
        "doc" : "The instance on the server from which the event is being emitted. e.g. i001",
        "default" : null,
        "compliance" : "NONE"
      }, {
        "name" : "appName",
        "type" : "string",
        "doc" : "The name of the application from which the event is being emitted. see go/appname",
        "compliance" : "NONE"
      }, {
        "name" : "messageId",
        "type" : {
          "type" : "fixed",
          "name" : "UUID",
          "size" : 16
        },
        "doc" : "A unique identifier for the message",
        "compliance" : "NONE"
      }, {
        "name" : "auditVersion",
        "type" : [ "null", "int" ],
        "doc" : "The version that is being used for auditing. In version 0, the audit trail buckets events into 10 minute audit windows based on the EventHeader timestamp. In version 1, the audit trail buckets events as follows: if the schema has an outer KafkaAuditHeader, use the outer audit header timestamp for bucketing; else if the EventHeader has an inner KafkaAuditHeader use that inner audit header's timestamp for bucketing",
        "default" : null,
        "compliance" : "NONE"
      }, {
        "name" : "fabricUrn",
        "type" : [ "null", "string" ],
        "doc" : "The fabricUrn of the host from which the event is being emitted. Fabric Urn in the format of urn:li:fabric:{fabric_name}. See go/fabric.",
        "default" : null,
        "compliance" : "NONE"
      }, {
        "name" : "clusterConnectionString",
        "type" : [ "null", "string" ],
        "doc" : "This is a String that the client uses to establish some kind of connection with the Kafka cluster. The exact format of it depends on specific versions of clients and brokers. This information could potentially identify the fabric and cluster with which the client is producing to or consuming from.",
        "default" : null,
        "compliance" : "NONE"
      } ]
    } ],
    "doc" : "Kafka audit header. See go/kafkaauditheader for more info.",
    "default" : null
  }, {
    "name" : "oldSnapshot",
    "type" : [ "null", {
      "type" : "record",
      "name" : "ChartSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific Chart entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.ChartUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "ChartKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Chart",
            "fields" : [ {
              "name" : "dashboardTool",
              "type" : "string",
              "doc" : "The name of the dashboard tool such as looker, redash etc.",
              "Searchable" : {
                "boostScore" : 4.0,
                "fieldName" : "tool",
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "chartId",
              "type" : "string",
              "doc" : "Unique id for the chart. This id should be globally unique for a dashboarding tool even when there are multiple deployments of it. As an example, chart URL could be used here for Looker such as 'looker.linkedin.com/looks/1234'"
            } ],
            "Aspect" : {
              "name" : "chartKey"
            }
          }, {
            "type" : "record",
            "name" : "ChartInfo",
            "namespace" : "com.linkedin.chart",
            "doc" : "Information about a chart",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "title",
              "type" : "string",
              "doc" : "Title of the chart",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "description",
              "type" : "string",
              "doc" : "Detailed description about the chart",
              "Searchable" : { }
            }, {
              "name" : "lastModified",
              "type" : {
                "type" : "record",
                "name" : "ChangeAuditStamps",
                "namespace" : "com.linkedin.common",
                "doc" : "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into various lifecycle stages, and who acted to move it into those lifecycle stages. The recommended best practice is to include this record in your record schema, and annotate its fields as @readOnly in your resource. See https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations",
                "fields" : [ {
                  "name" : "created",
                  "type" : {
                    "type" : "record",
                    "name" : "AuditStamp",
                    "doc" : "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
                    "fields" : [ {
                      "name" : "time",
                      "type" : "long",
                      "doc" : "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
                    }, {
                      "name" : "actor",
                      "type" : "string",
                      "doc" : "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
                      "java" : {
                        "class" : "com.linkedin.common.urn.Urn"
                      }
                    }, {
                      "name" : "impersonator",
                      "type" : [ "null", "string" ],
                      "doc" : "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
                      "default" : null,
                      "java" : {
                        "class" : "com.linkedin.common.urn.Urn"
                      }
                    }, {
                      "name" : "message",
                      "type" : [ "null", "string" ],
                      "doc" : "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.",
                      "default" : null
                    } ]
                  },
                  "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
                  "default" : {
                    "actor" : "urn:li:corpuser:unknown",
                    "impersonator" : null,
                    "time" : 0,
                    "message" : null
                  }
                }, {
                  "name" : "lastModified",
                  "type" : "AuditStamp",
                  "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
                  "default" : {
                    "actor" : "urn:li:corpuser:unknown",
                    "impersonator" : null,
                    "time" : 0,
                    "message" : null
                  }
                }, {
                  "name" : "deleted",
                  "type" : [ "null", "AuditStamp" ],
                  "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
                  "default" : null
                } ]
              },
              "doc" : "Captures information about who created/last modified/deleted this chart and when"
            }, {
              "name" : "chartUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL for the chart. This could be used as an external link on DataHub to allow users access/view the chart",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "inputs",
              "type" : [ "null", {
                "type" : "array",
                "items" : [ "string" ]
              } ],
              "doc" : "Data sources for the chart\nDeprecated! Use inputEdges instead.",
              "default" : null,
              "Relationship" : {
                "/*/string" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes"
                }
              },
              "deprecated" : true
            }, {
              "name" : "inputEdges",
              "type" : [ "null", {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "Edge",
                  "namespace" : "com.linkedin.common",
                  "doc" : "A common structure to represent all edges to entities when used inside aspects as collections\nThis ensures that all edges have common structure around audit-stamps and will support PATCH, time-travel automatically.",
                  "fields" : [ {
                    "name" : "sourceUrn",
                    "type" : [ "null", "string" ],
                    "doc" : "Urn of the source of this relationship edge.\nIf not specified, assumed to be the entity that this aspect belongs to.",
                    "default" : null,
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  }, {
                    "name" : "destinationUrn",
                    "type" : "string",
                    "doc" : "Urn of the destination of this relationship edge.",
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  }, {
                    "name" : "created",
                    "type" : [ "null", "AuditStamp" ],
                    "doc" : "Audit stamp containing who created this relationship edge and when",
                    "default" : null
                  }, {
                    "name" : "lastModified",
                    "type" : [ "null", "AuditStamp" ],
                    "doc" : "Audit stamp containing who last modified this relationship edge and when",
                    "default" : null
                  }, {
                    "name" : "properties",
                    "type" : [ "null", {
                      "type" : "map",
                      "values" : "string"
                    } ],
                    "doc" : "A generic properties bag that allows us to store specific information on this graph edge.",
                    "default" : null
                  } ]
                }
              } ],
              "doc" : "Data sources for the chart",
              "default" : null,
              "Relationship" : {
                "/*/destinationUrn" : {
                  "createdActor" : "inputEdges/*/created/actor",
                  "createdOn" : "inputEdges/*/created/time",
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes",
                  "properties" : "inputEdges/*/properties",
                  "updatedActor" : "inputEdges/*/lastModified/actor",
                  "updatedOn" : "inputEdges/*/lastModified/time"
                }
              }
            }, {
              "name" : "type",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "ChartType",
                "doc" : "The various types of charts",
                "symbols" : [ "BAR", "PIE", "SCATTER", "TABLE", "TEXT", "LINE", "AREA", "HISTOGRAM", "BOX_PLOT", "WORD_CLOUD", "COHORT" ],
                "symbolDocs" : {
                  "BAR" : "Chart showing a Bar chart",
                  "PIE" : "Chart showing a Pie chart",
                  "SCATTER" : "Chart showing a Scatter plot",
                  "TABLE" : "Chart showing a table",
                  "TEXT" : "Chart showing Markdown formatted text"
                }
              } ],
              "doc" : "Type of the chart",
              "default" : null,
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "KEYWORD",
                "filterNameOverride" : "Chart Type"
              }
            }, {
              "name" : "access",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "AccessLevel",
                "namespace" : "com.linkedin.common",
                "doc" : "The various access levels",
                "symbols" : [ "PUBLIC", "PRIVATE" ],
                "symbolDocs" : {
                  "PRIVATE" : "Private availability to certain set of users",
                  "PUBLIC" : "Publicly available access level"
                }
              } ],
              "doc" : "Access level for the chart",
              "default" : null,
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "KEYWORD",
                "filterNameOverride" : "Access Level"
              }
            }, {
              "name" : "lastRefreshed",
              "type" : [ "null", "long" ],
              "doc" : "The time when this chart last refreshed",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "chartInfo"
            }
          }, {
            "type" : "record",
            "name" : "ChartQuery",
            "namespace" : "com.linkedin.chart",
            "doc" : "Information for chart query which is used for getting data of the chart",
            "fields" : [ {
              "name" : "rawQuery",
              "type" : "string",
              "doc" : "Raw query to build a chart from input datasets"
            }, {
              "name" : "type",
              "type" : {
                "type" : "enum",
                "name" : "ChartQueryType",
                "symbols" : [ "LOOKML", "SQL" ],
                "symbolDocs" : {
                  "LOOKML" : "LookML queries",
                  "SQL" : "SQL type queries"
                }
              },
              "doc" : "Chart query type",
              "Searchable" : {
                "addToFilters" : true,
                "fieldName" : "queryType",
                "fieldType" : "KEYWORD",
                "filterNameOverride" : "Query Type"
              }
            } ],
            "Aspect" : {
              "name" : "chartQuery"
            }
          }, {
            "type" : "record",
            "name" : "EditableChartProperties",
            "namespace" : "com.linkedin.chart",
            "doc" : "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
            "fields" : [ {
              "name" : "created",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Edited documentation of the chart ",
              "default" : null,
              "Searchable" : {
                "fieldName" : "editedDescription",
                "fieldType" : "TEXT"
              }
            } ],
            "Aspect" : {
              "name" : "editableChartProperties"
            }
          }, {
            "type" : "record",
            "name" : "Ownership",
            "namespace" : "com.linkedin.common",
            "doc" : "Ownership information of an entity.",
            "fields" : [ {
              "name" : "owners",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "Owner",
                  "doc" : "Ownership information",
                  "fields" : [ {
                    "name" : "owner",
                    "type" : "string",
                    "doc" : "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\n(Caveat: only corpuser is currently supported in the frontend.)",
                    "Relationship" : {
                      "entityTypes" : [ "corpuser", "corpGroup" ],
                      "name" : "OwnedBy"
                    },
                    "Searchable" : {
                      "addToFilters" : true,
                      "fieldName" : "owners",
                      "fieldType" : "URN",
                      "filterNameOverride" : "Owned By",
                      "hasValuesFieldName" : "hasOwners",
                      "queryByDefault" : false
                    },
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  }, {
                    "name" : "type",
                    "type" : {
                      "type" : "enum",
                      "name" : "OwnershipType",
                      "doc" : "Asset owner types",
                      "symbols" : [ "CUSTOM", "TECHNICAL_OWNER", "BUSINESS_OWNER", "DATA_STEWARD", "NONE", "DEVELOPER", "DATAOWNER", "DELEGATE", "PRODUCER", "CONSUMER", "STAKEHOLDER" ],
                      "symbolDocs" : {
                        "BUSINESS_OWNER" : "A person or group who is responsible for logical, or business related, aspects of the asset.",
                        "CONSUMER" : "A person, group, or service that consumes the data\nDeprecated! Use TECHNICAL_OWNER or BUSINESS_OWNER instead.",
                        "CUSTOM" : "Set when ownership type is unknown or a when new one is specified as an ownership type entity for which we have no\nenum value for. This is used for backwards compatibility",
                        "DATAOWNER" : "A person or group that is owning the data\nDeprecated! Use TECHNICAL_OWNER instead.",
                        "DATA_STEWARD" : "A steward, expert, or delegate responsible for the asset.",
                        "DELEGATE" : "A person or a group that overseas the operation, e.g. a DBA or SRE.\nDeprecated! Use TECHNICAL_OWNER instead.",
                        "DEVELOPER" : "A person or group that is in charge of developing the code\nDeprecated! Use TECHNICAL_OWNER instead.",
                        "NONE" : "No specific type associated to the owner.",
                        "PRODUCER" : "A person, group, or service that produces/generates the data\nDeprecated! Use TECHNICAL_OWNER instead.",
                        "STAKEHOLDER" : "A person or a group that has direct business interest\nDeprecated! Use TECHNICAL_OWNER, BUSINESS_OWNER, or STEWARD instead.",
                        "TECHNICAL_OWNER" : "person or group who is responsible for technical aspects of the asset."
                      },
                      "deprecatedSymbols" : {
                        "CONSUMER" : true,
                        "DATAOWNER" : true,
                        "DELEGATE" : true,
                        "DEVELOPER" : true,
                        "PRODUCER" : true,
                        "STAKEHOLDER" : true
                      }
                    },
                    "doc" : "The type of the ownership",
                    "deprecated" : true
                  }, {
                    "name" : "typeUrn",
                    "type" : [ "null", "string" ],
                    "doc" : "The type of the ownership\nUrn of type O",
                    "default" : null,
                    "Relationship" : {
                      "entityTypes" : [ "ownershipType" ],
                      "name" : "ownershipType"
                    },
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  }, {
                    "name" : "source",
                    "type" : [ "null", {
                      "type" : "record",
                      "name" : "OwnershipSource",
                      "doc" : "Source/provider of the ownership information",
                      "fields" : [ {
                        "name" : "type",
                        "type" : {
                          "type" : "enum",
                          "name" : "OwnershipSourceType",
                          "symbols" : [ "AUDIT", "DATABASE", "FILE_SYSTEM", "ISSUE_TRACKING_SYSTEM", "MANUAL", "SERVICE", "SOURCE_CONTROL", "OTHER" ],
                          "symbolDocs" : {
                            "AUDIT" : "Auditing system or audit logs",
                            "DATABASE" : "Database, e.g. GRANTS table",
                            "FILE_SYSTEM" : "File system, e.g. file/directory owner",
                            "ISSUE_TRACKING_SYSTEM" : "Issue tracking system, e.g. Jira",
                            "MANUAL" : "Manually provided by a user",
                            "OTHER" : "Other sources",
                            "SERVICE" : "Other ownership-like service, e.g. Nuage, ACL service etc",
                            "SOURCE_CONTROL" : "SCM system, e.g. GIT, SVN"
                          }
                        },
                        "doc" : "The type of the source"
                      }, {
                        "name" : "url",
                        "type" : [ "null", "string" ],
                        "doc" : "A reference URL for the source",
                        "default" : null
                      } ]
                    } ],
                    "doc" : "Source information for the ownership",
                    "default" : null
                  } ]
                }
              },
              "doc" : "List of owners of the entity."
            }, {
              "name" : "ownerTypes",
              "type" : [ {
                "type" : "map",
                "values" : {
                  "type" : "array",
                  "items" : "string"
                }
              }, "null" ],
              "doc" : "Ownership type to Owners map, populated via mutation hook.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "MAP_ARRAY",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "lastModified",
              "type" : "AuditStamp",
              "doc" : "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            } ],
            "Aspect" : {
              "name" : "ownership"
            }
          }, {
            "type" : "record",
            "name" : "Status",
            "namespace" : "com.linkedin.common",
            "doc" : "The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\nThis aspect is used to represent soft deletes conventionally.",
            "fields" : [ {
              "name" : "removed",
              "type" : "boolean",
              "doc" : "Whether the entity has been removed (soft-deleted).",
              "default" : false,
              "Searchable" : {
                "fieldType" : "BOOLEAN"
              }
            } ],
            "Aspect" : {
              "name" : "status"
            }
          }, {
            "type" : "record",
            "name" : "GlobalTags",
            "namespace" : "com.linkedin.common",
            "doc" : "Tag aspect used for applying tags to an entity",
            "fields" : [ {
              "name" : "tags",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "TagAssociation",
                  "doc" : "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\npropagation parameters.",
                  "fields" : [ {
                    "name" : "tag",
                    "type" : "string",
                    "doc" : "Urn of the applied tag",
                    "java" : {
                      "class" : "com.linkedin.common.urn.TagUrn"
                    }
                  }, {
                    "name" : "context",
                    "type" : [ "null", "string" ],
                    "doc" : "Additional context about the association",
                    "default" : null
                  }, {
                    "name" : "attribution",
                    "type" : [ "null", {
                      "type" : "record",
                      "name" : "MetadataAttribution",
                      "doc" : "Information about who, why, and how this metadata was applied",
                      "fields" : [ {
                        "name" : "time",
                        "type" : "long",
                        "doc" : "When this metadata was updated."
                      }, {
                        "name" : "actor",
                        "type" : "string",
                        "doc" : "The entity (e.g. a member URN) responsible for applying the assocated metadata. This can\neither be a user (in case of UI edits) or the datahub system for automation.",
                        "java" : {
                          "class" : "com.linkedin.common.urn.Urn"
                        }
                      }, {
                        "name" : "source",
                        "type" : [ "null", "string" ],
                        "doc" : "The DataHub source responsible for applying the associated metadata. This will only be filled out\nwhen a DataHub source is responsible. This includes the specific metadata test urn, the automation urn.",
                        "default" : null,
                        "java" : {
                          "class" : "com.linkedin.common.urn.Urn"
                        }
                      }, {
                        "name" : "sourceDetail",
                        "type" : {
                          "type" : "map",
                          "values" : "string"
                        },
                        "doc" : "The details associated with why this metadata was applied. For example, this could include\nthe actual regex rule, sql statement, ingestion pipeline ID, etc.",
                        "default" : { }
                      } ]
                    } ],
                    "doc" : "Information about who, why, and how this metadata was applied",
                    "default" : null,
                    "Searchable" : {
                      "/actor" : {
                        "fieldName" : "tagAttributionActors",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/source" : {
                        "fieldName" : "tagAttributionSources",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/time" : {
                        "fieldName" : "tagAttributionDates",
                        "fieldType" : "DATETIME",
                        "queryByDefault" : false
                      }
                    }
                  } ]
                }
              },
              "doc" : "Tags associated with a given entity",
              "Relationship" : {
                "/*/tag" : {
                  "entityTypes" : [ "tag" ],
                  "name" : "TaggedWith"
                }
              },
              "Searchable" : {
                "/*/tag" : {
                  "addToFilters" : true,
                  "boostScore" : 0.5,
                  "fieldName" : "tags",
                  "fieldType" : "URN",
                  "filterNameOverride" : "Tag",
                  "hasValuesFieldName" : "hasTags",
                  "queryByDefault" : true
                }
              }
            } ],
            "Aspect" : {
              "name" : "globalTags"
            }
          }, {
            "type" : "record",
            "name" : "BrowsePaths",
            "namespace" : "com.linkedin.common",
            "doc" : "Shared aspect containing Browse Paths to be indexed for an entity.",
            "fields" : [ {
              "name" : "paths",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "A list of valid browse paths for the entity.\n\nBrowse paths are expected to be forward slash-separated strings. For example: 'prod/snowflake/datasetName'",
              "Searchable" : {
                "/*" : {
                  "fieldName" : "browsePaths",
                  "fieldType" : "BROWSE_PATH"
                }
              }
            } ],
            "Aspect" : {
              "name" : "browsePaths"
            }
          }, {
            "type" : "record",
            "name" : "GlossaryTerms",
            "namespace" : "com.linkedin.common",
            "doc" : "Related business terms information",
            "fields" : [ {
              "name" : "terms",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "GlossaryTermAssociation",
                  "doc" : "Properties of an applied glossary term.",
                  "fields" : [ {
                    "name" : "urn",
                    "type" : "string",
                    "doc" : "Urn of the applied glossary term",
                    "Relationship" : {
                      "entityTypes" : [ "glossaryTerm" ],
                      "name" : "TermedWith"
                    },
                    "Searchable" : {
                      "addToFilters" : true,
                      "fieldName" : "glossaryTerms",
                      "fieldType" : "URN",
                      "filterNameOverride" : "Glossary Term",
                      "hasValuesFieldName" : "hasGlossaryTerms",
                      "includeSystemModifiedAt" : true,
                      "systemModifiedAtFieldName" : "termsModifiedAt"
                    },
                    "java" : {
                      "class" : "com.linkedin.common.urn.GlossaryTermUrn"
                    }
                  }, {
                    "name" : "actor",
                    "type" : [ "null", "string" ],
                    "doc" : "The user URN which will be credited for adding associating this term to the entity",
                    "default" : null,
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  }, {
                    "name" : "context",
                    "type" : [ "null", "string" ],
                    "doc" : "Additional context about the association",
                    "default" : null
                  }, {
                    "name" : "attribution",
                    "type" : [ "null", "MetadataAttribution" ],
                    "doc" : "Information about who, why, and how this metadata was applied",
                    "default" : null,
                    "Searchable" : {
                      "/actor" : {
                        "fieldName" : "termAttributionActors",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/source" : {
                        "fieldName" : "termAttributionSources",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/time" : {
                        "fieldName" : "termAttributionDates",
                        "fieldType" : "DATETIME",
                        "queryByDefault" : false
                      }
                    }
                  } ]
                }
              },
              "doc" : "The related business terms"
            }, {
              "name" : "auditStamp",
              "type" : "AuditStamp",
              "doc" : "Audit stamp containing who reported the related business term"
            } ],
            "Aspect" : {
              "name" : "glossaryTerms"
            }
          }, {
            "type" : "record",
            "name" : "InstitutionalMemory",
            "namespace" : "com.linkedin.common",
            "doc" : "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity.",
            "fields" : [ {
              "name" : "elements",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "InstitutionalMemoryMetadata",
                  "doc" : "Metadata corresponding to a record of institutional memory.",
                  "fields" : [ {
                    "name" : "url",
                    "type" : "string",
                    "doc" : "Link to an engineering design document or a wiki page.",
                    "java" : {
                      "class" : "com.linkedin.common.url.Url",
                      "coercerClass" : "com.linkedin.common.url.UrlCoercer"
                    }
                  }, {
                    "name" : "description",
                    "type" : "string",
                    "doc" : "Description of the link."
                  }, {
                    "name" : "createStamp",
                    "type" : "AuditStamp",
                    "doc" : "Audit stamp associated with creation of this record"
                  } ]
                }
              },
              "doc" : "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."
            } ],
            "Aspect" : {
              "name" : "institutionalMemory"
            }
          }, {
            "type" : "record",
            "name" : "DataPlatformInstance",
            "namespace" : "com.linkedin.common",
            "doc" : "The specific instance of the data platform that this entity belongs to",
            "fields" : [ {
              "name" : "platform",
              "type" : "string",
              "doc" : "Data Platform",
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "URN",
                "filterNameOverride" : "Platform"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "instance",
              "type" : [ "null", "string" ],
              "doc" : "Instance of the data platform (e.g. db instance)",
              "default" : null,
              "Searchable" : {
                "addToFilters" : true,
                "fieldName" : "platformInstance",
                "fieldType" : "URN",
                "filterNameOverride" : "Platform Instance"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            } ],
            "Aspect" : {
              "name" : "dataPlatformInstance"
            }
          }, {
            "type" : "record",
            "name" : "BrowsePathsV2",
            "namespace" : "com.linkedin.common",
            "doc" : "Shared aspect containing a Browse Path to be indexed for an entity.",
            "fields" : [ {
              "name" : "path",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "BrowsePathEntry",
                  "doc" : "Represents a single level in an entity's browsePathV2",
                  "fields" : [ {
                    "name" : "id",
                    "type" : "string",
                    "doc" : "The ID of the browse path entry. This is what gets stored in the index.\nIf there's an urn associated with this entry, id and urn will be the same"
                  }, {
                    "name" : "urn",
                    "type" : [ "null", "string" ],
                    "doc" : "Optional urn pointing to some entity in DataHub",
                    "default" : null,
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  } ]
                }
              },
              "doc" : "A valid browse path for the entity. This field is provided by DataHub by default.\nThis aspect is a newer version of browsePaths where we can encode more information in the path.\nThis path is also based on containers for a given entity if it has containers.\n\nThis is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.\nThese paths should not include high level info captured elsewhere ie. Platform and Environment.",
              "Searchable" : {
                "/*/id" : {
                  "fieldName" : "browsePathV2",
                  "fieldType" : "BROWSE_PATH_V2"
                }
              }
            } ],
            "Aspect" : {
              "name" : "browsePathsV2"
            }
          } ]
        },
        "doc" : "The list of metadata aspects associated with the chart. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "chartKey",
        "name" : "chart"
      }
    }, {
      "type" : "record",
      "name" : "CorpGroupSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific CorpGroup entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.CorpGroupUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "CorpGroupKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a CorpGroup",
            "fields" : [ {
              "name" : "name",
              "type" : "string",
              "doc" : "The URL-encoded name of the AD/LDAP group. Serves as a globally unique identifier within DataHub.",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM",
                "queryByDefault" : true
              }
            } ],
            "Aspect" : {
              "name" : "corpGroupKey"
            }
          }, {
            "type" : "record",
            "name" : "CorpGroupInfo",
            "namespace" : "com.linkedin.identity",
            "doc" : "Information about a Corp Group ingested from a third party source",
            "fields" : [ {
              "name" : "displayName",
              "type" : [ "null", "string" ],
              "doc" : "The name of the group.",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "TEXT_PARTIAL",
                "queryByDefault" : true
              }
            }, {
              "name" : "email",
              "type" : [ "null", "string" ],
              "doc" : "email of this group",
              "default" : null
            }, {
              "name" : "admins",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "owners of this group\nDeprecated! Replaced by Ownership aspect.",
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "corpuser" ],
                  "name" : "OwnedBy"
                }
              },
              "deprecated" : true
            }, {
              "name" : "members",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "List of ldap urn in this group.\nDeprecated! Replaced by GroupMembership aspect.",
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "corpuser" ],
                  "name" : "IsPartOf"
                }
              },
              "deprecated" : true
            }, {
              "name" : "groups",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "List of groups in this group.\nDeprecated! This field is unused.",
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "corpGroup" ],
                  "name" : "IsPartOf"
                }
              },
              "deprecated" : true
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "A description of the group.",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "slack",
              "type" : [ "null", "string" ],
              "doc" : "Slack channel for the group",
              "default" : null
            }, {
              "name" : "created",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "Created Audit stamp",
              "default" : null,
              "Searchable" : {
                "/time" : {
                  "fieldName" : "createdTime",
                  "fieldType" : "DATETIME"
                }
              }
            } ],
            "Aspect" : {
              "EntityUrns" : [ "com.linkedin.common.CorpGroupUrn" ],
              "name" : "corpGroupInfo"
            }
          }, "com.linkedin.common.GlobalTags", "com.linkedin.common.Status" ]
        },
        "doc" : "The list of metadata aspects associated with the LdapUser. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "corpGroupKey",
        "name" : "corpGroup"
      }
    }, {
      "type" : "record",
      "name" : "CorpUserSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific CorpUser entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.CorpuserUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "CorpUserKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a CorpUser",
            "fields" : [ {
              "name" : "username",
              "type" : "string",
              "doc" : "The name of the AD/LDAP user.",
              "Searchable" : {
                "boostScore" : 2.0,
                "enableAutocomplete" : true,
                "fieldName" : "ldap",
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "corpUserKey"
            }
          }, {
            "type" : "record",
            "name" : "CorpUserInfo",
            "namespace" : "com.linkedin.identity",
            "doc" : "Linkedin corp user information",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "active",
              "type" : "boolean",
              "doc" : "Deprecated! Use CorpUserStatus instead. Whether the corpUser is active, ref: https://iwww.corp.linkedin.com/wiki/cf/display/GTSD/Accessing+Active+Directory+via+LDAP+tools",
              "Searchable" : {
                "fieldType" : "BOOLEAN",
                "weightsPerFieldValue" : {
                  "true" : 2.0
                }
              }
            }, {
              "name" : "displayName",
              "type" : [ "null", "string" ],
              "doc" : "displayName of this user ,  e.g.  Hang Zhang(DataHQ)",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM",
                "queryByDefault" : true
              }
            }, {
              "name" : "email",
              "type" : [ "null", "string" ],
              "doc" : "email address of this user",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD",
                "queryByDefault" : true
              }
            }, {
              "name" : "title",
              "type" : [ "null", "string" ],
              "doc" : "title of this user",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD",
                "queryByDefault" : true
              }
            }, {
              "name" : "managerUrn",
              "type" : [ "null", "string" ],
              "doc" : "direct manager of this user",
              "default" : null,
              "Relationship" : {
                "entityTypes" : [ "corpuser" ],
                "name" : "ReportsTo"
              },
              "Searchable" : {
                "fieldName" : "managerLdap",
                "fieldType" : "URN",
                "queryByDefault" : false
              },
              "java" : {
                "class" : "com.linkedin.common.urn.CorpuserUrn"
              }
            }, {
              "name" : "departmentId",
              "type" : [ "null", "long" ],
              "doc" : "department id this user belong to",
              "default" : null
            }, {
              "name" : "departmentName",
              "type" : [ "null", "string" ],
              "doc" : "department name this user belong to",
              "default" : null
            }, {
              "name" : "firstName",
              "type" : [ "null", "string" ],
              "doc" : "first name of this user",
              "default" : null
            }, {
              "name" : "lastName",
              "type" : [ "null", "string" ],
              "doc" : "last name of this user",
              "default" : null
            }, {
              "name" : "fullName",
              "type" : [ "null", "string" ],
              "doc" : "Common name of this user, format is firstName + lastName (split by a whitespace)",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM",
                "queryByDefault" : true
              }
            }, {
              "name" : "countryCode",
              "type" : [ "null", "string" ],
              "doc" : "two uppercase letters country code. e.g.  US",
              "default" : null
            }, {
              "name" : "system",
              "type" : [ "boolean", "null" ],
              "doc" : "Whether the corpUser is a system user.",
              "default" : false,
              "Searchable" : {
                "fieldType" : "BOOLEAN",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "EntityUrns" : [ "com.linkedin.common.CorpuserUrn" ],
              "name" : "corpUserInfo"
            }
          }, {
            "type" : "record",
            "name" : "CorpUserEditableInfo",
            "namespace" : "com.linkedin.identity",
            "doc" : "Linkedin corp user information that can be edited from UI",
            "fields" : [ {
              "name" : "aboutMe",
              "type" : [ "null", "string" ],
              "doc" : "About me section of the user",
              "default" : null
            }, {
              "name" : "teams",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Teams that the user belongs to e.g. Metadata",
              "default" : [ ],
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT"
                }
              }
            }, {
              "name" : "skills",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Skills that the user possesses e.g. Machine Learning",
              "default" : [ ],
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT"
                }
              }
            }, {
              "name" : "pictureLink",
              "type" : "string",
              "doc" : "A URL which points to a picture which user wants to set as a profile photo",
              "default" : "https://raw.githubusercontent.com/datahub-project/datahub/master/datahub-web-react/src/images/default_avatar.png",
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "displayName",
              "type" : [ "null", "string" ],
              "doc" : "DataHub-native display name",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "fieldType" : "WORD_GRAM",
                "queryByDefault" : true
              }
            }, {
              "name" : "title",
              "type" : [ "null", "string" ],
              "doc" : "DataHub-native Title, e.g. 'Software Engineer'",
              "default" : null
            }, {
              "name" : "platforms",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "The platforms that the user commonly works with",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataPlatform" ],
                  "name" : "IsUserOf"
                }
              }
            }, {
              "name" : "persona",
              "type" : [ "null", "string" ],
              "doc" : "The user's persona type, based on their role",
              "default" : null,
              "Relationship" : {
                "entityTypes" : [ "dataHubPersona" ],
                "name" : "IsPersona"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "slack",
              "type" : [ "null", "string" ],
              "doc" : "Slack handle for the user",
              "default" : null
            }, {
              "name" : "phone",
              "type" : [ "null", "string" ],
              "doc" : "Phone number to contact the user",
              "default" : null
            }, {
              "name" : "email",
              "type" : [ "null", "string" ],
              "doc" : "Email address to contact the user",
              "default" : null
            }, {
              "name" : "informationSources",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Information sources that have been used to populate this CorpUserEditableInfo.\nThese include platform resources, such as Slack members or Looker users.\nThey can also refer to other semantic urns in the future.",
              "default" : null
            } ],
            "Aspect" : {
              "EntityUrns" : [ "com.linkedin.common.CorpuserUrn" ],
              "name" : "corpUserEditableInfo"
            }
          }, {
            "type" : "record",
            "name" : "CorpUserStatus",
            "namespace" : "com.linkedin.identity",
            "doc" : "The status of the user, e.g. provisioned, active, suspended, etc.",
            "fields" : [ {
              "name" : "status",
              "type" : "string",
              "doc" : "Status of the user, e.g. PROVISIONED / ACTIVE / SUSPENDED",
              "Searchable" : {
                "fieldType" : "KEYWORD"
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "Audit stamp containing who last modified the status and when.",
              "Searchable" : {
                "/time" : {
                  "fieldName" : "statusLastModifiedAt",
                  "fieldType" : "COUNT"
                }
              }
            } ],
            "Aspect" : {
              "name" : "corpUserStatus"
            }
          }, {
            "type" : "record",
            "name" : "GroupMembership",
            "namespace" : "com.linkedin.identity",
            "doc" : "Carries information about the CorpGroups a user is in.",
            "fields" : [ {
              "name" : "groups",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "corpGroup" ],
                  "name" : "IsMemberOfGroup"
                }
              }
            } ],
            "Aspect" : {
              "name" : "groupMembership"
            }
          }, "com.linkedin.common.GlobalTags", "com.linkedin.common.Status" ]
        },
        "doc" : "The list of metadata aspects associated with the CorpUser. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "corpUserKey",
        "name" : "corpuser"
      }
    }, {
      "type" : "record",
      "name" : "DashboardSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific Dashboard entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.DashboardUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DashboardKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Dashboard",
            "fields" : [ {
              "name" : "dashboardTool",
              "type" : "string",
              "doc" : "The name of the dashboard tool such as looker, redash etc.",
              "Searchable" : {
                "boostScore" : 4.0,
                "fieldName" : "tool",
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "dashboardId",
              "type" : "string",
              "doc" : "Unique id for the dashboard. This id should be globally unique for a dashboarding tool even when there are multiple deployments of it. As an example, dashboard URL could be used here for Looker such as 'looker.linkedin.com/dashboards/1234'"
            } ],
            "Aspect" : {
              "name" : "dashboardKey"
            }
          }, {
            "type" : "record",
            "name" : "DashboardInfo",
            "namespace" : "com.linkedin.dashboard",
            "doc" : "Information about a dashboard",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "title",
              "type" : "string",
              "doc" : "Title of the dashboard",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "description",
              "type" : "string",
              "doc" : "Detailed description about the dashboard",
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "charts",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Charts in a dashboard\nDeprecated! Use chartEdges instead.",
              "default" : [ ],
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "chart" ],
                  "isLineage" : true,
                  "name" : "Contains"
                }
              },
              "deprecated" : true
            }, {
              "name" : "chartEdges",
              "type" : [ "null", {
                "type" : "array",
                "items" : "com.linkedin.common.Edge"
              } ],
              "doc" : "Charts in a dashboard",
              "default" : null,
              "Relationship" : {
                "/*/destinationUrn" : {
                  "createdActor" : "chartEdges/*/created/actor",
                  "createdOn" : "chartEdges/*/created/time",
                  "entityTypes" : [ "chart" ],
                  "isLineage" : true,
                  "name" : "Contains",
                  "properties" : "chartEdges/*/properties",
                  "updatedActor" : "chartEdges/*/lastModified/actor",
                  "updatedOn" : "chartEdges/*/lastModified/time"
                }
              }
            }, {
              "name" : "datasets",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Datasets consumed by a dashboard\nDeprecated! Use datasetEdges instead.",
              "default" : [ ],
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes"
                }
              },
              "deprecated" : true
            }, {
              "name" : "datasetEdges",
              "type" : [ "null", {
                "type" : "array",
                "items" : "com.linkedin.common.Edge"
              } ],
              "doc" : "Datasets consumed by a dashboard",
              "default" : null,
              "Relationship" : {
                "/*/destinationUrn" : {
                  "createdActor" : "datasetEdges/*/created/actor",
                  "createdOn" : "datasetEdges/*/created/time",
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes",
                  "properties" : "datasetEdges/*/properties",
                  "updatedActor" : "datasetEdges/*/lastModified/actor",
                  "updatedOn" : "datasetEdges/*/lastModified/time"
                }
              }
            }, {
              "name" : "dashboards",
              "type" : {
                "type" : "array",
                "items" : "com.linkedin.common.Edge"
              },
              "doc" : "Dashboards included by this dashboard.\nSome dashboard entities (e.g. PowerBI Apps) can contain other dashboards.\n\nThe Edge's sourceUrn should never be set, as it will always be the base dashboard.",
              "default" : [ ],
              "Relationship" : {
                "/*/destinationUrn" : {
                  "createdActor" : "dashboards/*/created/actor",
                  "createdOn" : "dashboards/*/created/time",
                  "entityTypes" : [ "dashboard" ],
                  "isLineage" : true,
                  "name" : "DashboardContainsDashboard",
                  "properties" : "dashboards/*/properties",
                  "updatedActor" : "dashboards/*/lastModified/actor",
                  "updatedOn" : "dashboards/*/lastModified/time"
                }
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.ChangeAuditStamps",
              "doc" : "Captures information about who created/last modified/deleted this dashboard and when"
            }, {
              "name" : "dashboardUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL for the dashboard. This could be used as an external link on DataHub to allow users access/view the dashboard",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "access",
              "type" : [ "null", "com.linkedin.common.AccessLevel" ],
              "doc" : "Access level for the dashboard",
              "default" : null,
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "KEYWORD",
                "filterNameOverride" : "Access Level"
              }
            }, {
              "name" : "lastRefreshed",
              "type" : [ "null", "long" ],
              "doc" : "The time when this dashboard last refreshed",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "dashboardInfo"
            }
          }, {
            "type" : "record",
            "name" : "EditableDashboardProperties",
            "namespace" : "com.linkedin.dashboard",
            "doc" : "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
            "fields" : [ {
              "name" : "created",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Edited documentation of the dashboard",
              "default" : null,
              "Searchable" : {
                "fieldName" : "editedDescription",
                "fieldType" : "TEXT"
              }
            } ],
            "Aspect" : {
              "name" : "editableDashboardProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.Status", "com.linkedin.common.GlobalTags", "com.linkedin.common.BrowsePaths", "com.linkedin.common.GlossaryTerms", "com.linkedin.common.InstitutionalMemory", "com.linkedin.common.DataPlatformInstance", "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the dashboard. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "dashboardKey",
        "name" : "dashboard"
      }
    }, {
      "type" : "record",
      "name" : "DataFlowSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific DataFlow entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.DataFlowUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DataFlowKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Data Flow",
            "fields" : [ {
              "name" : "orchestrator",
              "type" : "string",
              "doc" : "Workflow manager like azkaban, airflow which orchestrates the flow",
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "flowId",
              "type" : "string",
              "doc" : "Unique Identifier of the data flow",
              "Searchable" : {
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "cluster",
              "type" : "string",
              "doc" : "Cluster where the flow is executed",
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            } ],
            "Aspect" : {
              "name" : "dataFlowKey"
            }
          }, {
            "type" : "record",
            "name" : "DataFlowInfo",
            "namespace" : "com.linkedin.datajob",
            "doc" : "Information about a Data processing flow",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Flow name",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Flow description",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "project",
              "type" : [ "null", "string" ],
              "doc" : "Optional project/namespace associated with the flow",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL",
                "queryByDefault" : false
              }
            }, {
              "name" : "created",
              "type" : [ "null", {
                "type" : "record",
                "name" : "TimeStamp",
                "namespace" : "com.linkedin.common",
                "doc" : "A standard event timestamp",
                "fields" : [ {
                  "name" : "time",
                  "type" : "long",
                  "doc" : "When did the event occur"
                }, {
                  "name" : "actor",
                  "type" : [ "null", "string" ],
                  "doc" : "Optional: The actor urn involved in the event.",
                  "default" : null,
                  "java" : {
                    "class" : "com.linkedin.common.urn.Urn"
                  }
                } ]
              } ],
              "doc" : "A timestamp documenting when the asset was created in the source Data Platform (not on DataHub)",
              "default" : null,
              "Searchable" : {
                "/time" : {
                  "fieldName" : "createdAt",
                  "fieldType" : "DATETIME"
                }
              }
            }, {
              "name" : "lastModified",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "A timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)",
              "default" : null,
              "Searchable" : {
                "/time" : {
                  "fieldName" : "lastModifiedAt",
                  "fieldType" : "DATETIME"
                }
              }
            }, {
              "name" : "env",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "FabricType",
                "namespace" : "com.linkedin.common",
                "doc" : "Fabric group type",
                "symbols" : [ "DEV", "TEST", "QA", "UAT", "EI", "PRE", "STG", "NON_PROD", "PROD", "CORP", "RVW", "SANDBOX" ],
                "symbolDocs" : {
                  "CORP" : "Designates corporation fabrics",
                  "DEV" : "Designates development fabrics",
                  "EI" : "Designates early-integration fabrics",
                  "NON_PROD" : "Designates non-production fabrics",
                  "PRE" : "Designates pre-production fabrics",
                  "PROD" : "Designates production fabrics",
                  "QA" : "Designates quality assurance fabrics",
                  "RVW" : "Designates review fabrics",
                  "SANDBOX" : "Designates sandbox fabrics",
                  "STG" : "Designates staging fabrics",
                  "TEST" : "Designates testing fabrics",
                  "UAT" : "Designates user acceptance testing fabrics"
                }
              } ],
              "doc" : "Environment for this flow",
              "default" : null,
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "KEYWORD",
                "filterNameOverride" : "Environment",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "name" : "dataFlowInfo"
            }
          }, {
            "type" : "record",
            "name" : "EditableDataFlowProperties",
            "namespace" : "com.linkedin.datajob",
            "doc" : "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
            "fields" : [ {
              "name" : "created",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Edited documentation of the data flow",
              "default" : null,
              "Searchable" : {
                "fieldName" : "editedDescription",
                "fieldType" : "TEXT"
              }
            } ],
            "Aspect" : {
              "name" : "editableDataFlowProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.Status", "com.linkedin.common.GlobalTags", "com.linkedin.common.BrowsePaths", "com.linkedin.common.GlossaryTerms", "com.linkedin.common.InstitutionalMemory", "com.linkedin.common.DataPlatformInstance", "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the data flow. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "dataFlowKey",
        "name" : "dataFlow"
      }
    }, {
      "type" : "record",
      "name" : "DataJobSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific DataJob entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.DataJobUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DataJobKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Data Job",
            "fields" : [ {
              "name" : "flow",
              "type" : "string",
              "doc" : "Standardized data processing flow urn representing the flow for the job",
              "Relationship" : {
                "entityTypes" : [ "dataFlow" ],
                "name" : "IsPartOf"
              },
              "Searchable" : {
                "fieldName" : "dataFlow",
                "fieldType" : "URN_PARTIAL",
                "queryByDefault" : false
              },
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "jobId",
              "type" : "string",
              "doc" : "Unique Identifier of the data job",
              "Searchable" : {
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "dataJobKey"
            }
          }, {
            "type" : "record",
            "name" : "DataJobInfo",
            "namespace" : "com.linkedin.datajob",
            "doc" : "Information about a Data processing job",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Job name",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Job description",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "type",
              "type" : [ {
                "type" : "enum",
                "name" : "AzkabanJobType",
                "namespace" : "com.linkedin.datajob.azkaban",
                "doc" : "The various types of support azkaban jobs",
                "symbols" : [ "COMMAND", "HADOOP_JAVA", "HADOOP_SHELL", "HIVE", "PIG", "SQL", "GLUE" ],
                "symbolDocs" : {
                  "COMMAND" : "The command job type is one of the basic built-in types. It runs multiple UNIX commands using java processbuilder.\nUpon execution, Azkaban spawns off a process to run the command.",
                  "GLUE" : "Glue type is for running AWS Glue job transforms.",
                  "HADOOP_JAVA" : "Runs a java program with ability to access Hadoop cluster.\nhttps://azkaban.readthedocs.io/en/latest/jobTypes.html#java-job-type",
                  "HADOOP_SHELL" : "In large part, this is the same Command type. The difference is its ability to talk to a Hadoop cluster\nsecurely, via Hadoop tokens.",
                  "HIVE" : "Hive type is for running Hive jobs.",
                  "PIG" : "Pig type is for running Pig jobs.",
                  "SQL" : "SQL is for running Presto, mysql queries etc"
                }
              }, "string" ],
              "doc" : "Datajob type\n*NOTE**: AzkabanJobType is deprecated. Please use strings instead."
            }, {
              "name" : "flowUrn",
              "type" : [ "null", "string" ],
              "doc" : "DataFlow urn that this job is part of",
              "default" : null,
              "java" : {
                "class" : "com.linkedin.common.urn.DataFlowUrn"
              }
            }, {
              "name" : "created",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "A timestamp documenting when the asset was created in the source Data Platform (not on DataHub)",
              "default" : null,
              "Searchable" : {
                "/time" : {
                  "fieldName" : "createdAt",
                  "fieldType" : "DATETIME"
                }
              }
            }, {
              "name" : "lastModified",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "A timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)",
              "default" : null,
              "Searchable" : {
                "/time" : {
                  "fieldName" : "lastModifiedAt",
                  "fieldType" : "DATETIME"
                }
              }
            }, {
              "name" : "status",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "JobStatus",
                "doc" : "Job statuses",
                "symbols" : [ "STARTING", "IN_PROGRESS", "STOPPING", "STOPPED", "COMPLETED", "FAILED", "UNKNOWN", "SKIPPED" ],
                "symbolDocs" : {
                  "COMPLETED" : "Jobs with successful completion.",
                  "FAILED" : "Jobs that have failed.",
                  "IN_PROGRESS" : "Jobs currently running.",
                  "SKIPPED" : "Jobs that have been skipped.",
                  "STARTING" : "Jobs being initialized.",
                  "STOPPED" : "Jobs that have stopped.",
                  "STOPPING" : "Jobs being stopped.",
                  "UNKNOWN" : "Jobs with unknown status (either unmappable or unavailable)"
                }
              } ],
              "doc" : "Status of the job - Deprecated for Data Process Instance model.",
              "default" : null,
              "deprecated" : "Use Data Process Instance model, instead"
            }, {
              "name" : "env",
              "type" : [ "null", "com.linkedin.common.FabricType" ],
              "doc" : "Environment for this job",
              "default" : null,
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "KEYWORD",
                "filterNameOverride" : "Environment",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "name" : "dataJobInfo"
            }
          }, {
            "type" : "record",
            "name" : "DataJobInputOutput",
            "namespace" : "com.linkedin.datajob",
            "doc" : "Information about the inputs and outputs of a Data processing job",
            "fields" : [ {
              "name" : "inputDatasets",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Input datasets consumed by the data job during processing\nDeprecated! Use inputDatasetEdges instead.",
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "inputs",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numInputDatasets",
                  "queryByDefault" : false
                }
              },
              "deprecated" : true
            }, {
              "name" : "inputDatasetEdges",
              "type" : [ "null", {
                "type" : "array",
                "items" : "com.linkedin.common.Edge"
              } ],
              "doc" : "Input datasets consumed by the data job during processing",
              "default" : null,
              "Relationship" : {
                "/*/destinationUrn" : {
                  "createdActor" : "inputDatasetEdges/*/created/actor",
                  "createdOn" : "inputDatasetEdges/*/created/time",
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes",
                  "properties" : "inputDatasetEdges/*/properties",
                  "updatedActor" : "inputDatasetEdges/*/lastModified/actor",
                  "updatedOn" : "inputDatasetEdges/*/lastModified/time"
                }
              },
              "Searchable" : {
                "/*/destinationUrn" : {
                  "fieldName" : "inputDatasetEdges",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numInputDatasets",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "outputDatasets",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Output datasets produced by the data job during processing\nDeprecated! Use outputDatasetEdges instead.",
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "isUpstream" : false,
                  "name" : "Produces"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "outputs",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numOutputDatasets",
                  "queryByDefault" : false
                }
              },
              "deprecated" : true
            }, {
              "name" : "outputDatasetEdges",
              "type" : [ "null", {
                "type" : "array",
                "items" : "com.linkedin.common.Edge"
              } ],
              "doc" : "Output datasets produced by the data job during processing",
              "default" : null,
              "Relationship" : {
                "/*/destinationUrn" : {
                  "createdActor" : "outputDatasetEdges/*/created/actor",
                  "createdOn" : "outputDatasetEdges/*/created/time",
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "isUpstream" : false,
                  "name" : "Produces",
                  "properties" : "outputDatasetEdges/*/properties",
                  "updatedActor" : "outputDatasetEdges/*/lastModified/actor",
                  "updatedOn" : "outputDatasetEdges/*/lastModified/time"
                }
              },
              "Searchable" : {
                "/*/destinationUrn" : {
                  "fieldName" : "outputDatasetEdges",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numOutputDatasets",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "inputDatajobs",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Input datajobs that this data job depends on\nDeprecated! Use inputDatajobEdges instead.",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataJob" ],
                  "isLineage" : true,
                  "name" : "DownstreamOf"
                }
              },
              "deprecated" : true
            }, {
              "name" : "inputDatajobEdges",
              "type" : [ "null", {
                "type" : "array",
                "items" : "com.linkedin.common.Edge"
              } ],
              "doc" : "Input datajobs that this data job depends on",
              "default" : null,
              "Relationship" : {
                "/*/destinationUrn" : {
                  "createdActor" : "inputDatajobEdges/*/created/actor",
                  "createdOn" : "inputDatajobEdges/*/created/time",
                  "entityTypes" : [ "dataJob" ],
                  "isLineage" : true,
                  "name" : "DownstreamOf",
                  "properties" : "inputDatajobEdges/*/properties",
                  "updatedActor" : "inputDatajobEdges/*/lastModified/actor",
                  "updatedOn" : "inputDatajobEdges/*/lastModified/time"
                }
              }
            }, {
              "name" : "inputDatasetFields",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Fields of the input datasets used by this job",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "schemaField" ],
                  "name" : "Consumes"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "inputFields",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numInputFields",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "outputDatasetFields",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Fields of the output datasets this job writes to",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "schemaField" ],
                  "name" : "Produces"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "outputFields",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numOutputFields",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "fineGrainedLineages",
              "type" : [ "null", {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "FineGrainedLineage",
                  "namespace" : "com.linkedin.dataset",
                  "doc" : "A fine-grained lineage from upstream fields/datasets to downstream field(s)",
                  "fields" : [ {
                    "name" : "upstreamType",
                    "type" : {
                      "type" : "enum",
                      "name" : "FineGrainedLineageUpstreamType",
                      "doc" : "The type of upstream entity in a fine-grained lineage",
                      "symbols" : [ "FIELD_SET", "DATASET", "NONE" ],
                      "symbolDocs" : {
                        "DATASET" : " Indicates that this lineage is originating from upstream dataset(s)",
                        "FIELD_SET" : " Indicates that this lineage is originating from upstream field(s)",
                        "NONE" : " Indicates that there is no upstream lineage i.e. the downstream field is not a derived field"
                      }
                    },
                    "doc" : "The type of upstream entity"
                  }, {
                    "name" : "upstreams",
                    "type" : [ "null", {
                      "type" : "array",
                      "items" : "string"
                    } ],
                    "doc" : "Upstream entities in the lineage",
                    "default" : null
                  }, {
                    "name" : "downstreamType",
                    "type" : {
                      "type" : "enum",
                      "name" : "FineGrainedLineageDownstreamType",
                      "doc" : "The type of downstream field(s) in a fine-grained lineage",
                      "symbols" : [ "FIELD", "FIELD_SET" ],
                      "symbolDocs" : {
                        "FIELD" : " Indicates that the lineage is for a single, specific, downstream field",
                        "FIELD_SET" : " Indicates that the lineage is for a set of downstream fields"
                      }
                    },
                    "doc" : "The type of downstream field(s)"
                  }, {
                    "name" : "downstreams",
                    "type" : [ "null", {
                      "type" : "array",
                      "items" : "string"
                    } ],
                    "doc" : "Downstream fields in the lineage",
                    "default" : null
                  }, {
                    "name" : "transformOperation",
                    "type" : [ "null", "string" ],
                    "doc" : "The transform operation applied to the upstream entities to produce the downstream field(s)",
                    "default" : null
                  }, {
                    "name" : "confidenceScore",
                    "type" : "float",
                    "doc" : "The confidence in this lineage between 0 (low confidence) and 1 (high confidence)",
                    "default" : 1.0
                  }, {
                    "name" : "query",
                    "type" : [ "null", "string" ],
                    "doc" : "The query that was used to generate this lineage. \nPresent only if the lineage was generated from a detected query.",
                    "default" : null,
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  } ]
                }
              } ],
              "doc" : "Fine-grained column-level lineages\nNot currently supported in the UI\nUse UpstreamLineage aspect for datasets to express Column Level Lineage for the UI",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "dataJobInputOutput"
            }
          }, {
            "type" : "record",
            "name" : "EditableDataJobProperties",
            "namespace" : "com.linkedin.datajob",
            "doc" : "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
            "fields" : [ {
              "name" : "created",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Edited documentation of the data job ",
              "default" : null,
              "Searchable" : {
                "fieldName" : "editedDescription",
                "fieldType" : "TEXT"
              }
            } ],
            "Aspect" : {
              "name" : "editableDataJobProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.Status", "com.linkedin.common.GlobalTags", "com.linkedin.common.BrowsePaths", "com.linkedin.common.GlossaryTerms", "com.linkedin.common.InstitutionalMemory", "com.linkedin.common.DataPlatformInstance", "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the data job. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "dataJobKey",
        "name" : "dataJob"
      }
    }, {
      "type" : "record",
      "name" : "DatasetSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific dataset entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.DatasetUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DatasetKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Dataset",
            "fields" : [ {
              "name" : "platform",
              "type" : "string",
              "doc" : "Data platform urn associated with the dataset",
              "Searchable" : {
                "enableAutocomplete" : true,
                "fieldType" : "URN"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Unique guid for dataset",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldName" : "id",
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "origin",
              "type" : "com.linkedin.common.FabricType",
              "doc" : "Fabric type where dataset belongs to or where it was generated.",
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "TEXT_PARTIAL",
                "filterNameOverride" : "Environment",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "name" : "datasetKey"
            }
          }, {
            "type" : "record",
            "name" : "DatasetProperties",
            "namespace" : "com.linkedin.dataset",
            "doc" : "Properties associated with a Dataset",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "name",
              "type" : [ "null", "string" ],
              "doc" : "Display name of the Dataset",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "qualifiedName",
              "type" : [ "null", "string" ],
              "doc" : "Fully-qualified name of the Dataset",
              "default" : null,
              "Searchable" : {
                "addToFilters" : false,
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the dataset",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "uri",
              "type" : [ "null", "string" ],
              "doc" : "The abstracted URI such as hdfs:///data/tracking/PageViewEvent, file:///dir/file_name. Uri should not include any environment specific properties. Some datasets might not have a standardized uri, which makes this field optional (i.e. kafka topic).",
              "default" : null,
              "deprecated" : "Use ExternalReference.externalUrl field instead.",
              "java" : {
                "class" : "java.net.URI"
              }
            }, {
              "name" : "created",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "A timestamp documenting when the asset was created in the source Data Platform (not on DataHub)",
              "default" : null,
              "Searchable" : {
                "/time" : {
                  "fieldName" : "createdAt",
                  "fieldType" : "DATETIME"
                }
              }
            }, {
              "name" : "lastModified",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "A timestamp documenting when the asset was last modified in the source Data Platform (not on DataHub)",
              "default" : null,
              "Searchable" : {
                "/time" : {
                  "fieldName" : "lastModifiedAt",
                  "fieldType" : "DATETIME"
                }
              }
            }, {
              "name" : "tags",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "[Legacy] Unstructured tags for the dataset. Structured tags can be applied via the `GlobalTags` aspect.\nThis is now deprecated.",
              "default" : [ ],
              "deprecated" : "Use GlobalTags aspect instead."
            } ],
            "Aspect" : {
              "name" : "datasetProperties"
            }
          }, {
            "type" : "record",
            "name" : "EditableDatasetProperties",
            "namespace" : "com.linkedin.dataset",
            "doc" : "EditableDatasetProperties stores editable changes made to dataset properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
            "fields" : [ {
              "name" : "created",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the dataset",
              "default" : null,
              "Searchable" : {
                "fieldName" : "editedDescription",
                "fieldType" : "TEXT"
              }
            }, {
              "name" : "name",
              "type" : [ "null", "string" ],
              "doc" : "Editable display name of the Dataset",
              "default" : null,
              "Searchable" : {
                "fieldName" : "editedName",
                "fieldType" : "TEXT_PARTIAL"
              }
            } ],
            "Aspect" : {
              "name" : "editableDatasetProperties"
            }
          }, {
            "type" : "record",
            "name" : "DatasetDeprecation",
            "namespace" : "com.linkedin.dataset",
            "doc" : "Dataset deprecation status\nDeprecated! This aspect is deprecated in favor of the more-general-purpose 'Deprecation' aspect.",
            "fields" : [ {
              "name" : "deprecated",
              "type" : "boolean",
              "doc" : "Whether the dataset is deprecated by owner.",
              "Searchable" : {
                "fieldType" : "BOOLEAN",
                "weightsPerFieldValue" : {
                  "true" : 0.5
                }
              }
            }, {
              "name" : "decommissionTime",
              "type" : [ "null", "long" ],
              "doc" : "The time user plan to decommission this dataset.",
              "default" : null
            }, {
              "name" : "note",
              "type" : "string",
              "doc" : "Additional information about the dataset deprecation plan, such as the wiki, doc, RB."
            }, {
              "name" : "actor",
              "type" : [ "null", "string" ],
              "doc" : "The corpuser URN which will be credited for modifying this deprecation content.",
              "default" : null,
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            } ],
            "Aspect" : {
              "name" : "datasetDeprecation"
            },
            "Deprecated" : true
          }, {
            "type" : "record",
            "name" : "DatasetUpstreamLineage",
            "namespace" : "com.linkedin.dataset",
            "doc" : "Fine Grained upstream lineage for fields in a dataset",
            "fields" : [ {
              "name" : "fieldMappings",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "DatasetFieldMapping",
                  "doc" : "Representation of mapping between fields in source dataset to the field in destination dataset",
                  "fields" : [ {
                    "name" : "created",
                    "type" : "com.linkedin.common.AuditStamp",
                    "doc" : "Audit stamp containing who reported the field mapping and when"
                  }, {
                    "name" : "transformation",
                    "type" : [ {
                      "type" : "enum",
                      "name" : "TransformationType",
                      "namespace" : "com.linkedin.common.fieldtransformer",
                      "doc" : "Type of the transformation involved in generating destination fields from source fields.",
                      "symbols" : [ "BLACKBOX", "IDENTITY" ],
                      "symbolDocs" : {
                        "BLACKBOX" : "Field transformation expressed as unknown black box function.",
                        "IDENTITY" : "Field transformation expressed as Identity function."
                      }
                    }, {
                      "type" : "record",
                      "name" : "UDFTransformer",
                      "namespace" : "com.linkedin.common.fieldtransformer",
                      "doc" : "Field transformation expressed in UDF",
                      "fields" : [ {
                        "name" : "udf",
                        "type" : "string",
                        "doc" : "A UDF mentioning how the source fields got transformed to destination field. This is the FQCN(Fully Qualified Class Name) of the udf."
                      } ]
                    } ],
                    "doc" : "Transfomration function between the fields involved"
                  }, {
                    "name" : "sourceFields",
                    "type" : {
                      "type" : "array",
                      "items" : [ "string" ]
                    },
                    "doc" : "Source fields from which the fine grained lineage is derived"
                  }, {
                    "name" : "destinationField",
                    "type" : "string",
                    "doc" : "Destination field which is derived from source fields",
                    "deprecated" : "use SchemaFieldPath and represent as generic Urn instead",
                    "java" : {
                      "class" : "com.linkedin.common.urn.DatasetFieldUrn"
                    }
                  } ],
                  "deprecated" : "use FineGrainedLineage instead"
                }
              },
              "doc" : "Upstream to downstream field level lineage mappings"
            } ],
            "Aspect" : {
              "name" : "datasetUpstreamLineage"
            },
            "deprecated" : "use UpstreamLineage.fineGrainedLineages instead"
          }, {
            "type" : "record",
            "name" : "UpstreamLineage",
            "namespace" : "com.linkedin.dataset",
            "doc" : "Upstream lineage of a dataset",
            "fields" : [ {
              "name" : "upstreams",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "Upstream",
                  "doc" : "Upstream lineage information about a dataset including the source reporting the lineage",
                  "fields" : [ {
                    "name" : "auditStamp",
                    "type" : "com.linkedin.common.AuditStamp",
                    "doc" : "Audit stamp containing who reported the lineage and when.",
                    "default" : {
                      "actor" : "urn:li:corpuser:unknown",
                      "impersonator" : null,
                      "time" : 0,
                      "message" : null
                    }
                  }, {
                    "name" : "created",
                    "type" : [ "null", "com.linkedin.common.AuditStamp" ],
                    "doc" : "Audit stamp containing who created the lineage and when.",
                    "default" : null
                  }, {
                    "name" : "dataset",
                    "type" : "string",
                    "doc" : "The upstream dataset the lineage points to",
                    "Relationship" : {
                      "createdActor" : "upstreams/*/created/actor",
                      "createdOn" : "upstreams/*/created/time",
                      "entityTypes" : [ "dataset" ],
                      "isLineage" : true,
                      "name" : "DownstreamOf",
                      "properties" : "upstreams/*/properties",
                      "updatedActor" : "upstreams/*/auditStamp/actor",
                      "updatedOn" : "upstreams/*/auditStamp/time",
                      "via" : "upstreams/*/query"
                    },
                    "Searchable" : {
                      "fieldName" : "upstreams",
                      "fieldType" : "URN",
                      "queryByDefault" : false
                    },
                    "java" : {
                      "class" : "com.linkedin.common.urn.DatasetUrn"
                    }
                  }, {
                    "name" : "type",
                    "type" : {
                      "type" : "enum",
                      "name" : "DatasetLineageType",
                      "doc" : "The various types of supported dataset lineage",
                      "symbols" : [ "COPY", "TRANSFORMED", "VIEW" ],
                      "symbolDocs" : {
                        "COPY" : "Direct copy without modification",
                        "TRANSFORMED" : "Transformed data with modification (format or content change)",
                        "VIEW" : "Represents a view defined on the sources e.g. Hive view defined on underlying hive tables or a Hive table pointing to a HDFS dataset or DALI view defined on multiple sources"
                      }
                    },
                    "doc" : "The type of the lineage"
                  }, {
                    "name" : "properties",
                    "type" : [ "null", {
                      "type" : "map",
                      "values" : "string"
                    } ],
                    "doc" : "A generic properties bag that allows us to store specific information on this graph edge.",
                    "default" : null
                  }, {
                    "name" : "query",
                    "type" : [ "null", "string" ],
                    "doc" : "If the lineage is generated by a query, a reference to the query",
                    "default" : null,
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  } ]
                }
              },
              "doc" : "List of upstream dataset lineage information"
            }, {
              "name" : "fineGrainedLineages",
              "type" : [ "null", {
                "type" : "array",
                "items" : "FineGrainedLineage"
              } ],
              "doc" : " List of fine-grained lineage information, including field-level lineage",
              "default" : null,
              "Relationship" : {
                "/*/upstreams/*" : {
                  "entityTypes" : [ "dataset", "schemaField" ],
                  "name" : "DownstreamOf"
                }
              }
            } ],
            "Aspect" : {
              "name" : "upstreamLineage"
            }
          }, "com.linkedin.common.InstitutionalMemory", "com.linkedin.common.Ownership", "com.linkedin.common.Status", {
            "type" : "record",
            "name" : "SchemaMetadata",
            "namespace" : "com.linkedin.schema",
            "doc" : "SchemaMetadata to describe metadata related to store schema",
            "fields" : [ {
              "name" : "schemaName",
              "type" : "string",
              "doc" : "Schema name e.g. PageViewEvent, identity.Profile, ams.account_management_tracking",
              "validate" : {
                "strlen" : {
                  "max" : 500,
                  "min" : 1
                }
              }
            }, {
              "name" : "platform",
              "type" : "string",
              "doc" : "Standardized platform urn where schema is defined. The data platform Urn (urn:li:platform:{platform_name})",
              "java" : {
                "class" : "com.linkedin.common.urn.DataPlatformUrn"
              }
            }, {
              "name" : "version",
              "type" : "long",
              "doc" : "Every change to SchemaMetadata in the resource results in a new version. Version is server assigned. This version is differ from platform native schema version."
            }, {
              "name" : "created",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            }, {
              "name" : "dataset",
              "type" : [ "null", "string" ],
              "doc" : "Dataset this schema metadata is associated with.",
              "default" : null,
              "java" : {
                "class" : "com.linkedin.common.urn.DatasetUrn"
              }
            }, {
              "name" : "cluster",
              "type" : [ "null", "string" ],
              "doc" : "The cluster this schema metadata resides from",
              "default" : null
            }, {
              "name" : "hash",
              "type" : "string",
              "doc" : "the SHA1 hash of the schema content"
            }, {
              "name" : "platformSchema",
              "type" : [ {
                "type" : "record",
                "name" : "EspressoSchema",
                "doc" : "Schema text of an espresso table schema.",
                "fields" : [ {
                  "name" : "documentSchema",
                  "type" : "string",
                  "doc" : "The native espresso document schema."
                }, {
                  "name" : "tableSchema",
                  "type" : "string",
                  "doc" : "The espresso table schema definition."
                } ]
              }, {
                "type" : "record",
                "name" : "OracleDDL",
                "doc" : "Schema holder for oracle data definition language that describes an oracle table.",
                "fields" : [ {
                  "name" : "tableSchema",
                  "type" : "string",
                  "doc" : "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                } ]
              }, {
                "type" : "record",
                "name" : "MySqlDDL",
                "doc" : "Schema holder for MySql data definition language that describes an MySql table.",
                "fields" : [ {
                  "name" : "tableSchema",
                  "type" : "string",
                  "doc" : "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                } ]
              }, {
                "type" : "record",
                "name" : "PrestoDDL",
                "doc" : "Schema holder for presto data definition language that describes a presto view.",
                "fields" : [ {
                  "name" : "rawSchema",
                  "type" : "string",
                  "doc" : "The raw schema in the dataset's platform. This includes the DDL and the columns extracted from DDL."
                } ]
              }, {
                "type" : "record",
                "name" : "KafkaSchema",
                "doc" : "Schema holder for kafka schema.",
                "fields" : [ {
                  "name" : "documentSchema",
                  "type" : "string",
                  "doc" : "The native kafka document schema. This is a human readable avro document schema."
                }, {
                  "name" : "documentSchemaType",
                  "type" : [ "null", "string" ],
                  "doc" : "The native kafka document schema type. This can be AVRO/PROTOBUF/JSON.",
                  "default" : null
                }, {
                  "name" : "keySchema",
                  "type" : [ "null", "string" ],
                  "doc" : "The native kafka key schema as retrieved from Schema Registry",
                  "default" : null
                }, {
                  "name" : "keySchemaType",
                  "type" : [ "null", "string" ],
                  "doc" : "The native kafka key schema type. This can be AVRO/PROTOBUF/JSON.",
                  "default" : null
                } ]
              }, {
                "type" : "record",
                "name" : "BinaryJsonSchema",
                "doc" : "Schema text of binary JSON schema.",
                "fields" : [ {
                  "name" : "schema",
                  "type" : "string",
                  "doc" : "The native schema text for binary JSON file format."
                } ]
              }, {
                "type" : "record",
                "name" : "OrcSchema",
                "doc" : "Schema text of an ORC schema.",
                "fields" : [ {
                  "name" : "schema",
                  "type" : "string",
                  "doc" : "The native schema for ORC file format."
                } ]
              }, {
                "type" : "record",
                "name" : "Schemaless",
                "doc" : "The dataset has no specific schema associated with it",
                "fields" : [ ]
              }, {
                "type" : "record",
                "name" : "KeyValueSchema",
                "doc" : "Schema text of a key-value store schema.",
                "fields" : [ {
                  "name" : "keySchema",
                  "type" : "string",
                  "doc" : "The raw schema for the key in the key-value store."
                }, {
                  "name" : "valueSchema",
                  "type" : "string",
                  "doc" : "The raw schema for the value in the key-value store."
                } ]
              }, {
                "type" : "record",
                "name" : "OtherSchema",
                "doc" : "Schema holder for undefined schema types.",
                "fields" : [ {
                  "name" : "rawSchema",
                  "type" : "string",
                  "doc" : "The native schema in the dataset's platform."
                } ]
              } ],
              "doc" : "The native schema in the dataset's platform."
            }, {
              "name" : "fields",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "SchemaField",
                  "doc" : "SchemaField to describe metadata related to dataset schema.",
                  "fields" : [ {
                    "name" : "fieldPath",
                    "type" : "string",
                    "doc" : "Flattened name of the field. Field is computed from jsonPath field.",
                    "Searchable" : {
                      "boostScore" : 1.0,
                      "fieldName" : "fieldPaths",
                      "fieldType" : "TEXT",
                      "queryByDefault" : "true"
                    }
                  }, {
                    "name" : "jsonPath",
                    "type" : [ "null", "string" ],
                    "doc" : "Flattened name of a field in JSON Path notation.",
                    "default" : null,
                    "Deprecated" : true
                  }, {
                    "name" : "nullable",
                    "type" : "boolean",
                    "doc" : "Indicates if this field is optional or nullable",
                    "default" : false
                  }, {
                    "name" : "description",
                    "type" : [ "null", "string" ],
                    "doc" : "Description",
                    "default" : null,
                    "Searchable" : {
                      "boostScore" : 0.1,
                      "fieldName" : "fieldDescriptions",
                      "fieldType" : "TEXT"
                    }
                  }, {
                    "name" : "label",
                    "type" : [ "null", "string" ],
                    "doc" : "Label of the field. Provides a more human-readable name for the field than field path. Some sources will\nprovide this metadata but not all sources have the concept of a label. If just one string is associated with\na field in a source, that is most likely a description.\n\nNote that this field is deprecated and is not surfaced in the UI.",
                    "default" : null,
                    "Deprecated" : true,
                    "Searchable" : {
                      "boostScore" : 0.2,
                      "fieldName" : "fieldLabels",
                      "fieldType" : "TEXT"
                    }
                  }, {
                    "name" : "created",
                    "type" : [ "null", "com.linkedin.common.AuditStamp" ],
                    "doc" : "An AuditStamp corresponding to the creation of this schema field.",
                    "default" : null
                  }, {
                    "name" : "lastModified",
                    "type" : [ "null", "com.linkedin.common.AuditStamp" ],
                    "doc" : "An AuditStamp corresponding to the last modification of this schema field.",
                    "default" : null
                  }, {
                    "name" : "type",
                    "type" : {
                      "type" : "record",
                      "name" : "SchemaFieldDataType",
                      "doc" : "Schema field data types",
                      "fields" : [ {
                        "name" : "type",
                        "type" : [ {
                          "type" : "record",
                          "name" : "BooleanType",
                          "doc" : "Boolean field type.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "FixedType",
                          "doc" : "Fixed field type.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "StringType",
                          "doc" : "String field type.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "BytesType",
                          "doc" : "Bytes field type.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "NumberType",
                          "doc" : "Number data type: long, integer, short, etc..",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "DateType",
                          "doc" : "Date field type.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "TimeType",
                          "doc" : "Time field type. This should also be used for datetimes.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "EnumType",
                          "doc" : "Enum field type.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "NullType",
                          "doc" : "Null field type.",
                          "fields" : [ ]
                        }, {
                          "type" : "record",
                          "name" : "MapType",
                          "doc" : "Map field type.",
                          "fields" : [ {
                            "name" : "keyType",
                            "type" : [ "null", "string" ],
                            "doc" : "Key type in a map",
                            "default" : null
                          }, {
                            "name" : "valueType",
                            "type" : [ "null", "string" ],
                            "doc" : "Type of the value in a map",
                            "default" : null
                          } ]
                        }, {
                          "type" : "record",
                          "name" : "ArrayType",
                          "doc" : "Array field type.",
                          "fields" : [ {
                            "name" : "nestedType",
                            "type" : [ "null", {
                              "type" : "array",
                              "items" : "string"
                            } ],
                            "doc" : "List of types this array holds.",
                            "default" : null
                          } ]
                        }, {
                          "type" : "record",
                          "name" : "UnionType",
                          "doc" : "Union field type.",
                          "fields" : [ {
                            "name" : "nestedTypes",
                            "type" : [ "null", {
                              "type" : "array",
                              "items" : "string"
                            } ],
                            "doc" : "List of types in union type.",
                            "default" : null
                          } ]
                        }, {
                          "type" : "record",
                          "name" : "RecordType",
                          "doc" : "Record field type.",
                          "fields" : [ ]
                        } ],
                        "doc" : "Data platform specific types"
                      } ]
                    },
                    "doc" : "Platform independent field type of the field."
                  }, {
                    "name" : "nativeDataType",
                    "type" : "string",
                    "doc" : "The native type of the field in the dataset's platform as declared by platform schema."
                  }, {
                    "name" : "recursive",
                    "type" : "boolean",
                    "doc" : "There are use cases when a field in type B references type A. A field in A references field of type B. In such cases, we will mark the first field as recursive.",
                    "default" : false
                  }, {
                    "name" : "globalTags",
                    "type" : [ "null", "com.linkedin.common.GlobalTags" ],
                    "doc" : "Tags associated with the field",
                    "default" : null,
                    "Relationship" : {
                      "/tags/*/tag" : {
                        "entityTypes" : [ "tag" ],
                        "name" : "SchemaFieldTaggedWith"
                      }
                    },
                    "Searchable" : {
                      "/tags/*/attribution/actor" : {
                        "fieldName" : "fieldTagAttributionActors",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/tags/*/attribution/source" : {
                        "fieldName" : "fieldTagAttributionSources",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/tags/*/attribution/time" : {
                        "fieldName" : "fieldTagAttributionDates",
                        "fieldType" : "DATETIME",
                        "queryByDefault" : false
                      },
                      "/tags/*/tag" : {
                        "boostScore" : 0.5,
                        "fieldName" : "fieldTags",
                        "fieldType" : "URN"
                      }
                    }
                  }, {
                    "name" : "glossaryTerms",
                    "type" : [ "null", "com.linkedin.common.GlossaryTerms" ],
                    "doc" : "Glossary terms associated with the field",
                    "default" : null,
                    "Relationship" : {
                      "/terms/*/urn" : {
                        "entityTypes" : [ "glossaryTerm" ],
                        "name" : "SchemaFieldWithGlossaryTerm"
                      }
                    },
                    "Searchable" : {
                      "/terms/*/attribution/actor" : {
                        "fieldName" : "fieldTermAttributionActors",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/terms/*/attribution/source" : {
                        "fieldName" : "fieldTermAttributionSources",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/terms/*/attribution/time" : {
                        "fieldName" : "fieldTermAttributionDates",
                        "fieldType" : "DATETIME",
                        "queryByDefault" : false
                      },
                      "/terms/*/urn" : {
                        "boostScore" : 0.5,
                        "fieldName" : "fieldGlossaryTerms",
                        "fieldType" : "URN"
                      }
                    }
                  }, {
                    "name" : "isPartOfKey",
                    "type" : "boolean",
                    "doc" : "For schema fields that are part of complex keys, set this field to true\nWe do this to easily distinguish between value and key fields",
                    "default" : false
                  }, {
                    "name" : "isPartitioningKey",
                    "type" : [ "null", "boolean" ],
                    "doc" : "For Datasets which are partitioned, this determines the partitioning key.\nNote that multiple columns can be part of a partitioning key, but currently we do not support\nrendering the ordered partitioning key.",
                    "default" : null
                  }, {
                    "name" : "jsonProps",
                    "type" : [ "null", "string" ],
                    "doc" : "For schema fields that have other properties that are not modeled explicitly,\nuse this field to serialize those properties into a JSON string",
                    "default" : null
                  } ]
                }
              },
              "doc" : "Client provided a list of fields from document schema."
            }, {
              "name" : "primaryKeys",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Client provided list of fields that define primary keys to access record. Field order defines hierarchical espresso keys. Empty lists indicates absence of primary key access patter. Value is a SchemaField@fieldPath.",
              "default" : null
            }, {
              "name" : "foreignKeysSpecs",
              "type" : [ "null", {
                "type" : "map",
                "values" : {
                  "type" : "record",
                  "name" : "ForeignKeySpec",
                  "doc" : "Description of a foreign key in a schema.",
                  "fields" : [ {
                    "name" : "foreignKey",
                    "type" : [ {
                      "type" : "record",
                      "name" : "DatasetFieldForeignKey",
                      "doc" : "For non-urn based foregin keys.",
                      "fields" : [ {
                        "name" : "parentDataset",
                        "type" : "string",
                        "doc" : "dataset that stores the resource.",
                        "java" : {
                          "class" : "com.linkedin.common.urn.DatasetUrn"
                        }
                      }, {
                        "name" : "currentFieldPaths",
                        "type" : {
                          "type" : "array",
                          "items" : "string"
                        },
                        "doc" : "List of fields in hosting(current) SchemaMetadata that conform a foreign key. List can contain a single entry or multiple entries if several entries in hosting schema conform a foreign key in a single parent dataset."
                      }, {
                        "name" : "parentField",
                        "type" : "string",
                        "doc" : "SchemaField@fieldPath that uniquely identify field in parent dataset that this field references."
                      } ]
                    }, {
                      "type" : "record",
                      "name" : "UrnForeignKey",
                      "doc" : "If SchemaMetadata fields make any external references and references are of type com.linkedin.common.Urn or any children, this models can be used to mark it.",
                      "fields" : [ {
                        "name" : "currentFieldPath",
                        "type" : "string",
                        "doc" : "Field in hosting(current) SchemaMetadata."
                      } ]
                    } ],
                    "doc" : "Foreign key definition in metadata schema."
                  } ]
                }
              } ],
              "doc" : "Map captures all the references schema makes to external datasets. Map key is ForeignKeySpecName typeref.",
              "default" : null,
              "deprecated" : "Use foreignKeys instead."
            }, {
              "name" : "foreignKeys",
              "type" : [ "null", {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "ForeignKeyConstraint",
                  "doc" : "Description of a foreign key constraint in a schema.",
                  "fields" : [ {
                    "name" : "name",
                    "type" : "string",
                    "doc" : "Name of the constraint, likely provided from the source"
                  }, {
                    "name" : "foreignFields",
                    "type" : {
                      "type" : "array",
                      "items" : "string"
                    },
                    "doc" : "Fields the constraint maps to on the foreign dataset",
                    "Relationship" : {
                      "/*" : {
                        "entityTypes" : [ "schemaField" ],
                        "name" : "ForeignKeyTo"
                      }
                    }
                  }, {
                    "name" : "sourceFields",
                    "type" : {
                      "type" : "array",
                      "items" : "string"
                    },
                    "doc" : "Fields the constraint maps to on the source dataset"
                  }, {
                    "name" : "foreignDataset",
                    "type" : "string",
                    "doc" : "Reference to the foreign dataset for ease of lookup",
                    "Relationship" : {
                      "entityTypes" : [ "dataset" ],
                      "name" : "ForeignKeyToDataset"
                    },
                    "java" : {
                      "class" : "com.linkedin.common.urn.Urn"
                    }
                  } ]
                }
              } ],
              "doc" : "List of foreign key constraints for the schema",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "schemaMetadata"
            }
          }, {
            "type" : "record",
            "name" : "EditableSchemaMetadata",
            "namespace" : "com.linkedin.schema",
            "doc" : "EditableSchemaMetadata stores editable changes made to schema metadata. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines.",
            "fields" : [ {
              "name" : "created",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "lastModified",
              "type" : "com.linkedin.common.AuditStamp",
              "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              }
            }, {
              "name" : "deleted",
              "type" : [ "null", "com.linkedin.common.AuditStamp" ],
              "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "default" : null
            }, {
              "name" : "editableSchemaFieldInfo",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "EditableSchemaFieldInfo",
                  "doc" : "SchemaField to describe metadata related to dataset schema.",
                  "fields" : [ {
                    "name" : "fieldPath",
                    "type" : "string",
                    "doc" : "FieldPath uniquely identifying the SchemaField this metadata is associated with"
                  }, {
                    "name" : "description",
                    "type" : [ "null", "string" ],
                    "doc" : "Description",
                    "default" : null,
                    "Searchable" : {
                      "boostScore" : 0.1,
                      "fieldName" : "editedFieldDescriptions",
                      "fieldType" : "TEXT"
                    }
                  }, {
                    "name" : "globalTags",
                    "type" : [ "null", "com.linkedin.common.GlobalTags" ],
                    "doc" : "Tags associated with the field",
                    "default" : null,
                    "Relationship" : {
                      "/tags/*/tag" : {
                        "entityTypes" : [ "tag" ],
                        "name" : "EditableSchemaFieldTaggedWith"
                      }
                    },
                    "Searchable" : {
                      "/tags/*/attribution/actor" : {
                        "fieldName" : "editedFieldTagAttributionActors",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/tags/*/attribution/source" : {
                        "fieldName" : "editedFieldTagAttributionSources",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/tags/*/attribution/time" : {
                        "fieldName" : "editedFieldTagAttributionDates",
                        "fieldType" : "DATETIME"
                      },
                      "/tags/*/tag" : {
                        "boostScore" : 0.5,
                        "fieldName" : "editedFieldTags",
                        "fieldType" : "URN"
                      }
                    }
                  }, {
                    "name" : "glossaryTerms",
                    "type" : [ "null", "com.linkedin.common.GlossaryTerms" ],
                    "doc" : "Glossary terms associated with the field",
                    "default" : null,
                    "Relationship" : {
                      "/terms/*/urn" : {
                        "entityTypes" : [ "glossaryTerm" ],
                        "name" : "EditableSchemaFieldWithGlossaryTerm"
                      }
                    },
                    "Searchable" : {
                      "/terms/*/attribution/actor" : {
                        "fieldName" : "editedFieldTermAttributionActors",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/terms/*/attribution/source" : {
                        "fieldName" : "editedFieldTermAttributionSources",
                        "fieldType" : "URN",
                        "queryByDefault" : false
                      },
                      "/terms/*/attribution/time" : {
                        "fieldName" : "editedFieldTermAttributionDates",
                        "fieldType" : "DATETIME"
                      },
                      "/terms/*/urn" : {
                        "boostScore" : 0.5,
                        "fieldName" : "editedFieldGlossaryTerms",
                        "fieldType" : "URN",
                        "includeSystemModifiedAt" : true,
                        "systemModifiedAtFieldName" : "schemaFieldTermsModifiedAt"
                      }
                    }
                  } ]
                }
              },
              "doc" : "Client provided a list of fields from document schema."
            } ],
            "Aspect" : {
              "name" : "editableSchemaMetadata"
            }
          }, "com.linkedin.common.GlobalTags", "com.linkedin.common.GlossaryTerms", "com.linkedin.common.BrowsePaths", "com.linkedin.common.DataPlatformInstance", {
            "type" : "record",
            "name" : "ViewProperties",
            "namespace" : "com.linkedin.dataset",
            "doc" : "Details about a View. \ne.g. Gets activated when subTypes is view",
            "fields" : [ {
              "name" : "materialized",
              "type" : "boolean",
              "doc" : "Whether the view is materialized",
              "Searchable" : {
                "fieldType" : "BOOLEAN",
                "weightsPerFieldValue" : {
                  "true" : 0.5
                }
              }
            }, {
              "name" : "viewLogic",
              "type" : "string",
              "doc" : "The view logic"
            }, {
              "name" : "formattedViewLogic",
              "type" : [ "null", "string" ],
              "doc" : "The formatted view logic. This is particularly used for SQL sources, where the SQL\nlogic is formatted for better readability, and with dbt, where this contains the\ncompiled SQL logic.",
              "default" : null
            }, {
              "name" : "viewLanguage",
              "type" : "string",
              "doc" : "The view logic language / dialect"
            } ],
            "Aspect" : {
              "name" : "viewProperties"
            }
          }, "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "datasetKey",
        "name" : "dataset"
      }
    }, {
      "type" : "record",
      "name" : "DataProcessSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific Data process entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.DataProcessUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DataProcessKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Data Process",
            "fields" : [ {
              "name" : "name",
              "type" : "string",
              "doc" : "Process name i.e. an ETL job name",
              "Searchable" : {
                "boostScore" : 4.0,
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "orchestrator",
              "type" : "string",
              "doc" : "Standardized Orchestrator where data process is defined.\nTODO: Migrate towards something that can be validated like DataPlatform urn",
              "Searchable" : {
                "enableAutocomplete" : true,
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "origin",
              "type" : "com.linkedin.common.FabricType",
              "doc" : "Fabric type where dataset belongs to or where it was generated.",
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "name" : "dataProcessKey"
            }
          }, "com.linkedin.common.Ownership", {
            "type" : "record",
            "name" : "DataProcessInfo",
            "namespace" : "com.linkedin.dataprocess",
            "doc" : "The inputs and outputs of this data process",
            "fields" : [ {
              "name" : "inputs",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "the inputs of the data process",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "inputs",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numInputDatasets",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "outputs",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "the outputs of the data process",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "Consumes"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "outputs",
                  "fieldType" : "URN",
                  "numValuesFieldName" : "numOutputDatasets",
                  "queryByDefault" : false
                }
              }
            } ],
            "Aspect" : {
              "name" : "dataProcessInfo"
            }
          }, "com.linkedin.common.Status" ]
        },
        "doc" : "The list of metadata aspects associated with the data process. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "dataProcessKey",
        "name" : "dataProcess"
      },
      "deprecated" : "Use DataJob instead."
    }, {
      "type" : "record",
      "name" : "DataPlatformSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific dataplatform entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.DataPlatformUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DataPlatformKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Data Platform",
            "fields" : [ {
              "name" : "platformName",
              "type" : "string",
              "doc" : "Data platform name i.e. hdfs, oracle, espresso"
            } ],
            "Aspect" : {
              "name" : "dataPlatformKey"
            }
          }, {
            "type" : "record",
            "name" : "DataPlatformInfo",
            "namespace" : "com.linkedin.dataplatform",
            "doc" : "Information about a data platform",
            "fields" : [ {
              "name" : "name",
              "type" : "string",
              "doc" : "Name of the data platform",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : false,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              },
              "validate" : {
                "strlen" : {
                  "max" : 15
                }
              }
            }, {
              "name" : "displayName",
              "type" : [ "null", "string" ],
              "doc" : "The name that will be used for displaying a platform type.",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "type",
              "type" : {
                "type" : "enum",
                "name" : "PlatformType",
                "doc" : "Platform types available at LinkedIn",
                "symbols" : [ "FILE_SYSTEM", "KEY_VALUE_STORE", "MESSAGE_BROKER", "OBJECT_STORE", "OLAP_DATASTORE", "OTHERS", "QUERY_ENGINE", "RELATIONAL_DB", "SEARCH_ENGINE" ],
                "symbolDocs" : {
                  "FILE_SYSTEM" : "Value for a file system, e.g. hdfs",
                  "KEY_VALUE_STORE" : "Value for a key value store, e.g. espresso, voldemort",
                  "MESSAGE_BROKER" : "Value for a message broker, e.g. kafka",
                  "OBJECT_STORE" : "Value for an object store, e.g. ambry",
                  "OLAP_DATASTORE" : "Value for an OLAP datastore, e.g. pinot",
                  "OTHERS" : "Value for other platforms, e.g salesforce, dovetail",
                  "QUERY_ENGINE" : "Value for a query engine, e.g. presto",
                  "RELATIONAL_DB" : "Value for a relational database, e.g. oracle, mysql",
                  "SEARCH_ENGINE" : "Value for a search engine, e.g seas"
                }
              },
              "doc" : "Platform type this data platform describes"
            }, {
              "name" : "datasetNameDelimiter",
              "type" : "string",
              "doc" : "The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle"
            }, {
              "name" : "logoUrl",
              "type" : [ "null", "string" ],
              "doc" : "The URL for a logo associated with the platform",
              "default" : null,
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            } ],
            "Aspect" : {
              "name" : "dataPlatformInfo"
            }
          } ]
        },
        "doc" : "The list of metadata aspects associated with the data platform. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "dataPlatformKey",
        "name" : "dataPlatform"
      }
    }, {
      "type" : "record",
      "name" : "MLModelSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "MLModel Snapshot entity details.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.MLModelUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "MLModelKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for an ML model",
            "fields" : [ {
              "name" : "platform",
              "type" : "string",
              "doc" : "Standardized platform urn for the model",
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Name of the MLModel",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "origin",
              "type" : "com.linkedin.common.FabricType",
              "doc" : "Fabric type where model belongs to or where it was generated",
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "TEXT_PARTIAL",
                "filterNameOverride" : "Environment",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "name" : "mlModelKey"
            }
          }, "com.linkedin.common.Ownership", {
            "type" : "record",
            "name" : "MLModelProperties",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Properties associated with a ML Model",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "trainingJobs",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "List of jobs or process instances (if any) used to train the model or group. Visible in Lineage. Note that ML Models can also be specified as the output of a specific Data Process Instances (runs) via the DataProcessInstanceOutputs aspect.",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataJob", "dataProcessInstance" ],
                  "isLineage" : true,
                  "name" : "TrainedBy"
                }
              }
            }, {
              "name" : "downstreamJobs",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "List of jobs or process instances (if any) that use the model or group.",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataJob", "dataProcessInstance" ],
                  "isLineage" : true,
                  "isUpstream" : false,
                  "name" : "UsedBy"
                }
              }
            }, {
              "name" : "name",
              "type" : [ "null", "string" ],
              "doc" : "Display name of the MLModel",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM",
                "queryByDefault" : true
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the MLModel",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "date",
              "type" : [ "null", "long" ],
              "doc" : "Date when the MLModel was developed",
              "default" : null,
              "deprecated" : true
            }, {
              "name" : "created",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "Audit stamp containing who created this and when",
              "default" : null
            }, {
              "name" : "lastModified",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "Date when the MLModel was last modified",
              "default" : null
            }, {
              "name" : "version",
              "type" : [ "null", {
                "type" : "record",
                "name" : "VersionTag",
                "namespace" : "com.linkedin.common",
                "doc" : "A resource-defined string representing the resource state for the purpose of concurrency control",
                "fields" : [ {
                  "name" : "versionTag",
                  "type" : [ "null", "string" ],
                  "default" : null
                }, {
                  "name" : "metadataAttribution",
                  "type" : [ "null", "MetadataAttribution" ],
                  "default" : null
                } ]
              } ],
              "doc" : "Version of the MLModel",
              "default" : null
            }, {
              "name" : "type",
              "type" : [ "null", "string" ],
              "doc" : "Type of Algorithm or MLModel such as whether it is a Naive Bayes classifier, Convolutional Neural Network, etc",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "hyperParameters",
              "type" : [ "null", {
                "type" : "map",
                "values" : [ "string", "int", "float", "double", "boolean" ]
              } ],
              "doc" : "Hyper Parameters of the MLModel\n\nNOTE: these are deprecated in favor of hyperParams",
              "default" : null
            }, {
              "name" : "hyperParams",
              "type" : [ "null", {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "MLHyperParam",
                  "doc" : "Properties associated with an ML Hyper Param",
                  "fields" : [ {
                    "name" : "name",
                    "type" : "string",
                    "doc" : "Name of the MLHyperParam"
                  }, {
                    "name" : "description",
                    "type" : [ "null", "string" ],
                    "doc" : "Documentation of the MLHyperParam",
                    "default" : null
                  }, {
                    "name" : "value",
                    "type" : [ "null", "string" ],
                    "doc" : "The value of the MLHyperParam",
                    "default" : null
                  }, {
                    "name" : "createdAt",
                    "type" : [ "null", "long" ],
                    "doc" : "Date when the MLHyperParam was developed",
                    "default" : null
                  } ],
                  "Aspect" : {
                    "name" : "mlHyperParam"
                  }
                }
              } ],
              "doc" : "Hyperparameters of the MLModel",
              "default" : null
            }, {
              "name" : "trainingMetrics",
              "type" : [ "null", {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "MLMetric",
                  "doc" : "Properties associated with an ML Metric",
                  "fields" : [ {
                    "name" : "name",
                    "type" : "string",
                    "doc" : "Name of the mlMetric"
                  }, {
                    "name" : "description",
                    "type" : [ "null", "string" ],
                    "doc" : "Documentation of the mlMetric",
                    "default" : null
                  }, {
                    "name" : "value",
                    "type" : [ "null", "string" ],
                    "doc" : "The value of the mlMetric",
                    "default" : null
                  }, {
                    "name" : "createdAt",
                    "type" : [ "null", "long" ],
                    "doc" : "Date when the mlMetric was developed",
                    "default" : null
                  } ],
                  "Aspect" : {
                    "name" : "mlMetric"
                  }
                }
              } ],
              "doc" : "Metrics of the MLModel used in training",
              "default" : null
            }, {
              "name" : "onlineMetrics",
              "type" : [ "null", {
                "type" : "array",
                "items" : "MLMetric"
              } ],
              "doc" : "Metrics of the MLModel used in production",
              "default" : null
            }, {
              "name" : "mlFeatures",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "List of features used for MLModel training",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "mlFeature" ],
                  "isLineage" : true,
                  "name" : "Consumes"
                }
              }
            }, {
              "name" : "tags",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Tags for the MLModel",
              "default" : [ ]
            }, {
              "name" : "deployments",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Deployments for the MLModel",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "mlModelDeployment" ],
                  "name" : "DeployedTo"
                }
              }
            }, {
              "name" : "groups",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Groups the model belongs to",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "mlModelGroup" ],
                  "isLineage" : true,
                  "isUpstream" : false,
                  "name" : "MemberOf"
                }
              }
            } ],
            "Aspect" : {
              "name" : "mlModelProperties"
            }
          }, {
            "type" : "record",
            "name" : "IntendedUse",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Intended Use for the ML Model",
            "fields" : [ {
              "name" : "primaryUses",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Primary Use cases for the MLModel.",
              "default" : null
            }, {
              "name" : "primaryUsers",
              "type" : [ "null", {
                "type" : "array",
                "items" : {
                  "type" : "enum",
                  "name" : "IntendedUserType",
                  "symbols" : [ "ENTERPRISE", "HOBBY", "ENTERTAINMENT" ]
                }
              } ],
              "doc" : "Primary Intended Users - For example, was the MLModel developed for entertainment purposes, for hobbyists, or enterprise solutions?",
              "default" : null
            }, {
              "name" : "outOfScopeUses",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Highlight technology that the MLModel might easily be confused with, or related contexts that users could try to apply the MLModel to.",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "intendedUse"
            }
          }, {
            "type" : "record",
            "name" : "MLModelFactorPrompts",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Prompts which affect the performance of the MLModel",
            "fields" : [ {
              "name" : "relevantFactors",
              "type" : [ "null", {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "MLModelFactors",
                  "doc" : "Factors affecting the performance of the MLModel.",
                  "fields" : [ {
                    "name" : "groups",
                    "type" : [ "null", {
                      "type" : "array",
                      "items" : "string"
                    } ],
                    "doc" : "Groups refers to distinct categories with similar characteristics that are present in the evaluation data instances.\nFor human-centric machine learning MLModels, groups are people who share one or multiple characteristics.",
                    "default" : null
                  }, {
                    "name" : "instrumentation",
                    "type" : [ "null", {
                      "type" : "array",
                      "items" : "string"
                    } ],
                    "doc" : "The performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.\nFor example, a face detection model may perform differently depending on the camera's hardware and software,\nincluding lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode.",
                    "default" : null
                  }, {
                    "name" : "environment",
                    "type" : [ "null", {
                      "type" : "array",
                      "items" : "string"
                    } ],
                    "doc" : "A further factor affecting MLModel performance is the environment in which it is deployed.",
                    "default" : null
                  } ]
                }
              } ],
              "doc" : "What are foreseeable salient factors for which MLModel performance may vary, and how were these determined?",
              "default" : null
            }, {
              "name" : "evaluationFactors",
              "type" : [ "null", {
                "type" : "array",
                "items" : "MLModelFactors"
              } ],
              "doc" : "Which factors are being reported, and why were these chosen?",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "mlModelFactorPrompts"
            }
          }, {
            "type" : "record",
            "name" : "Metrics",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Metrics to be featured for the MLModel.",
            "fields" : [ {
              "name" : "performanceMeasures",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Measures of MLModel performance",
              "default" : null
            }, {
              "name" : "decisionThreshold",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Decision Thresholds used (if any)?",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "mlModelMetrics"
            }
          }, {
            "type" : "record",
            "name" : "EvaluationData",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "All referenced datasets would ideally point to any set of documents that provide visibility into the source and composition of the dataset.",
            "fields" : [ {
              "name" : "evaluationData",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "BaseData",
                  "doc" : "BaseData record",
                  "fields" : [ {
                    "name" : "dataset",
                    "type" : "string",
                    "doc" : "What dataset were used in the MLModel?",
                    "java" : {
                      "class" : "com.linkedin.common.urn.DatasetUrn"
                    }
                  }, {
                    "name" : "motivation",
                    "type" : [ "null", "string" ],
                    "doc" : "Why was this dataset chosen?",
                    "default" : null
                  }, {
                    "name" : "preProcessing",
                    "type" : [ "null", {
                      "type" : "array",
                      "items" : "string"
                    } ],
                    "doc" : "How was the data preprocessed (e.g., tokenization of sentences, cropping of images, any filtering such as dropping images without faces)?",
                    "default" : null
                  } ]
                }
              },
              "doc" : "Details on the dataset(s) used for the quantitative analyses in the MLModel"
            } ],
            "Aspect" : {
              "name" : "mlModelEvaluationData"
            }
          }, {
            "type" : "record",
            "name" : "TrainingData",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Ideally, the MLModel card would contain as much information about the training data as the evaluation data. However, there might be cases where it is not feasible to provide this level of detailed information about the training data. For example, the data may be proprietary, or require a non-disclosure agreement. In these cases, we advocate for basic details about the distributions over groups in the data, as well as any other details that could inform stakeholders on the kinds of biases the model may have encoded.",
            "fields" : [ {
              "name" : "trainingData",
              "type" : {
                "type" : "array",
                "items" : "BaseData"
              },
              "doc" : "Details on the dataset(s) used for training the MLModel"
            } ],
            "Aspect" : {
              "name" : "mlModelTrainingData"
            }
          }, {
            "type" : "record",
            "name" : "QuantitativeAnalyses",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Quantitative analyses should be disaggregated, that is, broken down by the chosen factors. Quantitative analyses should provide the results of evaluating the MLModel according to the chosen metrics, providing confidence interval values when possible.",
            "fields" : [ {
              "name" : "unitaryResults",
              "type" : [ "null", "string" ],
              "doc" : "Link to a dashboard with results showing how the MLModel performed with respect to each factor",
              "default" : null
            }, {
              "name" : "intersectionalResults",
              "type" : [ "null", "string" ],
              "doc" : "Link to a dashboard with results showing how the MLModel performed with respect to the intersection of evaluated factors?",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "mlModelQuantitativeAnalyses"
            }
          }, {
            "type" : "record",
            "name" : "EthicalConsiderations",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "This section is intended to demonstrate the ethical considerations that went into MLModel development, surfacing ethical challenges and solutions to stakeholders.",
            "fields" : [ {
              "name" : "data",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Does the MLModel use any sensitive data (e.g., protected classes)?",
              "default" : null
            }, {
              "name" : "humanLife",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : " Is the MLModel intended to inform decisions about matters central to human life or flourishing - e.g., health or safety? Or could it be used in such a way?",
              "default" : null
            }, {
              "name" : "mitigations",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "What risk mitigation strategies were used during MLModel development?",
              "default" : null
            }, {
              "name" : "risksAndHarms",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown.",
              "default" : null
            }, {
              "name" : "useCases",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Are there any known MLModel use cases that are especially fraught? This may connect directly to the intended use section",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "mlModelEthicalConsiderations"
            }
          }, {
            "type" : "record",
            "name" : "CaveatsAndRecommendations",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?",
            "fields" : [ {
              "name" : "caveats",
              "type" : [ "null", {
                "type" : "record",
                "name" : "CaveatDetails",
                "doc" : "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?",
                "fields" : [ {
                  "name" : "needsFurtherTesting",
                  "type" : [ "null", "boolean" ],
                  "doc" : "Did the results suggest any further testing?",
                  "default" : null
                }, {
                  "name" : "caveatDescription",
                  "type" : [ "null", "string" ],
                  "doc" : "Caveat Description\nFor ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders.",
                  "default" : null
                }, {
                  "name" : "groupsNotRepresented",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ],
                  "doc" : "Relevant groups that were not represented in the evaluation dataset?",
                  "default" : null
                } ]
              } ],
              "doc" : "This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset?",
              "default" : null
            }, {
              "name" : "recommendations",
              "type" : [ "null", "string" ],
              "doc" : "Recommendations on where this MLModel should be used.",
              "default" : null
            }, {
              "name" : "idealDatasetCharacteristics",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Ideal characteristics of an evaluation dataset for this MLModel",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "mlModelCaveatsAndRecommendations"
            }
          }, "com.linkedin.common.InstitutionalMemory", {
            "type" : "record",
            "name" : "SourceCode",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Source Code",
            "fields" : [ {
              "name" : "sourceCode",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "SourceCodeUrl",
                  "doc" : "Source Code Url Entity",
                  "fields" : [ {
                    "name" : "type",
                    "type" : {
                      "type" : "enum",
                      "name" : "SourceCodeUrlType",
                      "symbols" : [ "ML_MODEL_SOURCE_CODE", "TRAINING_PIPELINE_SOURCE_CODE", "EVALUATION_PIPELINE_SOURCE_CODE" ]
                    },
                    "doc" : "Source Code Url Types"
                  }, {
                    "name" : "sourceCodeUrl",
                    "type" : "string",
                    "doc" : "Source Code Url",
                    "java" : {
                      "class" : "com.linkedin.common.url.Url",
                      "coercerClass" : "com.linkedin.common.url.UrlCoercer"
                    }
                  } ]
                }
              },
              "doc" : "Source Code along with types"
            } ],
            "Aspect" : {
              "name" : "sourceCode"
            }
          }, "com.linkedin.common.Status", {
            "type" : "record",
            "name" : "Cost",
            "namespace" : "com.linkedin.common",
            "fields" : [ {
              "name" : "costType",
              "type" : {
                "type" : "enum",
                "name" : "CostType",
                "doc" : "Type of Cost Code",
                "symbols" : [ "ORG_COST_TYPE" ],
                "symbolDocs" : {
                  "ORG_COST_TYPE" : "Org Cost Type to which the Cost of this entity should be attributed to"
                }
              }
            }, {
              "name" : "cost",
              "type" : {
                "type" : "record",
                "name" : "CostCost",
                "fields" : [ {
                  "name" : "costId",
                  "type" : [ "null", "double" ],
                  "default" : null
                }, {
                  "name" : "costCode",
                  "type" : [ "null", "string" ],
                  "default" : null
                }, {
                  "name" : "fieldDiscriminator",
                  "type" : {
                    "type" : "enum",
                    "name" : "CostCostDiscriminator",
                    "symbols" : [ "costId", "costCode" ]
                  },
                  "doc" : "Contains the name of the field that has its value set."
                } ]
              }
            } ],
            "Aspect" : {
              "name" : "cost"
            }
          }, {
            "type" : "record",
            "name" : "Deprecation",
            "namespace" : "com.linkedin.common",
            "doc" : "Deprecation status of an entity",
            "fields" : [ {
              "name" : "deprecated",
              "type" : "boolean",
              "doc" : "Whether the entity is deprecated.",
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "BOOLEAN",
                "filterNameOverride" : "Deprecated",
                "weightsPerFieldValue" : {
                  "true" : 0.5
                }
              }
            }, {
              "name" : "decommissionTime",
              "type" : [ "null", "long" ],
              "doc" : "The time user plan to decommission this entity.",
              "default" : null
            }, {
              "name" : "note",
              "type" : "string",
              "doc" : "Additional information about the entity deprecation plan, such as the wiki, doc, RB."
            }, {
              "name" : "actor",
              "type" : "string",
              "doc" : "The user URN which will be credited for modifying this deprecation content.",
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "replacement",
              "type" : [ "null", "string" ],
              "default" : null,
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            } ],
            "Aspect" : {
              "name" : "deprecation"
            }
          }, "com.linkedin.common.BrowsePaths", "com.linkedin.common.GlobalTags", "com.linkedin.common.DataPlatformInstance", "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the MLModel. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "mlModelKey",
        "name" : "mlModel"
      }
    }, {
      "type" : "record",
      "name" : "MLPrimaryKeySnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.Urn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "MLPrimaryKeyKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for an MLPrimaryKey",
            "fields" : [ {
              "name" : "featureNamespace",
              "type" : "string",
              "doc" : "Namespace for the primary key",
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Name of the primary key",
              "Searchable" : {
                "boostScore" : 8.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "mlPrimaryKeyKey"
            }
          }, {
            "type" : "record",
            "name" : "MLPrimaryKeyProperties",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Properties associated with a MLPrimaryKey",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the MLPrimaryKey",
              "default" : null
            }, {
              "name" : "dataType",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "MLFeatureDataType",
                "namespace" : "com.linkedin.common",
                "doc" : "MLFeature Data Type",
                "symbols" : [ "USELESS", "NOMINAL", "ORDINAL", "BINARY", "COUNT", "TIME", "INTERVAL", "IMAGE", "VIDEO", "AUDIO", "TEXT", "MAP", "SEQUENCE", "SET", "CONTINUOUS", "BYTE", "UNKNOWN" ],
                "symbolDocs" : {
                  "AUDIO" : "Audio Data",
                  "BINARY" : "Binary data is discrete data that can be in only one of two categories - either yes or no, 1 or 0, off or on, etc",
                  "BYTE" : "Bytes data are binary-encoded values that can represent complex objects.",
                  "CONTINUOUS" : "Continuous data are made of uncountable values, often the result of a measurement such as height, weight, age etc.",
                  "COUNT" : "Count data is discrete whole number data - no negative numbers here.\nCount data often has many small values, such as zero and one.",
                  "IMAGE" : "Image Data",
                  "INTERVAL" : "Interval data has equal spaces between the numbers and does not represent a temporal pattern.\nExamples include percentages, temperatures, and income.",
                  "MAP" : "Mapping Data Type ex: dict, map",
                  "NOMINAL" : "Nominal data is made of discrete values with no numerical relationship between the different categories - mean and median are meaningless.\nAnimal species is one example. For example, pig is not higher than bird and lower than fish.",
                  "ORDINAL" : "Ordinal data are discrete integers that can be ranked or sorted.\nFor example, the distance between first and second may not be the same as the distance between second and third.",
                  "SEQUENCE" : "Sequence Data Type ex: list, tuple, range",
                  "SET" : "Set Data Type ex: set, frozenset",
                  "TEXT" : "Text Data",
                  "TIME" : "Time data is a cyclical, repeating continuous form of data.\nThe relevant time features can be any period- daily, weekly, monthly, annual, etc.",
                  "UNKNOWN" : "Unknown data are data that we don't know the type for.",
                  "USELESS" : "Useless data is unique, discrete data with no potential relationship with the outcome variable.\nA useless feature has high cardinality. An example would be bank account numbers that were generated randomly.",
                  "VIDEO" : "Video Data"
                }
              } ],
              "doc" : "Data Type of the MLPrimaryKey",
              "default" : null
            }, {
              "name" : "version",
              "type" : [ "null", "com.linkedin.common.VersionTag" ],
              "doc" : "Version of the MLPrimaryKey",
              "default" : null
            }, {
              "name" : "sources",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "Source of the MLPrimaryKey",
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "DerivedFrom"
                }
              }
            } ],
            "Aspect" : {
              "name" : "mlPrimaryKeyProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.InstitutionalMemory", "com.linkedin.common.Status", "com.linkedin.common.Deprecation", "com.linkedin.common.GlobalTags", "com.linkedin.common.DataPlatformInstance" ]
        },
        "doc" : "The list of metadata aspects associated with the MLPrimaryKey. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "mlPrimaryKeyKey",
        "name" : "mlPrimaryKey"
      }
    }, {
      "type" : "record",
      "name" : "MLFeatureSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.MLFeatureUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "MLFeatureKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for an MLFeature",
            "fields" : [ {
              "name" : "featureNamespace",
              "type" : "string",
              "doc" : "Namespace for the feature",
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Name of the feature",
              "Searchable" : {
                "boostScore" : 8.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "mlFeatureKey"
            }
          }, {
            "type" : "record",
            "name" : "MLFeatureProperties",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Properties associated with a MLFeature",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the MLFeature",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "dataType",
              "type" : [ "null", "com.linkedin.common.MLFeatureDataType" ],
              "doc" : "Data Type of the MLFeature",
              "default" : null
            }, {
              "name" : "version",
              "type" : [ "null", "com.linkedin.common.VersionTag" ],
              "doc" : "Version of the MLFeature",
              "default" : null
            }, {
              "name" : "sources",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "Source of the MLFeature",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataset" ],
                  "isLineage" : true,
                  "name" : "DerivedFrom"
                }
              }
            } ],
            "Aspect" : {
              "name" : "mlFeatureProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.InstitutionalMemory", "com.linkedin.common.Status", "com.linkedin.common.Deprecation", "com.linkedin.common.BrowsePaths", "com.linkedin.common.GlobalTags", "com.linkedin.common.DataPlatformInstance", "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the MLFeature. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "mlFeatureKey",
        "name" : "mlFeature"
      }
    }, {
      "type" : "record",
      "name" : "MLFeatureTableSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.Urn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "MLFeatureTableKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for an MLFeatureTable",
            "fields" : [ {
              "name" : "platform",
              "type" : "string",
              "doc" : "Data platform urn associated with the feature table",
              "Relationship" : {
                "entityTypes" : [ "dataPlatform" ],
                "name" : "SourcePlatform"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Name of the feature table",
              "Searchable" : {
                "boostScore" : 8.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "mlFeatureTableKey"
            }
          }, {
            "type" : "record",
            "name" : "MLFeatureTableProperties",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Properties associated with a MLFeatureTable",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the MLFeatureTable",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "mlFeatures",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "List of features contained in the feature table",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "mlFeature" ],
                  "name" : "Contains"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "features",
                  "fieldType" : "URN"
                }
              }
            }, {
              "name" : "mlPrimaryKeys",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "List of primary keys in the feature table (if multiple, assumed to act as a composite key)",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "mlPrimaryKey" ],
                  "name" : "KeyedBy"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "primaryKeys",
                  "fieldType" : "URN"
                }
              }
            } ],
            "Aspect" : {
              "name" : "mlFeatureTableProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.InstitutionalMemory", "com.linkedin.common.Status", "com.linkedin.common.Deprecation", "com.linkedin.common.BrowsePaths", "com.linkedin.common.GlobalTags", "com.linkedin.common.DataPlatformInstance", "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the MLFeatureTable. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "mlFeatureTableKey",
        "name" : "mlFeatureTable"
      }
    }, {
      "type" : "record",
      "name" : "MLModelDeploymentSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.Urn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "MLModelDeploymentKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for an ML model deployment",
            "fields" : [ {
              "name" : "platform",
              "type" : "string",
              "doc" : "Standardized platform urn for the model Deployment",
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Name of the MLModelDeployment",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "origin",
              "type" : "com.linkedin.common.FabricType",
              "doc" : "Fabric type where model Deployment belongs to or where it was generated",
              "Searchable" : {
                "addToFilters" : true,
                "fieldType" : "TEXT_PARTIAL",
                "filterNameOverride" : "Environment",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "name" : "mlModelDeploymentKey"
            }
          }, {
            "type" : "record",
            "name" : "MLModelDeploymentProperties",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Properties associated with an ML Model Deployment",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the MLModelDeployment",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "createdAt",
              "type" : [ "null", "long" ],
              "doc" : "Date when the MLModelDeployment was developed",
              "default" : null
            }, {
              "name" : "version",
              "type" : [ "null", "com.linkedin.common.VersionTag" ],
              "doc" : "Version of the MLModelDeployment",
              "default" : null
            }, {
              "name" : "status",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "DeploymentStatus",
                "doc" : "Model endpoint statuses",
                "symbols" : [ "OUT_OF_SERVICE", "CREATING", "UPDATING", "ROLLING_BACK", "IN_SERVICE", "DELETING", "FAILED", "UNKNOWN" ],
                "symbolDocs" : {
                  "CREATING" : "Deployments being created.",
                  "DELETING" : "Deployments being deleted.",
                  "FAILED" : "Deployments with an error state.",
                  "IN_SERVICE" : "Deployments that are active.",
                  "OUT_OF_SERVICE" : "Deployments out of service.",
                  "ROLLING_BACK" : "Deployments being reverted to a previous version.",
                  "UNKNOWN" : "Deployments with unknown/unmappable state.",
                  "UPDATING" : "Deployments being updated."
                }
              } ],
              "doc" : "Status of the deployment",
              "default" : null,
              "Searchable" : {
                "fieldName" : "deploymentStatus"
              }
            } ],
            "Aspect" : {
              "name" : "mlModelDeploymentProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.Status", "com.linkedin.common.Deprecation", "com.linkedin.common.GlobalTags", "com.linkedin.common.DataPlatformInstance" ]
        },
        "doc" : "The list of metadata aspects associated with the MLModelDeployment. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "mlModelDeploymentKey",
        "name" : "mlModelDeployment"
      }
    }, {
      "type" : "record",
      "name" : "MLModelGroupSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.Urn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "MLModelGroupKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for an ML model group",
            "fields" : [ {
              "name" : "platform",
              "type" : "string",
              "doc" : "Standardized platform urn for the model group",
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "name",
              "type" : "string",
              "doc" : "Name of the MLModelGroup",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "origin",
              "type" : "com.linkedin.common.FabricType",
              "doc" : "Fabric type where model group belongs to or where it was generated",
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL",
                "queryByDefault" : false
              }
            } ],
            "Aspect" : {
              "name" : "mlModelGroupKey"
            }
          }, {
            "type" : "record",
            "name" : "MLModelGroupProperties",
            "namespace" : "com.linkedin.ml.metadata",
            "doc" : "Properties associated with an ML Model Group",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "trainingJobs",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "List of jobs or process instances (if any) used to train the model or group. Visible in Lineage. Note that ML Models can also be specified as the output of a specific Data Process Instances (runs) via the DataProcessInstanceOutputs aspect.",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataJob", "dataProcessInstance" ],
                  "isLineage" : true,
                  "name" : "TrainedBy"
                }
              }
            }, {
              "name" : "downstreamJobs",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "List of jobs or process instances (if any) that use the model or group.",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "dataJob", "dataProcessInstance" ],
                  "isLineage" : true,
                  "isUpstream" : false,
                  "name" : "UsedBy"
                }
              }
            }, {
              "name" : "externalUrl",
              "type" : [ "null", "string" ],
              "doc" : "URL where the reference exist",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              },
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "name",
              "type" : [ "null", "string" ],
              "doc" : "Display name of the MLModelGroup",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM",
                "queryByDefault" : true
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the MLModelGroup",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT",
                "hasValuesFieldName" : "hasDescription"
              }
            }, {
              "name" : "createdAt",
              "type" : [ "null", "long" ],
              "doc" : "Date when the MLModelGroup was developed",
              "default" : null,
              "deprecated" : true
            }, {
              "name" : "created",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "Time and Actor who created the MLModelGroup",
              "default" : null
            }, {
              "name" : "lastModified",
              "type" : [ "null", "com.linkedin.common.TimeStamp" ],
              "doc" : "Date when the MLModelGroup was last modified",
              "default" : null
            }, {
              "name" : "version",
              "type" : [ "null", "com.linkedin.common.VersionTag" ],
              "doc" : "Version of the MLModelGroup",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "mlModelGroupProperties"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.Status", "com.linkedin.common.Deprecation", "com.linkedin.common.BrowsePaths", "com.linkedin.common.GlobalTags", "com.linkedin.common.DataPlatformInstance", "com.linkedin.common.BrowsePathsV2" ]
        },
        "doc" : "The list of metadata aspects associated with the MLModelGroup. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "mlModelGroupKey",
        "name" : "mlModelGroup"
      }
    }, {
      "type" : "record",
      "name" : "TagSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific dataset entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.TagUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "TagKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a Tag",
            "fields" : [ {
              "name" : "name",
              "type" : "string",
              "doc" : "The tag name, which serves as a unique id",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldName" : "id",
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "tagKey"
            }
          }, "com.linkedin.common.Ownership", {
            "type" : "record",
            "name" : "TagProperties",
            "namespace" : "com.linkedin.tag",
            "doc" : "Properties associated with a Tag",
            "fields" : [ {
              "name" : "name",
              "type" : "string",
              "doc" : "Display name of the tag",
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "description",
              "type" : [ "null", "string" ],
              "doc" : "Documentation of the tag",
              "default" : null,
              "Searchable" : { }
            }, {
              "name" : "colorHex",
              "type" : [ "null", "string" ],
              "doc" : "The color associated with the Tag in Hex. For example #FFFFFF.",
              "default" : null
            } ],
            "Aspect" : {
              "name" : "tagProperties"
            }
          }, "com.linkedin.common.Status" ]
        },
        "doc" : "The list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "tagKey",
        "name" : "tag"
      }
    }, {
      "type" : "record",
      "name" : "GlossaryTermSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific GlossaryTerm entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.GlossaryTermUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "GlossaryTermKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a GlossaryTerm",
            "fields" : [ {
              "name" : "name",
              "type" : "string",
              "doc" : "The term name, which serves as a unique id",
              "Searchable" : {
                "enableAutocomplete" : true,
                "fieldName" : "id",
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "glossaryTermKey"
            }
          }, {
            "type" : "record",
            "name" : "GlossaryTermInfo",
            "namespace" : "com.linkedin.glossary",
            "doc" : "Properties associated with a GlossaryTerm",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "id",
              "type" : [ "null", "string" ],
              "doc" : "Optional id for the term",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "name",
              "type" : [ "null", "string" ],
              "doc" : "Display name of the term",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "definition",
              "type" : "string",
              "doc" : "Definition of business term.",
              "Searchable" : { }
            }, {
              "name" : "parentNode",
              "type" : [ "null", "string" ],
              "doc" : "Parent node of the glossary term",
              "default" : null,
              "Relationship" : {
                "entityTypes" : [ "glossaryNode" ],
                "name" : "IsPartOf"
              },
              "Searchable" : {
                "fieldName" : "parentNode",
                "fieldType" : "URN",
                "hasValuesFieldName" : "hasParentNode"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.GlossaryNodeUrn"
              }
            }, {
              "name" : "termSource",
              "type" : "string",
              "doc" : "Source of the Business Term (INTERNAL or EXTERNAL) with default value as INTERNAL",
              "Searchable" : {
                "fieldType" : "KEYWORD"
              }
            }, {
              "name" : "sourceRef",
              "type" : [ "null", "string" ],
              "doc" : "External Reference to the business-term",
              "default" : null,
              "Searchable" : {
                "fieldType" : "KEYWORD"
              }
            }, {
              "name" : "sourceUrl",
              "type" : [ "null", "string" ],
              "doc" : "The abstracted URL such as https://spec.edmcouncil.org/fibo/ontology/FBC/FinancialInstruments/FinancialInstruments/CashInstrument.",
              "default" : null,
              "java" : {
                "class" : "com.linkedin.common.url.Url",
                "coercerClass" : "com.linkedin.common.url.UrlCoercer"
              }
            }, {
              "name" : "rawSchema",
              "type" : [ "null", "string" ],
              "doc" : "Schema definition of the glossary term",
              "default" : null,
              "deprecated" : true
            } ],
            "Aspect" : {
              "name" : "glossaryTermInfo"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.Status", "com.linkedin.common.BrowsePaths", {
            "type" : "record",
            "name" : "GlossaryRelatedTerms",
            "namespace" : "com.linkedin.glossary",
            "doc" : "Has A / Is A lineage information about a glossary Term reporting the lineage",
            "fields" : [ {
              "name" : "isRelatedTerms",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "The relationship Is A with glossary term",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "glossaryTerm" ],
                  "name" : "IsA"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "isRelatedTerms",
                  "fieldType" : "URN",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "hasRelatedTerms",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "The relationship Has A with glossary term",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "glossaryTerm" ],
                  "name" : "HasA"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "hasRelatedTerms",
                  "fieldType" : "URN",
                  "queryByDefault" : false
                }
              }
            }, {
              "name" : "values",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "The relationship Has Value with glossary term.\nThese are fixed value a term has. For example a ColorEnum where RED, GREEN and YELLOW are fixed values.",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "glossaryTerm" ],
                  "name" : "HasValue"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "values",
                  "fieldType" : "URN"
                }
              }
            }, {
              "name" : "relatedTerms",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "The relationship isRelatedTo with glossary term",
              "default" : null,
              "Relationship" : {
                "/*" : {
                  "entityTypes" : [ "glossaryTerm" ],
                  "name" : "IsRelatedTo"
                }
              },
              "Searchable" : {
                "/*" : {
                  "fieldName" : "relatedTerms",
                  "fieldType" : "URN"
                }
              }
            } ],
            "Aspect" : {
              "name" : "glossaryRelatedTerms"
            }
          } ]
        },
        "doc" : "The list of metadata aspects associated with the GlossaryTerm. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "glossaryTermKey",
        "name" : "glossaryTerm"
      }
    }, {
      "type" : "record",
      "name" : "GlossaryNodeSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific GlossaryNode entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.GlossaryNodeUrn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "GlossaryNodeKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a GlossaryNode",
            "fields" : [ {
              "name" : "name",
              "type" : "string",
              "Searchable" : {
                "enableAutocomplete" : true,
                "fieldType" : "WORD_GRAM"
              }
            } ],
            "Aspect" : {
              "name" : "glossaryNodeKey"
            }
          }, {
            "type" : "record",
            "name" : "GlossaryNodeInfo",
            "namespace" : "com.linkedin.glossary",
            "doc" : "Properties associated with a GlossaryNode",
            "fields" : [ {
              "name" : "customProperties",
              "type" : {
                "type" : "map",
                "values" : "string"
              },
              "doc" : "Custom property bag.",
              "default" : { },
              "Searchable" : {
                "/*" : {
                  "fieldType" : "TEXT",
                  "queryByDefault" : true
                }
              }
            }, {
              "name" : "definition",
              "type" : "string",
              "doc" : "Definition of business node",
              "Searchable" : { }
            }, {
              "name" : "parentNode",
              "type" : [ "null", "string" ],
              "doc" : "Parent node of the glossary term",
              "default" : null,
              "Relationship" : {
                "entityTypes" : [ "glossaryNode" ],
                "name" : "IsPartOf"
              },
              "Searchable" : {
                "fieldName" : "parentNode",
                "fieldType" : "URN",
                "hasValuesFieldName" : "hasParentNode"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.GlossaryNodeUrn"
              }
            }, {
              "name" : "name",
              "type" : [ "null", "string" ],
              "doc" : "Display name of the node",
              "default" : null,
              "Searchable" : {
                "boostScore" : 10.0,
                "enableAutocomplete" : true,
                "fieldName" : "displayName",
                "fieldNameAliases" : [ "_entityName" ],
                "fieldType" : "WORD_GRAM"
              }
            }, {
              "name" : "id",
              "type" : [ "null", "string" ],
              "doc" : "Optional id for the GlossaryNode",
              "default" : null,
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            } ],
            "Aspect" : {
              "name" : "glossaryNodeInfo"
            }
          }, "com.linkedin.common.Ownership", "com.linkedin.common.Status" ]
        },
        "doc" : "The list of metadata aspects associated with the GlossaryNode. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "glossaryNodeKey",
        "name" : "glossaryNode"
      }
    }, {
      "type" : "record",
      "name" : "DataHubPolicySnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for DataHub Access Policy data.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.Urn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DataHubPolicyKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a DataHub Policy",
            "fields" : [ {
              "name" : "id",
              "type" : "string",
              "doc" : "A unique id for the DataHub access policy record. Generated on the server side at policy creation time."
            } ],
            "Aspect" : {
              "name" : "dataHubPolicyKey"
            }
          }, {
            "type" : "record",
            "name" : "DataHubPolicyInfo",
            "namespace" : "com.linkedin.policy",
            "doc" : "Information about a DataHub (UI) access policy.",
            "fields" : [ {
              "name" : "displayName",
              "type" : "string",
              "doc" : "Display name of the Policy",
              "Searchable" : {
                "fieldType" : "TEXT_PARTIAL"
              }
            }, {
              "name" : "description",
              "type" : "string",
              "doc" : "Description of the Policy",
              "Searchable" : {
                "fieldType" : "TEXT"
              }
            }, {
              "name" : "type",
              "type" : "string",
              "doc" : "The type of policy",
              "Searchable" : {
                "fieldType" : "KEYWORD"
              }
            }, {
              "name" : "state",
              "type" : "string",
              "doc" : "The state of policy, ACTIVE or INACTIVE",
              "Searchable" : {
                "fieldType" : "KEYWORD"
              }
            }, {
              "name" : "resources",
              "type" : [ "null", {
                "type" : "record",
                "name" : "DataHubResourceFilter",
                "doc" : "Information used to filter DataHub resource.",
                "fields" : [ {
                  "name" : "type",
                  "type" : [ "null", "string" ],
                  "doc" : "The type of resource that the policy applies to. This will most often be a data asset entity name, for\nexample 'dataset'. It is not strictly required because in the future we will want to support filtering a resource\nby domain, as well.",
                  "default" : null,
                  "deprecated" : true
                }, {
                  "name" : "resources",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ],
                  "doc" : "A specific set of resources to apply the policy to, e.g. asset urns",
                  "default" : null,
                  "deprecated" : true
                }, {
                  "name" : "allResources",
                  "type" : "boolean",
                  "doc" : "Whether the policy should be applied to all assets matching the filter.",
                  "default" : false,
                  "deprecated" : true
                }, {
                  "name" : "filter",
                  "type" : [ "null", {
                    "type" : "record",
                    "name" : "PolicyMatchFilter",
                    "doc" : "The filter for specifying the resource or actor to apply privileges to",
                    "fields" : [ {
                      "name" : "criteria",
                      "type" : {
                        "type" : "array",
                        "items" : {
                          "type" : "record",
                          "name" : "PolicyMatchCriterion",
                          "doc" : "A criterion for matching a field with given value",
                          "fields" : [ {
                            "name" : "field",
                            "type" : "string",
                            "doc" : "The name of the field that the criterion refers to"
                          }, {
                            "name" : "values",
                            "type" : {
                              "type" : "array",
                              "items" : "string"
                            },
                            "doc" : "Values. Matches criterion if any one of the values matches condition (OR-relationship)"
                          }, {
                            "name" : "condition",
                            "type" : {
                              "type" : "enum",
                              "name" : "PolicyMatchCondition",
                              "doc" : "The matching condition in a filter criterion",
                              "symbols" : [ "EQUALS", "STARTS_WITH" ],
                              "symbolDocs" : {
                                "EQUALS" : "Whether the field matches the value",
                                "STARTS_WITH" : "Whether the field value starts with the value"
                              }
                            },
                            "doc" : "The condition for the criterion",
                            "default" : "EQUALS"
                          } ]
                        }
                      },
                      "doc" : "A list of criteria to apply conjunctively (so all criteria must pass)"
                    } ]
                  } ],
                  "doc" : "Filter to apply privileges to",
                  "default" : null
                } ]
              } ],
              "doc" : "The resource that the policy applies to. Not required for some 'Platform' privileges.",
              "default" : null
            }, {
              "name" : "privileges",
              "type" : {
                "type" : "array",
                "items" : "string"
              },
              "doc" : "The privileges that the policy grants.",
              "Searchable" : {
                "/*" : {
                  "addToFilters" : true,
                  "fieldType" : "KEYWORD"
                }
              }
            }, {
              "name" : "actors",
              "type" : {
                "type" : "record",
                "name" : "DataHubActorFilter",
                "doc" : "Information used to filter DataHub actors.",
                "fields" : [ {
                  "name" : "users",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ],
                  "doc" : "A specific set of users to apply the policy to (disjunctive)",
                  "default" : null,
                  "Searchable" : {
                    "/*" : {
                      "fieldType" : "URN"
                    }
                  }
                }, {
                  "name" : "groups",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ],
                  "doc" : "A specific set of groups to apply the policy to (disjunctive)",
                  "default" : null,
                  "Searchable" : {
                    "/*" : {
                      "fieldType" : "URN"
                    }
                  }
                }, {
                  "name" : "resourceOwners",
                  "type" : "boolean",
                  "doc" : "Whether the filter should return true for owners of a particular resource.\nOnly applies to policies of type 'Metadata', which have a resource associated with them.",
                  "default" : false
                }, {
                  "name" : "resourceOwnersTypes",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ],
                  "doc" : "Define type of ownership for the policy",
                  "default" : null
                }, {
                  "name" : "allUsers",
                  "type" : "boolean",
                  "doc" : "Whether the filter should apply to all users.",
                  "default" : false,
                  "Searchable" : {
                    "fieldType" : "BOOLEAN"
                  }
                }, {
                  "name" : "allGroups",
                  "type" : "boolean",
                  "doc" : "Whether the filter should apply to all groups.",
                  "default" : false,
                  "Searchable" : {
                    "fieldType" : "BOOLEAN"
                  }
                }, {
                  "name" : "roles",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ],
                  "doc" : "A specific set of roles to apply the policy to (disjunctive).",
                  "default" : null,
                  "Relationship" : {
                    "/*" : {
                      "entityTypes" : [ "dataHubRole" ],
                      "name" : "IsAssociatedWithRole"
                    }
                  },
                  "Searchable" : {
                    "/*" : {
                      "fieldType" : "URN"
                    }
                  }
                } ]
              },
              "doc" : "The actors that the policy applies to."
            }, {
              "name" : "editable",
              "type" : "boolean",
              "doc" : "Whether the policy should be editable via the UI",
              "default" : true,
              "Searchable" : {
                "fieldType" : "BOOLEAN"
              }
            }, {
              "name" : "lastUpdatedTimestamp",
              "type" : [ "null", "long" ],
              "doc" : "Timestamp when the policy was last updated",
              "default" : null,
              "Searchable" : {
                "fieldType" : "DATETIME"
              }
            } ],
            "Aspect" : {
              "name" : "dataHubPolicyInfo"
            }
          } ]
        },
        "doc" : "The list of metadata aspects associated with the DataHub access policy."
      } ],
      "Entity" : {
        "keyAspect" : "dataHubPolicyKey",
        "name" : "dataHubPolicy"
      }
    }, {
      "type" : "record",
      "name" : "SchemaFieldSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for a specific schema field entity.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.Urn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "SchemaFieldKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a SchemaField",
            "fields" : [ {
              "name" : "parent",
              "type" : "string",
              "doc" : "Parent associated with the schema field",
              "Searchable" : {
                "fieldType" : "URN"
              },
              "java" : {
                "class" : "com.linkedin.common.urn.Urn"
              }
            }, {
              "name" : "fieldPath",
              "type" : "string",
              "doc" : "fieldPath identifying the schema field",
              "Searchable" : {
                "fieldType" : "KEYWORD"
              }
            } ],
            "Aspect" : {
              "name" : "schemaFieldKey"
            }
          } ]
        },
        "doc" : "The list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects."
      } ],
      "Entity" : {
        "keyAspect" : "schemaFieldKey",
        "name" : "schemaField"
      }
    }, {
      "type" : "record",
      "name" : "DataHubRetentionSnapshot",
      "namespace" : "com.linkedin.metadata.snapshot",
      "doc" : "A metadata snapshot for DataHub Access Policy data.",
      "fields" : [ {
        "name" : "urn",
        "type" : "string",
        "doc" : "URN for the entity the metadata snapshot is associated with.",
        "java" : {
          "class" : "com.linkedin.common.urn.Urn"
        }
      }, {
        "name" : "aspects",
        "type" : {
          "type" : "array",
          "items" : [ {
            "type" : "record",
            "name" : "DataHubRetentionKey",
            "namespace" : "com.linkedin.metadata.key",
            "doc" : "Key for a DataHub Retention",
            "fields" : [ {
              "name" : "entityName",
              "type" : "string",
              "doc" : "Entity name to apply retention to. * (or empty) for applying defaults."
            }, {
              "name" : "aspectName",
              "type" : "string",
              "doc" : "Aspect name to apply retention to. * (or empty) for applying defaults."
            } ],
            "Aspect" : {
              "name" : "dataHubRetentionKey"
            }
          }, {
            "type" : "record",
            "name" : "DataHubRetentionConfig",
            "namespace" : "com.linkedin.retention",
            "fields" : [ {
              "name" : "retention",
              "type" : {
                "type" : "record",
                "name" : "Retention",
                "doc" : "Base class that encapsulates different retention policies.\nOnly one of the fields should be set",
                "fields" : [ {
                  "name" : "version",
                  "type" : [ "null", {
                    "type" : "record",
                    "name" : "VersionBasedRetention",
                    "doc" : "Keep max N latest records",
                    "fields" : [ {
                      "name" : "maxVersions",
                      "type" : "int"
                    } ]
                  } ],
                  "default" : null
                }, {
                  "name" : "time",
                  "type" : [ "null", {
                    "type" : "record",
                    "name" : "TimeBasedRetention",
                    "doc" : "Keep records that are less than X seconds old",
                    "fields" : [ {
                      "name" : "maxAgeInSeconds",
                      "type" : "int"
                    } ]
                  } ],
                  "default" : null
                } ]
              }
            } ],
            "Aspect" : {
              "name" : "dataHubRetentionConfig"
            }
          } ]
        },
        "doc" : "The list of metadata aspects associated with the DataHub access policy."
      } ],
      "Entity" : {
        "keyAspect" : "dataHubRetentionKey",
        "name" : "dataHubRetention"
      }
    } ],
    "doc" : "Snapshot of the metadata before the update. Set to null for newly created metadata. Only the metadata aspects affected by the update are included in the snapshot.",
    "default" : null
  }, {
    "name" : "oldSystemMetadata",
    "type" : [ "null", {
      "type" : "record",
      "name" : "SystemMetadata",
      "doc" : "Metadata associated with each metadata change that is processed by the system",
      "fields" : [ {
        "name" : "lastObserved",
        "type" : [ "long", "null" ],
        "doc" : "The timestamp the metadata was observed at",
        "default" : 0
      }, {
        "name" : "runId",
        "type" : [ "string", "null" ],
        "doc" : "The original run id that produced the metadata. Populated in case of batch-ingestion.",
        "default" : "no-run-id-provided"
      }, {
        "name" : "lastRunId",
        "type" : [ "string", "null" ],
        "doc" : "The last run id that produced the metadata. Populated in case of batch-ingestion.",
        "default" : "no-run-id-provided"
      }, {
        "name" : "pipelineName",
        "type" : [ "null", "string" ],
        "doc" : "The ingestion pipeline id that produced the metadata. Populated in case of batch ingestion.",
        "default" : null
      }, {
        "name" : "registryName",
        "type" : [ "null", "string" ],
        "doc" : "The model registry name that was used to process this event",
        "default" : null
      }, {
        "name" : "registryVersion",
        "type" : [ "null", "string" ],
        "doc" : "The model registry version that was used to process this event",
        "default" : null
      }, {
        "name" : "properties",
        "type" : [ "null", {
          "type" : "map",
          "values" : "string"
        } ],
        "doc" : "Additional properties",
        "default" : null
      }, {
        "name" : "version",
        "type" : [ "null", "string" ],
        "doc" : "Aspect version\n   Initial implementation will use the aspect version's number, however stored as\n   a string in the case where a different aspect versioning scheme is later adopted.",
        "default" : null
      } ],
      "Aspect" : {
        "name" : "systemMetadata"
      }
    } ],
    "doc" : "Metadata around how the old snapshot was produced.",
    "default" : null
  }, {
    "name" : "newSnapshot",
    "type" : [ "com.linkedin.metadata.snapshot.ChartSnapshot", "com.linkedin.metadata.snapshot.CorpGroupSnapshot", "com.linkedin.metadata.snapshot.CorpUserSnapshot", "com.linkedin.metadata.snapshot.DashboardSnapshot", "com.linkedin.metadata.snapshot.DataFlowSnapshot", "com.linkedin.metadata.snapshot.DataJobSnapshot", "com.linkedin.metadata.snapshot.DatasetSnapshot", "com.linkedin.metadata.snapshot.DataProcessSnapshot", "com.linkedin.metadata.snapshot.DataPlatformSnapshot", "com.linkedin.metadata.snapshot.MLModelSnapshot", "com.linkedin.metadata.snapshot.MLPrimaryKeySnapshot", "com.linkedin.metadata.snapshot.MLFeatureSnapshot", "com.linkedin.metadata.snapshot.MLFeatureTableSnapshot", "com.linkedin.metadata.snapshot.MLModelDeploymentSnapshot", "com.linkedin.metadata.snapshot.MLModelGroupSnapshot", "com.linkedin.metadata.snapshot.TagSnapshot", "com.linkedin.metadata.snapshot.GlossaryTermSnapshot", "com.linkedin.metadata.snapshot.GlossaryNodeSnapshot", "com.linkedin.metadata.snapshot.DataHubPolicySnapshot", "com.linkedin.metadata.snapshot.SchemaFieldSnapshot", "com.linkedin.metadata.snapshot.DataHubRetentionSnapshot" ],
    "doc" : "Snapshot of the metadata after the update. Only the metadata aspects affected by the update are included in the snapshot."
  }, {
    "name" : "newSystemMetadata",
    "type" : [ "null", "SystemMetadata" ],
    "doc" : "Metadata around how the new snapshot was produced.",
    "default" : null
  }, {
    "name" : "operation",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "MetadataAuditOperation",
      "symbols" : [ "UPDATE", "DELETE" ]
    } ],
    "default" : null
  } ]
}